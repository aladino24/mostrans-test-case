{"version":3,"file":"static/js/main.0d8eefc9.js","mappings":"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","sources":["../node_modules/axios/index.js","../node_modules/axios/lib/adapters/xhr.js","../node_modules/axios/lib/axios.js","../node_modules/axios/lib/cancel/CancelToken.js","../node_modules/axios/lib/cancel/CanceledError.js","../node_modules/axios/lib/cancel/isCancel.js","../node_modules/axios/lib/core/Axios.js","../node_modules/axios/lib/core/AxiosError.js","../node_modules/axios/lib/core/InterceptorManager.js","../node_modules/axios/lib/core/buildFullPath.js","../node_modules/axios/lib/core/dispatchRequest.js","../node_modules/axios/lib/core/mergeConfig.js","../node_modules/axios/lib/core/settle.js","../node_modules/axios/lib/core/transformData.js","../node_modules/axios/lib/defaults/index.js","../node_modules/axios/lib/defaults/transitional.js","../node_modules/axios/lib/env/data.js","../node_modules/axios/lib/helpers/bind.js","../node_modules/axios/lib/helpers/buildURL.js","../node_modules/axios/lib/helpers/combineURLs.js","../node_modules/axios/lib/helpers/cookies.js","../node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/axios/lib/helpers/isAxiosError.js","../node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/axios/lib/helpers/normalizeHeaderName.js","../node_modules/axios/lib/helpers/null.js","../node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/axios/lib/helpers/parseProtocol.js","../node_modules/axios/lib/helpers/spread.js","../node_modules/axios/lib/helpers/toFormData.js","../node_modules/axios/lib/helpers/validator.js","../node_modules/axios/lib/utils.js","../node_modules/classnames/index.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/react-dom/client.js","../node_modules/react-dom/index.js","../node_modules/react-fast-compare/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../node_modules/rehackt/index.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../node_modules/warning/warning.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/extends.js","../../packages/react-router/lib/context.ts","../../packages/react-router/lib/router.ts","../../packages/react-router/lib/hooks.tsx","../../packages/react-router/lib/components.tsx","../../packages/react-router-dom/index.tsx","pages/Mainpage.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/react-popper/lib/esm/Manager.js","../node_modules/react-popper/lib/esm/utils.js","../node_modules/@popperjs/core/lib/dom-utils/getWindow.js","../node_modules/@popperjs/core/lib/dom-utils/instanceOf.js","../node_modules/@popperjs/core/lib/utils/math.js","../node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js","../node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js","../node_modules/@popperjs/core/lib/dom-utils/getNodeName.js","../node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js","../node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js","../node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js","../node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js","../node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js","../node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js","../node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js","../node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js","../node_modules/@popperjs/core/lib/dom-utils/getParentNode.js","../node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js","../node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js","../node_modules/@popperjs/core/lib/dom-utils/isTableElement.js","../node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js","../node_modules/@popperjs/core/lib/enums.js","../node_modules/@popperjs/core/lib/utils/orderModifiers.js","../node_modules/@popperjs/core/lib/utils/debounce.js","../node_modules/@popperjs/core/lib/createPopper.js","../node_modules/@popperjs/core/lib/utils/mergeByName.js","../node_modules/@popperjs/core/lib/modifiers/eventListeners.js","../node_modules/@popperjs/core/lib/utils/getBasePlacement.js","../node_modules/@popperjs/core/lib/utils/getVariation.js","../node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js","../node_modules/@popperjs/core/lib/utils/computeOffsets.js","../node_modules/@popperjs/core/lib/modifiers/popperOffsets.js","../node_modules/@popperjs/core/lib/modifiers/computeStyles.js","../node_modules/@popperjs/core/lib/modifiers/offset.js","../node_modules/@popperjs/core/lib/utils/getOppositePlacement.js","../node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js","../node_modules/@popperjs/core/lib/dom-utils/contains.js","../node_modules/@popperjs/core/lib/utils/rectToClientRect.js","../node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js","../node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js","../node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js","../node_modules/@popperjs/core/lib/utils/mergePaddingObject.js","../node_modules/@popperjs/core/lib/utils/getFreshSideObject.js","../node_modules/@popperjs/core/lib/utils/expandToHashMap.js","../node_modules/@popperjs/core/lib/utils/detectOverflow.js","../node_modules/@popperjs/core/lib/modifiers/flip.js","../node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js","../node_modules/@popperjs/core/lib/utils/within.js","../node_modules/@popperjs/core/lib/modifiers/preventOverflow.js","../node_modules/@popperjs/core/lib/utils/getAltAxis.js","../node_modules/@popperjs/core/lib/modifiers/arrow.js","../node_modules/@popperjs/core/lib/modifiers/hide.js","../node_modules/@popperjs/core/lib/popper.js","../node_modules/@popperjs/core/lib/modifiers/applyStyles.js","../node_modules/react-popper/lib/esm/usePopper.js","../node_modules/react-popper/lib/esm/Popper.js","../node_modules/react-popper/lib/esm/Reference.js","../node_modules/react-transition-group/esm/config.js","../node_modules/react-transition-group/esm/TransitionGroupContext.js","../node_modules/react-transition-group/esm/Transition.js","../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/reactstrap/src/utils.js","../node_modules/reactstrap/src/Container.js","../node_modules/reactstrap/src/Row.js","../node_modules/reactstrap/src/Col.js","../node_modules/reactstrap/src/Navbar.js","../node_modules/reactstrap/src/NavbarBrand.js","../node_modules/reactstrap/src/NavbarText.js","../node_modules/reactstrap/src/NavbarToggler.js","../node_modules/reactstrap/src/Nav.js","../node_modules/reactstrap/src/NavItem.js","../node_modules/reactstrap/src/NavLink.js","../node_modules/reactstrap/src/Breadcrumb.js","../node_modules/reactstrap/src/BreadcrumbItem.js","../node_modules/reactstrap/src/CloseButton.js","../node_modules/reactstrap/src/Button.js","../node_modules/reactstrap/src/ButtonToggle.js","../node_modules/reactstrap/src/DropdownContext.js","../node_modules/reactstrap/src/Dropdown.js","../node_modules/reactstrap/src/ButtonDropdown.js","../node_modules/reactstrap/src/ButtonGroup.js","../node_modules/reactstrap/src/ButtonToolbar.js","../node_modules/reactstrap/src/DropdownItem.js","../node_modules/reactstrap/src/DropdownMenu.js","../node_modules/reactstrap/src/DropdownToggle.js","../node_modules/reactstrap/src/Fade.js","../node_modules/reactstrap/src/AccordionContext.js","../node_modules/reactstrap/src/Accordion.js","../node_modules/reactstrap/src/UncontrolledAccordion.js","../node_modules/reactstrap/src/AccordionHeader.js","../node_modules/reactstrap/src/AccordionItem.js","../node_modules/reactstrap/src/Collapse.js","../node_modules/reactstrap/src/AccordionBody.js","../node_modules/reactstrap/src/Badge.js","../node_modules/reactstrap/src/Card.js","../node_modules/reactstrap/src/CardGroup.js","../node_modules/reactstrap/src/CardDeck.js","../node_modules/reactstrap/src/CardColumns.js","../node_modules/reactstrap/src/CardBody.js","../node_modules/reactstrap/src/CardLink.js","../node_modules/reactstrap/src/CardFooter.js","../node_modules/reactstrap/src/CardHeader.js","../node_modules/reactstrap/src/CardImg.js","../node_modules/reactstrap/src/CardImgOverlay.js","../node_modules/reactstrap/src/CarouselItem.js","../node_modules/reactstrap/src/CarouselContext.js","../node_modules/reactstrap/src/Carousel.js","../node_modules/reactstrap/src/CarouselControl.js","../node_modules/reactstrap/src/CarouselIndicators.js","../node_modules/reactstrap/src/CarouselCaption.js","../node_modules/reactstrap/src/UncontrolledCarousel.js","../node_modules/reactstrap/src/CardSubtitle.js","../node_modules/reactstrap/src/CardText.js","../node_modules/reactstrap/src/CardTitle.js","../node_modules/reactstrap/src/PopperContent.js","../node_modules/reactstrap/src/PopperTargetHelper.js","../node_modules/reactstrap/src/TooltipPopoverWrapper.js","../node_modules/reactstrap/src/Popover.js","../node_modules/reactstrap/src/UncontrolledPopover.js","../node_modules/reactstrap/src/PopoverHeader.js","../node_modules/reactstrap/src/PopoverBody.js","../node_modules/reactstrap/src/Progress.js","../node_modules/reactstrap/src/Portal.js","../node_modules/reactstrap/src/Modal.js","../node_modules/reactstrap/src/ModalHeader.js","../node_modules/reactstrap/src/ModalBody.js","../node_modules/reactstrap/src/ModalFooter.js","../node_modules/reactstrap/src/Tooltip.js","../node_modules/reactstrap/src/Table.js","../node_modules/reactstrap/src/ListGroup.js","../node_modules/reactstrap/src/Form.js","../node_modules/reactstrap/src/FormFeedback.js","../node_modules/reactstrap/src/FormGroup.js","../node_modules/reactstrap/src/FormText.js","../node_modules/reactstrap/src/Input.js","../node_modules/reactstrap/src/InputGroup.js","../node_modules/reactstrap/src/InputGroupText.js","../node_modules/reactstrap/src/Label.js","../node_modules/reactstrap/src/Media.js","../node_modules/reactstrap/src/Offcanvas.js","../node_modules/reactstrap/src/OffcanvasBody.js","../node_modules/reactstrap/src/OffcanvasHeader.js","../node_modules/reactstrap/src/Pagination.js","../node_modules/reactstrap/src/PaginationItem.js","../node_modules/reactstrap/src/PaginationLink.js","../node_modules/reactstrap/src/TabContext.js","../node_modules/reactstrap/src/TabContent.js","../node_modules/reactstrap/src/TabPane.js","../node_modules/reactstrap/src/Alert.js","../node_modules/reactstrap/src/Toast.js","../node_modules/reactstrap/src/ToastBody.js","../node_modules/reactstrap/src/ToastHeader.js","../node_modules/reactstrap/src/ListGroupItem.js","../node_modules/reactstrap/src/ListGroupItemHeading.js","../node_modules/reactstrap/src/ListGroupItemText.js","../node_modules/reactstrap/src/List.js","../node_modules/reactstrap/src/ListInlineItem.js","../node_modules/reactstrap/src/UncontrolledAlert.js","../node_modules/reactstrap/src/UncontrolledButtonDropdown.js","../node_modules/reactstrap/src/UncontrolledCollapse.js","../node_modules/reactstrap/src/UncontrolledDropdown.js","../node_modules/reactstrap/src/UncontrolledTooltip.js","../node_modules/reactstrap/src/Spinner.js","../node_modules/reactstrap/src/Placeholder.js","../node_modules/reactstrap/src/PlaceholderButton.js","../node_modules/reactstrap/src/polyfill.js","pages/EpisodeListing.js","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/@firebase/util/src/constants.ts","../node_modules/@firebase/util/src/crypt.ts","../node_modules/@firebase/util/src/defaults.ts","../node_modules/@firebase/util/src/global.ts","../node_modules/@firebase/util/src/deferred.ts","../node_modules/@firebase/util/src/emulator.ts","../node_modules/@firebase/util/src/environment.ts","../node_modules/@firebase/util/src/errors.ts","../node_modules/@firebase/util/src/obj.ts","../node_modules/@firebase/util/src/compat.ts","../node_modules/@firebase/component/src/component.ts","../node_modules/@firebase/component/src/constants.ts","../node_modules/@firebase/component/src/provider.ts","../node_modules/@firebase/logger/src/logger.ts","../node_modules/@firebase/component/src/component_container.ts","../node_modules/@firebase/app/node_modules/idb/build/wrap-idb-value.js","../node_modules/@firebase/app/node_modules/idb/build/index.js","../node_modules/@firebase/app/src/platformLoggerService.ts","../node_modules/@firebase/app/src/logger.ts","../node_modules/@firebase/app/src/constants.ts","../node_modules/@firebase/app/src/internal.ts","../node_modules/@firebase/app/src/errors.ts","../node_modules/@firebase/app/src/firebaseApp.ts","../node_modules/@firebase/app/src/api.ts","../node_modules/@firebase/app/src/indexeddb.ts","../node_modules/@firebase/app/src/heartbeatService.ts","../node_modules/@firebase/app/src/registerCoreComponents.ts","../node_modules/@firebase/app/src/index.ts","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/firebase/app/index.ts","../node_modules/node_modules/closure-net/firebase/bloom_blob_es2018.js","../node_modules/node_modules/closure-net/firebase/webchannel_blob_es2018.js","../node_modules/@firebase/firestore/src/auth/user.ts","../node_modules/@firebase/firestore/src/core/version.ts","../node_modules/@firebase/firestore/src/util/log.ts","../node_modules/@firebase/firestore/src/platform/browser/format_json.ts","../node_modules/@firebase/firestore/src/util/assert.ts","../node_modules/@firebase/firestore/src/util/error.ts","../node_modules/@firebase/firestore/src/util/promise.ts","../node_modules/@firebase/firestore/src/api/credentials.ts","../node_modules/@firebase/firestore/src/platform/browser/random_bytes.ts","../node_modules/@firebase/firestore/src/util/misc.ts","../node_modules/@firebase/firestore/src/lite-api/timestamp.ts","../node_modules/@firebase/firestore/src/core/snapshot_version.ts","../node_modules/@firebase/firestore/src/model/path.ts","../node_modules/@firebase/firestore/src/model/document_key.ts","../node_modules/@firebase/firestore/src/model/field_index.ts","../node_modules/@firebase/firestore/src/local/persistence_transaction.ts","../node_modules/@firebase/firestore/src/local/local_store.ts","../node_modules/@firebase/firestore/src/local/persistence_promise.ts","../node_modules/@firebase/firestore/src/local/simple_db.ts","../node_modules/@firebase/firestore/src/core/listen_sequence.ts","../node_modules/@firebase/firestore/src/util/types.ts","../node_modules/@firebase/firestore/src/local/indexeddb_sentinels.ts","../node_modules/@firebase/firestore/src/local/indexeddb_schema_legacy.ts","../node_modules/@firebase/firestore/src/util/obj.ts","../node_modules/@firebase/firestore/src/util/sorted_map.ts","../node_modules/@firebase/firestore/src/util/sorted_set.ts","../node_modules/@firebase/firestore/src/model/field_mask.ts","../node_modules/@firebase/firestore/src/util/base64_decode_error.ts","../node_modules/@firebase/firestore/src/util/byte_string.ts","../node_modules/@firebase/firestore/src/platform/browser/base64.ts","../node_modules/@firebase/firestore/src/model/normalize.ts","../node_modules/@firebase/firestore/src/model/server_timestamps.ts","../node_modules/@firebase/firestore/src/core/database_info.ts","../node_modules/@firebase/firestore/src/model/values.ts","../node_modules/@firebase/firestore/src/model/object_value.ts","../node_modules/@firebase/firestore/src/model/document.ts","../node_modules/@firebase/firestore/src/core/bound.ts","../node_modules/@firebase/firestore/src/core/order_by.ts","../node_modules/@firebase/firestore/src/core/filter.ts","../node_modules/@firebase/firestore/src/core/target.ts","../node_modules/@firebase/firestore/src/core/query.ts","../node_modules/@firebase/firestore/src/util/obj_map.ts","../node_modules/@firebase/firestore/src/model/collections.ts","../node_modules/@firebase/firestore/src/remote/number_serializer.ts","../node_modules/@firebase/firestore/src/model/transform_operation.ts","../node_modules/@firebase/firestore/src/model/mutation.ts","../node_modules/@firebase/firestore/src/remote/rpc_error.ts","../node_modules/@firebase/firestore/src/model/mutation_batch.ts","../node_modules/@firebase/firestore/src/model/overlay.ts","../node_modules/@firebase/firestore/src/remote/existence_filter.ts","../node_modules/@firebase/firestore/src/util/testing_hooks_spi.ts","../node_modules/@firebase/firestore/src/platform/browser/text_serializer.ts","../node_modules/@firebase/firestore/src/remote/bloom_filter.ts","../node_modules/@firebase/firestore/src/remote/remote_event.ts","../node_modules/@firebase/firestore/src/remote/watch_change.ts","../node_modules/@firebase/firestore/src/remote/serializer.ts","../node_modules/@firebase/firestore/src/local/target_data.ts","../node_modules/@firebase/firestore/src/local/local_serializer.ts","../node_modules/@firebase/firestore/src/index/firestore_index_value_writer.ts","../node_modules/@firebase/firestore/src/local/memory_index_manager.ts","../node_modules/@firebase/firestore/src/local/indexeddb_index_manager.ts","../node_modules/@firebase/firestore/src/local/lru_garbage_collector.ts","../node_modules/@firebase/firestore/src/core/target_id_generator.ts","../node_modules/@firebase/firestore/src/local/remote_document_change_buffer.ts","../node_modules/@firebase/firestore/src/local/overlayed_document.ts","../node_modules/@firebase/firestore/src/local/local_documents_view.ts","../node_modules/@firebase/firestore/src/local/memory_bundle_cache.ts","../node_modules/@firebase/firestore/src/local/memory_document_overlay_cache.ts","../node_modules/@firebase/firestore/src/local/reference_set.ts","../node_modules/@firebase/firestore/src/local/memory_mutation_queue.ts","../node_modules/@firebase/firestore/src/local/memory_remote_document_cache.ts","../node_modules/@firebase/firestore/src/local/memory_target_cache.ts","../node_modules/@firebase/firestore/src/local/memory_persistence.ts","../node_modules/@firebase/firestore/src/local/local_view_changes.ts","../node_modules/@firebase/firestore/src/local/query_context.ts","../node_modules/@firebase/firestore/src/local/query_engine.ts","../node_modules/@firebase/firestore/src/local/local_store_impl.ts","../node_modules/@firebase/firestore/src/local/shared_client_state.ts","../node_modules/@firebase/firestore/src/remote/connectivity_monitor_noop.ts","../node_modules/@firebase/firestore/src/platform/browser/connectivity_monitor.ts","../node_modules/@firebase/firestore/src/util/debug_uid.ts","../node_modules/@firebase/firestore/src/remote/rest_connection.ts","../node_modules/@firebase/firestore/src/remote/stream_bridge.ts","../node_modules/@firebase/firestore/src/platform/browser/webchannel_connection.ts","../node_modules/@firebase/firestore/src/platform/browser/dom.ts","../node_modules/@firebase/firestore/src/platform/browser/serializer.ts","../node_modules/@firebase/firestore/src/remote/backoff.ts","../node_modules/@firebase/firestore/src/remote/persistent_stream.ts","../node_modules/@firebase/firestore/src/remote/datastore.ts","../node_modules/@firebase/firestore/src/remote/online_state_tracker.ts","../node_modules/@firebase/firestore/src/remote/remote_store.ts","../node_modules/@firebase/firestore/src/util/async_queue.ts","../node_modules/@firebase/firestore/src/core/event_manager.ts","../node_modules/@firebase/firestore/src/model/document_set.ts","../node_modules/@firebase/firestore/src/core/view_snapshot.ts","../node_modules/@firebase/firestore/src/core/view.ts","../node_modules/@firebase/firestore/src/core/sync_engine_impl.ts","../node_modules/@firebase/firestore/src/core/component_provider.ts","../node_modules/@firebase/firestore/src/platform/browser/connection.ts","../node_modules/@firebase/firestore/src/util/async_observer.ts","../node_modules/@firebase/firestore/src/core/firestore_client.ts","../node_modules/@firebase/firestore/src/api/long_polling_options.ts","../node_modules/@firebase/firestore/src/lite-api/components.ts","../node_modules/@firebase/firestore/src/util/input_validation.ts","../node_modules/@firebase/firestore/src/lite-api/settings.ts","../node_modules/@firebase/firestore/src/local/lru_garbage_collector_impl.ts","../node_modules/@firebase/firestore/src/lite-api/database.ts","../node_modules/@firebase/firestore/src/lite-api/reference.ts","../node_modules/@firebase/firestore/src/util/async_queue_impl.ts","../node_modules/@firebase/firestore/src/api/database.ts","../node_modules/@firebase/firestore/src/lite-api/bytes.ts","../node_modules/@firebase/firestore/src/lite-api/field_path.ts","../node_modules/@firebase/firestore/src/lite-api/field_value.ts","../node_modules/@firebase/firestore/src/lite-api/geo_point.ts","../node_modules/@firebase/firestore/src/lite-api/user_data_reader.ts","../node_modules/@firebase/firestore/src/lite-api/snapshot.ts","../node_modules/@firebase/firestore/src/lite-api/query.ts","../node_modules/@firebase/firestore/src/lite-api/user_data_writer.ts","../node_modules/@firebase/firestore/src/lite-api/reference_impl.ts","../node_modules/@firebase/firestore/src/api/snapshot.ts","../node_modules/@firebase/firestore/src/api/reference_impl.ts","../node_modules/@firebase/firestore/src/api/persistent_cache_index_manager.ts","../node_modules/@firebase/firestore/src/register.ts","firebase-config.js","pages/LocationListing.js","pages/CharacterListing.js","pages/LocationCharacter.js","Components/Header.js","Components/DetailCard.js","Components/NotFoundPage.js","pages/CreateLocationForm.js","App.js","pages/LocationDetail.js","../node_modules/tslib/tslib.es6.js","../node_modules/ts-invariant/src/invariant.ts","../node_modules/@apollo/src/version.ts","../node_modules/@apollo/src/utilities/globals/maybe.ts","../node_modules/@apollo/src/utilities/globals/global.ts","../node_modules/@apollo/src/utilities/common/makeUniqueId.ts","../node_modules/@apollo/src/utilities/common/stringifyForDisplay.ts","../node_modules/@apollo/src/utilities/globals/invariantWrappers.ts","../node_modules/@apollo/src/utilities/globals/index.ts","../node_modules/@apollo/src/utilities/common/canUse.ts","../node_modules/@apollo/src/react/context/ApolloContext.ts","../node_modules/@apollo/src/react/context/ApolloProvider.tsx","../node_modules/zen-observable-ts/module.js","../node_modules/@apollo/src/utilities/common/objects.ts","../node_modules/@apollo/src/utilities/graphql/fragments.ts","../node_modules/@wry/caches/src/weak.ts","../node_modules/@wry/caches/src/strong.ts","../node_modules/@apollo/src/utilities/caching/caches.ts","../node_modules/@apollo/src/utilities/caching/sizes.ts","../node_modules/@apollo/src/utilities/caching/getMemoryInternals.ts","../node_modules/@apollo/src/utilities/common/canonicalStringify.ts","../node_modules/@apollo/src/utilities/graphql/storeUtils.ts","../node_modules/@apollo/src/utilities/graphql/getFromAST.ts","../node_modules/@apollo/src/link/core/ApolloLink.ts","../node_modules/@apollo/src/link/utils/createOperation.ts","../node_modules/@apollo/src/link/utils/transformOperation.ts","../node_modules/@apollo/src/link/utils/validateOperation.ts","../node_modules/graphql/jsutils/devAssert.mjs","../node_modules/graphql/jsutils/inspect.mjs","../node_modules/graphql/language/ast.mjs","../node_modules/graphql/language/kinds.mjs","../node_modules/graphql/language/visitor.mjs","../node_modules/@apollo/src/utilities/graphql/directives.ts","../node_modules/@apollo/src/link/http/serializeFetchParameter.ts","../node_modules/@apollo/src/link/http/iterators/nodeStream.ts","../node_modules/@apollo/src/link/http/iterators/reader.ts","../node_modules/@apollo/src/link/http/responseIterator.ts","../node_modules/@apollo/src/link/http/iterators/async.ts","../node_modules/@apollo/src/link/http/iterators/promise.ts","../node_modules/@apollo/src/link/utils/throwServerError.ts","../node_modules/@apollo/src/errors/index.ts","../node_modules/@apollo/src/utilities/common/arrays.ts","../node_modules/@apollo/src/utilities/common/mergeDeep.ts","../node_modules/@apollo/src/utilities/common/incrementalResult.ts","../node_modules/@apollo/src/link/http/parseAndCheckHttpResponse.ts","../node_modules/graphql/language/characterClasses.mjs","../node_modules/graphql/language/printString.mjs","../node_modules/graphql/language/printer.mjs","../node_modules/@apollo/src/utilities/graphql/print.ts","../node_modules/graphql/language/blockString.mjs","../node_modules/@apollo/src/link/http/selectHttpOptionsAndBody.ts","../node_modules/@apollo/src/link/utils/fromError.ts","../node_modules/@apollo/src/utilities/graphql/transform.ts","../node_modules/@apollo/src/link/http/createHttpLink.ts","../node_modules/@apollo/src/link/http/checkFetcher.ts","../node_modules/@apollo/src/link/http/selectURI.ts","../node_modules/@apollo/src/link/utils/filterOperationVariables.ts","../node_modules/@apollo/src/link/http/rewriteURIForGET.ts","../node_modules/@apollo/src/link/http/HttpLink.ts","../node_modules/@apollo/src/link/core/execute.ts","../node_modules/@wry/equality/src/index.ts","../node_modules/@wry/trie/src/index.ts","../node_modules/optimism/node_modules/@wry/trie/src/index.ts","../node_modules/@wry/context/src/slot.ts","../node_modules/@wry/context/src/index.ts","../node_modules/optimism/src/context.ts","../node_modules/optimism/src/helpers.ts","../node_modules/optimism/src/entry.ts","../node_modules/optimism/src/dep.ts","../node_modules/optimism/src/index.ts","../node_modules/@apollo/src/utilities/graphql/DocumentTransform.ts","../node_modules/@apollo/src/utilities/observables/asyncMap.ts","../node_modules/@apollo/src/utilities/common/errorHandling.ts","../node_modules/@apollo/src/utilities/observables/iteration.ts","../node_modules/@apollo/src/utilities/observables/subclassing.ts","../node_modules/@apollo/src/utilities/observables/Concast.ts","../node_modules/@apollo/src/core/networkStatus.ts","../node_modules/@apollo/src/utilities/common/compact.ts","../node_modules/@apollo/src/utilities/common/cloneDeep.ts","../node_modules/@apollo/src/core/equalByQuery.ts","../node_modules/@apollo/src/core/ObservableQuery.ts","../node_modules/graphql/language/predicates.mjs","../node_modules/@apollo/src/cache/inmemory/reactiveVars.ts","../node_modules/@apollo/src/core/LocalState.ts","../node_modules/@apollo/src/core/QueryInfo.ts","../node_modules/@apollo/src/core/QueryManager.ts","../node_modules/@apollo/src/utilities/common/mergeOptions.ts","../node_modules/@apollo/src/core/ApolloClient.ts","../node_modules/@apollo/src/link/core/from.ts","../node_modules/@apollo/src/cache/core/cache.ts","../node_modules/@apollo/src/cache/core/types/common.ts","../node_modules/@apollo/src/utilities/common/maybeDeepFreeze.ts","../node_modules/@apollo/src/cache/inmemory/helpers.ts","../node_modules/@apollo/src/cache/inmemory/entityStore.ts","../node_modules/@apollo/src/cache/inmemory/object-canon.ts","../node_modules/@apollo/src/cache/inmemory/readFromStore.ts","../node_modules/@apollo/src/cache/inmemory/key-extractor.ts","../node_modules/@apollo/src/cache/inmemory/policies.ts","../node_modules/@apollo/src/cache/inmemory/writeToStore.ts","../node_modules/@apollo/src/cache/inmemory/inMemoryCache.ts","../node_modules/@apollo/src/link/error/index.ts","apollo-client.js","index.js"],"sourcesContent":["module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar transitionalDefaults = require('../defaults/transitional');\nvar AxiosError = require('../core/AxiosError');\nvar CanceledError = require('../cancel/CanceledError');\nvar parseProtocol = require('../helpers/parseProtocol');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData) && utils.isStandardBrowserEnv()) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new CanceledError() : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    var protocol = parseProtocol(fullPath);\n\n    if (protocol && [ 'http', 'https', 'file' ].indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = require('./cancel/CanceledError');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\naxios.VERSION = require('./env/data').version;\naxios.toFormData = require('./helpers/toFormData');\n\n// Expose AxiosError class\naxios.AxiosError = require('../lib/core/AxiosError');\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\nvar CanceledError = require('./CanceledError');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new CanceledError(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\nvar AxiosError = require('../core/AxiosError');\nvar utils = require('../utils');\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction CanceledError(message) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nmodule.exports = CanceledError;\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar buildFullPath = require('./buildFullPath');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(configOrUrl, config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof configOrUrl === 'string') {\n    config = config || {};\n    config.url = configOrUrl;\n  } else {\n    config = configOrUrl || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  var fullPath = buildFullPath(config.baseURL, config.url);\n  return buildURL(fullPath, config.params, config.paramsSerializer);\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method: method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url: url,\n        data: data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nvar prototype = AxiosError.prototype;\nvar descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED'\n// eslint-disable-next-line func-names\n].forEach(function(code) {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = function(error, code, config, request, response, customProps) {\n  var axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nmodule.exports = AxiosError;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar CanceledError = require('../cancel/CanceledError');\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'beforeRedirect': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n","'use strict';\n\nvar AxiosError = require('./AxiosError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar normalizeHeaderName = require('../helpers/normalizeHeaderName');\nvar AxiosError = require('../core/AxiosError');\nvar transitionalDefaults = require('./transitional');\nvar toFormData = require('../helpers/toFormData');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('../adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('../adapters/http');\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n\n    var isObjectPayload = utils.isObject(data);\n    var contentType = headers && headers['Content-Type'];\n\n    var isFileList;\n\n    if ((isFileList = utils.isFileList(data)) || (isObjectPayload && contentType === 'multipart/form-data')) {\n      var _FormData = this.env && this.env.FormData;\n      return toFormData(isFileList ? {'files[]': data} : data, _FormData && new _FormData());\n    } else if (isObjectPayload || contentType === 'application/json') {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: require('./env/FormData')\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nmodule.exports = {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","module.exports = {\n  \"version\": \"0.27.2\"\n};","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","// eslint-disable-next-line strict\nmodule.exports = null;\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nmodule.exports = function parseProtocol(url) {\n  var match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n};\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Convert a data object to FormData\n * @param {Object} obj\n * @param {?Object} [formData]\n * @returns {Object}\n **/\n\nfunction toFormData(obj, formData) {\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new FormData();\n\n  var stack = [];\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  function build(data, parentKey) {\n    if (utils.isPlainObject(data) || utils.isArray(data)) {\n      if (stack.indexOf(data) !== -1) {\n        throw Error('Circular reference detected in ' + parentKey);\n      }\n\n      stack.push(data);\n\n      utils.forEach(data, function each(value, key) {\n        if (utils.isUndefined(value)) return;\n        var fullKey = parentKey ? parentKey + '.' + key : key;\n        var arr;\n\n        if (value && !parentKey && typeof value === 'object') {\n          if (utils.endsWith(key, '{}')) {\n            // eslint-disable-next-line no-param-reassign\n            value = JSON.stringify(value);\n          } else if (utils.endsWith(key, '[]') && (arr = utils.toArray(value))) {\n            // eslint-disable-next-line func-names\n            arr.forEach(function(el) {\n              !utils.isUndefined(el) && formData.append(fullKey, convertValue(el));\n            });\n            return;\n          }\n        }\n\n        build(value, fullKey);\n      });\n\n      stack.pop();\n    } else {\n      formData.append(parentKey, convertValue(data));\n    }\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nmodule.exports = toFormData;\n","'use strict';\n\nvar VERSION = require('../env/data').version;\nvar AxiosError = require('../core/AxiosError');\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n// eslint-disable-next-line func-names\nvar kindOf = (function(cache) {\n  // eslint-disable-next-line func-names\n  return function(thing) {\n    var str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n  };\n})(Object.create(null));\n\nfunction kindOfTest(type) {\n  type = type.toLowerCase();\n  return function isKindOf(thing) {\n    return kindOf(thing) === type;\n  };\n}\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return Array.isArray(val);\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nvar isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nvar isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nvar isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nvar isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nvar isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} thing The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(thing) {\n  var pattern = '[object FormData]';\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) ||\n    toString.call(thing) === pattern ||\n    (isFunction(thing.toString) && thing.toString() === pattern)\n  );\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nvar isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n */\n\nfunction inherits(constructor, superConstructor, props, descriptors) {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function} [filter]\n * @returns {Object}\n */\n\nfunction toFlatObject(sourceObj, destObj, filter) {\n  var props;\n  var i;\n  var prop;\n  var merged = {};\n\n  destObj = destObj || {};\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if (!merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = Object.getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/*\n * determines whether a string ends with the characters of a specified string\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n * @returns {boolean}\n */\nfunction endsWith(str, searchString, position) {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  var lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object\n * @param {*} [thing]\n * @returns {Array}\n */\nfunction toArray(thing) {\n  if (!thing) return null;\n  var i = thing.length;\n  if (isUndefined(i)) return null;\n  var arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n// eslint-disable-next-line func-names\nvar isTypedArray = (function(TypedArray) {\n  // eslint-disable-next-line func-names\n  return function(thing) {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && Object.getPrototypeOf(Uint8Array));\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM,\n  inherits: inherits,\n  toFlatObject: toFlatObject,\n  kindOf: kindOf,\n  kindOfTest: kindOfTest,\n  endsWith: endsWith,\n  toArray: toArray,\n  isTypedArray: isTypedArray,\n  isFileList: isFileList\n};\n","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ba=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function na(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function oa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction pa(a,b,c,d){if(null===b||\"undefined\"===typeof b||oa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function t(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new t(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new t(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new t(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new t(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new t(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new t(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new t(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new t(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new t(a,5,!1,a.toLowerCase(),null,!1,!1)});var qa=/[\\-:]([a-z])/g;function ra(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(qa,\nra);z[b]=new t(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(qa,ra);z[b]=new t(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(qa,ra);z[b]=new t(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new t(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new t(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new t(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction sa(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])pa(b,c,e,d)&&(c=null),d||null===e?na(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ta=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,ua=Symbol.for(\"react.element\"),va=Symbol.for(\"react.portal\"),wa=Symbol.for(\"react.fragment\"),xa=Symbol.for(\"react.strict_mode\"),za=Symbol.for(\"react.profiler\"),Aa=Symbol.for(\"react.provider\"),Ba=Symbol.for(\"react.context\"),Ca=Symbol.for(\"react.forward_ref\"),Da=Symbol.for(\"react.suspense\"),Ea=Symbol.for(\"react.suspense_list\"),Fa=Symbol.for(\"react.memo\"),Ga=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ha=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ia=Symbol.iterator;function Ja(a){if(null===a||\"object\"!==typeof a)return null;a=Ia&&a[Ia]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,Ka;function La(a){if(void 0===Ka)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);Ka=b&&b[1]||\"\"}return\"\\n\"+Ka+a}var Ma=!1;\nfunction Na(a,b){if(!a||Ma)return\"\";Ma=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Ma=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?La(a):\"\"}\nfunction Oa(a){switch(a.tag){case 5:return La(a.type);case 16:return La(\"Lazy\");case 13:return La(\"Suspense\");case 19:return La(\"SuspenseList\");case 0:case 2:case 15:return a=Na(a.type,!1),a;case 11:return a=Na(a.type.render,!1),a;case 1:return a=Na(a.type,!0),a;default:return\"\"}}\nfunction Pa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case wa:return\"Fragment\";case va:return\"Portal\";case za:return\"Profiler\";case xa:return\"StrictMode\";case Da:return\"Suspense\";case Ea:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ba:return(a.displayName||\"Context\")+\".Consumer\";case Aa:return(a._context.displayName||\"Context\")+\".Provider\";case Ca:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Fa:return b=a.displayName||null,null!==b?b:Pa(a.type)||\"Memo\";case Ga:b=a._payload;a=a._init;try{return Pa(a(b))}catch(c){}}return null}\nfunction Qa(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Pa(b);case 8:return b===xa?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Ra(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Sa(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ta(a){var b=Sa(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Ua(a){a._valueTracker||(a._valueTracker=Ta(a))}function Va(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Sa(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Wa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Xa(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Ya(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Ra(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function Za(a,b){b=b.checked;null!=b&&sa(a,\"checked\",b,!1)}\nfunction $a(a,b){Za(a,b);var c=Ra(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?bb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&bb(a,b.type,Ra(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction cb(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction bb(a,b,c){if(\"number\"!==b||Wa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var db=Array.isArray;\nfunction eb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Ra(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction fb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function gb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(db(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Ra(c)}}\nfunction hb(a,b){var c=Ra(b.value),d=Ra(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function ib(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function jb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction kb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?jb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar lb,mb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{lb=lb||document.createElement(\"div\");lb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=lb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction nb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar ob={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},pb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(ob).forEach(function(a){pb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);ob[b]=ob[a]})});function qb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||ob.hasOwnProperty(a)&&ob[a]?(\"\"+b).trim():b+\"px\"}\nfunction rb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=qb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var sb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction tb(a,b){if(b){if(sb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction ub(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var vb=null;function wb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var xb=null,yb=null,zb=null;\nfunction Ab(a){if(a=Bb(a)){if(\"function\"!==typeof xb)throw Error(p(280));var b=a.stateNode;b&&(b=Cb(b),xb(a.stateNode,a.type,b))}}function Db(a){yb?zb?zb.push(a):zb=[a]:yb=a}function Eb(){if(yb){var a=yb,b=zb;zb=yb=null;Ab(a);if(b)for(a=0;a<b.length;a++)Ab(b[a])}}function Fb(a,b){return a(b)}function Gb(){}var Hb=!1;function Ib(a,b,c){if(Hb)return a(b,c);Hb=!0;try{return Fb(a,b,c)}finally{if(Hb=!1,null!==yb||null!==zb)Gb(),Eb()}}\nfunction Jb(a,b){var c=a.stateNode;if(null===c)return null;var d=Cb(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Kb=!1;if(ia)try{var Lb={};Object.defineProperty(Lb,\"passive\",{get:function(){Kb=!0}});window.addEventListener(\"test\",Lb,Lb);window.removeEventListener(\"test\",Lb,Lb)}catch(a){Kb=!1}function Mb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(n){this.onError(n)}}var Nb=!1,Ob=null,Pb=!1,Qb=null,Rb={onError:function(a){Nb=!0;Ob=a}};function Sb(a,b,c,d,e,f,g,h,k){Nb=!1;Ob=null;Mb.apply(Rb,arguments)}\nfunction Tb(a,b,c,d,e,f,g,h,k){Sb.apply(this,arguments);if(Nb){if(Nb){var l=Ob;Nb=!1;Ob=null}else throw Error(p(198));Pb||(Pb=!0,Qb=l)}}function Ub(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Vb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Wb(a){if(Ub(a)!==a)throw Error(p(188));}\nfunction Xb(a){var b=a.alternate;if(!b){b=Ub(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Wb(e),a;if(f===d)return Wb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Yb(a){a=Xb(a);return null!==a?Zb(a):null}function Zb(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=Zb(a);if(null!==b)return b;a=a.sibling}return null}\nvar $b=ba.unstable_scheduleCallback,ac=ba.unstable_cancelCallback,bc=ba.unstable_shouldYield,cc=ba.unstable_requestPaint,B=ba.unstable_now,dc=ba.unstable_getCurrentPriorityLevel,ec=ba.unstable_ImmediatePriority,fc=ba.unstable_UserBlockingPriority,gc=ba.unstable_NormalPriority,hc=ba.unstable_LowPriority,ic=ba.unstable_IdlePriority,jc=null,kc=null;function lc(a){if(kc&&\"function\"===typeof kc.onCommitFiberRoot)try{kc.onCommitFiberRoot(jc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar nc=Math.clz32?Math.clz32:mc,oc=Math.log,pc=Math.LN2;function mc(a){a>>>=0;return 0===a?32:31-(oc(a)/pc|0)|0}var qc=64,rc=4194304;\nfunction sc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function tc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=sc(h):(f&=g,0!==f&&(d=sc(f)))}else g=c&~e,0!==g?d=sc(g):0!==f&&(d=sc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-nc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction uc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction vc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-nc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=uc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function wc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function xc(){var a=qc;qc<<=1;0===(qc&4194240)&&(qc=64);return a}function yc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction zc(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-nc(b);a[b]=c}function Ac(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-nc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Bc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-nc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Cc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Dc,Ec,Fc,Gc,Hc,Ic=!1,Jc=[],Kc=null,Lc=null,Mc=null,Nc=new Map,Oc=new Map,Pc=[],Qc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Rc(a,b){switch(a){case \"focusin\":case \"focusout\":Kc=null;break;case \"dragenter\":case \"dragleave\":Lc=null;break;case \"mouseover\":case \"mouseout\":Mc=null;break;case \"pointerover\":case \"pointerout\":Nc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Oc.delete(b.pointerId)}}\nfunction Sc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Bb(b),null!==b&&Ec(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Tc(a,b,c,d,e){switch(b){case \"focusin\":return Kc=Sc(Kc,a,b,c,d,e),!0;case \"dragenter\":return Lc=Sc(Lc,a,b,c,d,e),!0;case \"mouseover\":return Mc=Sc(Mc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Nc.set(f,Sc(Nc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Oc.set(f,Sc(Oc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Uc(a){var b=Vc(a.target);if(null!==b){var c=Ub(b);if(null!==c)if(b=c.tag,13===b){if(b=Vb(c),null!==b){a.blockedOn=b;Hc(a.priority,function(){Fc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Wc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Xc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);vb=d;c.target.dispatchEvent(d);vb=null}else return b=Bb(c),null!==b&&Ec(b),a.blockedOn=c,!1;b.shift()}return!0}function Yc(a,b,c){Wc(a)&&c.delete(b)}function Zc(){Ic=!1;null!==Kc&&Wc(Kc)&&(Kc=null);null!==Lc&&Wc(Lc)&&(Lc=null);null!==Mc&&Wc(Mc)&&(Mc=null);Nc.forEach(Yc);Oc.forEach(Yc)}\nfunction $c(a,b){a.blockedOn===b&&(a.blockedOn=null,Ic||(Ic=!0,ba.unstable_scheduleCallback(ba.unstable_NormalPriority,Zc)))}\nfunction ad(a){function b(b){return $c(b,a)}if(0<Jc.length){$c(Jc[0],a);for(var c=1;c<Jc.length;c++){var d=Jc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Kc&&$c(Kc,a);null!==Lc&&$c(Lc,a);null!==Mc&&$c(Mc,a);Nc.forEach(b);Oc.forEach(b);for(c=0;c<Pc.length;c++)d=Pc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Pc.length&&(c=Pc[0],null===c.blockedOn);)Uc(c),null===c.blockedOn&&Pc.shift()}var bd=ta.ReactCurrentBatchConfig,cd=!0;\nfunction dd(a,b,c,d){var e=C,f=bd.transition;bd.transition=null;try{C=1,ed(a,b,c,d)}finally{C=e,bd.transition=f}}function fd(a,b,c,d){var e=C,f=bd.transition;bd.transition=null;try{C=4,ed(a,b,c,d)}finally{C=e,bd.transition=f}}\nfunction ed(a,b,c,d){if(cd){var e=Xc(a,b,c,d);if(null===e)gd(a,b,d,hd,c),Rc(a,d);else if(Tc(e,a,b,c,d))d.stopPropagation();else if(Rc(a,d),b&4&&-1<Qc.indexOf(a)){for(;null!==e;){var f=Bb(e);null!==f&&Dc(f);f=Xc(a,b,c,d);null===f&&gd(a,b,d,hd,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else gd(a,b,d,null,c)}}var hd=null;\nfunction Xc(a,b,c,d){hd=null;a=wb(d);a=Vc(a);if(null!==a)if(b=Ub(a),null===b)a=null;else if(c=b.tag,13===c){a=Vb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);hd=a;return null}\nfunction id(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(dc()){case ec:return 1;case fc:return 4;case gc:case hc:return 16;case ic:return 536870912;default:return 16}default:return 16}}var jd=null,kd=null,ld=null;function md(){if(ld)return ld;var a,b=kd,c=b.length,d,e=\"value\"in jd?jd.value:jd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return ld=e.slice(a,1<d?1-d:void 0)}\nfunction nd(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function od(){return!0}function pd(){return!1}\nfunction qd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?od:pd;this.isPropagationStopped=pd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=od)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=od)},persist:function(){},isPersistent:od});return b}\nvar rd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},sd=qd(rd),td=A({},rd,{view:0,detail:0}),ud=qd(td),vd,wd,xd,zd=A({},td,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:yd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==xd&&(xd&&\"mousemove\"===a.type?(vd=a.screenX-xd.screenX,wd=a.screenY-xd.screenY):wd=vd=0,xd=a);return vd},movementY:function(a){return\"movementY\"in a?a.movementY:wd}}),Ad=qd(zd),Bd=A({},zd,{dataTransfer:0}),Cd=qd(Bd),Dd=A({},td,{relatedTarget:0}),Ed=qd(Dd),Fd=A({},rd,{animationName:0,elapsedTime:0,pseudoElement:0}),Gd=qd(Fd),Hd=A({},rd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Id=qd(Hd),Jd=A({},rd,{data:0}),Kd=qd(Jd),Ld={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Md={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Nd={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Od(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Nd[a])?!!b[a]:!1}function yd(){return Od}\nvar Pd=A({},td,{key:function(a){if(a.key){var b=Ld[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=nd(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Md[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:yd,charCode:function(a){return\"keypress\"===a.type?nd(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?nd(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Qd=qd(Pd),Rd=A({},zd,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Sd=qd(Rd),Td=A({},td,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:yd}),Ud=qd(Td),Vd=A({},rd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Wd=qd(Vd),Xd=A({},zd,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Yd=qd(Xd),Zd=[9,13,27,32],$d=ia&&\"CompositionEvent\"in window,ae=null;ia&&\"documentMode\"in document&&(ae=document.documentMode);var be=ia&&\"TextEvent\"in window&&!ae,ce=ia&&(!$d||ae&&8<ae&&11>=ae),de=String.fromCharCode(32),ee=!1;\nfunction fe(a,b){switch(a){case \"keyup\":return-1!==Zd.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function ge(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var he=!1;function ie(a,b){switch(a){case \"compositionend\":return ge(b);case \"keypress\":if(32!==b.which)return null;ee=!0;return de;case \"textInput\":return a=b.data,a===de&&ee?null:a;default:return null}}\nfunction je(a,b){if(he)return\"compositionend\"===a||!$d&&fe(a,b)?(a=md(),ld=kd=jd=null,he=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return ce&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar ke={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function le(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!ke[a.type]:\"textarea\"===b?!0:!1}function me(a,b,c,d){Db(d);b=ne(b,\"onChange\");0<b.length&&(c=new sd(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var oe=null,pe=null;function qe(a){re(a,0)}function se(a){var b=te(a);if(Va(b))return a}\nfunction ue(a,b){if(\"change\"===a)return b}var ve=!1;if(ia){var we;if(ia){var xe=\"oninput\"in document;if(!xe){var ye=document.createElement(\"div\");ye.setAttribute(\"oninput\",\"return;\");xe=\"function\"===typeof ye.oninput}we=xe}else we=!1;ve=we&&(!document.documentMode||9<document.documentMode)}function ze(){oe&&(oe.detachEvent(\"onpropertychange\",Ae),pe=oe=null)}function Ae(a){if(\"value\"===a.propertyName&&se(pe)){var b=[];me(b,pe,a,wb(a));Ib(qe,b)}}\nfunction Be(a,b,c){\"focusin\"===a?(ze(),oe=b,pe=c,oe.attachEvent(\"onpropertychange\",Ae)):\"focusout\"===a&&ze()}function Ce(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return se(pe)}function De(a,b){if(\"click\"===a)return se(b)}function Ee(a,b){if(\"input\"===a||\"change\"===a)return se(b)}function Fe(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var Ge=\"function\"===typeof Object.is?Object.is:Fe;\nfunction He(a,b){if(Ge(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!Ge(a[e],b[e]))return!1}return!0}function Ie(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Je(a,b){var c=Ie(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Ie(c)}}function Ke(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Ke(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Le(){for(var a=window,b=Wa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Wa(a.document)}return b}function Me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Ne(a){var b=Le(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Ke(c.ownerDocument.documentElement,c)){if(null!==d&&Me(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Je(c,f);var g=Je(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Oe=ia&&\"documentMode\"in document&&11>=document.documentMode,Pe=null,Qe=null,Re=null,Se=!1;\nfunction Te(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Se||null==Pe||Pe!==Wa(d)||(d=Pe,\"selectionStart\"in d&&Me(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Re&&He(Re,d)||(Re=d,d=ne(Qe,\"onSelect\"),0<d.length&&(b=new sd(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Pe)))}\nfunction Ue(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ve={animationend:Ue(\"Animation\",\"AnimationEnd\"),animationiteration:Ue(\"Animation\",\"AnimationIteration\"),animationstart:Ue(\"Animation\",\"AnimationStart\"),transitionend:Ue(\"Transition\",\"TransitionEnd\")},We={},Xe={};\nia&&(Xe=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ve.animationend.animation,delete Ve.animationiteration.animation,delete Ve.animationstart.animation),\"TransitionEvent\"in window||delete Ve.transitionend.transition);function Ye(a){if(We[a])return We[a];if(!Ve[a])return a;var b=Ve[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Xe)return We[a]=b[c];return a}var Ze=Ye(\"animationend\"),$e=Ye(\"animationiteration\"),af=Ye(\"animationstart\"),bf=Ye(\"transitionend\"),cf=new Map,df=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ef(a,b){cf.set(a,b);fa(b,[a])}for(var ff=0;ff<df.length;ff++){var gf=df[ff],hf=gf.toLowerCase(),jf=gf[0].toUpperCase()+gf.slice(1);ef(hf,\"on\"+jf)}ef(Ze,\"onAnimationEnd\");ef($e,\"onAnimationIteration\");ef(af,\"onAnimationStart\");ef(\"dblclick\",\"onDoubleClick\");ef(\"focusin\",\"onFocus\");ef(\"focusout\",\"onBlur\");ef(bf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var kf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),lf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(kf));\nfunction mf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Tb(d,b,void 0,a);a.currentTarget=null}\nfunction re(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;mf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;mf(e,h,l);f=k}}}if(Pb)throw a=Qb,Pb=!1,Qb=null,a;}\nfunction D(a,b){var c=b[nf];void 0===c&&(c=b[nf]=new Set);var d=a+\"__bubble\";c.has(d)||(of(b,a,2,!1),c.add(d))}function pf(a,b,c){var d=0;b&&(d|=4);of(c,a,d,b)}var qf=\"_reactListening\"+Math.random().toString(36).slice(2);function rf(a){if(!a[qf]){a[qf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(lf.has(b)||pf(b,!1,a),pf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[qf]||(b[qf]=!0,pf(\"selectionchange\",!1,b))}}\nfunction of(a,b,c,d){switch(id(b)){case 1:var e=dd;break;case 4:e=fd;break;default:e=ed}c=e.bind(null,b,c,a);e=void 0;!Kb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction gd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Vc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Ib(function(){var d=f,e=wb(c),g=[];\na:{var h=cf.get(a);if(void 0!==h){var k=sd,m=a;switch(a){case \"keypress\":if(0===nd(c))break a;case \"keydown\":case \"keyup\":k=Qd;break;case \"focusin\":m=\"focus\";k=Ed;break;case \"focusout\":m=\"blur\";k=Ed;break;case \"beforeblur\":case \"afterblur\":k=Ed;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Ad;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nCd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Ud;break;case Ze:case $e:case af:k=Gd;break;case bf:k=Wd;break;case \"scroll\":k=ud;break;case \"wheel\":k=Yd;break;case \"copy\":case \"cut\":case \"paste\":k=Id;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Sd}var w=0!==(b&4),J=!w&&\"scroll\"===a,v=w?null!==h?h+\"Capture\":null:h;w=[];for(var x=d,r;null!==\nx;){r=x;var F=r.stateNode;5===r.tag&&null!==F&&(r=F,null!==v&&(F=Jb(x,v),null!=F&&w.push(sf(x,F,r))));if(J)break;x=x.return}0<w.length&&(h=new k(h,m,null,c,e),g.push({event:h,listeners:w}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==vb&&(m=c.relatedTarget||c.fromElement)&&(Vc(m)||m[tf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(m=c.relatedTarget||c.toElement,k=d,m=m?Vc(m):null,null!==\nm&&(J=Ub(m),m!==J||5!==m.tag&&6!==m.tag))m=null}else k=null,m=d;if(k!==m){w=Ad;F=\"onMouseLeave\";v=\"onMouseEnter\";x=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)w=Sd,F=\"onPointerLeave\",v=\"onPointerEnter\",x=\"pointer\";J=null==k?h:te(k);r=null==m?h:te(m);h=new w(F,x+\"leave\",k,c,e);h.target=J;h.relatedTarget=r;F=null;Vc(e)===d&&(w=new w(v,x+\"enter\",m,c,e),w.target=r,w.relatedTarget=J,F=w);J=F;if(k&&m)b:{w=k;v=m;x=0;for(r=w;r;r=uf(r))x++;r=0;for(F=v;F;F=uf(F))r++;for(;0<x-r;)w=uf(w),x--;for(;0<r-x;)v=\nuf(v),r--;for(;x--;){if(w===v||null!==v&&w===v.alternate)break b;w=uf(w);v=uf(v)}w=null}else w=null;null!==k&&vf(g,h,k,w,!1);null!==m&&null!==J&&vf(g,J,m,w,!0)}}}a:{h=d?te(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var Z=ue;else if(le(h))if(ve)Z=Ee;else{Z=Ce;var ya=Be}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(Z=De);if(Z&&(Z=Z(a,d))){me(g,Z,c,e);break a}ya&&ya(a,h,d);\"focusout\"===a&&(ya=h._wrapperState)&&\nya.controlled&&\"number\"===h.type&&bb(h,\"number\",h.value)}ya=d?te(d):window;switch(a){case \"focusin\":if(le(ya)||\"true\"===ya.contentEditable)Pe=ya,Qe=d,Re=null;break;case \"focusout\":Re=Qe=Pe=null;break;case \"mousedown\":Se=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Se=!1;Te(g,c,e);break;case \"selectionchange\":if(Oe)break;case \"keydown\":case \"keyup\":Te(g,c,e)}var ab;if($d)b:{switch(a){case \"compositionstart\":var ca=\"onCompositionStart\";break b;case \"compositionend\":ca=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ca=\"onCompositionUpdate\";break b}ca=void 0}else he?fe(a,c)&&(ca=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ca=\"onCompositionStart\");ca&&(ce&&\"ko\"!==c.locale&&(he||\"onCompositionStart\"!==ca?\"onCompositionEnd\"===ca&&he&&(ab=md()):(jd=e,kd=\"value\"in jd?jd.value:jd.textContent,he=!0)),ya=ne(d,ca),0<ya.length&&(ca=new Kd(ca,a,null,c,e),g.push({event:ca,listeners:ya}),ab?ca.data=ab:(ab=ge(c),null!==ab&&(ca.data=ab))));if(ab=be?ie(a,c):je(a,c))d=ne(d,\"onBeforeInput\"),\n0<d.length&&(e=new Kd(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=ab)}re(g,b)})}function sf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function ne(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Jb(a,c),null!=f&&d.unshift(sf(a,f,e)),f=Jb(a,b),null!=f&&d.push(sf(a,f,e)));a=a.return}return d}function uf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction vf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Jb(c,f),null!=k&&g.unshift(sf(c,k,h))):e||(k=Jb(c,f),null!=k&&g.push(sf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var wf=/\\r\\n?/g,xf=/\\u0000|\\uFFFD/g;function yf(a){return(\"string\"===typeof a?a:\"\"+a).replace(wf,\"\\n\").replace(xf,\"\")}function zf(a,b,c){b=yf(b);if(yf(a)!==b&&c)throw Error(p(425));}function Af(){}\nvar Bf=null,Cf=null;function Df(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ef=\"function\"===typeof setTimeout?setTimeout:void 0,Ff=\"function\"===typeof clearTimeout?clearTimeout:void 0,Gf=\"function\"===typeof Promise?Promise:void 0,If=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Gf?function(a){return Gf.resolve(null).then(a).catch(Hf)}:Ef;function Hf(a){setTimeout(function(){throw a;})}\nfunction Jf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);ad(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);ad(b)}function Kf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Lf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Mf=Math.random().toString(36).slice(2),Nf=\"__reactFiber$\"+Mf,Of=\"__reactProps$\"+Mf,tf=\"__reactContainer$\"+Mf,nf=\"__reactEvents$\"+Mf,Pf=\"__reactListeners$\"+Mf,Qf=\"__reactHandles$\"+Mf;\nfunction Vc(a){var b=a[Nf];if(b)return b;for(var c=a.parentNode;c;){if(b=c[tf]||c[Nf]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Lf(a);null!==a;){if(c=a[Nf])return c;a=Lf(a)}return b}a=c;c=a.parentNode}return null}function Bb(a){a=a[Nf]||a[tf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function te(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Cb(a){return a[Of]||null}var Rf=[],Sf=-1;function Tf(a){return{current:a}}\nfunction E(a){0>Sf||(a.current=Rf[Sf],Rf[Sf]=null,Sf--)}function G(a,b){Sf++;Rf[Sf]=a.current;a.current=b}var Uf={},H=Tf(Uf),Vf=Tf(!1),Wf=Uf;function Xf(a,b){var c=a.type.contextTypes;if(!c)return Uf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Yf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Zf(){E(Vf);E(H)}function $f(a,b,c){if(H.current!==Uf)throw Error(p(168));G(H,b);G(Vf,c)}function ag(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Qa(a)||\"Unknown\",e));return A({},c,d)}\nfunction bg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Uf;Wf=H.current;G(H,a);G(Vf,Vf.current);return!0}function cg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=ag(a,b,Wf),d.__reactInternalMemoizedMergedChildContext=a,E(Vf),E(H),G(H,a)):E(Vf);G(Vf,c)}var dg=null,eg=!1,fg=!1;function gg(a){null===dg?dg=[a]:dg.push(a)}function hg(a){eg=!0;gg(a)}\nfunction ig(){if(!fg&&null!==dg){fg=!0;var a=0,b=C;try{var c=dg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}dg=null;eg=!1}catch(e){throw null!==dg&&(dg=dg.slice(a+1)),$b(ec,ig),e;}finally{C=b,fg=!1}}return null}var jg=ta.ReactCurrentBatchConfig;function kg(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var lg=Tf(null),mg=null,ng=null,og=null;function pg(){og=ng=mg=null}\nfunction qg(a){var b=lg.current;E(lg);a._currentValue=b}function rg(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}function sg(a,b){mg=a;og=ng=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(tg=!0),a.firstContext=null)}\nfunction ug(a){var b=a._currentValue;if(og!==a)if(a={context:a,memoizedValue:b,next:null},null===ng){if(null===mg)throw Error(p(308));ng=a;mg.dependencies={lanes:0,firstContext:a}}else ng=ng.next=a;return b}var vg=null,wg=!1;function xg(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction yg(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function zg(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction Ag(a,b){var c=a.updateQueue;null!==c&&(c=c.shared,Bg(a)?(a=c.interleaved,null===a?(b.next=b,null===vg?vg=[c]:vg.push(c)):(b.next=a.next,a.next=b),c.interleaved=b):(a=c.pending,null===a?b.next=b:(b.next=a.next,a.next=b),c.pending=b))}function Cg(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Bc(a,c)}}\nfunction Dg(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction Eg(a,b,c,d){var e=a.updateQueue;wg=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var n=a.alternate;null!==n&&(n=n.updateQueue,h=n.lastBaseUpdate,h!==g&&(null===h?n.firstBaseUpdate=l:h.next=l,n.lastBaseUpdate=k))}if(null!==f){var u=e.baseState;g=0;n=l=k=null;h=f;do{var q=h.lane,y=h.eventTime;if((d&q)===q){null!==n&&(n=n.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var m=a,w=h;q=b;y=c;switch(w.tag){case 1:m=w.payload;if(\"function\"===typeof m){u=m.call(y,u,q);break a}u=m;break a;case 3:m.flags=m.flags&-65537|128;case 0:m=w.payload;q=\"function\"===typeof m?m.call(y,u,q):m;if(null===q||void 0===q)break a;u=A({},u,q);break a;case 2:wg=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,q=e.effects,null===q?e.effects=[h]:q.push(h))}else y={eventTime:y,lane:q,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===n?(l=n=y,k=u):n=n.next=y,g|=q;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else q=h,h=q.next,q.next=null,e.lastBaseUpdate=q,e.shared.pending=null}while(1);null===n&&(k=u);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=n;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);Fg|=g;a.lanes=g;a.memoizedState=u}}\nfunction Gg(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var Hg=(new aa.Component).refs;function Ig(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Mg={isMounted:function(a){return(a=a._reactInternals)?Ub(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=Jg(),e=Kg(a),f=zg(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);b=Lg(a,e,d);null!==b&&Cg(b,a,e)},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=Jg(),e=Kg(a),f=zg(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);b=Lg(a,e,d);null!==b&&Cg(b,a,e)},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=Jg(),d=Kg(a),e=zg(c,\nd);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);Ag(a,e);b=Lg(a,d,c);null!==b&&Cg(b,a,d)}};function Ng(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!He(c,d)||!He(e,f):!0}\nfunction Og(a,b,c){var d=!1,e=Uf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=ug(f):(e=Yf(b)?Wf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Xf(a,e):Uf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Mg;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Pg(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Mg.enqueueReplaceState(b,b.state,null)}\nfunction Qg(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Hg;xg(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=ug(f):(f=Yf(b)?Wf:H.current,e.context=Xf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Ig(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Mg.enqueueReplaceState(e,e.state,null),Eg(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}var Rg=[],Sg=0,Tg=null,Ug=0,Vg=[],Wg=0,Xg=null,Yg=1,Zg=\"\";function $g(a,b){Rg[Sg++]=Ug;Rg[Sg++]=Tg;Tg=a;Ug=b}\nfunction ah(a,b,c){Vg[Wg++]=Yg;Vg[Wg++]=Zg;Vg[Wg++]=Xg;Xg=a;var d=Yg;a=Zg;var e=32-nc(d)-1;d&=~(1<<e);c+=1;var f=32-nc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;Yg=1<<32-nc(b)+e|c<<e|d;Zg=f+a}else Yg=1<<f|c<<e|d,Zg=a}function bh(a){null!==a.return&&($g(a,1),ah(a,1,0))}function ch(a){for(;a===Tg;)Tg=Rg[--Sg],Rg[Sg]=null,Ug=Rg[--Sg],Rg[Sg]=null;for(;a===Xg;)Xg=Vg[--Wg],Vg[Wg]=null,Zg=Vg[--Wg],Vg[Wg]=null,Yg=Vg[--Wg],Vg[Wg]=null}var dh=null,eh=null,I=!1,fh=null;\nfunction gh(a,b){var c=hh(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction ih(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,dh=a,eh=Kf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,dh=a,eh=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==Xg?{id:Yg,overflow:Zg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=hh(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,dh=a,eh=\nnull,!0):!1;default:return!1}}function jh(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function kh(a){if(I){var b=eh;if(b){var c=b;if(!ih(a,b)){if(jh(a))throw Error(p(418));b=Kf(c.nextSibling);var d=dh;b&&ih(a,b)?gh(d,c):(a.flags=a.flags&-4097|2,I=!1,dh=a)}}else{if(jh(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;dh=a}}}function lh(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;dh=a}\nfunction mh(a){if(a!==dh)return!1;if(!I)return lh(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Df(a.type,a.memoizedProps));if(b&&(b=eh)){if(jh(a)){for(a=eh;a;)a=Kf(a.nextSibling);throw Error(p(418));}for(;b;)gh(a,b),b=Kf(b.nextSibling)}lh(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){eh=Kf(a.nextSibling);break a}b--}else\"$\"!==c&&\n\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}eh=null}}else eh=dh?Kf(a.stateNode.nextSibling):null;return!0}function nh(){eh=dh=null;I=!1}function oh(a){null===fh?fh=[a]:fh.push(a)}\nfunction ph(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;b===Hg&&(b=e.refs={});null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction qh(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function rh(a){var b=a._init;return b(a._payload)}\nfunction sh(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=th(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=uh(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===wa)return n(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ga&&rh(f)===b.type))return d=e(b,c.props),d.ref=ph(a,b,c),d.return=a,d;d=vh(c.type,c.key,c.props,null,a.mode,d);d.ref=ph(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=wh(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function n(a,b,c,d,f){if(null===b||7!==b.tag)return b=xh(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function u(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=uh(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case ua:return c=vh(b.type,b.key,b.props,null,a.mode,c),\nc.ref=ph(a,null,b),c.return=a,c;case va:return b=wh(b,a.mode,c),b.return=a,b;case Ga:var d=b._init;return u(a,d(b._payload),c)}if(db(b)||Ja(b))return b=xh(b,a.mode,c,null),b.return=a,b;qh(a,b)}return null}function q(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case ua:return c.key===e?k(a,b,c,d):null;case va:return c.key===e?l(a,b,c,d):null;case Ga:return e=c._init,q(a,\nb,e(c._payload),d)}if(db(c)||Ja(c))return null!==e?null:n(a,b,c,d,null);qh(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case ua:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case va:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ga:var f=d._init;return y(a,b,c,f(d._payload),e)}if(db(d)||Ja(d))return a=a.get(c)||null,n(b,a,d,e,null);qh(b,d)}return null}\nfunction m(e,g,h,k){for(var l=null,n=null,r=g,m=g=0,x=null;null!==r&&m<h.length;m++){r.index>m?(x=r,r=null):x=r.sibling;var v=q(e,r,h[m],k);if(null===v){null===r&&(r=x);break}a&&r&&null===v.alternate&&b(e,r);g=f(v,g,m);null===n?l=v:n.sibling=v;n=v;r=x}if(m===h.length)return c(e,r),I&&$g(e,m),l;if(null===r){for(;m<h.length;m++)r=u(e,h[m],k),null!==r&&(g=f(r,g,m),null===n?l=r:n.sibling=r,n=r);I&&$g(e,m);return l}for(r=d(e,r);m<h.length;m++)x=y(r,e,m,h[m],k),null!==x&&(a&&null!==x.alternate&&r.delete(null===\nx.key?m:x.key),g=f(x,g,m),null===n?l=x:n.sibling=x,n=x);a&&r.forEach(function(a){return b(e,a)});I&&$g(e,m);return l}function w(e,g,h,k){var l=Ja(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var n=l=null,m=g,r=g=0,x=null,v=h.next();null!==m&&!v.done;r++,v=h.next()){m.index>r?(x=m,m=null):x=m.sibling;var w=q(e,m,v.value,k);if(null===w){null===m&&(m=x);break}a&&m&&null===w.alternate&&b(e,m);g=f(w,g,r);null===n?l=w:n.sibling=w;n=w;m=x}if(v.done)return c(e,\nm),I&&$g(e,r),l;if(null===m){for(;!v.done;r++,v=h.next())v=u(e,v.value,k),null!==v&&(g=f(v,g,r),null===n?l=v:n.sibling=v,n=v);I&&$g(e,r);return l}for(m=d(e,m);!v.done;r++,v=h.next())v=y(m,e,r,v.value,k),null!==v&&(a&&null!==v.alternate&&m.delete(null===v.key?r:v.key),g=f(v,g,r),null===n?l=v:n.sibling=v,n=v);a&&m.forEach(function(a){return b(e,a)});I&&$g(e,r);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===wa&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case ua:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===wa){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ga&&rh(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=ph(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===wa?(d=xh(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=vh(f.type,f.key,f.props,null,a.mode,h),h.ref=ph(a,d,f),h.return=a,a=h)}return g(a);case va:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=wh(f,a.mode,h);d.return=a;a=d}return g(a);case Ga:return l=f._init,J(a,d,l(f._payload),h)}if(db(f))return m(a,d,f,h);if(Ja(f))return w(a,d,f,h);qh(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=uh(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var yh=sh(!0),zh=sh(!1),Ah={},Bh=Tf(Ah),Ch=Tf(Ah),Dh=Tf(Ah);function Eh(a){if(a===Ah)throw Error(p(174));return a}function Fh(a,b){G(Dh,b);G(Ch,a);G(Bh,Ah);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:kb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=kb(b,a)}E(Bh);G(Bh,b)}function Gh(){E(Bh);E(Ch);E(Dh)}\nfunction Hh(a){Eh(Dh.current);var b=Eh(Bh.current);var c=kb(b,a.type);b!==c&&(G(Ch,a),G(Bh,c))}function Ih(a){Ch.current===a&&(E(Bh),E(Ch))}var K=Tf(0);\nfunction Jh(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Kh=[];\nfunction Lh(){for(var a=0;a<Kh.length;a++)Kh[a]._workInProgressVersionPrimary=null;Kh.length=0}var Mh=ta.ReactCurrentDispatcher,Nh=ta.ReactCurrentBatchConfig,Oh=0,L=null,M=null,N=null,Ph=!1,Qh=!1,Rh=0,Sh=0;function O(){throw Error(p(321));}function Th(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!Ge(a[c],b[c]))return!1;return!0}\nfunction Uh(a,b,c,d,e,f){Oh=f;L=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Mh.current=null===a||null===a.memoizedState?Vh:Wh;a=c(d,e);if(Qh){f=0;do{Qh=!1;Rh=0;if(25<=f)throw Error(p(301));f+=1;N=M=null;b.updateQueue=null;Mh.current=Xh;a=c(d,e)}while(Qh)}Mh.current=Yh;b=null!==M&&null!==M.next;Oh=0;N=M=L=null;Ph=!1;if(b)throw Error(p(300));return a}function Zh(){var a=0!==Rh;Rh=0;return a}\nfunction $h(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===N?L.memoizedState=N=a:N=N.next=a;return N}function ai(){if(null===M){var a=L.alternate;a=null!==a?a.memoizedState:null}else a=M.next;var b=null===N?L.memoizedState:N.next;if(null!==b)N=b,M=a;else{if(null===a)throw Error(p(310));M=a;a={memoizedState:M.memoizedState,baseState:M.baseState,baseQueue:M.baseQueue,queue:M.queue,next:null};null===N?L.memoizedState=N=a:N=N.next=a}return N}\nfunction bi(a,b){return\"function\"===typeof b?b(a):b}\nfunction ci(a){var b=ai(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=M,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var n=l.lane;if((Oh&n)===n)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var u={lane:n,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=u,g=d):k=k.next=u;L.lanes|=n;Fg|=n}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;Ge(d,b.memoizedState)||(tg=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,L.lanes|=f,Fg|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction di(a){var b=ai(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);Ge(f,b.memoizedState)||(tg=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function ei(){}\nfunction fi(a,b){var c=L,d=ai(),e=b(),f=!Ge(d.memoizedState,e);f&&(d.memoizedState=e,tg=!0);d=d.queue;gi(hi.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==N&&N.memoizedState.tag&1){c.flags|=2048;ii(9,ji.bind(null,c,d,e,b),void 0,null);if(null===P)throw Error(p(349));0!==(Oh&30)||ki(c,b,e)}return e}function ki(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=L.updateQueue;null===b?(b={lastEffect:null,stores:null},L.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction ji(a,b,c,d){b.value=c;b.getSnapshot=d;li(b)&&Lg(a,1,-1)}function hi(a,b,c){return c(function(){li(b)&&Lg(a,1,-1)})}function li(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!Ge(a,c)}catch(d){return!0}}function mi(a){var b=$h();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:bi,lastRenderedState:a};b.queue=a;a=a.dispatch=ni.bind(null,L,a);return[b.memoizedState,a]}\nfunction ii(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=L.updateQueue;null===b?(b={lastEffect:null,stores:null},L.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function oi(){return ai().memoizedState}function pi(a,b,c,d){var e=$h();L.flags|=a;e.memoizedState=ii(1|b,c,void 0,void 0===d?null:d)}\nfunction qi(a,b,c,d){var e=ai();d=void 0===d?null:d;var f=void 0;if(null!==M){var g=M.memoizedState;f=g.destroy;if(null!==d&&Th(d,g.deps)){e.memoizedState=ii(b,c,f,d);return}}L.flags|=a;e.memoizedState=ii(1|b,c,f,d)}function ri(a,b){return pi(8390656,8,a,b)}function gi(a,b){return qi(2048,8,a,b)}function si(a,b){return qi(4,2,a,b)}function ti(a,b){return qi(4,4,a,b)}\nfunction ui(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function vi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return qi(4,4,ui.bind(null,b,a),c)}function wi(){}function xi(a,b){var c=ai();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Th(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction yi(a,b){var c=ai();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Th(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function zi(a,b,c){if(0===(Oh&21))return a.baseState&&(a.baseState=!1,tg=!0),a.memoizedState=c;Ge(c,b)||(c=xc(),L.lanes|=c,Fg|=c,a.baseState=!0);return b}function Ai(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Nh.transition;Nh.transition={};try{a(!1),b()}finally{C=c,Nh.transition=d}}function Bi(){return ai().memoizedState}\nfunction Ci(a,b,c){var d=Kg(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};Di(a)?Ei(b,c):(Fi(a,b,c),c=Jg(),a=Lg(a,d,c),null!==a&&Gi(a,b,d))}\nfunction ni(a,b,c){var d=Kg(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Di(a))Ei(b,e);else{Fi(a,b,e);var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(Ge(h,g))return}catch(k){}finally{}c=Jg();a=Lg(a,d,c);null!==a&&Gi(a,b,d)}}function Di(a){var b=a.alternate;return a===L||null!==b&&b===L}\nfunction Ei(a,b){Qh=Ph=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Fi(a,b,c){Bg(a)?(a=b.interleaved,null===a?(c.next=c,null===vg?vg=[b]:vg.push(b)):(c.next=a.next,a.next=c),b.interleaved=c):(a=b.pending,null===a?c.next=c:(c.next=a.next,a.next=c),b.pending=c)}function Gi(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Bc(a,c)}}\nvar Yh={readContext:ug,useCallback:O,useContext:O,useEffect:O,useImperativeHandle:O,useInsertionEffect:O,useLayoutEffect:O,useMemo:O,useReducer:O,useRef:O,useState:O,useDebugValue:O,useDeferredValue:O,useTransition:O,useMutableSource:O,useSyncExternalStore:O,useId:O,unstable_isNewReconciler:!1},Vh={readContext:ug,useCallback:function(a,b){$h().memoizedState=[a,void 0===b?null:b];return a},useContext:ug,useEffect:ri,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return pi(4194308,\n4,ui.bind(null,b,a),c)},useLayoutEffect:function(a,b){return pi(4194308,4,a,b)},useInsertionEffect:function(a,b){return pi(4,2,a,b)},useMemo:function(a,b){var c=$h();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=$h();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=Ci.bind(null,L,a);return[d.memoizedState,a]},useRef:function(a){var b=\n$h();a={current:a};return b.memoizedState=a},useState:mi,useDebugValue:wi,useDeferredValue:function(a){return $h().memoizedState=a},useTransition:function(){var a=mi(!1),b=a[0];a=Ai.bind(null,a[1]);$h().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=L,e=$h();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===P)throw Error(p(349));0!==(Oh&30)||ki(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;ri(hi.bind(null,d,\nf,a),[a]);d.flags|=2048;ii(9,ji.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=$h(),b=P.identifierPrefix;if(I){var c=Zg;var d=Yg;c=(d&~(1<<32-nc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Rh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Sh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Wh={readContext:ug,useCallback:xi,useContext:ug,useEffect:gi,useImperativeHandle:vi,useInsertionEffect:si,useLayoutEffect:ti,useMemo:yi,useReducer:ci,useRef:oi,useState:function(){return ci(bi)},\nuseDebugValue:wi,useDeferredValue:function(a){var b=ai();return zi(b,M.memoizedState,a)},useTransition:function(){var a=ci(bi)[0],b=ai().memoizedState;return[a,b]},useMutableSource:ei,useSyncExternalStore:fi,useId:Bi,unstable_isNewReconciler:!1},Xh={readContext:ug,useCallback:xi,useContext:ug,useEffect:gi,useImperativeHandle:vi,useInsertionEffect:si,useLayoutEffect:ti,useMemo:yi,useReducer:di,useRef:oi,useState:function(){return di(bi)},useDebugValue:wi,useDeferredValue:function(a){var b=ai();return null===\nM?b.memoizedState=a:zi(b,M.memoizedState,a)},useTransition:function(){var a=di(bi)[0],b=ai().memoizedState;return[a,b]},useMutableSource:ei,useSyncExternalStore:fi,useId:Bi,unstable_isNewReconciler:!1};function Hi(a,b){try{var c=\"\",d=b;do c+=Oa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e}}function Ii(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}\nvar Ji=\"function\"===typeof WeakMap?WeakMap:Map;function Ki(a,b,c){c=zg(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Li||(Li=!0,Mi=d);Ii(a,b)};return c}\nfunction Ni(a,b,c){c=zg(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Ii(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Ii(a,b);\"function\"!==typeof d&&(null===Oi?Oi=new Set([this]):Oi.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Pi(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Ji;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Qi.bind(null,a,b,c),b.then(a,a))}function Ri(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Si(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=zg(-1,1),b.tag=2,Ag(c,b))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Ti,Ui,Vi,Wi;\nTi=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Ui=function(){};\nVi=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;Eh(Bh.current);var f=null;switch(c){case \"input\":e=Xa(a,e);d=Xa(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=fb(a,e);d=fb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Af)}tb(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Wi=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Xi(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction Q(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Yi(a,b,c){var d=b.pendingProps;ch(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Q(b),null;case 1:return Yf(b.type)&&Zf(),Q(b),null;case 3:d=b.stateNode;Gh();E(Vf);E(H);Lh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)mh(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==fh&&(Zi(fh),fh=null));Ui(a,b);Q(b);return null;case 5:Ih(b);var e=Eh(Dh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Vi(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));Q(b);return null}a=Eh(Bh.current);if(mh(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Nf]=b;d[Of]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<kf.length;e++)D(kf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Ya(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":gb(d,f),D(\"invalid\",d)}tb(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&zf(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&zf(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Ua(d);cb(d,f,!0);break;case \"textarea\":Ua(d);ib(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Af)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=jb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Nf]=b;a[Of]=d;Ti(a,b,!1,!1);b.stateNode=a;a:{g=ub(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<kf.length;e++)D(kf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Ya(a,d);e=Xa(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":gb(a,d);e=fb(a,d);D(\"invalid\",a);break;default:e=d}tb(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?rb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&mb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&nb(a,k):\"number\"===typeof k&&nb(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&sa(a,f,k,g))}switch(c){case \"input\":Ua(a);cb(a,d,!1);break;case \"textarea\":Ua(a);ib(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Ra(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?eb(a,!!d.multiple,f,!1):null!=d.defaultValue&&eb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Af)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}Q(b);return null;case 6:if(a&&null!=b.stateNode)Wi(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=Eh(Dh.current);Eh(Bh.current);if(mh(b)){d=b.stateNode;c=b.memoizedProps;d[Nf]=b;if(f=d.nodeValue!==c)if(a=\ndh,null!==a)switch(a.tag){case 3:zf(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&zf(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Nf]=b,b.stateNode=d}Q(b);return null;case 13:E(K);d=b.memoizedState;if(I&&null!==eh&&0!==(b.mode&1)&&0===(b.flags&128)){for(d=eh;d;)d=Kf(d.nextSibling);nh();b.flags|=98560;return b}if(null!==d&&null!==d.dehydrated){d=mh(b);if(null===a){if(!d)throw Error(p(318));d=\nb.memoizedState;d=null!==d?d.dehydrated:null;if(!d)throw Error(p(317));d[Nf]=b}else nh(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;Q(b);return null}null!==fh&&(Zi(fh),fh=null);if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;c=!1;null===a?mh(b):c=null!==a.memoizedState;d!==c&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(K.current&1)?0===R&&(R=3):$i()));null!==b.updateQueue&&(b.flags|=4);Q(b);return null;case 4:return Gh(),Ui(a,b),null===a&&rf(b.stateNode.containerInfo),Q(b),\nnull;case 10:return qg(b.type._context),Q(b),null;case 17:return Yf(b.type)&&Zf(),Q(b),null;case 19:E(K);f=b.memoizedState;if(null===f)return Q(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Xi(f,!1);else{if(0!==R||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Jh(a);if(null!==g){b.flags|=128;Xi(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,g=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=\nnull,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(K,K.current&1|2);return b.child}a=a.sibling}null!==f.tail&&B()>aj&&(b.flags|=\n128,d=!0,Xi(f,!1),b.lanes=4194304)}else{if(!d)if(a=Jh(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Xi(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return Q(b),null}else 2*B()-f.renderingStartTime>aj&&1073741824!==c&&(b.flags|=128,d=!0,Xi(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=b,f.tail=b.sibling,f.renderingStartTime=\nB(),b.sibling=null,c=K.current,G(K,d?c&1|2:c&1),b;Q(b);return null;case 22:case 23:return bj(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(cj&1073741824)&&(Q(b),b.subtreeFlags&6&&(b.flags|=8192)):Q(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}var dj=ta.ReactCurrentOwner,tg=!1;function ej(a,b,c,d){b.child=null===a?zh(b,null,c,d):yh(b,a.child,c,d)}\nfunction fj(a,b,c,d,e){c=c.render;var f=b.ref;sg(b,e);d=Uh(a,b,c,d,f,e);c=Zh();if(null!==a&&!tg)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,gj(a,b,e);I&&c&&bh(b);b.flags|=1;ej(a,b,d,e);return b.child}\nfunction hj(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!ij(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,jj(a,b,f,d,e);a=vh(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:He;if(c(g,d)&&a.ref===b.ref)return gj(a,b,e)}b.flags|=1;a=th(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction jj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(He(f,d)&&a.ref===b.ref)if(tg=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(tg=!0);else return b.lanes=a.lanes,gj(a,b,e)}return kj(a,b,c,d,e)}\nfunction lj(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(mj,cj),cj|=c;else if(0!==(c&1073741824))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},d=null!==f?f.baseLanes:c,G(mj,cj),cj|=d;else return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(mj,cj),cj|=a,null;\nelse null!==f?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(mj,cj),cj|=d;ej(a,b,e,c);return b.child}function nj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function kj(a,b,c,d,e){var f=Yf(c)?Wf:H.current;f=Xf(b,f);sg(b,e);c=Uh(a,b,c,d,f,e);d=Zh();if(null!==a&&!tg)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,gj(a,b,e);I&&d&&bh(b);b.flags|=1;ej(a,b,c,e);return b.child}\nfunction oj(a,b,c,d,e){if(Yf(c)){var f=!0;bg(b)}else f=!1;sg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),Og(b,c,d),Qg(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=ug(l):(l=Yf(c)?Wf:H.current,l=Xf(b,l));var n=c.getDerivedStateFromProps,u=\"function\"===typeof n||\"function\"===typeof g.getSnapshotBeforeUpdate;u||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Pg(b,g,d,l);wg=!1;var q=b.memoizedState;g.state=q;Eg(b,d,g,e);k=b.memoizedState;h!==d||q!==k||Vf.current||wg?(\"function\"===typeof n&&(Ig(b,c,n,d),k=b.memoizedState),(h=wg||Ng(b,c,h,d,q,k,l))?(u||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===\ntypeof g.componentDidMount&&(b.flags|=4194308)):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;yg(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:kg(b.type,h);g.props=l;u=b.pendingProps;q=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=ug(k):(k=Yf(c)?Wf:H.current,k=Xf(b,k));var y=c.getDerivedStateFromProps;(n=\"function\"===\ntypeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==u||q!==k)&&Pg(b,g,d,k);wg=!1;q=b.memoizedState;g.state=q;Eg(b,d,g,e);var m=b.memoizedState;h!==u||q!==m||Vf.current||wg?(\"function\"===typeof y&&(Ig(b,c,y,d),m=b.memoizedState),(l=wg||Ng(b,c,l,d,q,m,k)||!1)?(n||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&\ng.componentWillUpdate(d,m,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,m,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&q===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&q===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=m),g.props=d,g.state=m,g.context=\nk,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&q===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&q===a.memoizedState||(b.flags|=1024),d=!1)}return pj(a,b,c,d,f,e)}\nfunction pj(a,b,c,d,e,f){nj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&cg(b,c,!1),gj(a,b,f);d=b.stateNode;dj.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=yh(b,a.child,null,f),b.child=yh(b,null,h,f)):ej(a,b,h,f);b.memoizedState=d.state;e&&cg(b,c,!0);return b.child}function qj(a){var b=a.stateNode;b.pendingContext?$f(a,b.pendingContext,b.pendingContext!==b.context):b.context&&$f(a,b.context,!1);Fh(a,b.containerInfo)}\nfunction rj(a,b,c,d,e){nh();oh(e);b.flags|=256;ej(a,b,c,d);return b.child}var sj={dehydrated:null,treeContext:null,retryLane:0};function tj(a){return{baseLanes:a,cachePool:null,transitions:null}}function uj(a,b){return{baseLanes:a.baseLanes|b,cachePool:null,transitions:a.transitions}}\nfunction vj(a,b,c){var d=b.pendingProps,e=K.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(K,e&1);if(null===a){kh(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;e=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,e={mode:\"hidden\",children:e},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ne):f=wj(e,d,0,null),a=xh(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=tj(c),b.memoizedState=sj,a):xj(b,e)}e=a.memoizedState;if(null!==e){h=e.dehydrated;if(null!==h){if(g){if(b.flags&256)return b.flags&=-257,yj(a,b,c,Error(p(422)));if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=wj({mode:\"visible\",children:d.children},e,0,null);f=xh(f,e,c,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&yh(b,a.child,\nnull,c);b.child.memoizedState=tj(c);b.memoizedState=sj;return f}if(0===(b.mode&1))b=yj(a,b,c,null);else if(\"$!\"===h.data)b=yj(a,b,c,Error(p(419)));else if(d=0!==(c&a.childLanes),tg||d){d=P;if(null!==d){switch(c&-c){case 4:f=2;break;case 16:f=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:f=32;break;case 536870912:f=\n268435456;break;default:f=0}d=0!==(f&(d.suspendedLanes|c))?0:f;0!==d&&d!==e.retryLane&&(e.retryLane=d,Lg(a,d,-1))}$i();b=yj(a,b,c,Error(p(421)))}else\"$?\"===h.data?(b.flags|=128,b.child=a.child,b=zj.bind(null,a),h._reactRetry=b,b=null):(c=e.treeContext,eh=Kf(h.nextSibling),dh=b,I=!0,fh=null,null!==c&&(Vg[Wg++]=Yg,Vg[Wg++]=Zg,Vg[Wg++]=Xg,Yg=c.id,Zg=c.overflow,Xg=b),b=xj(b,b.pendingProps.children),b.flags|=4096);return b}if(f)return d=Aj(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,\nf.memoizedState=null===e?tj(c):uj(e,c),f.childLanes=a.childLanes&~c,b.memoizedState=sj,d;c=Bj(a,b,d.children,c);b.memoizedState=null;return c}if(f)return d=Aj(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?tj(c):uj(e,c),f.childLanes=a.childLanes&~c,b.memoizedState=sj,d;c=Bj(a,b,d.children,c);b.memoizedState=null;return c}function xj(a,b){b=wj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}\nfunction Bj(a,b,c,d){var e=a.child;a=e.sibling;c=th(e,{mode:\"visible\",children:c});0===(b.mode&1)&&(c.lanes=d);c.return=b;c.sibling=null;null!==a&&(d=b.deletions,null===d?(b.deletions=[a],b.flags|=16):d.push(a));return b.child=c}\nfunction Aj(a,b,c,d,e){var f=b.mode;a=a.child;var g=a.sibling,h={mode:\"hidden\",children:c};0===(f&1)&&b.child!==a?(c=b.child,c.childLanes=0,c.pendingProps=h,b.deletions=null):(c=th(a,h),c.subtreeFlags=a.subtreeFlags&14680064);null!==g?d=th(g,d):(d=xh(d,f,e,null),d.flags|=2);d.return=b;c.return=b;c.sibling=d;b.child=c;return d}function yj(a,b,c,d){null!==d&&oh(d);yh(b,a.child,null,c);a=xj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction Cj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);rg(a.return,b,c)}function Dj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction Ej(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;ej(a,b,d.children,c);d=K.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&Cj(a,c,b);else if(19===a.tag)Cj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(K,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Jh(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);Dj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Jh(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}Dj(b,!0,c,null,f);break;case \"together\":Dj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction gj(a,b,c){null!==a&&(b.dependencies=a.dependencies);Fg|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=th(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=th(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction Fj(a,b,c){switch(b.tag){case 3:qj(b);nh();break;case 5:Hh(b);break;case 1:Yf(b.type)&&bg(b);break;case 4:Fh(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(lg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(K,K.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return vj(a,b,c);G(K,K.current&1);a=gj(a,b,c);return null!==a?a.sibling:null}G(K,K.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return Ej(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(K,K.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,lj(a,b,c)}return gj(a,b,c)}\nfunction Gj(a,b){ch(b);switch(b.tag){case 1:return Yf(b.type)&&Zf(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return Gh(),E(Vf),E(H),Lh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Ih(b),null;case 13:E(K);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));nh()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(K),null;case 4:return Gh(),null;case 10:return qg(b.type._context),null;case 22:case 23:return bj(),\nnull;case 24:return null;default:return null}}var Hj=!1,S=!1,Ij=\"function\"===typeof WeakSet?WeakSet:Set,T=null;function Jj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){U(a,b,d)}else c.current=null}function Kj(a,b,c){try{c()}catch(d){U(a,b,d)}}var Lj=!1;\nfunction Mj(a,b){Bf=cd;a=Le();if(Me(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(Z){c=null;break a}var g=0,h=-1,k=-1,l=0,n=0,u=a,q=null;b:for(;;){for(var y;;){u!==c||0!==e&&3!==u.nodeType||(h=g+e);u!==f||0!==d&&3!==u.nodeType||(k=g+d);3===u.nodeType&&(g+=\nu.nodeValue.length);if(null===(y=u.firstChild))break;q=u;u=y}for(;;){if(u===a)break b;q===c&&++l===e&&(h=g);q===f&&++n===d&&(k=g);if(null!==(y=u.nextSibling))break;u=q;q=u.parentNode}u=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Cf={focusedElem:a,selectionRange:c};cd=!1;for(T=b;null!==T;)if(b=T,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,T=a;else for(;null!==T;){b=T;try{var m=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==m){var w=m.memoizedProps,J=m.memoizedState,v=b.stateNode,x=v.getSnapshotBeforeUpdate(b.elementType===b.type?w:kg(b.type,w),J);v.__reactInternalSnapshotBeforeUpdate=x}break;case 3:var r=b.stateNode.containerInfo;if(1===r.nodeType)r.textContent=\"\";else if(9===r.nodeType){var F=r.body;null!=F&&(F.textContent=\"\")}break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(Z){U(b,b.return,Z)}a=b.sibling;if(null!==a){a.return=b.return;T=a;break}T=b.return}m=Lj;Lj=!1;return m}\nfunction Nj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Kj(b,c,f)}e=e.next}while(e!==d)}}function Oj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Pj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Qj(a){var b=a.alternate;null!==b&&(a.alternate=null,Qj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Nf],delete b[Of],delete b[nf],delete b[Pf],delete b[Qf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Rj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Sj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Rj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Tj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Af));else if(4!==d&&(a=a.child,null!==a))for(Tj(a,b,c),a=a.sibling;null!==a;)Tj(a,b,c),a=a.sibling}\nfunction Uj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Uj(a,b,c),a=a.sibling;null!==a;)Uj(a,b,c),a=a.sibling}var V=null,Vj=!1;function Wj(a,b,c){for(c=c.child;null!==c;)Xj(a,b,c),c=c.sibling}\nfunction Xj(a,b,c){if(kc&&\"function\"===typeof kc.onCommitFiberUnmount)try{kc.onCommitFiberUnmount(jc,c)}catch(h){}switch(c.tag){case 5:S||Jj(c,b);case 6:var d=V,e=Vj;V=null;Wj(a,b,c);V=d;Vj=e;null!==V&&(Vj?(a=V,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):V.removeChild(c.stateNode));break;case 18:null!==V&&(Vj?(a=V,c=c.stateNode,8===a.nodeType?Jf(a.parentNode,c):1===a.nodeType&&Jf(a,c),ad(a)):Jf(V,c.stateNode));break;case 4:d=V;e=Vj;V=c.stateNode.containerInfo;Vj=!0;\nWj(a,b,c);V=d;Vj=e;break;case 0:case 11:case 14:case 15:if(!S&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Kj(c,b,g):0!==(f&4)&&Kj(c,b,g));e=e.next}while(e!==d)}Wj(a,b,c);break;case 1:if(!S&&(Jj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){U(c,b,h)}Wj(a,b,c);break;case 21:Wj(a,b,c);break;case 22:c.mode&1?(S=(d=S)||null!==\nc.memoizedState,Wj(a,b,c),S=d):Wj(a,b,c);break;default:Wj(a,b,c)}}function Yj(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Ij);b.forEach(function(b){var d=Zj.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction ak(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:V=h.stateNode;Vj=!1;break a;case 3:V=h.stateNode.containerInfo;Vj=!0;break a;case 4:V=h.stateNode.containerInfo;Vj=!0;break a}h=h.return}if(null===V)throw Error(p(160));Xj(f,g,e);V=null;Vj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){U(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)bk(b,a),b=b.sibling}\nfunction bk(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:ak(b,a);ck(a);if(d&4){try{Nj(3,a,a.return),Oj(3,a)}catch(m){U(a,a.return,m)}try{Nj(5,a,a.return)}catch(m){U(a,a.return,m)}}break;case 1:ak(b,a);ck(a);d&512&&null!==c&&Jj(c,c.return);break;case 5:ak(b,a);ck(a);d&512&&null!==c&&Jj(c,c.return);if(a.flags&32){var e=a.stateNode;try{nb(e,\"\")}catch(m){U(a,a.return,m)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&Za(e,f);ub(h,g);var l=ub(h,f);for(g=0;g<k.length;g+=2){var n=k[g],u=k[g+1];\"style\"===n?rb(e,u):\"dangerouslySetInnerHTML\"===n?mb(e,u):\"children\"===n?nb(e,u):sa(e,n,u,l)}switch(h){case \"input\":$a(e,f);break;case \"textarea\":hb(e,f);break;case \"select\":var q=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?eb(e,!!f.multiple,y,!1):q!==!!f.multiple&&(null!=f.defaultValue?eb(e,!!f.multiple,\nf.defaultValue,!0):eb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Of]=f}catch(m){U(a,a.return,m)}}break;case 6:ak(b,a);ck(a);if(d&4){if(null===a.stateNode)throw Error(p(162));l=a.stateNode;n=a.memoizedProps;try{l.nodeValue=n}catch(m){U(a,a.return,m)}}break;case 3:ak(b,a);ck(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{ad(b.containerInfo)}catch(m){U(a,a.return,m)}break;case 4:ak(b,a);ck(a);break;case 13:ak(b,a);ck(a);l=a.child;l.flags&8192&&null!==l.memoizedState&&(null===l.alternate||null===l.alternate.memoizedState)&&\n(dk=B());d&4&&Yj(a);break;case 22:l=null!==c&&null!==c.memoizedState;a.mode&1?(S=(n=S)||l,ak(b,a),S=n):ak(b,a);ck(a);if(d&8192){n=null!==a.memoizedState;a:for(u=null,q=a;;){if(5===q.tag){if(null===u){u=q;try{e=q.stateNode,n?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=qb(\"display\",g))}catch(m){U(a,a.return,m)}}}else if(6===\nq.tag){if(null===u)try{q.stateNode.nodeValue=n?\"\":q.memoizedProps}catch(m){U(a,a.return,m)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;u===q&&(u=null);q=q.return}u===q&&(u=null);q.sibling.return=q.return;q=q.sibling}if(n&&!l&&0!==(a.mode&1))for(T=a,a=a.child;null!==a;){for(l=T=a;null!==T;){n=T;u=n.child;switch(n.tag){case 0:case 11:case 14:case 15:Nj(4,\nn,n.return);break;case 1:Jj(n,n.return);f=n.stateNode;if(\"function\"===typeof f.componentWillUnmount){q=n;y=n.return;try{e=q,f.props=e.memoizedProps,f.state=e.memoizedState,f.componentWillUnmount()}catch(m){U(q,y,m)}}break;case 5:Jj(n,n.return);break;case 22:if(null!==n.memoizedState){ek(l);continue}}null!==u?(u.return=n,T=u):ek(l)}a=a.sibling}}break;case 19:ak(b,a);ck(a);d&4&&Yj(a);break;case 21:break;default:ak(b,a),ck(a)}}\nfunction ck(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Rj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(nb(e,\"\"),d.flags&=-33);var f=Sj(a);Uj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Sj(a);Tj(a,h,g);break;default:throw Error(p(161));}}catch(k){U(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function fk(a,b,c){T=a;gk(a,b,c)}\nfunction gk(a,b,c){for(var d=0!==(a.mode&1);null!==T;){var e=T,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Hj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||S;h=Hj;var l=S;Hj=g;if((S=k)&&!l)for(T=e;null!==T;)g=T,k=g.child,22===g.tag&&null!==g.memoizedState?hk(e):null!==k?(k.return=g,T=k):hk(e);for(;null!==f;)T=f,gk(f,b,c),f=f.sibling;T=e;Hj=h;S=l}ik(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,T=f):ik(a,b,c)}}\nfunction ik(a){for(;null!==T;){var b=T;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:S||Oj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!S)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:kg(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&Gg(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}Gg(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var n=l.memoizedState;if(null!==n){var u=n.dehydrated;null!==u&&ad(u)}}}break;case 19:case 17:case 21:case 22:case 23:break;\ndefault:throw Error(p(163));}S||b.flags&512&&Pj(b)}catch(q){U(b,b.return,q)}}if(b===a){T=null;break}c=b.sibling;if(null!==c){c.return=b.return;T=c;break}T=b.return}}function ek(a){for(;null!==T;){var b=T;if(b===a){T=null;break}var c=b.sibling;if(null!==c){c.return=b.return;T=c;break}T=b.return}}\nfunction hk(a){for(;null!==T;){var b=T;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Oj(4,b)}catch(k){U(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){U(b,e,k)}}var f=b.return;try{Pj(b)}catch(k){U(b,f,k)}break;case 5:var g=b.return;try{Pj(b)}catch(k){U(b,g,k)}}}catch(k){U(b,b.return,k)}if(b===a){T=null;break}var h=b.sibling;if(null!==h){h.return=b.return;T=h;break}T=b.return}}\nvar jk=Math.ceil,kk=ta.ReactCurrentDispatcher,lk=ta.ReactCurrentOwner,mk=ta.ReactCurrentBatchConfig,W=0,P=null,X=null,Y=0,cj=0,mj=Tf(0),R=0,nk=null,Fg=0,ok=0,pk=0,qk=null,rk=null,dk=0,aj=Infinity,sk=null,Li=!1,Mi=null,Oi=null,tk=!1,uk=null,vk=0,wk=0,xk=null,yk=-1,zk=0;function Jg(){return 0!==(W&6)?B():-1!==yk?yk:yk=B()}\nfunction Kg(a){if(0===(a.mode&1))return 1;if(0!==(W&2)&&0!==Y)return Y&-Y;if(null!==jg.transition)return 0===zk&&(zk=xc()),zk;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:id(a.type);return a}function Lg(a,b,c){if(50<wk)throw wk=0,xk=null,Error(p(185));var d=Ak(a,b);if(null===d)return null;zc(d,b,c);if(0===(W&2)||d!==P)d===P&&(0===(W&2)&&(ok|=b),4===R&&Bk(d,Y)),Ck(d,c),1===b&&0===W&&0===(a.mode&1)&&(aj=B()+500,eg&&ig());return d}\nfunction Ak(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}function Bg(a){return(null!==P||null!==vg)&&0!==(a.mode&1)&&0===(W&2)}\nfunction Ck(a,b){var c=a.callbackNode;vc(a,b);var d=tc(a,a===P?Y:0);if(0===d)null!==c&&ac(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&ac(c);if(1===b)0===a.tag?hg(Dk.bind(null,a)):gg(Dk.bind(null,a)),If(function(){0===W&&ig()}),c=null;else{switch(Cc(d)){case 1:c=ec;break;case 4:c=fc;break;case 16:c=gc;break;case 536870912:c=ic;break;default:c=gc}c=Ek(c,Fk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Fk(a,b){yk=-1;zk=0;if(0!==(W&6))throw Error(p(327));var c=a.callbackNode;if(Gk()&&a.callbackNode!==c)return null;var d=tc(a,a===P?Y:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Hk(a,d);else{b=d;var e=W;W|=2;var f=Ik();if(P!==a||Y!==b)sk=null,aj=B()+500,Jk(a,b);do try{Kk();break}catch(h){Lk(a,h)}while(1);pg();kk.current=f;W=e;null!==X?b=0:(P=null,Y=0,b=R)}if(0!==b){2===b&&(e=wc(a),0!==e&&(d=e,b=Mk(a,e)));if(1===b)throw c=nk,Jk(a,0),Bk(a,d),Ck(a,B()),c;if(6===b)Bk(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Nk(e)&&(b=Hk(a,d),2===b&&(f=wc(a),0!==f&&(d=f,b=Mk(a,f))),1===b))throw c=nk,Jk(a,0),Bk(a,d),Ck(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Ok(a,rk,sk);break;case 3:Bk(a,d);if((d&130023424)===d&&(b=dk+500-B(),10<b)){if(0!==tc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){Jg();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ef(Ok.bind(null,a,rk,sk),b);break}Ok(a,rk,sk);break;case 4:Bk(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-nc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*jk(d/1960))-d;if(10<d){a.timeoutHandle=Ef(Ok.bind(null,a,rk,sk),d);break}Ok(a,rk,sk);break;case 5:Ok(a,rk,sk);break;default:throw Error(p(329));}}}Ck(a,B());return a.callbackNode===c?Fk.bind(null,a):null}\nfunction Mk(a,b){var c=qk;a.current.memoizedState.isDehydrated&&(Jk(a,b).flags|=256);a=Hk(a,b);2!==a&&(b=rk,rk=c,null!==b&&Zi(b));return a}function Zi(a){null===rk?rk=a:rk.push.apply(rk,a)}\nfunction Nk(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!Ge(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Bk(a,b){b&=~pk;b&=~ok;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-nc(b),d=1<<c;a[c]=-1;b&=~d}}function Dk(a){if(0!==(W&6))throw Error(p(327));Gk();var b=tc(a,0);if(0===(b&1))return Ck(a,B()),null;var c=Hk(a,b);if(0!==a.tag&&2===c){var d=wc(a);0!==d&&(b=d,c=Mk(a,d))}if(1===c)throw c=nk,Jk(a,0),Bk(a,b),Ck(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Ok(a,rk,sk);Ck(a,B());return null}\nfunction Pk(a,b){var c=W;W|=1;try{return a(b)}finally{W=c,0===W&&(aj=B()+500,eg&&ig())}}function Qk(a){null!==uk&&0===uk.tag&&0===(W&6)&&Gk();var b=W;W|=1;var c=mk.transition,d=C;try{if(mk.transition=null,C=1,a)return a()}finally{C=d,mk.transition=c,W=b,0===(W&6)&&ig()}}function bj(){cj=mj.current;E(mj)}\nfunction Jk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Ff(c));if(null!==X)for(c=X.return;null!==c;){var d=c;ch(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&Zf();break;case 3:Gh();E(Vf);E(H);Lh();break;case 5:Ih(d);break;case 4:Gh();break;case 13:E(K);break;case 19:E(K);break;case 10:qg(d.type._context);break;case 22:case 23:bj()}c=c.return}P=a;X=a=th(a.current,null);Y=cj=b;R=0;nk=null;pk=ok=Fg=0;rk=qk=null;if(null!==vg){for(b=\n0;b<vg.length;b++)if(c=vg[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}vg=null}return a}\nfunction Lk(a,b){do{var c=X;try{pg();Mh.current=Yh;if(Ph){for(var d=L.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Ph=!1}Oh=0;N=M=L=null;Qh=!1;Rh=0;lk.current=null;if(null===c||null===c.return){R=1;nk=b;X=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Y;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,n=h,u=n.tag;if(0===(n.mode&1)&&(0===u||11===u||15===u)){var q=n.alternate;q?(n.updateQueue=q.updateQueue,n.memoizedState=q.memoizedState,\nn.lanes=q.lanes):(n.updateQueue=null,n.memoizedState=null)}var y=Ri(g);if(null!==y){y.flags&=-257;Si(y,g,h,f,b);y.mode&1&&Pi(f,l,b);b=y;k=l;var m=b.updateQueue;if(null===m){var w=new Set;w.add(k);b.updateQueue=w}else m.add(k);break a}else{if(0===(b&1)){Pi(f,l,b);$i();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Ri(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Si(J,g,h,f,b);oh(k);break a}}f=k;4!==R&&(R=2);null===qk?qk=[f]:qk.push(f);k=Hi(k,h);h=g;do{switch(h.tag){case 3:h.flags|=65536;\nb&=-b;h.lanes|=b;var v=Ki(h,k,b);Dg(h,v);break a;case 1:f=k;var x=h.type,r=h.stateNode;if(0===(h.flags&128)&&(\"function\"===typeof x.getDerivedStateFromError||null!==r&&\"function\"===typeof r.componentDidCatch&&(null===Oi||!Oi.has(r)))){h.flags|=65536;b&=-b;h.lanes|=b;var F=Ni(h,f,b);Dg(h,F);break a}}h=h.return}while(null!==h)}Rk(c)}catch(Z){b=Z;X===c&&null!==c&&(X=c=c.return);continue}break}while(1)}function Ik(){var a=kk.current;kk.current=Yh;return null===a?Yh:a}\nfunction $i(){if(0===R||3===R||2===R)R=4;null===P||0===(Fg&268435455)&&0===(ok&268435455)||Bk(P,Y)}function Hk(a,b){var c=W;W|=2;var d=Ik();if(P!==a||Y!==b)sk=null,Jk(a,b);do try{Sk();break}catch(e){Lk(a,e)}while(1);pg();W=c;kk.current=d;if(null!==X)throw Error(p(261));P=null;Y=0;return R}function Sk(){for(;null!==X;)Tk(X)}function Kk(){for(;null!==X&&!bc();)Tk(X)}function Tk(a){var b=Uk(a.alternate,a,cj);a.memoizedProps=a.pendingProps;null===b?Rk(a):X=b;lk.current=null}\nfunction Rk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Yi(c,b,cj),null!==c){X=c;return}}else{c=Gj(c,b);if(null!==c){c.flags&=32767;X=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{R=6;X=null;return}}b=b.sibling;if(null!==b){X=b;return}X=b=a}while(null!==b);0===R&&(R=5)}function Ok(a,b,c){var d=C,e=mk.transition;try{mk.transition=null,C=1,Vk(a,b,c,d)}finally{mk.transition=e,C=d}return null}\nfunction Vk(a,b,c,d){do Gk();while(null!==uk);if(0!==(W&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Ac(a,f);a===P&&(X=P=null,Y=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||tk||(tk=!0,Ek(gc,function(){Gk();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=mk.transition;mk.transition=null;\nvar g=C;C=1;var h=W;W|=4;lk.current=null;Mj(a,c);bk(c,a);Ne(Cf);cd=!!Bf;Cf=Bf=null;a.current=c;fk(c,a,e);cc();W=h;C=g;mk.transition=f}else a.current=c;tk&&(tk=!1,uk=a,vk=e);f=a.pendingLanes;0===f&&(Oi=null);lc(c.stateNode,d);Ck(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)d(b[c]);if(Li)throw Li=!1,a=Mi,Mi=null,a;0!==(vk&1)&&0!==a.tag&&Gk();f=a.pendingLanes;0!==(f&1)?a===xk?wk++:(wk=0,xk=a):wk=0;ig();return null}\nfunction Gk(){if(null!==uk){var a=Cc(vk),b=mk.transition,c=C;try{mk.transition=null;C=16>a?16:a;if(null===uk)var d=!1;else{a=uk;uk=null;vk=0;if(0!==(W&6))throw Error(p(331));var e=W;W|=4;for(T=a.current;null!==T;){var f=T,g=f.child;if(0!==(T.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(T=l;null!==T;){var n=T;switch(n.tag){case 0:case 11:case 15:Nj(8,n,f)}var u=n.child;if(null!==u)u.return=n,T=u;else for(;null!==T;){n=T;var q=n.sibling,y=n.return;Qj(n);if(n===\nl){T=null;break}if(null!==q){q.return=y;T=q;break}T=y}}}var m=f.alternate;if(null!==m){var w=m.child;if(null!==w){m.child=null;do{var J=w.sibling;w.sibling=null;w=J}while(null!==w)}}T=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,T=g;else b:for(;null!==T;){f=T;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Nj(9,f,f.return)}var v=f.sibling;if(null!==v){v.return=f.return;T=v;break b}T=f.return}}var x=a.current;for(T=x;null!==T;){g=T;var r=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nr)r.return=g,T=r;else b:for(g=x;null!==T;){h=T;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Oj(9,h)}}catch(Z){U(h,h.return,Z)}if(h===g){T=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;T=F;break b}T=h.return}}W=e;ig();if(kc&&\"function\"===typeof kc.onPostCommitFiberRoot)try{kc.onPostCommitFiberRoot(jc,a)}catch(Z){}d=!0}return d}finally{C=c,mk.transition=b}}return!1}function Wk(a,b,c){b=Hi(c,b);b=Ki(a,b,1);Ag(a,b);b=Jg();a=Ak(a,1);null!==a&&(zc(a,1,b),Ck(a,b))}\nfunction U(a,b,c){if(3===a.tag)Wk(a,a,c);else for(;null!==b;){if(3===b.tag){Wk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Oi||!Oi.has(d))){a=Hi(c,a);a=Ni(b,a,1);Ag(b,a);a=Jg();b=Ak(b,1);null!==b&&(zc(b,1,a),Ck(b,a));break}}b=b.return}}\nfunction Qi(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=Jg();a.pingedLanes|=a.suspendedLanes&c;P===a&&(Y&c)===c&&(4===R||3===R&&(Y&130023424)===Y&&500>B()-dk?Jk(a,0):pk|=c);Ck(a,b)}function Xk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=rc,rc<<=1,0===(rc&130023424)&&(rc=4194304)));var c=Jg();a=Ak(a,b);null!==a&&(zc(a,b,c),Ck(a,c))}function zj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Xk(a,c)}\nfunction Zj(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Xk(a,c)}var Uk;\nUk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Vf.current)tg=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return tg=!1,Fj(a,b,c);tg=0!==(a.flags&131072)?!0:!1}else tg=!1,I&&0!==(b.flags&1048576)&&ah(b,Ug,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);a=b.pendingProps;var e=Xf(b,H.current);sg(b,c);e=Uh(null,b,d,a,e,c);var f=Zh();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?\n(b.tag=1,b.memoizedState=null,b.updateQueue=null,Yf(d)?(f=!0,bg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,xg(b),e.updater=Mg,b.stateNode=e,e._reactInternals=b,Qg(b,d,a,c),b=pj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&bh(b),ej(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=Yk(d);a=kg(d,a);switch(e){case 0:b=kj(null,b,d,a,c);break a;case 1:b=oj(null,b,\nd,a,c);break a;case 11:b=fj(null,b,d,a,c);break a;case 14:b=hj(null,b,d,kg(d.type,a),c);break a}throw Error(p(306,d,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:kg(d,e),kj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:kg(d,e),oj(a,b,d,e,c);case 3:a:{qj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;yg(a,b);Eg(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,\ncache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=f,b.memoizedState=f,b.flags&256){e=Error(p(423));b=rj(a,b,d,c,e);break a}else if(d!==e){e=Error(p(424));b=rj(a,b,d,c,e);break a}else for(eh=Kf(b.stateNode.containerInfo.firstChild),dh=b,I=!0,fh=null,c=zh(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{nh();if(d===e){b=gj(a,b,c);break a}ej(a,b,d,c)}b=b.child}return b;case 5:return Hh(b),null===a&&kh(b),d=b.type,e=\nb.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Df(d,e)?g=null:null!==f&&Df(d,f)&&(b.flags|=32),nj(a,b),ej(a,b,g,c),b.child;case 6:return null===a&&kh(b),null;case 13:return vj(a,b,c);case 4:return Fh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=yh(b,null,d,c):ej(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:kg(d,e),fj(a,b,d,e,c);case 7:return ej(a,b,b.pendingProps,c),b.child;case 8:return ej(a,b,b.pendingProps.children,c),b.child;case 12:return ej(a,\nb,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;g=e.value;G(lg,d._currentValue);d._currentValue=g;if(null!==f)if(Ge(f.value,g)){if(f.children===e.children&&!Vf.current){b=gj(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=zg(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var n=l.pending;null===n?k.next=\nk:(k.next=n.next,n.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);rg(f.return,c,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);rg(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}ej(a,b,e.children,c);b=b.child}return b;\ncase 9:return e=b.type,d=b.pendingProps.children,sg(b,c),e=ug(e),d=d(e),b.flags|=1,ej(a,b,d,c),b.child;case 14:return d=b.type,e=kg(d,b.pendingProps),e=kg(d.type,e),hj(a,b,d,e,c);case 15:return jj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:kg(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),b.tag=1,Yf(d)?(a=!0,bg(b)):a=!1,sg(b,c),Og(b,d,e),Qg(b,d,e,c),pj(null,b,d,!0,a,c);case 19:return Ej(a,b,c);case 22:return lj(a,b,c)}throw Error(p(156,\nb.tag));};function Ek(a,b){return $b(a,b)}function Zk(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function hh(a,b,c,d){return new Zk(a,b,c,d)}\nfunction ij(a){a=a.prototype;return!(!a||!a.isReactComponent)}function Yk(a){if(\"function\"===typeof a)return ij(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Ca)return 11;if(a===Fa)return 14}return 2}\nfunction th(a,b){var c=a.alternate;null===c?(c=hh(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction vh(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)ij(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case wa:return xh(c.children,e,f,b);case xa:g=8;e|=8;break;case za:return a=hh(12,c,b,e|2),a.elementType=za,a.lanes=f,a;case Da:return a=hh(13,c,b,e),a.elementType=Da,a.lanes=f,a;case Ea:return a=hh(19,c,b,e),a.elementType=Ea,a.lanes=f,a;case Ha:return wj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Aa:g=10;break a;case Ba:g=9;break a;case Ca:g=11;\nbreak a;case Fa:g=14;break a;case Ga:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=hh(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function xh(a,b,c,d){a=hh(7,a,d,b);a.lanes=c;return a}function wj(a,b,c,d){a=hh(22,a,d,b);a.elementType=Ha;a.lanes=c;a.stateNode={};return a}function uh(a,b,c){a=hh(6,a,null,b);a.lanes=c;return a}\nfunction wh(a,b,c){b=hh(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction $k(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=yc(0);this.expirationTimes=yc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=yc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function al(a,b,c,d,e,f,g,h,k){a=new $k(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=hh(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};xg(f);return a}function bl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:va,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction cl(a){if(!a)return Uf;a=a._reactInternals;a:{if(Ub(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Yf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Yf(c))return ag(a,c,b)}return b}\nfunction dl(a,b,c,d,e,f,g,h,k){a=al(c,d,!0,a,e,f,g,h,k);a.context=cl(null);c=a.current;d=Jg();e=Kg(c);f=zg(d,e);f.callback=void 0!==b&&null!==b?b:null;Ag(c,f);a.current.lanes=e;zc(a,e,d);Ck(a,d);return a}function el(a,b,c,d){var e=b.current,f=Jg(),g=Kg(e);c=cl(c);null===b.context?b.context=c:b.pendingContext=c;b=zg(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);Ag(e,b);a=Lg(e,g,f);null!==a&&Cg(a,e,g);return g}\nfunction fl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function gl(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function hl(a,b){gl(a,b);(a=a.alternate)&&gl(a,b)}function il(){return null}var jl=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function kl(a){this._internalRoot=a}\nll.prototype.render=kl.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));el(a,b,null,null)};ll.prototype.unmount=kl.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Qk(function(){el(null,a,null,null)});b[tf]=null}};function ll(a){this._internalRoot=a}\nll.prototype.unstable_scheduleHydration=function(a){if(a){var b=Gc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Pc.length&&0!==b&&b<Pc[c].priority;c++);Pc.splice(c,0,a);0===c&&Uc(a)}};function ml(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function nl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function ol(){}\nfunction pl(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=fl(g);f.call(a)}}var g=dl(b,d,a,0,null,!1,!1,\"\",ol);a._reactRootContainer=g;a[tf]=g.current;rf(8===a.nodeType?a.parentNode:a);Qk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=fl(k);h.call(a)}}var k=al(a,0,!1,null,null,!1,!1,\"\",ol);a._reactRootContainer=k;a[tf]=k.current;rf(8===a.nodeType?a.parentNode:a);Qk(function(){el(b,k,c,d)});return k}\nfunction ql(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=fl(g);h.call(a)}}el(b,g,a,e)}else g=pl(c,b,a,e,d);return fl(g)}Dc=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=sc(b.pendingLanes);0!==c&&(Bc(b,c|1),Ck(b,B()),0===(W&6)&&(aj=B()+500,ig()))}break;case 13:var d=Jg();Qk(function(){return Lg(a,1,d)});hl(a,1)}};Ec=function(a){if(13===a.tag){var b=Jg();Lg(a,134217728,b);hl(a,134217728)}};\nFc=function(a){if(13===a.tag){var b=Jg(),c=Kg(a);Lg(a,c,b);hl(a,c)}};Gc=function(){return C};Hc=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nxb=function(a,b,c){switch(b){case \"input\":$a(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Cb(d);if(!e)throw Error(p(90));Va(d);$a(d,e)}}}break;case \"textarea\":hb(a,c);break;case \"select\":b=c.value,null!=b&&eb(a,!!c.multiple,b,!1)}};Fb=Pk;Gb=Qk;\nvar rl={usingClientEntryPoint:!1,Events:[Bb,te,Cb,Db,Eb,Pk]},sl={findFiberByHostInstance:Vc,bundleType:0,version:\"18.1.0\",rendererPackageName:\"react-dom\"};\nvar tl={bundleType:sl.bundleType,version:sl.version,rendererPackageName:sl.rendererPackageName,rendererConfig:sl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ta.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Yb(a);return null===a?null:a.stateNode},findFiberByHostInstance:sl.findFiberByHostInstance||\nil,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.1.0-next-22edb9f77-20220426\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var ul=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!ul.isDisabled&&ul.supportsFiber)try{jc=ul.inject(tl),kc=ul}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=rl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!ml(b))throw Error(p(200));return bl(a,b,null,c)};exports.createRoot=function(a,b){if(!ml(a))throw Error(p(299));var c=!1,d=\"\",e=jl;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=al(a,1,!1,null,null,c,!1,d,e);a[tf]=b.current;rf(8===a.nodeType?a.parentNode:a);return new kl(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Yb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Qk(a)};exports.hydrate=function(a,b,c){if(!nl(b))throw Error(p(200));return ql(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!ml(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=jl;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=dl(b,null,a,1,null!=c?c:null,e,!1,f,g);a[tf]=b.current;rf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new ll(b)};exports.render=function(a,b,c){if(!nl(b))throw Error(p(200));return ql(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!nl(a))throw Error(p(40));return a._reactRootContainer?(Qk(function(){ql(null,null,a,!1,function(){a._reactRootContainer=null;a[tf]=null})}),!0):!1};exports.unstable_batchedUpdates=Pk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!nl(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return ql(a,b,c,!1,d)};exports.version=\"18.1.0-next-22edb9f77-20220426\";\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/* global Map:readonly, Set:readonly, ArrayBuffer:readonly */\n\nvar hasElementType = typeof Element !== 'undefined';\nvar hasMap = typeof Map === 'function';\nvar hasSet = typeof Set === 'function';\nvar hasArrayBuffer = typeof ArrayBuffer === 'function' && !!ArrayBuffer.isView;\n\n// Note: We **don't** need `envHasBigInt64Array` in fde es6/index.js\n\nfunction equal(a, b) {\n  // START: fast-deep-equal es6/index.js 3.1.1\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    // START: Modifications:\n    // 1. Extra `has<Type> &&` helpers in initial condition allow es6 code\n    //    to co-exist with es5.\n    // 2. Replace `for of` with es5 compliant iteration using `for`.\n    //    Basically, take:\n    //\n    //    ```js\n    //    for (i of a.entries())\n    //      if (!b.has(i[0])) return false;\n    //    ```\n    //\n    //    ... and convert to:\n    //\n    //    ```js\n    //    it = a.entries();\n    //    while (!(i = it.next()).done)\n    //      if (!b.has(i.value[0])) return false;\n    //    ```\n    //\n    //    **Note**: `i` access switches to `i.value`.\n    var it;\n    if (hasMap && (a instanceof Map) && (b instanceof Map)) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0])) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!equal(i.value[1], b.get(i.value[0]))) return false;\n      return true;\n    }\n\n    if (hasSet && (a instanceof Set) && (b instanceof Set)) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0])) return false;\n      return true;\n    }\n    // END: Modifications\n\n    if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (a[i] !== b[i]) return false;\n      return true;\n    }\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    // END: fast-deep-equal\n\n    // START: react-fast-compare\n    // custom handling for DOM elements\n    if (hasElementType && a instanceof Element) return false;\n\n    // custom handling for React/Preact\n    for (i = length; i-- !== 0;) {\n      if ((keys[i] === '_owner' || keys[i] === '__v' || keys[i] === '__o') && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner\n        // Preact-specific: avoid traversing Preact elements' __v and __o\n        //    __v = $_original / $_vnode\n        //    __o = $_owner\n        // These properties contain circular references and are not needed when\n        // comparing the actual elements (and not their owners)\n        // .$$typeof and ._store on just reasonable markers of elements\n\n        continue;\n      }\n\n      // all other properties should be traversed as usual\n      if (!equal(a[keys[i]], b[keys[i]])) return false;\n    }\n    // END: react-fast-compare\n\n    // START: fast-deep-equal\n    return true;\n  }\n\n  return a !== a && b !== b;\n}\n// end fast-deep-equal\n\nmodule.exports = function isEqual(a, b) {\n  try {\n    return equal(a, b);\n  } catch (error) {\n    if (((error.message || '').match(/stack|recursion/i))) {\n      // warn on circular references, don't crash\n      // browsers give this different errors name and messages:\n      // chrome/safari: \"RangeError\", \"Maximum call stack size exceeded\"\n      // firefox: \"InternalError\", too much recursion\"\n      // edge: \"Error\", \"Out of stack space\"\n      console.warn('react-fast-compare cannot handle circular refs');\n      return false;\n    }\n    // some other error. we should definitely know about these\n    throw error;\n  }\n};\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};exports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;\nexports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=function(){throw Error(\"act(...) is not supported in production builds of React.\");};\nexports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};exports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};\nexports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};exports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};\nexports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.1.0\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","\"use strict\";\nif (0) {\n  // Trick cjs-module-lexer into adding named exports for all React exports.\n  // (if imported with `import()`, they will appear in `.default` as well.)\n  // This way, cjs-module-lexer will let all of react's (named) exports through unchanged.\n  module.exports = require(\"react\");\n}\n// We don't want bundlers to error when they encounter usage of any of these exports.\n// It's up to the package author to ensure that if they access React internals,\n// they do so in a safe way that won't break if React changes how they use these internals.\n// (e.g. only access them in development, and only in an optional way that won't\n// break if internals are not there or do not have the expected structure)\n// @ts-ignore\nmodule.exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = undefined;\n// @ts-ignore\nmodule.exports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE = undefined;\n// @ts-ignore\nmodule.exports.__SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE = undefined;\n// Here we actually pull in the React library and add everything\n// it exports to our own `module.exports`.\n// If React suddenly were to add one of the above \"polyfilled\" exports,\n// the React version would overwrite our version, so this should be\n// future-proof.\nObject.assign(module.exports, require(\"react\"));\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","import * as React from \"react\";\nimport type { History, Location } from \"history\";\nimport { Action as NavigationType } from \"history\";\n\nimport type { RouteMatch } from \"./router\";\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport type Navigator = Pick<History, \"go\" | \"push\" | \"replace\" | \"createHref\">;\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\ninterface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n","import type { Location, Path, To } from \"history\";\nimport { parsePath } from \"history\";\n\nexport function invariant(cond: any, message: string): asserts cond {\n  if (!cond) throw new Error(message);\n}\n\nexport function warning(cond: any, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\nexport function warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n\ntype ParamParseFailed = { failed: true };\n\ntype ParamParseSegment<Segment extends string> =\n  // Check here if there exists a forward slash in the string.\n  Segment extends `${infer LeftSegment}/${infer RightSegment}`\n    ? // If there is a forward slash, then attempt to parse each side of the\n      // forward slash.\n      ParamParseSegment<LeftSegment> extends infer LeftResult\n      ? ParamParseSegment<RightSegment> extends infer RightResult\n        ? LeftResult extends string\n          ? // If the left side is successfully parsed as a param, then check if\n            // the right side can be successfully parsed as well. If both sides\n            // can be parsed, then the result is a union of the two sides\n            // (read: \"foo\" | \"bar\").\n            RightResult extends string\n            ? LeftResult | RightResult\n            : LeftResult\n          : // If the left side is not successfully parsed as a param, then check\n          // if only the right side can be successfully parse as a param. If it\n          // can, then the result is just right, else it's a failure.\n          RightResult extends string\n          ? RightResult\n          : ParamParseFailed\n        : ParamParseFailed\n      : // If the left side didn't parse into a param, then just check the right\n      // side.\n      ParamParseSegment<RightSegment> extends infer RightResult\n      ? RightResult extends string\n        ? RightResult\n        : ParamParseFailed\n      : ParamParseFailed\n    : // If there's no forward slash, then check if this segment starts with a\n    // colon. If it does, then this is a dynamic segment, so the result is\n    // just the remainder of the string. Otherwise, it's a failure.\n    Segment extends `:${infer Remaining}`\n    ? Remaining\n    : ParamParseFailed;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  ParamParseSegment<Segment> extends string\n    ? ParamParseSegment<Segment>\n    : string;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport interface RouteObject {\n  caseSensitive?: boolean;\n  children?: RouteObject[];\n  element?: React.ReactNode;\n  index?: boolean;\n  path?: string;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/docs/en/v6/api#generatepath\n */\nexport function generatePath(path: string, params: Params = {}): string {\n  return path\n    .replace(/:(\\w+)/g, (_, key) => {\n      invariant(params[key] != null, `Missing \":${key}\" param`);\n      return params[key]!;\n    })\n    .replace(/\\/*\\*$/, (_) =>\n      params[\"*\"] == null ? \"\" : params[\"*\"].replace(/^\\/*/, \"/\")\n    );\n}\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface RouteMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObject;\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/docs/en/v6/api#matchroutes\n */\nexport function matchRoutes(\n  routes: RouteObject[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): RouteMatch[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i], pathname);\n  }\n\n  return matches;\n}\n\ninterface RouteMeta {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObject;\n}\n\ninterface RouteBranch {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta[];\n}\n\nfunction flattenRoutes(\n  routes: RouteObject[],\n  branches: RouteBranch[] = [],\n  parentsMeta: RouteMeta[] = [],\n  parentPath = \"\"\n): RouteBranch[] {\n  routes.forEach((route, index) => {\n    let meta: RouteMeta = {\n      relativePath: route.path || \"\",\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({ path, score: computeScore(path, route.index), routesMeta });\n  });\n\n  return branches;\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<ParamKey extends string = string>(\n  branch: RouteBranch,\n  pathname: string\n): RouteMatch<ParamKey>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: RouteMatch[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    if (!match) return null;\n\n    Object.assign(matchedParams, match.params);\n\n    let route = meta.route;\n\n    matches.push({\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/docs/en/v6/api#matchpath\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, paramNames] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = paramNames.reduce<Mutable<Params>>(\n    (memo, paramName, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      memo[paramName] = safelyDecodeURIComponent(\n        captureGroups[index] || \"\",\n        paramName\n      );\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, string[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let paramNames: string[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(/:(\\w+)/g, (_: string, paramName: string) => {\n        paramNames.push(paramName);\n        return \"([^\\\\/]+)\";\n      });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else {\n    regexpSource += end\n      ? \"\\\\/*$\" // When matching to the end, ignore trailing slashes\n      : // Otherwise, match a word boundary or a proceeding /. The word boundary restricts\n        // parent routes to matching only their own words and nothing more, e.g. parent\n        // route \"/home\" should not match \"/home2\".\n        // Additionally, allow paths starting with `.`, `-`, `~`, and url-encoded entities,\n        // but do not consume the character in the matched path so they can match against\n        // nested paths.\n        \"(?:(?=[.~-]|%[0-9A-F]{2})|\\\\b|\\\\/|$)\";\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURIComponent(value: string, paramName: string) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(\n      false,\n      `The value for the URL param \"${paramName}\" will not be decoded because` +\n        ` the string \"${value}\" is a malformed URL segment. This is probably` +\n        ` due to a bad percent encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/docs/en/v6/api#resolvepath\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string\n): Path {\n  let to = typeof toArg === \"string\" ? parsePath(toArg) : toArg;\n  let toPathname = toArg === \"\" || to.pathname === \"\" ? \"/\" : to.pathname;\n\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  let from: string;\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original to value had one.\n  if (\n    toPathname &&\n    toPathname !== \"/\" &&\n    toPathname.endsWith(\"/\") &&\n    !path.pathname.endsWith(\"/\")\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  let nextChar = pathname.charAt(basename.length);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(basename.length) || \"/\";\n}\n\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\nconst normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\nconst normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n","import * as React from \"react\";\nimport type { Location, Path, To } from \"history\";\nimport { Action as NavigationType, parsePath } from \"history\";\n\nimport { LocationContext, NavigationContext, RouteContext } from \"./context\";\nimport type {\n  ParamParseKey,\n  Params,\n  PathMatch,\n  PathPattern,\n  RouteMatch,\n  RouteObject,\n} from \"./router\";\nimport {\n  getToPathname,\n  invariant,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  resolveTo,\n  warning,\n  warningOnce,\n} from \"./router\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usehref\n */\nexport function useHref(to: To): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to);\n\n  let joinedPathname = pathname;\n  if (basename !== \"/\") {\n    let toPathname = getToPathname(to);\n    let endsWithSlash = toPathname != null && toPathname.endsWith(\"/\");\n    joinedPathname =\n      pathname === \"/\"\n        ? basename + (endsWithSlash ? \"/\" : \"\")\n        : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useinroutercontext\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/docs/en/v6/api#uselocation\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usenavigationtype\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns true if the URL for the given \"to\" value matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usematch\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usenavigate\n */\nexport function useNavigate(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    matches.map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  React.useEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(\n        activeRef.current,\n        `You should call navigate() in a React.useEffect(), not when ` +\n          `your component is first rendered.`\n      );\n\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname\n      );\n\n      if (basename !== \"/\") {\n        path.pathname = joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state\n      );\n    },\n    [basename, navigator, routePathnamesJson, locationPathname]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/docs/en/v6/api#useoutletcontext\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useoutlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useparams\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useresolvedpath\n */\nexport function useResolvedPath(to: To): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    matches.map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname),\n    [to, routePathnamesJson, locationPathname]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useroutes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element. ` +\n        `This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  return _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([parentPathnameBase, match.pathname]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([parentPathnameBase, match.pathnameBase]),\n        })\n      ),\n    parentMatches\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = []\n): React.ReactElement | null {\n  if (matches == null) return null;\n\n  return matches.reduceRight((outlet, match, index) => {\n    return (\n      <RouteContext.Provider\n        children={\n          match.route.element !== undefined ? match.route.element : outlet\n        }\n        value={{\n          outlet,\n          matches: parentMatches.concat(matches.slice(0, index + 1)),\n        }}\n      />\n    );\n  }, null as React.ReactElement | null);\n}\n","import * as React from \"react\";\nimport type { InitialEntry, Location, MemoryHistory, To } from \"history\";\nimport {\n  Action as NavigationType,\n  createMemoryHistory,\n  parsePath,\n} from \"history\";\n\nimport { LocationContext, NavigationContext, Navigator } from \"./context\";\nimport {\n  useInRouterContext,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  _renderMatches,\n} from \"./hooks\";\nimport type { RouteMatch, RouteObject } from \"./router\";\nimport { invariant, normalizePathname, stripBasename, warning } from \"./router\";\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/docs/en/v6/api#memoryrouter\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({ initialEntries, initialIndex });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/docs/en/v6/api#navigate\n */\nexport function Navigate({ to, replace, state }: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let navigate = useNavigate();\n  React.useEffect(() => {\n    navigate(to, { replace, state });\n  });\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/docs/en/v6/api#outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface RouteProps {\n  caseSensitive?: boolean;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  index?: boolean;\n  path?: string;\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: boolean;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  index?: false;\n  path: string;\n}\n\nexport interface LayoutRouteProps {\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n}\n\nexport interface IndexRouteProps {\n  element?: React.ReactNode | null;\n  index: true;\n}\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/docs/en/v6/api#route\n */\nexport function Route(\n  _props: PathRouteProps | LayoutRouteProps | IndexRouteProps\n): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/docs/en/v6/api#router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  let basename = normalizePathname(basenameProp);\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let location = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      pathname: trailingPathname,\n      search,\n      hash,\n      state,\n      key,\n    };\n  }, [basename, pathname, search, hash, state, key]);\n\n  warning(\n    location != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (location == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider\n        children={children}\n        value={{ location, navigationType }}\n      />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/docs/en/v6/api#createroutesfromchildren\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    let route: RouteObject = {\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children);\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type { BrowserHistory, HashHistory, History } from \"history\";\nimport { createBrowserHistory, createHashHistory } from \"history\";\nimport {\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createRoutesFromChildren,\n  generatePath,\n  matchRoutes,\n  matchPath,\n  createPath,\n  parsePath,\n  resolvePath,\n  renderMatches,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigate,\n  useNavigationType,\n  useOutlet,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useOutletContext,\n} from \"react-router\";\nimport type { To } from \"react-router\";\n\nfunction warning(cond: boolean, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// RE-EXPORTS\n////////////////////////////////////////////////////////////////////////////////\n\n// Note: Keep in sync with react-router exports!\nexport {\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createRoutesFromChildren,\n  generatePath,\n  matchRoutes,\n  matchPath,\n  createPath,\n  parsePath,\n  renderMatches,\n  resolvePath,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigate,\n  useNavigationType,\n  useOutlet,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useOutletContext,\n};\n\nexport { NavigationType } from \"react-router\";\nexport type {\n  Hash,\n  Location,\n  Path,\n  To,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigator,\n  OutletProps,\n  Params,\n  PathMatch,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  PathRouteProps,\n  LayoutRouteProps,\n  IndexRouteProps,\n  RouterProps,\n  Pathname,\n  Search,\n  RoutesProps,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n} from \"react-router\";\n\n////////////////////////////////////////////////////////////////////////////////\n// COMPONENTS\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({ basename, children, window }: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({ basename, children, history }: HistoryRouterProps) {\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nfunction isModifiedEvent(event: React.MouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  to: To;\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    { onClick, reloadDocument, replace = false, state, target, to, ...rest },\n    ref\n  ) {\n    let href = useHref(to);\n    let internalOnClick = useLinkClickHandler(to, { replace, state, target });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented && !reloadDocument) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={href}\n        onClick={handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?: string | ((props: { isActive: boolean }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: { isActive: boolean }) => React.CSSProperties);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let location = useLocation();\n    let path = useResolvedPath(to);\n\n    let locationPathname = location.pathname;\n    let toPathname = path.pathname;\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [classNameProp, isActive ? \"active\" : null]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp({ isActive }) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\" ? children({ isActive }) : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// HOOKS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to);\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (\n        event.button === 0 && // Ignore everything but left clicks\n        (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n        !isModifiedEvent(event) // Ignore clicks with modifier keys\n      ) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here.\n        let replace =\n          !!replaceProp || createPath(location) === createPath(path);\n\n        navigate(to, { replace, state });\n      }\n    },\n    [location, navigate, path, replaceProp, state, target, to]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(defaultInit?: URLSearchParamsInit) {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n\n  let location = useLocation();\n  let searchParams = React.useMemo(() => {\n    let searchParams = createSearchParams(location.search);\n\n    for (let key of defaultSearchParamsRef.current.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParamsRef.current.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n\n    return searchParams;\n  }, [location.search]);\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback(\n    (\n      nextInit: URLSearchParamsInit,\n      navigateOptions?: { replace?: boolean; state?: any }\n    ) => {\n      navigate(\"?\" + createSearchParams(nextInit), navigateOptions);\n    },\n    [navigate]\n  );\n\n  return [searchParams, setSearchParams] as const;\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Axios from \"axios\";\n\nfunction Mainpage() {\n  const [location, setLocation] = useState([]);\n  const [episode, setEpisode] = useState([]);\n  const [character, setCharacter] = useState([]);\n  const bgimgloc = \"url('https://i.ytimg.com/vi/cFq_XD6ltB8/maxresdefault.jpg')\";\n  const bgimgchar = \"url('https://camo.githubusercontent.com/3183122085f4fcef6c3e537e0f6e03d6175913d9e8b0304f93147625f87c0ec3/68747470733a2f2f63646e2d696d616765732d312e6d656469756d2e636f6d2f6d61782f313630302f312a6a353558477958345a47696d64306d6a4765595851512e706e67')\";\n  const bgimgep = \"url('https://cdn.mos.cms.futurecdn.net/h4F9sAFM7FCP4pdwFz9ngW.jpg')\";\n\n  useEffect(() => {\n    Axios.get(\"https://rickandmortyapi.com/api/episode\").then((result) =>\n      setEpisode(result.data.info)\n    );\n    Axios.get(\"https://rickandmortyapi.com/api/location\").then((result) =>\n      setLocation(result.data.info)\n    );\n    Axios.get(\"https://rickandmortyapi.com/api/character\").then((result) =>\n      setCharacter(result.data.info)\n    );\n  }, []);\n\n  return (\n    <div className=\"container wrapper\">\n      <div className=\"row\">\n        <div className=\"col text-center mb-5\">\n          <h1 className=\"display-4 mb-3\">The Rick and Morty</h1>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-sm-12 col-md-6 col-lg-4 mb-4\">\n          <Link to={`/location`}>\n            <div style={{ backgroundImage: bgimgloc }} className=\"card card-has-bg border-danger\">\n              <div className=\"card-img-overlay\">\n                <div className=\"card-body text-center\">\n                  <h3 className=\"text-light\">LOCATIONS</h3>\n                </div>\n                <div className=\"card-body\">\n                  <h5 className=\"text-light\">Count: {location.count}</h5>\n                  <h5 className=\"text-light\">Page: {location.pages}</h5>\n                </div>\n              </div>\n            </div>\n          </Link>\n        </div>\n        <div className=\"col-sm-12 col-md-6 col-lg-4 mb-4\">\n          <Link to={`/character`}>\n            <div style={{ backgroundImage: bgimgchar }} className=\"card card-has-bg border-danger\">\n              <div className=\"card-img-overlay\">\n                <div className=\"card-body text-center\">\n                  <h3 className=\"text-light\">CHARACTERS</h3>\n                </div>\n                <div className=\"card-body\">\n                  <h5 className=\"text-light\">Count: {character.count}</h5>\n                  <h5 className=\"text-light\">Page: {character.pages}</h5>\n                </div>\n              </div>\n            </div>\n          </Link>\n        </div>\n        <div className=\"col-sm-12 col-md-6 col-lg-4 mb-4\">\n          <Link to={`/episode`}>\n            <div style={{ backgroundImage: bgimgep }} className=\"card card-has-bg border-danger\">\n              <div className=\"card-img-overlay\">\n                <div className=\"card-body text-center\">\n                  <h3 className=\"text-light\">EPISODES</h3>\n                </div>\n                <div className=\"card-body\">\n                  <h5 className=\"text-light\">Count: {episode.count}</h5>\n                  <h5 className=\"text-light\">Page: {episode.pages}</h5>\n                </div>\n              </div>\n            </div>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Mainpage;\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import * as React from 'react';\nexport var ManagerReferenceNodeContext = React.createContext();\nexport var ManagerReferenceNodeSetterContext = React.createContext();\nexport function Manager(_ref) {\n  var children = _ref.children;\n\n  var _React$useState = React.useState(null),\n      referenceNode = _React$useState[0],\n      setReferenceNode = _React$useState[1];\n\n  var hasUnmounted = React.useRef(false);\n  React.useEffect(function () {\n    return function () {\n      hasUnmounted.current = true;\n    };\n  }, []);\n  var handleSetReferenceNode = React.useCallback(function (node) {\n    if (!hasUnmounted.current) {\n      setReferenceNode(node);\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(ManagerReferenceNodeContext.Provider, {\n    value: referenceNode\n  }, /*#__PURE__*/React.createElement(ManagerReferenceNodeSetterContext.Provider, {\n    value: handleSetReferenceNode\n  }, children));\n}","import * as React from 'react';\n\n/**\n * Takes an argument and if it's an array, returns the first item in the array,\n * otherwise returns the argument. Used for Preact compatibility.\n */\nexport var unwrapArray = function unwrapArray(arg) {\n  return Array.isArray(arg) ? arg[0] : arg;\n};\n/**\n * Takes a maybe-undefined function and arbitrary args and invokes the function\n * only if it is defined.\n */\n\nexport var safeInvoke = function safeInvoke(fn) {\n  if (typeof fn === 'function') {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return fn.apply(void 0, args);\n  }\n};\n/**\n * Sets a ref using either a ref callback or a ref object\n */\n\nexport var setRef = function setRef(ref, node) {\n  // if its a function call it\n  if (typeof ref === 'function') {\n    return safeInvoke(ref, node);\n  } // otherwise we should treat it as a ref object\n  else if (ref != null) {\n      ref.current = node;\n    }\n};\n/**\n * Simple ponyfill for Object.fromEntries\n */\n\nexport var fromEntries = function fromEntries(entries) {\n  return entries.reduce(function (acc, _ref) {\n    var key = _ref[0],\n        value = _ref[1];\n    acc[key] = value;\n    return acc;\n  }, {});\n};\n/**\n * Small wrapper around `useLayoutEffect` to get rid of the warning on SSR envs\n */\n\nexport var useIsomorphicLayoutEffect = typeof window !== 'undefined' && window.document && window.document.createElement ? React.useLayoutEffect : React.useEffect;","export default function getWindow(node) {\n  if (node == null) {\n    return window;\n  }\n\n  if (node.toString() !== '[object Window]') {\n    var ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView || window : window;\n  }\n\n  return node;\n}","import getWindow from \"./getWindow.js\";\n\nfunction isElement(node) {\n  var OwnElement = getWindow(node).Element;\n  return node instanceof OwnElement || node instanceof Element;\n}\n\nfunction isHTMLElement(node) {\n  var OwnElement = getWindow(node).HTMLElement;\n  return node instanceof OwnElement || node instanceof HTMLElement;\n}\n\nfunction isShadowRoot(node) {\n  // IE 11 has no ShadowRoot\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n\n  var OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\n\nexport { isElement, isHTMLElement, isShadowRoot };","export var max = Math.max;\nexport var min = Math.min;\nexport var round = Math.round;","import { isHTMLElement } from \"./instanceOf.js\";\nimport { round } from \"../utils/math.js\";\nexport default function getBoundingClientRect(element, includeScale) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  var rect = element.getBoundingClientRect();\n  var scaleX = 1;\n  var scaleY = 1;\n\n  if (isHTMLElement(element) && includeScale) {\n    var offsetHeight = element.offsetHeight;\n    var offsetWidth = element.offsetWidth; // Do not attempt to divide by 0, otherwise we get `Infinity` as scale\n    // Fallback to 1 in case both values are `0`\n\n    if (offsetWidth > 0) {\n      scaleX = round(rect.width) / offsetWidth || 1;\n    }\n\n    if (offsetHeight > 0) {\n      scaleY = round(rect.height) / offsetHeight || 1;\n    }\n  }\n\n  return {\n    width: rect.width / scaleX,\n    height: rect.height / scaleY,\n    top: rect.top / scaleY,\n    right: rect.right / scaleX,\n    bottom: rect.bottom / scaleY,\n    left: rect.left / scaleX,\n    x: rect.left / scaleX,\n    y: rect.top / scaleY\n  };\n}","import getWindow from \"./getWindow.js\";\nexport default function getWindowScroll(node) {\n  var win = getWindow(node);\n  var scrollLeft = win.pageXOffset;\n  var scrollTop = win.pageYOffset;\n  return {\n    scrollLeft: scrollLeft,\n    scrollTop: scrollTop\n  };\n}","export default function getNodeName(element) {\n  return element ? (element.nodeName || '').toLowerCase() : null;\n}","import { isElement } from \"./instanceOf.js\";\nexport default function getDocumentElement(element) {\n  // $FlowFixMe[incompatible-return]: assume body is always available\n  return ((isElement(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]\n  element.document) || window.document).documentElement;\n}","import getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getWindowScroll from \"./getWindowScroll.js\";\nexport default function getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  // Popper 1 is broken in this case and never had a bug report so let's assume\n  // it's not an issue. I don't think anyone ever specifies width on <html>\n  // anyway.\n  // Browsers where the left scrollbar doesn't cause an issue report `0` for\n  // this (e.g. Edge 2019, IE11, Safari)\n  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;\n}","import getWindow from \"./getWindow.js\";\nexport default function getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}","import getComputedStyle from \"./getComputedStyle.js\";\nexport default function isScrollParent(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  var _getComputedStyle = getComputedStyle(element),\n      overflow = _getComputedStyle.overflow,\n      overflowX = _getComputedStyle.overflowX,\n      overflowY = _getComputedStyle.overflowY;\n\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}","import getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getNodeScroll from \"./getNodeScroll.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport isScrollParent from \"./isScrollParent.js\";\nimport { round } from \"../utils/math.js\";\n\nfunction isElementScaled(element) {\n  var rect = element.getBoundingClientRect();\n  var scaleX = round(rect.width) / element.offsetWidth || 1;\n  var scaleY = round(rect.height) / element.offsetHeight || 1;\n  return scaleX !== 1 || scaleY !== 1;\n} // Returns the composite rect of an element relative to its offsetParent.\n// Composite means it takes into account transforms as well as layout.\n\n\nexport default function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n\n  var isOffsetParentAnElement = isHTMLElement(offsetParent);\n  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);\n  var documentElement = getDocumentElement(offsetParent);\n  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled);\n  var scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  var offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078\n    isScrollParent(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      offsets = getBoundingClientRect(offsetParent, true);\n      offsets.x += offsetParent.clientLeft;\n      offsets.y += offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}","import getWindowScroll from \"./getWindowScroll.js\";\nimport getWindow from \"./getWindow.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nimport getHTMLElementScroll from \"./getHTMLElementScroll.js\";\nexport default function getNodeScroll(node) {\n  if (node === getWindow(node) || !isHTMLElement(node)) {\n    return getWindowScroll(node);\n  } else {\n    return getHTMLElementScroll(node);\n  }\n}","export default function getHTMLElementScroll(element) {\n  return {\n    scrollLeft: element.scrollLeft,\n    scrollTop: element.scrollTop\n  };\n}","import getBoundingClientRect from \"./getBoundingClientRect.js\"; // Returns the layout rect of an element relative to its offsetParent. Layout\n// means it doesn't take into account transforms.\n\nexport default function getLayoutRect(element) {\n  var clientRect = getBoundingClientRect(element); // Use the clientRect sizes if it's not been transformed.\n  // Fixes https://github.com/popperjs/popper-core/issues/1223\n\n  var width = element.offsetWidth;\n  var height = element.offsetHeight;\n\n  if (Math.abs(clientRect.width - width) <= 1) {\n    width = clientRect.width;\n  }\n\n  if (Math.abs(clientRect.height - height) <= 1) {\n    height = clientRect.height;\n  }\n\n  return {\n    x: element.offsetLeft,\n    y: element.offsetTop,\n    width: width,\n    height: height\n  };\n}","import getNodeName from \"./getNodeName.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport { isShadowRoot } from \"./instanceOf.js\";\nexport default function getParentNode(element) {\n  if (getNodeName(element) === 'html') {\n    return element;\n  }\n\n  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle\n    // $FlowFixMe[incompatible-return]\n    // $FlowFixMe[prop-missing]\n    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node\n    element.parentNode || ( // DOM Element detected\n    isShadowRoot(element) ? element.host : null) || // ShadowRoot detected\n    // $FlowFixMe[incompatible-call]: HTMLElement is a Node\n    getDocumentElement(element) // fallback\n\n  );\n}","import getParentNode from \"./getParentNode.js\";\nimport isScrollParent from \"./isScrollParent.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nexport default function getScrollParent(node) {\n  if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {\n    // $FlowFixMe[incompatible-return]: assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(node) && isScrollParent(node)) {\n    return node;\n  }\n\n  return getScrollParent(getParentNode(node));\n}","import getScrollParent from \"./getScrollParent.js\";\nimport getParentNode from \"./getParentNode.js\";\nimport getWindow from \"./getWindow.js\";\nimport isScrollParent from \"./isScrollParent.js\";\n/*\ngiven a DOM element, return the list of all scroll parents, up the list of ancesors\nuntil we get to the top window object. This list is what we attach scroll listeners\nto, because if any of these parent elements scroll, we'll need to re-calculate the\nreference element's position.\n*/\n\nexport default function listScrollParents(element, list) {\n  var _element$ownerDocumen;\n\n  if (list === void 0) {\n    list = [];\n  }\n\n  var scrollParent = getScrollParent(element);\n  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);\n  var win = getWindow(scrollParent);\n  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;\n  var updatedList = list.concat(target);\n  return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here\n  updatedList.concat(listScrollParents(getParentNode(target)));\n}","import getNodeName from \"./getNodeName.js\";\nexport default function isTableElement(element) {\n  return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;\n}","import getWindow from \"./getWindow.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport { isHTMLElement, isShadowRoot } from \"./instanceOf.js\";\nimport isTableElement from \"./isTableElement.js\";\nimport getParentNode from \"./getParentNode.js\";\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837\n  getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n} // `.offsetParent` reports `null` for fixed elements, while absolute elements\n// return the containing block\n\n\nfunction getContainingBlock(element) {\n  var isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') !== -1;\n  var isIE = navigator.userAgent.indexOf('Trident') !== -1;\n\n  if (isIE && isHTMLElement(element)) {\n    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport\n    var elementCss = getComputedStyle(element);\n\n    if (elementCss.position === 'fixed') {\n      return null;\n    }\n  }\n\n  var currentNode = getParentNode(element);\n\n  if (isShadowRoot(currentNode)) {\n    currentNode = currentNode.host;\n  }\n\n  while (isHTMLElement(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {\n    var css = getComputedStyle(currentNode); // This is non-exhaustive but covers the most common CSS properties that\n    // create a containing block.\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {\n      return currentNode;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nexport default function getOffsetParent(element) {\n  var window = getWindow(element);\n  var offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static')) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}","export var top = 'top';\nexport var bottom = 'bottom';\nexport var right = 'right';\nexport var left = 'left';\nexport var auto = 'auto';\nexport var basePlacements = [top, bottom, right, left];\nexport var start = 'start';\nexport var end = 'end';\nexport var clippingParents = 'clippingParents';\nexport var viewport = 'viewport';\nexport var popper = 'popper';\nexport var reference = 'reference';\nexport var variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {\n  return acc.concat([placement + \"-\" + start, placement + \"-\" + end]);\n}, []);\nexport var placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {\n  return acc.concat([placement, placement + \"-\" + start, placement + \"-\" + end]);\n}, []); // modifiers that need to read the DOM\n\nexport var beforeRead = 'beforeRead';\nexport var read = 'read';\nexport var afterRead = 'afterRead'; // pure-logic modifiers\n\nexport var beforeMain = 'beforeMain';\nexport var main = 'main';\nexport var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)\n\nexport var beforeWrite = 'beforeWrite';\nexport var write = 'write';\nexport var afterWrite = 'afterWrite';\nexport var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];","import { modifierPhases } from \"../enums.js\"; // source: https://stackoverflow.com/questions/49875255\n\nfunction order(modifiers) {\n  var map = new Map();\n  var visited = new Set();\n  var result = [];\n  modifiers.forEach(function (modifier) {\n    map.set(modifier.name, modifier);\n  }); // On visiting object, check for its dependencies and visit them recursively\n\n  function sort(modifier) {\n    visited.add(modifier.name);\n    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);\n    requires.forEach(function (dep) {\n      if (!visited.has(dep)) {\n        var depModifier = map.get(dep);\n\n        if (depModifier) {\n          sort(depModifier);\n        }\n      }\n    });\n    result.push(modifier);\n  }\n\n  modifiers.forEach(function (modifier) {\n    if (!visited.has(modifier.name)) {\n      // check for visited object\n      sort(modifier);\n    }\n  });\n  return result;\n}\n\nexport default function orderModifiers(modifiers) {\n  // order based on dependencies\n  var orderedModifiers = order(modifiers); // order based on phase\n\n  return modifierPhases.reduce(function (acc, phase) {\n    return acc.concat(orderedModifiers.filter(function (modifier) {\n      return modifier.phase === phase;\n    }));\n  }, []);\n}","export default function debounce(fn) {\n  var pending;\n  return function () {\n    if (!pending) {\n      pending = new Promise(function (resolve) {\n        Promise.resolve().then(function () {\n          pending = undefined;\n          resolve(fn());\n        });\n      });\n    }\n\n    return pending;\n  };\n}","import getCompositeRect from \"./dom-utils/getCompositeRect.js\";\nimport getLayoutRect from \"./dom-utils/getLayoutRect.js\";\nimport listScrollParents from \"./dom-utils/listScrollParents.js\";\nimport getOffsetParent from \"./dom-utils/getOffsetParent.js\";\nimport getComputedStyle from \"./dom-utils/getComputedStyle.js\";\nimport orderModifiers from \"./utils/orderModifiers.js\";\nimport debounce from \"./utils/debounce.js\";\nimport validateModifiers from \"./utils/validateModifiers.js\";\nimport uniqueBy from \"./utils/uniqueBy.js\";\nimport getBasePlacement from \"./utils/getBasePlacement.js\";\nimport mergeByName from \"./utils/mergeByName.js\";\nimport detectOverflow from \"./utils/detectOverflow.js\";\nimport { isElement } from \"./dom-utils/instanceOf.js\";\nimport { auto } from \"./enums.js\";\nvar INVALID_ELEMENT_ERROR = 'Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.';\nvar INFINITE_LOOP_ERROR = 'Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.';\nvar DEFAULT_OPTIONS = {\n  placement: 'bottom',\n  modifiers: [],\n  strategy: 'absolute'\n};\n\nfunction areValidElements() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return !args.some(function (element) {\n    return !(element && typeof element.getBoundingClientRect === 'function');\n  });\n}\n\nexport function popperGenerator(generatorOptions) {\n  if (generatorOptions === void 0) {\n    generatorOptions = {};\n  }\n\n  var _generatorOptions = generatorOptions,\n      _generatorOptions$def = _generatorOptions.defaultModifiers,\n      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,\n      _generatorOptions$def2 = _generatorOptions.defaultOptions,\n      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;\n  return function createPopper(reference, popper, options) {\n    if (options === void 0) {\n      options = defaultOptions;\n    }\n\n    var state = {\n      placement: 'bottom',\n      orderedModifiers: [],\n      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),\n      modifiersData: {},\n      elements: {\n        reference: reference,\n        popper: popper\n      },\n      attributes: {},\n      styles: {}\n    };\n    var effectCleanupFns = [];\n    var isDestroyed = false;\n    var instance = {\n      state: state,\n      setOptions: function setOptions(setOptionsAction) {\n        var options = typeof setOptionsAction === 'function' ? setOptionsAction(state.options) : setOptionsAction;\n        cleanupModifierEffects();\n        state.options = Object.assign({}, defaultOptions, state.options, options);\n        state.scrollParents = {\n          reference: isElement(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],\n          popper: listScrollParents(popper)\n        }; // Orders the modifiers based on their dependencies and `phase`\n        // properties\n\n        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers\n\n        state.orderedModifiers = orderedModifiers.filter(function (m) {\n          return m.enabled;\n        }); // Validate the provided modifiers so that the consumer will get warned\n        // if one of the modifiers is invalid for any reason\n\n        if (process.env.NODE_ENV !== \"production\") {\n          var modifiers = uniqueBy([].concat(orderedModifiers, state.options.modifiers), function (_ref) {\n            var name = _ref.name;\n            return name;\n          });\n          validateModifiers(modifiers);\n\n          if (getBasePlacement(state.options.placement) === auto) {\n            var flipModifier = state.orderedModifiers.find(function (_ref2) {\n              var name = _ref2.name;\n              return name === 'flip';\n            });\n\n            if (!flipModifier) {\n              console.error(['Popper: \"auto\" placements require the \"flip\" modifier be', 'present and enabled to work.'].join(' '));\n            }\n          }\n\n          var _getComputedStyle = getComputedStyle(popper),\n              marginTop = _getComputedStyle.marginTop,\n              marginRight = _getComputedStyle.marginRight,\n              marginBottom = _getComputedStyle.marginBottom,\n              marginLeft = _getComputedStyle.marginLeft; // We no longer take into account `margins` on the popper, and it can\n          // cause bugs with positioning, so we'll warn the consumer\n\n\n          if ([marginTop, marginRight, marginBottom, marginLeft].some(function (margin) {\n            return parseFloat(margin);\n          })) {\n            console.warn(['Popper: CSS \"margin\" styles cannot be used to apply padding', 'between the popper and its reference element or boundary.', 'To replicate margin, use the `offset` modifier, as well as', 'the `padding` option in the `preventOverflow` and `flip`', 'modifiers.'].join(' '));\n          }\n        }\n\n        runModifierEffects();\n        return instance.update();\n      },\n      // Sync update – it will always be executed, even if not necessary. This\n      // is useful for low frequency updates where sync behavior simplifies the\n      // logic.\n      // For high frequency updates (e.g. `resize` and `scroll` events), always\n      // prefer the async Popper#update method\n      forceUpdate: function forceUpdate() {\n        if (isDestroyed) {\n          return;\n        }\n\n        var _state$elements = state.elements,\n            reference = _state$elements.reference,\n            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements\n        // anymore\n\n        if (!areValidElements(reference, popper)) {\n          if (process.env.NODE_ENV !== \"production\") {\n            console.error(INVALID_ELEMENT_ERROR);\n          }\n\n          return;\n        } // Store the reference and popper rects to be read by modifiers\n\n\n        state.rects = {\n          reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === 'fixed'),\n          popper: getLayoutRect(popper)\n        }; // Modifiers have the ability to reset the current update cycle. The\n        // most common use case for this is the `flip` modifier changing the\n        // placement, which then needs to re-run all the modifiers, because the\n        // logic was previously ran for the previous placement and is therefore\n        // stale/incorrect\n\n        state.reset = false;\n        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier\n        // is filled with the initial data specified by the modifier. This means\n        // it doesn't persist and is fresh on each update.\n        // To ensure persistent data, use `${name}#persistent`\n\n        state.orderedModifiers.forEach(function (modifier) {\n          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);\n        });\n        var __debug_loops__ = 0;\n\n        for (var index = 0; index < state.orderedModifiers.length; index++) {\n          if (process.env.NODE_ENV !== \"production\") {\n            __debug_loops__ += 1;\n\n            if (__debug_loops__ > 100) {\n              console.error(INFINITE_LOOP_ERROR);\n              break;\n            }\n          }\n\n          if (state.reset === true) {\n            state.reset = false;\n            index = -1;\n            continue;\n          }\n\n          var _state$orderedModifie = state.orderedModifiers[index],\n              fn = _state$orderedModifie.fn,\n              _state$orderedModifie2 = _state$orderedModifie.options,\n              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,\n              name = _state$orderedModifie.name;\n\n          if (typeof fn === 'function') {\n            state = fn({\n              state: state,\n              options: _options,\n              name: name,\n              instance: instance\n            }) || state;\n          }\n        }\n      },\n      // Async and optimistically optimized update – it will not be executed if\n      // not necessary (debounced to run at most once-per-tick)\n      update: debounce(function () {\n        return new Promise(function (resolve) {\n          instance.forceUpdate();\n          resolve(state);\n        });\n      }),\n      destroy: function destroy() {\n        cleanupModifierEffects();\n        isDestroyed = true;\n      }\n    };\n\n    if (!areValidElements(reference, popper)) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.error(INVALID_ELEMENT_ERROR);\n      }\n\n      return instance;\n    }\n\n    instance.setOptions(options).then(function (state) {\n      if (!isDestroyed && options.onFirstUpdate) {\n        options.onFirstUpdate(state);\n      }\n    }); // Modifiers have the ability to execute arbitrary code before the first\n    // update cycle runs. They will be executed in the same order as the update\n    // cycle. This is useful when a modifier adds some persistent data that\n    // other modifiers need to use, but the modifier is run after the dependent\n    // one.\n\n    function runModifierEffects() {\n      state.orderedModifiers.forEach(function (_ref3) {\n        var name = _ref3.name,\n            _ref3$options = _ref3.options,\n            options = _ref3$options === void 0 ? {} : _ref3$options,\n            effect = _ref3.effect;\n\n        if (typeof effect === 'function') {\n          var cleanupFn = effect({\n            state: state,\n            name: name,\n            instance: instance,\n            options: options\n          });\n\n          var noopFn = function noopFn() {};\n\n          effectCleanupFns.push(cleanupFn || noopFn);\n        }\n      });\n    }\n\n    function cleanupModifierEffects() {\n      effectCleanupFns.forEach(function (fn) {\n        return fn();\n      });\n      effectCleanupFns = [];\n    }\n\n    return instance;\n  };\n}\nexport var createPopper = /*#__PURE__*/popperGenerator(); // eslint-disable-next-line import/no-unused-modules\n\nexport { detectOverflow };","export default function mergeByName(modifiers) {\n  var merged = modifiers.reduce(function (merged, current) {\n    var existing = merged[current.name];\n    merged[current.name] = existing ? Object.assign({}, existing, current, {\n      options: Object.assign({}, existing.options, current.options),\n      data: Object.assign({}, existing.data, current.data)\n    }) : current;\n    return merged;\n  }, {}); // IE11 does not support Object.values\n\n  return Object.keys(merged).map(function (key) {\n    return merged[key];\n  });\n}","import getWindow from \"../dom-utils/getWindow.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar passive = {\n  passive: true\n};\n\nfunction effect(_ref) {\n  var state = _ref.state,\n      instance = _ref.instance,\n      options = _ref.options;\n  var _options$scroll = options.scroll,\n      scroll = _options$scroll === void 0 ? true : _options$scroll,\n      _options$resize = options.resize,\n      resize = _options$resize === void 0 ? true : _options$resize;\n  var window = getWindow(state.elements.popper);\n  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);\n\n  if (scroll) {\n    scrollParents.forEach(function (scrollParent) {\n      scrollParent.addEventListener('scroll', instance.update, passive);\n    });\n  }\n\n  if (resize) {\n    window.addEventListener('resize', instance.update, passive);\n  }\n\n  return function () {\n    if (scroll) {\n      scrollParents.forEach(function (scrollParent) {\n        scrollParent.removeEventListener('scroll', instance.update, passive);\n      });\n    }\n\n    if (resize) {\n      window.removeEventListener('resize', instance.update, passive);\n    }\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'eventListeners',\n  enabled: true,\n  phase: 'write',\n  fn: function fn() {},\n  effect: effect,\n  data: {}\n};","import { auto } from \"../enums.js\";\nexport default function getBasePlacement(placement) {\n  return placement.split('-')[0];\n}","export default function getVariation(placement) {\n  return placement.split('-')[1];\n}","export default function getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';\n}","import getBasePlacement from \"./getBasePlacement.js\";\nimport getVariation from \"./getVariation.js\";\nimport getMainAxisFromPlacement from \"./getMainAxisFromPlacement.js\";\nimport { top, right, bottom, left, start, end } from \"../enums.js\";\nexport default function computeOffsets(_ref) {\n  var reference = _ref.reference,\n      element = _ref.element,\n      placement = _ref.placement;\n  var basePlacement = placement ? getBasePlacement(placement) : null;\n  var variation = placement ? getVariation(placement) : null;\n  var commonX = reference.x + reference.width / 2 - element.width / 2;\n  var commonY = reference.y + reference.height / 2 - element.height / 2;\n  var offsets;\n\n  switch (basePlacement) {\n    case top:\n      offsets = {\n        x: commonX,\n        y: reference.y - element.height\n      };\n      break;\n\n    case bottom:\n      offsets = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n\n    case right:\n      offsets = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n\n    case left:\n      offsets = {\n        x: reference.x - element.width,\n        y: commonY\n      };\n      break;\n\n    default:\n      offsets = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;\n\n  if (mainAxis != null) {\n    var len = mainAxis === 'y' ? 'height' : 'width';\n\n    switch (variation) {\n      case start:\n        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);\n        break;\n\n      case end:\n        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);\n        break;\n\n      default:\n    }\n  }\n\n  return offsets;\n}","import computeOffsets from \"../utils/computeOffsets.js\";\n\nfunction popperOffsets(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  // Offsets are the actual position the popper needs to have to be\n  // properly positioned near its reference element\n  // This is the most basic placement, and will be adjusted by\n  // the modifiers in the next step\n  state.modifiersData[name] = computeOffsets({\n    reference: state.rects.reference,\n    element: state.rects.popper,\n    strategy: 'absolute',\n    placement: state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'popperOffsets',\n  enabled: true,\n  phase: 'read',\n  fn: popperOffsets,\n  data: {}\n};","import { top, left, right, bottom, end } from \"../enums.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport getWindow from \"../dom-utils/getWindow.js\";\nimport getDocumentElement from \"../dom-utils/getDocumentElement.js\";\nimport getComputedStyle from \"../dom-utils/getComputedStyle.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getVariation from \"../utils/getVariation.js\";\nimport { round } from \"../utils/math.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar unsetSides = {\n  top: 'auto',\n  right: 'auto',\n  bottom: 'auto',\n  left: 'auto'\n}; // Round the offsets to the nearest suitable subpixel based on the DPR.\n// Zooming can change the DPR, but it seems to report a value that will\n// cleanly divide the values into the appropriate subpixels.\n\nfunction roundOffsetsByDPR(_ref) {\n  var x = _ref.x,\n      y = _ref.y;\n  var win = window;\n  var dpr = win.devicePixelRatio || 1;\n  return {\n    x: round(x * dpr) / dpr || 0,\n    y: round(y * dpr) / dpr || 0\n  };\n}\n\nexport function mapToStyles(_ref2) {\n  var _Object$assign2;\n\n  var popper = _ref2.popper,\n      popperRect = _ref2.popperRect,\n      placement = _ref2.placement,\n      variation = _ref2.variation,\n      offsets = _ref2.offsets,\n      position = _ref2.position,\n      gpuAcceleration = _ref2.gpuAcceleration,\n      adaptive = _ref2.adaptive,\n      roundOffsets = _ref2.roundOffsets,\n      isFixed = _ref2.isFixed;\n  var _offsets$x = offsets.x,\n      x = _offsets$x === void 0 ? 0 : _offsets$x,\n      _offsets$y = offsets.y,\n      y = _offsets$y === void 0 ? 0 : _offsets$y;\n\n  var _ref3 = typeof roundOffsets === 'function' ? roundOffsets({\n    x: x,\n    y: y\n  }) : {\n    x: x,\n    y: y\n  };\n\n  x = _ref3.x;\n  y = _ref3.y;\n  var hasX = offsets.hasOwnProperty('x');\n  var hasY = offsets.hasOwnProperty('y');\n  var sideX = left;\n  var sideY = top;\n  var win = window;\n\n  if (adaptive) {\n    var offsetParent = getOffsetParent(popper);\n    var heightProp = 'clientHeight';\n    var widthProp = 'clientWidth';\n\n    if (offsetParent === getWindow(popper)) {\n      offsetParent = getDocumentElement(popper);\n\n      if (getComputedStyle(offsetParent).position !== 'static' && position === 'absolute') {\n        heightProp = 'scrollHeight';\n        widthProp = 'scrollWidth';\n      }\n    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it\n\n\n    offsetParent = offsetParent;\n\n    if (placement === top || (placement === left || placement === right) && variation === end) {\n      sideY = bottom;\n      var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : // $FlowFixMe[prop-missing]\n      offsetParent[heightProp];\n      y -= offsetY - popperRect.height;\n      y *= gpuAcceleration ? 1 : -1;\n    }\n\n    if (placement === left || (placement === top || placement === bottom) && variation === end) {\n      sideX = right;\n      var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : // $FlowFixMe[prop-missing]\n      offsetParent[widthProp];\n      x -= offsetX - popperRect.width;\n      x *= gpuAcceleration ? 1 : -1;\n    }\n  }\n\n  var commonStyles = Object.assign({\n    position: position\n  }, adaptive && unsetSides);\n\n  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({\n    x: x,\n    y: y\n  }) : {\n    x: x,\n    y: y\n  };\n\n  x = _ref4.x;\n  y = _ref4.y;\n\n  if (gpuAcceleration) {\n    var _Object$assign;\n\n    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? \"translate(\" + x + \"px, \" + y + \"px)\" : \"translate3d(\" + x + \"px, \" + y + \"px, 0)\", _Object$assign));\n  }\n\n  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + \"px\" : '', _Object$assign2[sideX] = hasX ? x + \"px\" : '', _Object$assign2.transform = '', _Object$assign2));\n}\n\nfunction computeStyles(_ref5) {\n  var state = _ref5.state,\n      options = _ref5.options;\n  var _options$gpuAccelerat = options.gpuAcceleration,\n      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,\n      _options$adaptive = options.adaptive,\n      adaptive = _options$adaptive === void 0 ? true : _options$adaptive,\n      _options$roundOffsets = options.roundOffsets,\n      roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    var transitionProperty = getComputedStyle(state.elements.popper).transitionProperty || '';\n\n    if (adaptive && ['transform', 'top', 'right', 'bottom', 'left'].some(function (property) {\n      return transitionProperty.indexOf(property) >= 0;\n    })) {\n      console.warn(['Popper: Detected CSS transitions on at least one of the following', 'CSS properties: \"transform\", \"top\", \"right\", \"bottom\", \"left\".', '\\n\\n', 'Disable the \"computeStyles\" modifier\\'s `adaptive` option to allow', 'for smooth transitions, or remove these properties from the CSS', 'transition declaration on the popper element if only transitioning', 'opacity or background-color for example.', '\\n\\n', 'We recommend using the popper element as a wrapper around an inner', 'element that can have any CSS property transitioned for animations.'].join(' '));\n    }\n  }\n\n  var commonStyles = {\n    placement: getBasePlacement(state.placement),\n    variation: getVariation(state.placement),\n    popper: state.elements.popper,\n    popperRect: state.rects.popper,\n    gpuAcceleration: gpuAcceleration,\n    isFixed: state.options.strategy === 'fixed'\n  };\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.popperOffsets,\n      position: state.options.strategy,\n      adaptive: adaptive,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  if (state.modifiersData.arrow != null) {\n    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.arrow,\n      position: 'absolute',\n      adaptive: false,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-placement': state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'computeStyles',\n  enabled: true,\n  phase: 'beforeWrite',\n  fn: computeStyles,\n  data: {}\n};","import getBasePlacement from \"../utils/getBasePlacement.js\";\nimport { top, left, right, placements } from \"../enums.js\"; // eslint-disable-next-line import/no-unused-modules\n\nexport function distanceAndSkiddingToXY(placement, rects, offset) {\n  var basePlacement = getBasePlacement(placement);\n  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;\n\n  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {\n    placement: placement\n  })) : offset,\n      skidding = _ref[0],\n      distance = _ref[1];\n\n  skidding = skidding || 0;\n  distance = (distance || 0) * invertDistance;\n  return [left, right].indexOf(basePlacement) >= 0 ? {\n    x: distance,\n    y: skidding\n  } : {\n    x: skidding,\n    y: distance\n  };\n}\n\nfunction offset(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options,\n      name = _ref2.name;\n  var _options$offset = options.offset,\n      offset = _options$offset === void 0 ? [0, 0] : _options$offset;\n  var data = placements.reduce(function (acc, placement) {\n    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);\n    return acc;\n  }, {});\n  var _data$state$placement = data[state.placement],\n      x = _data$state$placement.x,\n      y = _data$state$placement.y;\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.modifiersData.popperOffsets.x += x;\n    state.modifiersData.popperOffsets.y += y;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'offset',\n  enabled: true,\n  phase: 'main',\n  requires: ['popperOffsets'],\n  fn: offset\n};","var hash = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nexport default function getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}","var hash = {\n  start: 'end',\n  end: 'start'\n};\nexport default function getOppositeVariationPlacement(placement) {\n  return placement.replace(/start|end/g, function (matched) {\n    return hash[matched];\n  });\n}","import { isShadowRoot } from \"./instanceOf.js\";\nexport default function contains(parent, child) {\n  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method\n\n  if (parent.contains(child)) {\n    return true;\n  } // then fallback to custom implementation with Shadow DOM support\n  else if (rootNode && isShadowRoot(rootNode)) {\n      var next = child;\n\n      do {\n        if (next && parent.isSameNode(next)) {\n          return true;\n        } // $FlowFixMe[prop-missing]: need a better way to handle this...\n\n\n        next = next.parentNode || next.host;\n      } while (next);\n    } // Give up, the result is false\n\n\n  return false;\n}","export default function rectToClientRect(rect) {\n  return Object.assign({}, rect, {\n    left: rect.x,\n    top: rect.y,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  });\n}","import { viewport } from \"../enums.js\";\nimport getViewportRect from \"./getViewportRect.js\";\nimport getDocumentRect from \"./getDocumentRect.js\";\nimport listScrollParents from \"./listScrollParents.js\";\nimport getOffsetParent from \"./getOffsetParent.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport { isElement, isHTMLElement } from \"./instanceOf.js\";\nimport getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getParentNode from \"./getParentNode.js\";\nimport contains from \"./contains.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport rectToClientRect from \"../utils/rectToClientRect.js\";\nimport { max, min } from \"../utils/math.js\";\n\nfunction getInnerBoundingClientRect(element) {\n  var rect = getBoundingClientRect(element);\n  rect.top = rect.top + element.clientTop;\n  rect.left = rect.left + element.clientLeft;\n  rect.bottom = rect.top + element.clientHeight;\n  rect.right = rect.left + element.clientWidth;\n  rect.width = element.clientWidth;\n  rect.height = element.clientHeight;\n  rect.x = rect.left;\n  rect.y = rect.top;\n  return rect;\n}\n\nfunction getClientRectFromMixedType(element, clippingParent) {\n  return clippingParent === viewport ? rectToClientRect(getViewportRect(element)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent) : rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping parent\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n\n\nfunction getClippingParents(element) {\n  var clippingParents = listScrollParents(getParentNode(element));\n  var canEscapeClipping = ['absolute', 'fixed'].indexOf(getComputedStyle(element).position) >= 0;\n  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;\n\n  if (!isElement(clipperElement)) {\n    return [];\n  } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414\n\n\n  return clippingParents.filter(function (clippingParent) {\n    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== 'body';\n  });\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping parents\n\n\nexport default function getClippingRect(element, boundary, rootBoundary) {\n  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);\n  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);\n  var firstClippingParent = clippingParents[0];\n  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {\n    var rect = getClientRectFromMixedType(element, clippingParent);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromMixedType(element, firstClippingParent));\n  clippingRect.width = clippingRect.right - clippingRect.left;\n  clippingRect.height = clippingRect.bottom - clippingRect.top;\n  clippingRect.x = clippingRect.left;\n  clippingRect.y = clippingRect.top;\n  return clippingRect;\n}","import getWindow from \"./getWindow.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nexport default function getViewportRect(element) {\n  var win = getWindow(element);\n  var html = getDocumentElement(element);\n  var visualViewport = win.visualViewport;\n  var width = html.clientWidth;\n  var height = html.clientHeight;\n  var x = 0;\n  var y = 0; // NB: This isn't supported on iOS <= 12. If the keyboard is open, the popper\n  // can be obscured underneath it.\n  // Also, `html.clientHeight` adds the bottom bar height in Safari iOS, even\n  // if it isn't open, so if this isn't available, the popper will be detected\n  // to overflow the bottom of the screen too early.\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height; // Uses Layout Viewport (like Chrome; Safari does not currently)\n    // In Chrome, it returns a value very close to 0 (+/-) but contains rounding\n    // errors due to floating point numbers, so we need to check precision.\n    // Safari returns a number <= 0, usually < -1 when pinch-zoomed\n    // Feature detection fails in mobile emulation mode in Chrome.\n    // Math.abs(win.innerWidth / visualViewport.scale - visualViewport.width) <\n    // 0.001\n    // Fallback here: \"Not Safari\" userAgent\n\n    if (!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x + getWindowScrollBarX(element),\n    y: y\n  };\n}","import getDocumentElement from \"./getDocumentElement.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nimport getWindowScroll from \"./getWindowScroll.js\";\nimport { max } from \"../utils/math.js\"; // Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nexport default function getDocumentRect(element) {\n  var _element$ownerDocumen;\n\n  var html = getDocumentElement(element);\n  var winScroll = getWindowScroll(element);\n  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);\n  var y = -winScroll.scrollTop;\n\n  if (getComputedStyle(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x,\n    y: y\n  };\n}","import getFreshSideObject from \"./getFreshSideObject.js\";\nexport default function mergePaddingObject(paddingObject) {\n  return Object.assign({}, getFreshSideObject(), paddingObject);\n}","export default function getFreshSideObject() {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  };\n}","export default function expandToHashMap(value, keys) {\n  return keys.reduce(function (hashMap, key) {\n    hashMap[key] = value;\n    return hashMap;\n  }, {});\n}","import getClippingRect from \"../dom-utils/getClippingRect.js\";\nimport getDocumentElement from \"../dom-utils/getDocumentElement.js\";\nimport getBoundingClientRect from \"../dom-utils/getBoundingClientRect.js\";\nimport computeOffsets from \"./computeOffsets.js\";\nimport rectToClientRect from \"./rectToClientRect.js\";\nimport { clippingParents, reference, popper, bottom, top, right, basePlacements, viewport } from \"../enums.js\";\nimport { isElement } from \"../dom-utils/instanceOf.js\";\nimport mergePaddingObject from \"./mergePaddingObject.js\";\nimport expandToHashMap from \"./expandToHashMap.js\"; // eslint-disable-next-line import/no-unused-modules\n\nexport default function detectOverflow(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$placement = _options.placement,\n      placement = _options$placement === void 0 ? state.placement : _options$placement,\n      _options$boundary = _options.boundary,\n      boundary = _options$boundary === void 0 ? clippingParents : _options$boundary,\n      _options$rootBoundary = _options.rootBoundary,\n      rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,\n      _options$elementConte = _options.elementContext,\n      elementContext = _options$elementConte === void 0 ? popper : _options$elementConte,\n      _options$altBoundary = _options.altBoundary,\n      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,\n      _options$padding = _options.padding,\n      padding = _options$padding === void 0 ? 0 : _options$padding;\n  var paddingObject = mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n  var altContext = elementContext === popper ? reference : popper;\n  var popperRect = state.rects.popper;\n  var element = state.elements[altBoundary ? altContext : elementContext];\n  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary);\n  var referenceClientRect = getBoundingClientRect(state.elements.reference);\n  var popperOffsets = computeOffsets({\n    reference: referenceClientRect,\n    element: popperRect,\n    strategy: 'absolute',\n    placement: placement\n  });\n  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets));\n  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect\n  // 0 or negative = within the clipping rect\n\n  var overflowOffsets = {\n    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n    right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n  };\n  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element\n\n  if (elementContext === popper && offsetData) {\n    var offset = offsetData[placement];\n    Object.keys(overflowOffsets).forEach(function (key) {\n      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;\n      var axis = [top, bottom].indexOf(key) >= 0 ? 'y' : 'x';\n      overflowOffsets[key] += offset[axis] * multiply;\n    });\n  }\n\n  return overflowOffsets;\n}","import getOppositePlacement from \"../utils/getOppositePlacement.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getOppositeVariationPlacement from \"../utils/getOppositeVariationPlacement.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\nimport computeAutoPlacement from \"../utils/computeAutoPlacement.js\";\nimport { bottom, top, start, right, left, auto } from \"../enums.js\";\nimport getVariation from \"../utils/getVariation.js\"; // eslint-disable-next-line import/no-unused-modules\n\nfunction getExpandedFallbackPlacements(placement) {\n  if (getBasePlacement(placement) === auto) {\n    return [];\n  }\n\n  var oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];\n}\n\nfunction flip(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n\n  if (state.modifiersData[name]._skip) {\n    return;\n  }\n\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,\n      specifiedFallbackPlacements = options.fallbackPlacements,\n      padding = options.padding,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      _options$flipVariatio = options.flipVariations,\n      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,\n      allowedAutoPlacements = options.allowedAutoPlacements;\n  var preferredPlacement = state.options.placement;\n  var basePlacement = getBasePlacement(preferredPlacement);\n  var isBasePlacement = basePlacement === preferredPlacement;\n  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));\n  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {\n    return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding,\n      flipVariations: flipVariations,\n      allowedAutoPlacements: allowedAutoPlacements\n    }) : placement);\n  }, []);\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var checksMap = new Map();\n  var makeFallbackChecks = true;\n  var firstFittingPlacement = placements[0];\n\n  for (var i = 0; i < placements.length; i++) {\n    var placement = placements[i];\n\n    var _basePlacement = getBasePlacement(placement);\n\n    var isStartVariation = getVariation(placement) === start;\n    var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;\n    var len = isVertical ? 'width' : 'height';\n    var overflow = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      altBoundary: altBoundary,\n      padding: padding\n    });\n    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;\n\n    if (referenceRect[len] > popperRect[len]) {\n      mainVariationSide = getOppositePlacement(mainVariationSide);\n    }\n\n    var altVariationSide = getOppositePlacement(mainVariationSide);\n    var checks = [];\n\n    if (checkMainAxis) {\n      checks.push(overflow[_basePlacement] <= 0);\n    }\n\n    if (checkAltAxis) {\n      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);\n    }\n\n    if (checks.every(function (check) {\n      return check;\n    })) {\n      firstFittingPlacement = placement;\n      makeFallbackChecks = false;\n      break;\n    }\n\n    checksMap.set(placement, checks);\n  }\n\n  if (makeFallbackChecks) {\n    // `2` may be desired in some cases – research later\n    var numberOfChecks = flipVariations ? 3 : 1;\n\n    var _loop = function _loop(_i) {\n      var fittingPlacement = placements.find(function (placement) {\n        var checks = checksMap.get(placement);\n\n        if (checks) {\n          return checks.slice(0, _i).every(function (check) {\n            return check;\n          });\n        }\n      });\n\n      if (fittingPlacement) {\n        firstFittingPlacement = fittingPlacement;\n        return \"break\";\n      }\n    };\n\n    for (var _i = numberOfChecks; _i > 0; _i--) {\n      var _ret = _loop(_i);\n\n      if (_ret === \"break\") break;\n    }\n  }\n\n  if (state.placement !== firstFittingPlacement) {\n    state.modifiersData[name]._skip = true;\n    state.placement = firstFittingPlacement;\n    state.reset = true;\n  }\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'flip',\n  enabled: true,\n  phase: 'main',\n  fn: flip,\n  requiresIfExists: ['offset'],\n  data: {\n    _skip: false\n  }\n};","import getVariation from \"./getVariation.js\";\nimport { variationPlacements, basePlacements, placements as allPlacements } from \"../enums.js\";\nimport detectOverflow from \"./detectOverflow.js\";\nimport getBasePlacement from \"./getBasePlacement.js\";\nexport default function computeAutoPlacement(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      placement = _options.placement,\n      boundary = _options.boundary,\n      rootBoundary = _options.rootBoundary,\n      padding = _options.padding,\n      flipVariations = _options.flipVariations,\n      _options$allowedAutoP = _options.allowedAutoPlacements,\n      allowedAutoPlacements = _options$allowedAutoP === void 0 ? allPlacements : _options$allowedAutoP;\n  var variation = getVariation(placement);\n  var placements = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {\n    return getVariation(placement) === variation;\n  }) : basePlacements;\n  var allowedPlacements = placements.filter(function (placement) {\n    return allowedAutoPlacements.indexOf(placement) >= 0;\n  });\n\n  if (allowedPlacements.length === 0) {\n    allowedPlacements = placements;\n\n    if (process.env.NODE_ENV !== \"production\") {\n      console.error(['Popper: The `allowedAutoPlacements` option did not allow any', 'placements. Ensure the `placement` option matches the variation', 'of the allowed placements.', 'For example, \"auto\" cannot be used to allow \"bottom-start\".', 'Use \"auto-start\" instead.'].join(' '));\n    }\n  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...\n\n\n  var overflows = allowedPlacements.reduce(function (acc, placement) {\n    acc[placement] = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding\n    })[getBasePlacement(placement)];\n    return acc;\n  }, {});\n  return Object.keys(overflows).sort(function (a, b) {\n    return overflows[a] - overflows[b];\n  });\n}","import { max as mathMax, min as mathMin } from \"./math.js\";\nexport function within(min, value, max) {\n  return mathMax(min, mathMin(value, max));\n}\nexport function withinMaxClamp(min, value, max) {\n  var v = within(min, value, max);\n  return v > max ? max : v;\n}","import { top, left, right, bottom, start } from \"../enums.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getMainAxisFromPlacement from \"../utils/getMainAxisFromPlacement.js\";\nimport getAltAxis from \"../utils/getAltAxis.js\";\nimport { within, withinMaxClamp } from \"../utils/within.js\";\nimport getLayoutRect from \"../dom-utils/getLayoutRect.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\nimport getVariation from \"../utils/getVariation.js\";\nimport getFreshSideObject from \"../utils/getFreshSideObject.js\";\nimport { min as mathMin, max as mathMax } from \"../utils/math.js\";\n\nfunction preventOverflow(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      padding = options.padding,\n      _options$tether = options.tether,\n      tether = _options$tether === void 0 ? true : _options$tether,\n      _options$tetherOffset = options.tetherOffset,\n      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;\n  var overflow = detectOverflow(state, {\n    boundary: boundary,\n    rootBoundary: rootBoundary,\n    padding: padding,\n    altBoundary: altBoundary\n  });\n  var basePlacement = getBasePlacement(state.placement);\n  var variation = getVariation(state.placement);\n  var isBasePlacement = !variation;\n  var mainAxis = getMainAxisFromPlacement(basePlacement);\n  var altAxis = getAltAxis(mainAxis);\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : tetherOffset;\n  var normalizedTetherOffsetValue = typeof tetherOffsetValue === 'number' ? {\n    mainAxis: tetherOffsetValue,\n    altAxis: tetherOffsetValue\n  } : Object.assign({\n    mainAxis: 0,\n    altAxis: 0\n  }, tetherOffsetValue);\n  var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;\n  var data = {\n    x: 0,\n    y: 0\n  };\n\n  if (!popperOffsets) {\n    return;\n  }\n\n  if (checkMainAxis) {\n    var _offsetModifierState$;\n\n    var mainSide = mainAxis === 'y' ? top : left;\n    var altSide = mainAxis === 'y' ? bottom : right;\n    var len = mainAxis === 'y' ? 'height' : 'width';\n    var offset = popperOffsets[mainAxis];\n    var min = offset + overflow[mainSide];\n    var max = offset - overflow[altSide];\n    var additive = tether ? -popperRect[len] / 2 : 0;\n    var minLen = variation === start ? referenceRect[len] : popperRect[len];\n    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go\n    // outside the reference bounds\n\n    var arrowElement = state.elements.arrow;\n    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {\n      width: 0,\n      height: 0\n    };\n    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : getFreshSideObject();\n    var arrowPaddingMin = arrowPaddingObject[mainSide];\n    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want\n    // to include its full size in the calculation. If the reference is small\n    // and near the edge of a boundary, the popper can overflow even if the\n    // reference is not overflowing as well (e.g. virtual elements with no\n    // width or height)\n\n    var arrowLen = within(0, referenceRect[len], arrowRect[len]);\n    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;\n    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;\n    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);\n    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;\n    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;\n    var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;\n    var tetherMax = offset + maxOffset - offsetModifierValue;\n    var preventedOffset = within(tether ? mathMin(min, tetherMin) : min, offset, tether ? mathMax(max, tetherMax) : max);\n    popperOffsets[mainAxis] = preventedOffset;\n    data[mainAxis] = preventedOffset - offset;\n  }\n\n  if (checkAltAxis) {\n    var _offsetModifierState$2;\n\n    var _mainSide = mainAxis === 'x' ? top : left;\n\n    var _altSide = mainAxis === 'x' ? bottom : right;\n\n    var _offset = popperOffsets[altAxis];\n\n    var _len = altAxis === 'y' ? 'height' : 'width';\n\n    var _min = _offset + overflow[_mainSide];\n\n    var _max = _offset - overflow[_altSide];\n\n    var isOriginSide = [top, left].indexOf(basePlacement) !== -1;\n\n    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;\n\n    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;\n\n    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;\n\n    var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);\n\n    popperOffsets[altAxis] = _preventedOffset;\n    data[altAxis] = _preventedOffset - _offset;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'preventOverflow',\n  enabled: true,\n  phase: 'main',\n  fn: preventOverflow,\n  requiresIfExists: ['offset']\n};","export default function getAltAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}","import getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getLayoutRect from \"../dom-utils/getLayoutRect.js\";\nimport contains from \"../dom-utils/contains.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport getMainAxisFromPlacement from \"../utils/getMainAxisFromPlacement.js\";\nimport { within } from \"../utils/within.js\";\nimport mergePaddingObject from \"../utils/mergePaddingObject.js\";\nimport expandToHashMap from \"../utils/expandToHashMap.js\";\nimport { left, right, basePlacements, top, bottom } from \"../enums.js\";\nimport { isHTMLElement } from \"../dom-utils/instanceOf.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar toPaddingObject = function toPaddingObject(padding, state) {\n  padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : padding;\n  return mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n};\n\nfunction arrow(_ref) {\n  var _state$modifiersData$;\n\n  var state = _ref.state,\n      name = _ref.name,\n      options = _ref.options;\n  var arrowElement = state.elements.arrow;\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var basePlacement = getBasePlacement(state.placement);\n  var axis = getMainAxisFromPlacement(basePlacement);\n  var isVertical = [left, right].indexOf(basePlacement) >= 0;\n  var len = isVertical ? 'height' : 'width';\n\n  if (!arrowElement || !popperOffsets) {\n    return;\n  }\n\n  var paddingObject = toPaddingObject(options.padding, state);\n  var arrowRect = getLayoutRect(arrowElement);\n  var minProp = axis === 'y' ? top : left;\n  var maxProp = axis === 'y' ? bottom : right;\n  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];\n  var startDiff = popperOffsets[axis] - state.rects.reference[axis];\n  var arrowOffsetParent = getOffsetParent(arrowElement);\n  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is\n  // outside of the popper bounds\n\n  var min = paddingObject[minProp];\n  var max = clientSize - arrowRect[len] - paddingObject[maxProp];\n  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;\n  var offset = within(min, center, max); // Prevents breaking syntax highlighting...\n\n  var axisProp = axis;\n  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);\n}\n\nfunction effect(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options;\n  var _options$element = options.element,\n      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;\n\n  if (arrowElement == null) {\n    return;\n  } // CSS selector\n\n\n  if (typeof arrowElement === 'string') {\n    arrowElement = state.elements.popper.querySelector(arrowElement);\n\n    if (!arrowElement) {\n      return;\n    }\n  }\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!isHTMLElement(arrowElement)) {\n      console.error(['Popper: \"arrow\" element must be an HTMLElement (not an SVGElement).', 'To use an SVG arrow, wrap it in an HTMLElement that will be used as', 'the arrow.'].join(' '));\n    }\n  }\n\n  if (!contains(state.elements.popper, arrowElement)) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.error(['Popper: \"arrow\" modifier\\'s `element` must be a child of the popper', 'element.'].join(' '));\n    }\n\n    return;\n  }\n\n  state.elements.arrow = arrowElement;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'arrow',\n  enabled: true,\n  phase: 'main',\n  fn: arrow,\n  effect: effect,\n  requires: ['popperOffsets'],\n  requiresIfExists: ['preventOverflow']\n};","import { top, bottom, left, right } from \"../enums.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\n\nfunction getSideOffsets(overflow, rect, preventedOffsets) {\n  if (preventedOffsets === void 0) {\n    preventedOffsets = {\n      x: 0,\n      y: 0\n    };\n  }\n\n  return {\n    top: overflow.top - rect.height - preventedOffsets.y,\n    right: overflow.right - rect.width + preventedOffsets.x,\n    bottom: overflow.bottom - rect.height + preventedOffsets.y,\n    left: overflow.left - rect.width - preventedOffsets.x\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return [top, right, bottom, left].some(function (side) {\n    return overflow[side] >= 0;\n  });\n}\n\nfunction hide(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var preventedOffsets = state.modifiersData.preventOverflow;\n  var referenceOverflow = detectOverflow(state, {\n    elementContext: 'reference'\n  });\n  var popperAltOverflow = detectOverflow(state, {\n    altBoundary: true\n  });\n  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);\n  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);\n  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);\n  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);\n  state.modifiersData[name] = {\n    referenceClippingOffsets: referenceClippingOffsets,\n    popperEscapeOffsets: popperEscapeOffsets,\n    isReferenceHidden: isReferenceHidden,\n    hasPopperEscaped: hasPopperEscaped\n  };\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-reference-hidden': isReferenceHidden,\n    'data-popper-escaped': hasPopperEscaped\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'hide',\n  enabled: true,\n  phase: 'main',\n  requiresIfExists: ['preventOverflow'],\n  fn: hide\n};","import { popperGenerator, detectOverflow } from \"./createPopper.js\";\nimport eventListeners from \"./modifiers/eventListeners.js\";\nimport popperOffsets from \"./modifiers/popperOffsets.js\";\nimport computeStyles from \"./modifiers/computeStyles.js\";\nimport applyStyles from \"./modifiers/applyStyles.js\";\nimport offset from \"./modifiers/offset.js\";\nimport flip from \"./modifiers/flip.js\";\nimport preventOverflow from \"./modifiers/preventOverflow.js\";\nimport arrow from \"./modifiers/arrow.js\";\nimport hide from \"./modifiers/hide.js\";\nvar defaultModifiers = [eventListeners, popperOffsets, computeStyles, applyStyles, offset, flip, preventOverflow, arrow, hide];\nvar createPopper = /*#__PURE__*/popperGenerator({\n  defaultModifiers: defaultModifiers\n}); // eslint-disable-next-line import/no-unused-modules\n\nexport { createPopper, popperGenerator, defaultModifiers, detectOverflow }; // eslint-disable-next-line import/no-unused-modules\n\nexport { createPopper as createPopperLite } from \"./popper-lite.js\"; // eslint-disable-next-line import/no-unused-modules\n\nexport * from \"./modifiers/index.js\";","import getNodeName from \"../dom-utils/getNodeName.js\";\nimport { isHTMLElement } from \"../dom-utils/instanceOf.js\"; // This modifier takes the styles prepared by the `computeStyles` modifier\n// and applies them to the HTMLElements such as popper and arrow\n\nfunction applyStyles(_ref) {\n  var state = _ref.state;\n  Object.keys(state.elements).forEach(function (name) {\n    var style = state.styles[name] || {};\n    var attributes = state.attributes[name] || {};\n    var element = state.elements[name]; // arrow is optional + virtual elements\n\n    if (!isHTMLElement(element) || !getNodeName(element)) {\n      return;\n    } // Flow doesn't support to extend this property, but it's the most\n    // effective way to apply styles to an HTMLElement\n    // $FlowFixMe[cannot-write]\n\n\n    Object.assign(element.style, style);\n    Object.keys(attributes).forEach(function (name) {\n      var value = attributes[name];\n\n      if (value === false) {\n        element.removeAttribute(name);\n      } else {\n        element.setAttribute(name, value === true ? '' : value);\n      }\n    });\n  });\n}\n\nfunction effect(_ref2) {\n  var state = _ref2.state;\n  var initialStyles = {\n    popper: {\n      position: state.options.strategy,\n      left: '0',\n      top: '0',\n      margin: '0'\n    },\n    arrow: {\n      position: 'absolute'\n    },\n    reference: {}\n  };\n  Object.assign(state.elements.popper.style, initialStyles.popper);\n  state.styles = initialStyles;\n\n  if (state.elements.arrow) {\n    Object.assign(state.elements.arrow.style, initialStyles.arrow);\n  }\n\n  return function () {\n    Object.keys(state.elements).forEach(function (name) {\n      var element = state.elements[name];\n      var attributes = state.attributes[name] || {};\n      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them\n\n      var style = styleProperties.reduce(function (style, property) {\n        style[property] = '';\n        return style;\n      }, {}); // arrow is optional + virtual elements\n\n      if (!isHTMLElement(element) || !getNodeName(element)) {\n        return;\n      }\n\n      Object.assign(element.style, style);\n      Object.keys(attributes).forEach(function (attribute) {\n        element.removeAttribute(attribute);\n      });\n    });\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'applyStyles',\n  enabled: true,\n  phase: 'write',\n  fn: applyStyles,\n  effect: effect,\n  requires: ['computeStyles']\n};","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { createPopper as defaultCreatePopper } from '@popperjs/core';\nimport isEqual from 'react-fast-compare';\nimport { fromEntries, useIsomorphicLayoutEffect } from './utils';\nvar EMPTY_MODIFIERS = [];\nexport var usePopper = function usePopper(referenceElement, popperElement, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var prevOptions = React.useRef(null);\n  var optionsWithDefaults = {\n    onFirstUpdate: options.onFirstUpdate,\n    placement: options.placement || 'bottom',\n    strategy: options.strategy || 'absolute',\n    modifiers: options.modifiers || EMPTY_MODIFIERS\n  };\n\n  var _React$useState = React.useState({\n    styles: {\n      popper: {\n        position: optionsWithDefaults.strategy,\n        left: '0',\n        top: '0'\n      },\n      arrow: {\n        position: 'absolute'\n      }\n    },\n    attributes: {}\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var updateStateModifier = React.useMemo(function () {\n    return {\n      name: 'updateState',\n      enabled: true,\n      phase: 'write',\n      fn: function fn(_ref) {\n        var state = _ref.state;\n        var elements = Object.keys(state.elements);\n        ReactDOM.flushSync(function () {\n          setState({\n            styles: fromEntries(elements.map(function (element) {\n              return [element, state.styles[element] || {}];\n            })),\n            attributes: fromEntries(elements.map(function (element) {\n              return [element, state.attributes[element]];\n            }))\n          });\n        });\n      },\n      requires: ['computeStyles']\n    };\n  }, []);\n  var popperOptions = React.useMemo(function () {\n    var newOptions = {\n      onFirstUpdate: optionsWithDefaults.onFirstUpdate,\n      placement: optionsWithDefaults.placement,\n      strategy: optionsWithDefaults.strategy,\n      modifiers: [].concat(optionsWithDefaults.modifiers, [updateStateModifier, {\n        name: 'applyStyles',\n        enabled: false\n      }])\n    };\n\n    if (isEqual(prevOptions.current, newOptions)) {\n      return prevOptions.current || newOptions;\n    } else {\n      prevOptions.current = newOptions;\n      return newOptions;\n    }\n  }, [optionsWithDefaults.onFirstUpdate, optionsWithDefaults.placement, optionsWithDefaults.strategy, optionsWithDefaults.modifiers, updateStateModifier]);\n  var popperInstanceRef = React.useRef();\n  useIsomorphicLayoutEffect(function () {\n    if (popperInstanceRef.current) {\n      popperInstanceRef.current.setOptions(popperOptions);\n    }\n  }, [popperOptions]);\n  useIsomorphicLayoutEffect(function () {\n    if (referenceElement == null || popperElement == null) {\n      return;\n    }\n\n    var createPopper = options.createPopper || defaultCreatePopper;\n    var popperInstance = createPopper(referenceElement, popperElement, popperOptions);\n    popperInstanceRef.current = popperInstance;\n    return function () {\n      popperInstance.destroy();\n      popperInstanceRef.current = null;\n    };\n  }, [referenceElement, popperElement, options.createPopper]);\n  return {\n    state: popperInstanceRef.current ? popperInstanceRef.current.state : null,\n    styles: state.styles,\n    attributes: state.attributes,\n    update: popperInstanceRef.current ? popperInstanceRef.current.update : null,\n    forceUpdate: popperInstanceRef.current ? popperInstanceRef.current.forceUpdate : null\n  };\n};","import * as React from 'react';\nimport { ManagerReferenceNodeContext } from './Manager';\nimport { unwrapArray, setRef } from './utils';\nimport { usePopper } from './usePopper';\n\nvar NOOP = function NOOP() {\n  return void 0;\n};\n\nvar NOOP_PROMISE = function NOOP_PROMISE() {\n  return Promise.resolve(null);\n};\n\nvar EMPTY_MODIFIERS = [];\nexport function Popper(_ref) {\n  var _ref$placement = _ref.placement,\n      placement = _ref$placement === void 0 ? 'bottom' : _ref$placement,\n      _ref$strategy = _ref.strategy,\n      strategy = _ref$strategy === void 0 ? 'absolute' : _ref$strategy,\n      _ref$modifiers = _ref.modifiers,\n      modifiers = _ref$modifiers === void 0 ? EMPTY_MODIFIERS : _ref$modifiers,\n      referenceElement = _ref.referenceElement,\n      onFirstUpdate = _ref.onFirstUpdate,\n      innerRef = _ref.innerRef,\n      children = _ref.children;\n  var referenceNode = React.useContext(ManagerReferenceNodeContext);\n\n  var _React$useState = React.useState(null),\n      popperElement = _React$useState[0],\n      setPopperElement = _React$useState[1];\n\n  var _React$useState2 = React.useState(null),\n      arrowElement = _React$useState2[0],\n      setArrowElement = _React$useState2[1];\n\n  React.useEffect(function () {\n    setRef(innerRef, popperElement);\n  }, [innerRef, popperElement]);\n  var options = React.useMemo(function () {\n    return {\n      placement: placement,\n      strategy: strategy,\n      onFirstUpdate: onFirstUpdate,\n      modifiers: [].concat(modifiers, [{\n        name: 'arrow',\n        enabled: arrowElement != null,\n        options: {\n          element: arrowElement\n        }\n      }])\n    };\n  }, [placement, strategy, onFirstUpdate, modifiers, arrowElement]);\n\n  var _usePopper = usePopper(referenceElement || referenceNode, popperElement, options),\n      state = _usePopper.state,\n      styles = _usePopper.styles,\n      forceUpdate = _usePopper.forceUpdate,\n      update = _usePopper.update;\n\n  var childrenProps = React.useMemo(function () {\n    return {\n      ref: setPopperElement,\n      style: styles.popper,\n      placement: state ? state.placement : placement,\n      hasPopperEscaped: state && state.modifiersData.hide ? state.modifiersData.hide.hasPopperEscaped : null,\n      isReferenceHidden: state && state.modifiersData.hide ? state.modifiersData.hide.isReferenceHidden : null,\n      arrowProps: {\n        style: styles.arrow,\n        ref: setArrowElement\n      },\n      forceUpdate: forceUpdate || NOOP,\n      update: update || NOOP_PROMISE\n    };\n  }, [setPopperElement, setArrowElement, placement, state, styles, update, forceUpdate]);\n  return unwrapArray(children)(childrenProps);\n}","import * as React from 'react';\nimport warning from 'warning';\nimport { ManagerReferenceNodeSetterContext } from './Manager';\nimport { safeInvoke, unwrapArray, setRef } from './utils';\nexport function Reference(_ref) {\n  var children = _ref.children,\n      innerRef = _ref.innerRef;\n  var setReferenceNode = React.useContext(ManagerReferenceNodeSetterContext);\n  var refHandler = React.useCallback(function (node) {\n    setRef(innerRef, node);\n    safeInvoke(setReferenceNode, node);\n  }, [innerRef, setReferenceNode]); // ran on unmount\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  React.useEffect(function () {\n    return function () {\n      return setRef(innerRef, null);\n    };\n  }, []);\n  React.useEffect(function () {\n    warning(Boolean(setReferenceNode), '`Reference` should not be used outside of a `Manager` component.');\n  }, [setReferenceNode]);\n  return unwrapArray(children)({\n    ref: refHandler\n  });\n}","export default {\n  disabled: false\n};","import React from 'react';\nexport default React.createContext(null);","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import PropTypes from 'prop-types';\n\n// https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.4/js/src/modal.js#L436-L443\nexport function getScrollbarWidth() {\n  let scrollDiv = document.createElement('div');\n  // .modal-scrollbar-measure styles // https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.4/scss/_modal.scss#L106-L113\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.top = '-9999px';\n  scrollDiv.style.width = '50px';\n  scrollDiv.style.height = '50px';\n  scrollDiv.style.overflow = 'scroll';\n  document.body.appendChild(scrollDiv);\n  const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  document.body.removeChild(scrollDiv);\n  return scrollbarWidth;\n}\n\nexport function setScrollbarWidth(padding) {\n  document.body.style.paddingRight = padding > 0 ? `${padding}px` : null;\n}\n\nexport function isBodyOverflowing() {\n  return document.body.clientWidth < window.innerWidth;\n}\n\nexport function getOriginalBodyPadding() {\n  const style = window.getComputedStyle(document.body, null);\n\n  return parseInt((style && style.getPropertyValue('padding-right')) || 0, 10);\n}\n\nexport function conditionallyUpdateScrollbar() {\n  const scrollbarWidth = getScrollbarWidth();\n  // https://github.com/twbs/bootstrap/blob/v4.0.0-alpha.6/js/src/modal.js#L433\n  const fixedContent = document.querySelectorAll(\n    '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top'\n  )[0];\n  const bodyPadding = fixedContent\n    ? parseInt(fixedContent.style.paddingRight || 0, 10)\n    : 0;\n\n  if (isBodyOverflowing()) {\n    setScrollbarWidth(bodyPadding + scrollbarWidth);\n  }\n}\n\nlet globalCssModule;\n\nexport function setGlobalCssModule(cssModule) {\n  globalCssModule = cssModule;\n}\n\nexport function mapToCssModules(className = '', cssModule = globalCssModule) {\n  if (!cssModule) return className;\n  return className\n    .split(' ')\n    .map(c => cssModule[c] || c)\n    .join(' ');\n}\n\n/**\n * Returns a new object with the key/value pairs from `obj` that are not in the array `omitKeys`.\n */\nexport function omit(obj, omitKeys) {\n  const result = {};\n  Object.keys(obj).forEach(key => {\n    if (omitKeys.indexOf(key) === -1) {\n      result[key] = obj[key];\n    }\n  });\n  return result;\n}\n\n/**\n * Returns a filtered copy of an object with only the specified keys.\n */\nexport function pick(obj, keys) {\n  const pickKeys = Array.isArray(keys) ? keys : [keys];\n  let length = pickKeys.length;\n  let key;\n  const result = {};\n\n  while (length > 0) {\n    length -= 1;\n    key = pickKeys[length];\n    result[key] = obj[key];\n  }\n  return result;\n}\n\nlet warned = {};\n\nexport function warnOnce(message) {\n  if (!warned[message]) {\n    /* istanbul ignore else */\n    if (typeof console !== 'undefined') {\n      console.error(message); // eslint-disable-line no-console\n    }\n    warned[message] = true;\n  }\n}\n\nexport function deprecated(propType, explanation) {\n  return function validate(props, propName, componentName, ...rest) {\n    if (props[propName] !== null && typeof props[propName] !== 'undefined') {\n      warnOnce(\n        `\"${propName}\" property of \"${componentName}\" has been deprecated.\\n${explanation}`\n      );\n    }\n\n    return propType(props, propName, componentName, ...rest);\n  };\n}\n\n// Shim Element if needed (e.g. in Node environment)\nconst Element = (typeof window === 'object' && window.Element) || function() {};\n\nexport function DOMElement(props, propName, componentName) {\n  if (!(props[propName] instanceof Element)) {\n    return new Error(\n      'Invalid prop `' +\n        propName +\n        '` supplied to `' +\n        componentName +\n        '`. Expected prop to be an instance of Element. Validation failed.'\n    );\n  }\n}\n\nexport const targetPropType = PropTypes.oneOfType([\n  PropTypes.string,\n  PropTypes.func,\n  DOMElement,\n  PropTypes.shape({ current: PropTypes.any }),\n]);\n\nexport const tagPropType = PropTypes.oneOfType([\n  PropTypes.func,\n  PropTypes.string,\n  PropTypes.shape({ $$typeof: PropTypes.symbol, render: PropTypes.func }),\n  PropTypes.arrayOf(PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.shape({ $$typeof: PropTypes.symbol, render: PropTypes.func }),\n  ]))\n]);\n\n/* eslint key-spacing: [\"error\", { afterColon: true, align: \"value\" }] */\n// These are all setup to match what is in the bootstrap _variables.scss\n// https://github.com/twbs/bootstrap/blob/v4-dev/scss/_variables.scss\nexport const TransitionTimeouts = {\n  Fade:      150, // $transition-fade\n  Collapse:  350, // $transition-collapse\n  Modal:     300, // $modal-transition\n  Carousel:  600, // $carousel-transition\n  Offcanvas: 300, // $offcanvas-transition\n};\n\n// Duplicated Transition.propType keys to ensure that Reactstrap builds\n// for distribution properly exclude these keys for nested child HTML attributes\n// since `react-transition-group` removes propTypes in production builds.\nexport const TransitionPropTypeKeys = [\n  'in',\n  'mountOnEnter',\n  'unmountOnExit',\n  'appear',\n  'enter',\n  'exit',\n  'timeout',\n  'onEnter',\n  'onEntering',\n  'onEntered',\n  'onExit',\n  'onExiting',\n  'onExited',\n];\n\nexport const TransitionStatuses = {\n  ENTERING: 'entering',\n  ENTERED:  'entered',\n  EXITING:  'exiting',\n  EXITED:   'exited',\n};\n\nexport const keyCodes = {\n  esc:   27,\n  space: 32,\n  enter: 13,\n  tab:   9,\n  up:    38,\n  down:  40,\n  home:  36,\n  end:   35,\n  n:     78,\n  p:     80,\n};\n\nexport const PopperPlacements = [\n  'auto-start',\n  'auto',\n  'auto-end',\n  'top-start',\n  'top',\n  'top-end',\n  'right-start',\n  'right',\n  'right-end',\n  'bottom-end',\n  'bottom',\n  'bottom-start',\n  'left-end',\n  'left',\n  'left-start',\n];\n\nexport const canUseDOM = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nexport function isReactRefObj(target) {\n  if (target && typeof target === 'object') {\n    return 'current' in target;\n  }\n  return false;\n}\n\nfunction getTag(value) {\n  if (value == null) {\n        return value === undefined ? '[object Undefined]' : '[object Null]'\n    }\n    return Object.prototype.toString.call(value)\n}\n\nexport function toNumber(value) {\n  const type = typeof value;\n  const NAN = 0 / 0;\n  if (type === 'number') {\n    return value\n  }\n  if (type === 'symbol' || (type === 'object' && getTag(value) === '[object Symbol]')) {\n    return NAN\n  }\n  if (isObject(value)) {\n    const other = typeof value.valueOf === 'function' ? value.valueOf() : value;\n    value = isObject(other) ? `${other}` : other\n  }\n  if (type !== 'string') {\n    return value === 0 ? value : +value\n  }\n  value = value.replace(/^\\s+|\\s+$/g, '');\n  const isBinary = /^0b[01]+$/i.test(value);\n  return (isBinary || /^0o[0-7]+$/i.test(value))\n    ? parseInt(value.slice(2), isBinary ? 2 : 8)\n    : (/^[-+]0x[0-9a-f]+$/i.test(value) ? NAN : +value)\n}\n\nexport function isObject(value) {\n  const type = typeof value;\n  return value != null && (type === 'object' || type === 'function')\n}\n\nexport function isFunction(value) {\n  if (!isObject(value)) {\n    return false\n  }\n\n  const tag = getTag(value);\n  return tag === '[object Function]' || tag === '[object AsyncFunction]' ||\n    tag === '[object GeneratorFunction]' || tag === '[object Proxy]'\n}\n\nexport function findDOMElements(target) {\n  if (isReactRefObj(target)) {\n    return target.current;\n  }\n  if (isFunction(target)) {\n    return target();\n  }\n  if (typeof target === 'string' && canUseDOM) {\n    let selection = document.querySelectorAll(target);\n    if (!selection.length) {\n      selection = document.querySelectorAll(`#${target}`);\n    }\n    if (!selection.length) {\n      throw new Error(\n        `The target '${target}' could not be identified in the dom, tip: check spelling`\n      );\n    }\n    return selection;\n  }\n  return target;\n}\n\nexport function isArrayOrNodeList(els) {\n  if (els === null) {\n    return false;\n  }\n  return Array.isArray(els) || (canUseDOM && typeof els.length === 'number');\n}\n\nexport function getTarget(target, allElements) {\n  const els = findDOMElements(target);\n  if (allElements) {\n    if (isArrayOrNodeList(els)) {\n      return els;\n    }\n    if (els === null) {\n      return [];\n    }\n    return [els];\n  } else {\n    if (isArrayOrNodeList(els)) {\n      return els[0];\n    }\n    return els;\n  }\n}\n\nexport const defaultToggleEvents = ['touchstart', 'click'];\n\nexport function addMultipleEventListeners(_els, handler, _events, useCapture) {\n  let els = _els;\n  if (!isArrayOrNodeList(els)) {\n    els = [els];\n  }\n\n  let events = _events;\n  if (typeof events === 'string') {\n    events = events.split(/\\s+/);\n  }\n\n  if (\n    !isArrayOrNodeList(els) ||\n    typeof handler !== 'function' ||\n    !Array.isArray(events)\n  ) {\n    throw new Error(`\n      The first argument of this function must be DOM node or an array on DOM nodes or NodeList.\n      The second must be a function.\n      The third is a string or an array of strings that represents DOM events\n    `);\n  }\n\n  Array.prototype.forEach.call(events, event => {\n    Array.prototype.forEach.call(els, el => {\n      el.addEventListener(event, handler, useCapture);\n    });\n  });\n  return function removeEvents() {\n    Array.prototype.forEach.call(events, event => {\n      Array.prototype.forEach.call(els, el => {\n        el.removeEventListener(event, handler, useCapture);\n      });\n    });\n  };\n}\n\nexport const focusableElements = [\n  'a[href]',\n  'area[href]',\n  'input:not([disabled]):not([type=hidden])',\n  'select:not([disabled])',\n  'textarea:not([disabled])',\n  'button:not([disabled])',\n  'object',\n  'embed',\n  '[tabindex]:not(.modal)',\n  'audio[controls]',\n  'video[controls]',\n  '[contenteditable]:not([contenteditable=\"false\"])',\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  fluid: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'div',\n};\n\nconst Container = (props) => {\n  const {\n    className,\n    cssModule,\n    fluid,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  let containerClass = 'container';\n  if (fluid === true) {\n    containerClass = 'container-fluid';\n  }\n  else if (fluid) {\n    containerClass = `container-${fluid}`;\n  }\n\n  const classes = mapToCssModules(classNames(\n    className,\n    containerClass\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nContainer.propTypes = propTypes;\nContainer.defaultProps = defaultProps;\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, deprecated } from './utils';\n\nconst rowColWidths = ['xs', 'sm', 'md', 'lg', 'xl', 'xxl'];\nconst rowColsPropType = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\n\nconst propTypes = {\n  tag: tagPropType,\n  noGutters: deprecated(PropTypes.bool, \"Please use Bootstrap 5 gutter utility classes. https://getbootstrap.com/docs/5.0/layout/gutters/\"),\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: rowColsPropType,\n  sm: rowColsPropType,\n  md: rowColsPropType,\n  lg: rowColsPropType,\n  xl: rowColsPropType,\n  xxl: rowColsPropType\n};\n\nconst defaultProps = {\n  tag: 'div',\n  widths: rowColWidths\n};\n\nconst Row = (props) => {\n  const {\n    className,\n    cssModule,\n    noGutters,\n    tag: Tag,\n    widths,\n    ...attributes\n  } = props;\n\n  const colClasses = [];\n\n  widths.forEach((colWidth, i) => {\n    let colSize = props[colWidth];\n\n    delete attributes[colWidth];\n\n    if (!colSize) {\n      return;\n    }\n\n    const isXs = !i;\n    colClasses.push(isXs ? `row-cols-${colSize}` : `row-cols-${colWidth}-${colSize}`);\n  });\n\n  const classes = mapToCssModules(classNames(\n    className,\n    noGutters ? 'gx-0' : null,\n    'row',\n    colClasses\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\n\nexport default Row;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\n\nconst colWidths = ['xs', 'sm', 'md', 'lg', 'xl', 'xxl'];\nconst stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\n\nconst columnProps = PropTypes.oneOfType([\n  PropTypes.bool,\n  PropTypes.number,\n  PropTypes.string,\n  PropTypes.shape({\n    size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n    order: stringOrNumberProp,\n    offset: stringOrNumberProp\n  })\n]);\n\nconst propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  xxl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array,\n};\n\nconst defaultProps = {\n  tag: 'div',\n  widths: colWidths,\n};\n\nconst getColumnSizeClass = (isXs, colWidth, colSize) => {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : `col-${colWidth}`;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : `col-${colWidth}-auto`;\n  }\n\n  return isXs ? `col-${colSize}` : `col-${colWidth}-${colSize}`;\n};\n\n\nexport const getColumnClasses = (attributes, cssModule, widths=colWidths) => {\n  const colClasses = [];\n  \n  widths.forEach((colWidth, i) => {\n    let columnProp = attributes[colWidth];\n\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    const isXs = !i;\n\n    if (isObject(columnProp)) {\n      const colSizeInterfix = isXs ? '-' : `-${colWidth}-`;\n      const colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n\n      colClasses.push(mapToCssModules(classNames({\n        [colClass]: columnProp.size || columnProp.size === '',\n        [`order${colSizeInterfix}${columnProp.order}`]: columnProp.order || columnProp.order === 0,\n        [`offset${colSizeInterfix}${columnProp.offset}`]: columnProp.offset || columnProp.offset === 0\n      }), cssModule));\n    } else {\n      const colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n\n  return {\n    colClasses,\n    attributes\n  }\n}\n\n\nconst Col = (props) => {\n  const {\n    className,\n    cssModule,\n    widths,\n    tag: Tag,\n    ...attributes\n  } = props;\n  \n  let { attributes : modifiedAttributes, colClasses } = getColumnClasses(attributes, cssModule, widths)\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  const classes = mapToCssModules(classNames(\n    className,\n    colClasses\n  ), cssModule);\n\n  return (\n    <Tag {...modifiedAttributes} className={classes} />\n  );\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\n\nexport default Col;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  light: PropTypes.bool,\n  dark: PropTypes.bool,\n  full: PropTypes.bool,\n  fixed: PropTypes.string,\n  sticky: PropTypes.string,\n  color: PropTypes.string,\n  role: PropTypes.string,\n  tag: tagPropType,\n  container: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  expand: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  children: PropTypes.node,\n};\n\nconst defaultProps = {\n  tag: 'nav',\n  expand: false,\n  container: 'fluid',\n};\n\nconst getExpandClass = (expand) => {\n  if (expand === false) {\n    return false;\n  } else if (expand === true || expand === 'xs') {\n    return 'navbar-expand';\n  }\n\n  return `navbar-expand-${expand}`;\n};\n\nconst Navbar = (props) => {\n  const {\n    expand,\n    className,\n    cssModule,\n    light,\n    dark,\n    fixed,\n    sticky,\n    color,\n    container,\n    tag: Tag,\n    children,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'navbar',\n    getExpandClass(expand),\n    {\n      'navbar-light': light,\n      'navbar-dark': dark,\n      [`bg-${color}`]: color,\n      [`fixed-${fixed}`]: fixed,\n      [`sticky-${sticky}`]: sticky,\n    }\n  ), cssModule);\n\n  const containerClass = container && (container === true) ? 'container' : `container-${container}`;\n\n  return (\n    <Tag {...attributes} className={classes}>\n      { container ?\n        <div className={containerClass}>\n          {children}\n        </div> :\n        children\n      }\n    </Tag>\n  );\n};\n\nNavbar.propTypes = propTypes;\nNavbar.defaultProps = defaultProps;\n\nexport default Navbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'a'\n};\n\nconst NavbarBrand = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'navbar-brand'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nNavbarBrand.propTypes = propTypes;\nNavbarBrand.defaultProps = defaultProps;\n\nexport default NavbarBrand;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\n\nconst defaultProps = {\n  tag: 'span'\n};\n\nconst NavbarText = (props) => {\n  const {\n    className,\n    cssModule,\n    active,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'navbar-text'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nNavbarText.propTypes = propTypes;\nNavbarText.defaultProps = defaultProps;\n\nexport default NavbarText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  type: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n};\n\nconst defaultProps = {\n  tag: 'button',\n  type: 'button'\n};\n\nconst NavbarToggler = (props) => {\n  const {\n    className,\n    cssModule,\n    children,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'navbar-toggler'\n  ), cssModule);\n\n  return (\n    <Tag aria-label=\"Toggle navigation\" {...attributes} className={classes}>\n      {children || <span className={mapToCssModules('navbar-toggler-icon', cssModule)} />}\n    </Tag>\n  );\n};\n\nNavbarToggler.propTypes = propTypes;\nNavbarToggler.defaultProps = defaultProps;\n\nexport default NavbarToggler;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tabs: PropTypes.bool,\n  pills: PropTypes.bool,\n  vertical: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  horizontal: PropTypes.string,\n  justified: PropTypes.bool,\n  fill: PropTypes.bool,\n  navbar: PropTypes.bool,\n  card: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'ul',\n  vertical: false,\n};\n\nconst getVerticalClass = (vertical) => {\n  if (vertical === false) {\n    return false;\n  } else if (vertical === true || vertical === 'xs') {\n    return 'flex-column';\n  }\n\n  return `flex-${vertical}-column`;\n};\n\nconst Nav = (props) => {\n  const {\n    className,\n    cssModule,\n    tabs,\n    pills,\n    vertical,\n    horizontal,\n    justified,\n    fill,\n    navbar,\n    card,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    navbar ? 'navbar-nav' : 'nav',\n    horizontal ? `justify-content-${horizontal}` : false,\n    getVerticalClass(vertical),\n    {\n      'nav-tabs': tabs,\n      'card-header-tabs': card && tabs,\n      'nav-pills': pills,\n      'card-header-pills': card && pills,\n      'nav-justified': justified,\n      'nav-fill': fill,\n    }\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nNav.propTypes = propTypes;\nNav.defaultProps = defaultProps;\n\nexport default Nav;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'li'\n};\n\nconst NavItem = (props) => {\n  const {\n    className,\n    cssModule,\n    active,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'nav-item',\n    active ? 'active' : false\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nNavItem.propTypes = propTypes;\nNavItem.defaultProps = defaultProps;\n\nexport default NavItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  disabled: PropTypes.bool,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  onClick: PropTypes.func,\n  href: PropTypes.any,\n};\n\nconst defaultProps = {\n  tag: 'a',\n};\n\nclass NavLink extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick(e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.href === '#') {\n      e.preventDefault();\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n  }\n\n  render() {\n    let {\n      className,\n      cssModule,\n      active,\n      tag: Tag,\n      innerRef,\n      ...attributes\n    } = this.props;\n\n    const classes = mapToCssModules(classNames(\n      className,\n      'nav-link',\n      {\n        disabled: attributes.disabled,\n        active: active\n      }\n    ), cssModule);\n\n    return (\n      <Tag {...attributes} ref={innerRef} onClick={this.onClick} className={classes} />\n    );\n  }\n}\n\nNavLink.propTypes = propTypes;\nNavLink.defaultProps = defaultProps;\n\nexport default NavLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  listTag: tagPropType,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string\n};\n\nconst defaultProps = {\n  tag: 'nav',\n  listTag: 'ol',\n  'aria-label': 'breadcrumb'\n};\n\nconst Breadcrumb = (props) => {\n  const {\n    className,\n    listClassName,\n    cssModule,\n    children,\n    tag: Tag,\n    listTag: ListTag,\n    'aria-label': label,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className\n  ), cssModule);\n\n  const listClasses = mapToCssModules(classNames(\n    'breadcrumb',\n    listClassName\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} aria-label={label}>\n      <ListTag className={listClasses}>\n        {children}\n      </ListTag>\n    </Tag>\n  );\n};\n\nBreadcrumb.propTypes = propTypes;\nBreadcrumb.defaultProps = defaultProps;\n\nexport default Breadcrumb;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'li'\n};\n\nconst BreadcrumbItem = (props) => {\n  const {\n    className,\n    cssModule,\n    active,\n    tag: Tag,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    active ? 'active' : false,\n    'breadcrumb-item'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} aria-current={active ? 'page' : undefined} />\n  );\n};\n\nBreadcrumbItem.propTypes = propTypes;\nBreadcrumbItem.defaultProps = defaultProps;\n\nexport default BreadcrumbItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules } from './utils';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  'aria-label': PropTypes.string,\n  onClick: PropTypes.func,\n  variant: PropTypes.oneOf(['white'])\n}\n\nconst defaultProps = {\n  'aria-label': 'close'\n}\n\nconst CloseButton = (props) => {\n  const {\n    className,\n    cssModule,\n    variant,\n    innerRef,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'btn-close',\n    variant && `btn-close-${variant}`\n  ))\n\n  return (\n    <button\n      ref={innerRef}\n      type=\"button\"\n      className={classes}\n      {...attributes} />\n  )\n}\n\nCloseButton.propTypes = propTypes;\nCloseButton.defaultProps = defaultProps;\n\nexport default CloseButton;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport CloseButton from './CloseButton';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  'aria-label': PropTypes.string,\n  block: PropTypes.bool,\n  color: PropTypes.string,\n  disabled: PropTypes.bool,\n  outline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  onClick: PropTypes.func,\n  size: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  close: PropTypes.bool,\n};\n\nconst defaultProps = {\n  color: 'secondary',\n  tag: 'button',\n};\n\n\nfunction Button(props) {\n  const onClick = useCallback((e) => {\n    if (props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (props.onClick) {\n      return props.onClick(e);\n    }\n  }, [props.onClick, props.disabled])\n\n\n  let {\n    active,\n    'aria-label': ariaLabel,\n    block,\n    className,\n    close,\n    cssModule,\n    color,\n    outline,\n    size,\n    tag: Tag,\n    innerRef,\n    ...attributes\n  } = props;\n\n  if (close) {\n    return (\n      <CloseButton\n        {...attributes}\n      />\n    )\n  }\n\n  const btnOutlineColor = `btn${outline ? '-outline' : ''}-${color}`;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'btn',\n    btnOutlineColor,\n    size ? `btn-${size}` : false,\n    block ? 'd-block w-100' : false,\n    { active, disabled: props.disabled }\n  ), cssModule);\n\n  if (attributes.href && Tag === 'button') {\n    Tag = 'a';\n  }\n\n  return (\n    <Tag\n      type={(Tag === 'button' && attributes.onClick) ? 'button' : undefined}\n      {...attributes}\n      className={classes}\n      ref={innerRef}\n      onClick={onClick}\n      aria-label={ariaLabel}\n    />\n  );\n}\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\n\nexport default Button;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport Button from \"./Button\";\nimport classNames from 'classnames';\nimport { mapToCssModules } from './utils';\n\nconst propTypes = {\n  onClick: PropTypes.func,\n  onBlur: PropTypes.func,\n  onFocus: PropTypes.func,\n  defaultValue: PropTypes.bool,\n};\n\nconst defaultProps = {\n  defaultValue: false,\n};\n\nclass ButtonToggle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      toggled: props.defaultValue,\n      focus: false,\n    }\n\n    this.onBlur = this.onBlur.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onBlur(e) {\n    if(this.props.onBlur) {\n      this.props.onBlur(e);\n    }\n\n    this.setState({\n      focus: false,\n    });\n  }\n\n  onFocus(e) {\n    if(this.props.onFocus) {\n      this.props.onFocus(e);\n    }\n\n    this.setState({\n      focus: true,\n    });\n  }\n\n  onClick(e) {\n    if(this.props.onClick) {\n      this.props.onClick(e);\n    }\n\n    this.setState(({ toggled }) => ({\n      toggled: !toggled,\n    }));\n  }\n\n  render() {\n    const {\n      className,\n      ...attributes\n    } = this.props;\n\n    const classes = mapToCssModules(classNames(\n      className, \n      { \n        focus: this.state.focus, \n      }\n      ), this.props.cssModule);\n\n    return <Button\n      active={this.state.toggled}\n      onBlur={this.onBlur} \n      onFocus={this.onFocus} \n      onClick={this.onClick}\n      className={classes}\n      {...attributes}\n    />;\n  }\n}\n\nButtonToggle.propTypes = propTypes;\nButtonToggle.defaultProps = defaultProps;\n\nexport default ButtonToggle;\n","import React from 'react';\n\n/**\n * DropdownContext\n * {\n *  toggle: PropTypes.func.isRequired,\n *  isOpen: PropTypes.bool.isRequired,\n *  direction: PropTypes.oneOf(['up', 'down', 'start', 'end']).isRequired,\n *  inNavbar: PropTypes.bool.isRequired,\n *  disabled: PropTypes.bool\n * }\n */\nexport const DropdownContext = React.createContext({});","/* eslint react/no-find-dom-node: 0 */\n// https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-find-dom-node.md\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Manager } from 'react-popper';\nimport classNames from 'classnames';\nimport { DropdownContext } from './DropdownContext';\nimport { mapToCssModules, omit, keyCodes, tagPropType } from './utils';\n\nconst propTypes = {\n  a11y: PropTypes.bool,\n  disabled: PropTypes.bool,\n  direction: PropTypes.oneOf(['up', 'down', 'start', 'end', 'left', 'right']),\n  group: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  nav: PropTypes.bool,\n  active: PropTypes.bool,\n  size: PropTypes.string,\n  tag: tagPropType,\n  toggle: PropTypes.func,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  inNavbar: PropTypes.bool,\n  setActiveFromChild: PropTypes.bool,\n  menuRole: PropTypes.oneOf(['listbox', 'menu'])\n};\n\nconst defaultProps = {\n  a11y: true,\n  isOpen: false,\n  direction: 'down',\n  nav: false,\n  active: false,\n  inNavbar: false,\n  setActiveFromChild: false\n};\n\nconst preventDefaultKeys = [\n  keyCodes.space,\n  keyCodes.enter,\n  keyCodes.up,\n  keyCodes.down,\n  keyCodes.end,\n  keyCodes.home\n]\n\nclass Dropdown extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addEvents = this.addEvents.bind(this);\n    this.handleDocumentClick = this.handleDocumentClick.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.removeEvents = this.removeEvents.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.handleMenuRef = this.handleMenuRef.bind(this);\n\n    this.containerRef = React.createRef();\n    this.menuRef = React.createRef();\n  }\n\n  handleMenuRef(menuRef) {\n    this.menuRef.current = menuRef;\n  }\n\n  getContextValue() {\n    return {\n      toggle: this.toggle,\n      isOpen: this.props.isOpen,\n      direction: (this.props.direction === 'down' && this.props.dropup) ? 'up' : this.props.direction,\n      inNavbar: this.props.inNavbar,\n      disabled: this.props.disabled,\n      // Callback that should be called by DropdownMenu to provide a ref to\n      // a HTML tag that's used for the DropdownMenu\n      onMenuRef: this.handleMenuRef,\n      menuRole: this.props.menuRole\n    };\n  }\n\n  componentDidMount() {\n    this.handleProps();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.isOpen !== prevProps.isOpen) {\n      this.handleProps();\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeEvents();\n  }\n\n  getContainer() {\n    return this.containerRef.current;\n  }\n\n  getMenu() {\n    return this.menuRef.current;\n  }\n\n  getMenuCtrl() {\n    if (this._$menuCtrl) return this._$menuCtrl;\n    this._$menuCtrl = this.getContainer().querySelector('[aria-expanded]');\n    return this._$menuCtrl;\n  }\n\n  getItemType() {\n    if(this.context.menuRole === 'listbox') {\n      return 'option'\n    }\n    return 'menuitem'\n  }\n\n  getMenuItems() {\n    // In a real menu with a child DropdownMenu, `this.getMenu()` should never\n    // be null, but it is sometimes null in tests. To mitigate that, we just\n    // use `this.getContainer()` as the fallback `menuContainer`.\n    const menuContainer = this.getMenu() || this.getContainer();\n    return [].slice.call(menuContainer.querySelectorAll(`[role=\"${this.getItemType()}\"]`));\n  }\n\n  addEvents() {\n    ['click', 'touchstart', 'keyup'].forEach(event =>\n      document.addEventListener(event, this.handleDocumentClick, true)\n    );\n  }\n\n  removeEvents() {\n    ['click', 'touchstart', 'keyup'].forEach(event =>\n      document.removeEventListener(event, this.handleDocumentClick, true)\n    );\n  }\n\n  handleDocumentClick(e) {\n    if (e && (e.which === 3 || (e.type === 'keyup' && e.which !== keyCodes.tab))) return;\n    const container = this.getContainer();\n    const menu = this.getMenu();\n    const clickIsInContainer = container.contains(e.target) && container !== e.target;\n    const clickIsInInput = container.classList.contains('input-group') && container.classList.contains('dropdown') && e.target.tagName === 'INPUT';\n    const clickIsInMenu = menu && menu.contains(e.target) && menu !== e.target;\n    if (((clickIsInContainer && !clickIsInInput) || clickIsInMenu) && (e.type !== 'keyup' || e.which === keyCodes.tab)) {\n      return;\n    }\n\n    this.toggle(e);\n  }\n\n  handleKeyDown(e) {\n    const isTargetMenuItem = e.target.getAttribute('role') === 'menuitem' || e.target.getAttribute('role') === 'option';\n    const isTargetMenuCtrl = this.getMenuCtrl() === e.target;\n    const isTab = keyCodes.tab === e.which;\n\n    if (\n      /input|textarea/i.test(e.target.tagName)\n      || (isTab && !this.props.a11y)\n      || (isTab && !(isTargetMenuItem || isTargetMenuCtrl))\n    ) {\n      return;\n    }\n\n    if (preventDefaultKeys.indexOf(e.which) !== -1 || ((e.which >= 48) && (e.which <= 90))) {\n      e.preventDefault();\n    }\n\n    if (this.props.disabled) return;\n\n    if (isTargetMenuCtrl) {\n      if ([keyCodes.space, keyCodes.enter, keyCodes.up, keyCodes.down].indexOf(e.which) > -1) {\n        // Open the menu (if not open) and focus the first menu item\n        if (!this.props.isOpen) {\n          this.toggle(e);\n        }\n        setTimeout(() => this.getMenuItems()[0].focus());\n      } else if (this.props.isOpen && isTab) {\n        // Focus the first menu item if tabbing from an open menu. We need this\n        // for cases where the DropdownMenu sets a custom container, which may\n        // not be the natural next item to tab to from the DropdownToggle.\n        e.preventDefault();\n        this.getMenuItems()[0].focus();\n      } else if (this.props.isOpen && e.which === keyCodes.esc) {\n        this.toggle(e);\n      }\n    }\n\n    if (this.props.isOpen && isTargetMenuItem) {\n      if ([keyCodes.tab, keyCodes.esc].indexOf(e.which) > -1) {\n        this.toggle(e);\n        this.getMenuCtrl().focus();\n      } else if ([keyCodes.space, keyCodes.enter].indexOf(e.which) > -1) {\n        e.target.click();\n        this.getMenuCtrl().focus();\n      } else if (\n        [keyCodes.down, keyCodes.up].indexOf(e.which) > -1\n        || ([keyCodes.n, keyCodes.p].indexOf(e.which) > -1 && e.ctrlKey)\n      ) {\n        const $menuitems = this.getMenuItems();\n        let index = $menuitems.indexOf(e.target);\n        if (keyCodes.up === e.which || (keyCodes.p === e.which && e.ctrlKey)) {\n          index = index !== 0 ? index - 1 : $menuitems.length - 1;\n        } else if (keyCodes.down === e.which || (keyCodes.n === e.which && e.ctrlKey)) {\n          index = index === $menuitems.length - 1 ? 0 : index + 1;\n        }\n        $menuitems[index].focus();\n      } else if (keyCodes.end === e.which) {\n        const $menuitems = this.getMenuItems();\n        $menuitems[$menuitems.length - 1].focus();\n      } else if (keyCodes.home === e.which) {\n        const $menuitems = this.getMenuItems();\n        $menuitems[0].focus();\n      } else if ((e.which >= 48) && (e.which <= 90)) {\n        const $menuitems = this.getMenuItems();\n        const charPressed = String.fromCharCode(e.which).toLowerCase();\n        for (let i = 0; i < $menuitems.length; i += 1) {\n          const firstLetter = $menuitems[i].textContent && $menuitems[i].textContent[0].toLowerCase();\n          if (firstLetter === charPressed) {\n            $menuitems[i].focus();\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  handleProps() {\n    if (this.props.isOpen) {\n      this.addEvents();\n    } else {\n      this.removeEvents();\n    }\n  }\n\n  toggle(e) {\n    if (this.props.disabled) {\n      return e && e.preventDefault();\n    }\n\n    return this.props.toggle(e);\n  }\n\n  render() {\n    const {\n      className,\n      cssModule,\n      direction,\n      isOpen,\n      group,\n      size,\n      nav,\n      setActiveFromChild,\n      active,\n      tag,\n      menuRole,\n      ...attrs\n    } = omit(this.props, ['toggle', 'disabled', 'inNavbar', 'a11y']);\n\n    const Tag = tag || (nav ? 'li' : 'div');\n\n    let subItemIsActive = false;\n    if (setActiveFromChild) {\n      React.Children.map(this.props.children[1].props.children,\n        (dropdownItem) => {\n          if (dropdownItem && dropdownItem.props.active) subItemIsActive = true;\n        }\n      );\n    }\n\n    const classes = mapToCssModules(classNames(\n      className,\n      nav && active ? 'active' : false,\n      setActiveFromChild && subItemIsActive ? 'active' : false,\n      {\n        'btn-group': group,\n        [`btn-group-${size}`]: !!size,\n        dropdown: !group,\n        dropup: direction === 'up',\n        dropstart: direction === 'start' || direction === 'left',\n        dropend: direction === 'end' || direction === 'right',\n        show: isOpen,\n        'nav-item': nav\n      }\n    ), cssModule);\n\n    return (\n      <DropdownContext.Provider value={this.getContextValue()}>\n        <Manager>\n          <Tag\n            {...attrs}\n            {...{ [typeof Tag === 'string' ? 'ref' : 'innerRef']: this.containerRef }}\n            onKeyDown={this.handleKeyDown}\n            className={classes}\n          />\n        </Manager>\n      </DropdownContext.Provider>\n    );\n  }\n}\n\nDropdown.propTypes = propTypes;\nDropdown.defaultProps = defaultProps;\n\nexport default Dropdown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\n\nconst propTypes = {\n  children: PropTypes.node,\n};\n\nconst ButtonDropdown = (props) => {\n  return (\n    <Dropdown group {...props} />\n  );\n};\n\nButtonDropdown.propTypes = propTypes;\n\nexport default ButtonDropdown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  'aria-label': PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  role: PropTypes.string,\n  size: PropTypes.string,\n  vertical: PropTypes.bool,\n};\n\nconst defaultProps = {\n  tag: 'div',\n  role: 'group',\n};\n\nconst ButtonGroup = (props) => {\n  const {\n    className,\n    cssModule,\n    size,\n    vertical,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    size ? 'btn-group-' + size : false,\n    vertical ? 'btn-group-vertical' : 'btn-group'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nButtonGroup.propTypes = propTypes;\nButtonGroup.defaultProps = defaultProps;\n\nexport default ButtonGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  'aria-label': PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  role: PropTypes.string,\n};\n\nconst defaultProps = {\n  tag: 'div',\n  role: 'toolbar',\n};\n\nconst ButtonToolbar = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'btn-toolbar'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nButtonToolbar.propTypes = propTypes;\nButtonToolbar.defaultProps = defaultProps;\n\nexport default ButtonToolbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { DropdownContext } from './DropdownContext';\nimport { mapToCssModules, omit, tagPropType } from './utils';\n\nconst propTypes = {\n  children: PropTypes.node,\n  active: PropTypes.bool,\n  disabled: PropTypes.bool,\n  divider: PropTypes.bool,\n  tag: tagPropType,\n  header: PropTypes.bool,\n  onClick: PropTypes.func,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  toggle: PropTypes.bool,\n  text: PropTypes.bool\n};\n\nconst defaultProps = {\n  tag: 'button',\n  toggle: true\n};\n\nclass DropdownItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClick = this.onClick.bind(this);\n    this.getTabIndex = this.getTabIndex.bind(this);\n  }\n\n  getRole() {\n    if(this.context.menuRole === 'listbox') {\n      return 'option'\n    }\n    return 'menuitem'\n  }\n\n  onClick(e) {\n    const { disabled, header, divider, text } = this.props;\n    if (disabled || header || divider || text) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n\n    if (this.props.toggle) {\n      this.context.toggle(e);\n    }\n  }\n\n  getTabIndex() {\n    const { disabled, header, divider, text } = this.props;\n    if (disabled || header || divider || text) {\n      return '-1';\n    }\n\n    return '0';\n  }\n\n  render() {\n    const tabIndex = this.getTabIndex();\n    const role = tabIndex > -1 ? this.getRole() : undefined;\n    let {\n      className,\n      cssModule,\n      divider,\n      tag: Tag,\n      header,\n      active,\n      text,\n      ...props } = omit(this.props, ['toggle']);\n\n    const classes = mapToCssModules(classNames(\n      className,\n      {\n        disabled: props.disabled,\n        'dropdown-item': !divider && !header && !text,\n        active: active,\n        'dropdown-header': header,\n        'dropdown-divider': divider,\n        'dropdown-item-text': text\n      }\n    ), cssModule);\n\n    if (Tag === 'button') {\n      if (header) {\n        Tag = 'h6';\n      } else if (divider) {\n        Tag = 'div';\n      } else if (props.href) {\n        Tag = 'a';\n      } else if (text) {\n        Tag = 'span';\n      }\n    }\n\n    return (\n      <Tag\n        type={(Tag === 'button' && (props.onClick || this.props.toggle)) ? 'button' : undefined}\n        {...props}\n        tabIndex={tabIndex}\n        role={role}\n        className={classes}\n        onClick={this.onClick}\n      />\n    );\n  }\n}\n\nDropdownItem.propTypes = propTypes;\nDropdownItem.defaultProps = defaultProps;\nDropdownItem.contextType = DropdownContext;\n\nexport default DropdownItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport { Popper } from 'react-popper';\nimport { DropdownContext } from './DropdownContext';\nimport { mapToCssModules, tagPropType, targetPropType, getTarget, deprecated } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  children: PropTypes.node.isRequired,\n  dark: PropTypes.bool,\n  end: PropTypes.bool,\n  flip: PropTypes.bool,\n  modifiers: PropTypes.array,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  persist: PropTypes.bool,\n  strategy: PropTypes.string,\n  container: targetPropType,\n  /** Update popper layout when a click event comes up. This leverages event bubbling. */\n  updateOnSelect: PropTypes.bool,\n  right: deprecated(PropTypes.bool, 'Please use \"end\" instead.'),\n};\n\nconst defaultProps = {\n  tag: 'div',\n  flip: true,\n  modifiers: [],\n};\n\nconst directionPositionMap = {\n  up: 'top',\n  left: 'left',\n  right: 'right',\n  start: 'left',\n  end: 'right',\n  down: 'bottom',\n};\n\nclass DropdownMenu extends React.Component {\n\n  getRole() {\n    if(this.context.menuRole === 'listbox') {\n      return 'listbox'\n    }\n    return 'menu'\n  }\n\n  render() {\n    const {\n      className,\n      cssModule,\n      dark,\n      end,\n      right,\n      tag,\n      flip,\n      modifiers,\n      persist,\n      strategy,\n      container,\n      updateOnSelect,\n      ...attrs\n    } = this.props;\n\n    const classes = mapToCssModules(classNames(\n      className,\n      'dropdown-menu',\n      {\n        'dropdown-menu-dark': dark,\n        'dropdown-menu-end': end || right,\n        show: this.context.isOpen,\n      }\n    ), cssModule);\n\n    const Tag = tag;\n\n    if (persist || (this.context.isOpen && !this.context.inNavbar)) {\n\n      const position1 = directionPositionMap[this.context.direction] || 'bottom';\n      const position2 = (end || right) ? 'end' : 'start';\n      const poperPlacement = `${position1}-${position2}`;\n      const poperModifiers = [\n        ...modifiers,\n        {\n          name: 'flip',\n          enabled: !!flip,\n        },\n       ];\n\n      const popper = (\n        <Popper\n          placement={poperPlacement}\n          modifiers={poperModifiers}\n          strategy={strategy}\n        >\n          {({ ref, style, placement, update }) => {\n            let combinedStyle = { ...this.props.style, ...style };\n\n            const handleRef = (tagRef) => {\n              // Send the ref to `react-popper`\n              ref(tagRef);\n              // Send the ref to the parent Dropdown so that clicks outside\n              // it will cause it to close\n              const { onMenuRef } = this.context;\n              if (onMenuRef) onMenuRef(tagRef);\n            };\n\n            return (\n              <Tag\n                tabIndex=\"-1\"\n                role={this.getRole()}\n                ref={handleRef}\n                {...attrs}\n                style={combinedStyle}\n                aria-hidden={!this.context.isOpen}\n                className={classes}\n                data-popper-placement={placement}\n                onClick={() => updateOnSelect && update()}\n              />\n            );\n          }}\n        </Popper>\n      );\n\n      if (container) {\n        return ReactDOM.createPortal(popper, getTarget(container));\n      } else {\n        return popper;\n      }\n    }\n\n    return (\n      <Tag\n        tabIndex=\"-1\"\n        role={this.getRole()}\n        {...attrs}\n        aria-hidden={!this.context.isOpen}\n        className={classes}\n        data-popper-placement={attrs.placement}\n      />\n    );\n  }\n};\n\nDropdownMenu.propTypes = propTypes;\nDropdownMenu.defaultProps = defaultProps;\nDropdownMenu.contextType = DropdownContext;\n\nexport default DropdownMenu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Reference } from 'react-popper';\nimport { DropdownContext } from './DropdownContext';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Button from './Button';\n\nconst propTypes = {\n  caret: PropTypes.bool,\n  color: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  'aria-haspopup': PropTypes.bool,\n  split: PropTypes.bool,\n  tag: tagPropType,\n  nav: PropTypes.bool,\n};\n\nconst defaultProps = {\n  color: 'secondary',\n  'aria-haspopup': true\n};\n\nclass DropdownToggle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick(e) {\n    if (this.props.disabled || this.context.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.nav && !this.props.tag) {\n      e.preventDefault();\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n\n    this.context.toggle(e);\n  }\n\n  getRole() {\n    return this.context.menuRole || this.props['aria-haspopup'];\n  }\n\n  render() {\n    const { className, color, cssModule, caret, split, nav, tag, innerRef, ...props } = this.props;\n    const ariaLabel = props['aria-label'] || 'Toggle Dropdown';\n    const classes = mapToCssModules(classNames(\n      className,\n      {\n        'dropdown-toggle': caret || split,\n        'dropdown-toggle-split': split,\n        'nav-link': nav\n      }\n    ), cssModule);\n    const children =\n      typeof props.children !== 'undefined' ? (\n        props.children\n      ) : (\n        <span className=\"visually-hidden\">{ariaLabel}</span>\n      );\n\n    let Tag;\n\n    if (nav && !tag) {\n      Tag = 'a';\n      props.href = '#';\n    } else if (!tag) {\n      Tag = Button;\n      props.color = color;\n      props.cssModule = cssModule;\n    } else {\n      Tag = tag;\n    }\n\n    if (this.context.inNavbar) {\n      return (\n        <Tag\n          {...props}\n          className={classes}\n          onClick={this.onClick}\n          aria-expanded={this.context.isOpen}\n          aria-haspopup={this.getRole()}\n          children={children}\n        />\n      );\n    }\n\n    return (\n      <Reference innerRef={innerRef}>\n        {({ ref }) => (\n          <Tag\n            {...props}\n            {...{ [typeof Tag === 'string' ? 'ref' : 'innerRef']: ref }}\n\n            className={classes}\n            onClick={this.onClick}\n            aria-expanded={this.context.isOpen}\n            aria-haspopup={this.getRole()}\n            children={children}\n          />\n        )}\n      </Reference>\n    );\n  }\n}\n\nDropdownToggle.propTypes = propTypes;\nDropdownToggle.defaultProps = defaultProps;\nDropdownToggle.contextType = DropdownContext;\n\nexport default DropdownToggle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Transition } from 'react-transition-group';\nimport { mapToCssModules, omit, pick, TransitionPropTypeKeys, TransitionTimeouts, tagPropType } from './utils';\n\nconst propTypes = {\n  ...Transition.propTypes,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]),\n  tag: tagPropType,\n  baseClass: PropTypes.string,\n  baseClassActive: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.func,\n  ]),\n};\n\nconst defaultProps = {\n  ...Transition.defaultProps,\n  tag: 'div',\n  baseClass: 'fade',\n  baseClassActive: 'show',\n  timeout: TransitionTimeouts.Fade,\n  appear: true,\n  enter: true,\n  exit: true,\n  in: true,\n};\n\nfunction Fade(props) {\n  const {\n    tag: Tag,\n    baseClass,\n    baseClassActive,\n    className,\n    cssModule,\n    children,\n    innerRef,\n    ...otherProps\n  } = props;\n\n  const transitionProps = pick(otherProps, TransitionPropTypeKeys);\n  const childProps = omit(otherProps, TransitionPropTypeKeys);\n\n  return (\n    <Transition {...transitionProps}>\n      {(status) => {\n        const isActive = status === 'entered';\n        const classes = mapToCssModules(classNames(\n          className,\n          baseClass,\n          isActive && baseClassActive\n        ), cssModule);\n        return (\n          <Tag className={classes} {...childProps} ref={innerRef}>\n            {children}\n          </Tag>\n        );\n      }}\n    </Transition>\n  );\n}\n\nFade.propTypes = propTypes;\nFade.defaultProps = defaultProps;\n\nexport default Fade;\n","import React from 'react';\n\n/**\n * AccordionContext\n * {\n *  toggle: PropTypes.func.isRequired,\n *  openId: PropTypes.string,    \n * }\n */\nexport const AccordionContext = React.createContext({});\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport { AccordionContext } from './AccordionContext';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.func,\n  ]),\n  children: PropTypes.node,\n  flush: PropTypes.bool,\n  open: PropTypes.oneOfType([PropTypes.array, PropTypes.string]).isRequired,\n  toggle: PropTypes.func.isRequired,\n};\n\nconst defaultProps = {\n  tag: 'div'\n};\n\nconst Accordion = (props) => {\n  const {\n    flush,\n    open,\n    toggle,\n    className,\n    cssModule,\n    tag: Tag,\n    innerRef,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'accordion',\n    {\n      'accordion-flush': flush\n    }\n  ), cssModule);\n\n  const accordionContext = useMemo(() => ({\n    open,\n    toggle,\n  }));\n\n  return (\n    <AccordionContext.Provider value={accordionContext}>\n      <Tag {...attributes} className={classes} ref={innerRef} />\n    </AccordionContext.Provider>\n  );\n};\n\nAccordion.propTypes = propTypes;\nAccordion.defaultProps = defaultProps;\n\nexport default Accordion;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { tagPropType } from './utils';\nimport Accordion from './Accordion';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.func,\n  ]),\n  children: PropTypes.node,\n  defaultOpen: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  stayOpen: PropTypes.bool,\n};\n\nconst defaultProps = {\n  tag: 'div'\n};\n\nconst UncontrolledAccordion = ({ defaultOpen, stayOpen, ...props }) => {\n  const [open, setOpen] = useState(defaultOpen || (stayOpen ? [] : undefined));\n  const toggle = (id) => {\n    if (stayOpen) {\n      open.includes(id) ? setOpen(open.filter(accordionId => accordionId !== id)) : setOpen([...open, id]);\n    } else {\n      open === id ? setOpen(undefined) : setOpen(id);\n    }\n  };\n\n  return <Accordion {...props} open={open} toggle={toggle} />;\n};\n\nUncontrolledAccordion.propTypes = propTypes;\nUncontrolledAccordion.defaultProps = defaultProps;\n\nexport default UncontrolledAccordion;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport { AccordionContext } from './AccordionContext';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.func,\n  ]),\n  children: PropTypes.node,\n  targetId: PropTypes.string.isRequired,\n};\n\nconst defaultProps = {\n  tag: 'h2'\n};\n\nconst AccordionHeader = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    innerRef,\n    children,\n    targetId,\n    ...attributes\n  } = props;\n  const { open, toggle } = useContext(AccordionContext);\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'accordion-header',\n  ), cssModule);\n\n  const buttonClasses = mapToCssModules(classNames(\n    'accordion-button',\n    {\n      collapsed: !(Array.isArray(open) ? open.includes(targetId) : open === targetId)\n    },\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} ref={innerRef}>\n      <button type=\"button\" className={buttonClasses} onClick={() => toggle(targetId)}>\n        {children}\n      </button>\n    </Tag>\n  );\n};\n\nAccordionHeader.propTypes = propTypes;\nAccordionHeader.defaultProps = defaultProps;\n\nexport default AccordionHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.func,\n  ]),\n  children: PropTypes.node,\n};\n\nconst defaultProps = {\n  tag: 'div'\n};\n\nconst AccordionItem = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    innerRef,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'accordion-item',\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} ref={innerRef} />\n  );\n};\n\nAccordionItem.propTypes = propTypes;\nAccordionItem.defaultProps = defaultProps;\n\nexport default AccordionItem;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Transition } from 'react-transition-group';\nimport { mapToCssModules, omit, pick, TransitionTimeouts, TransitionPropTypeKeys, TransitionStatuses, tagPropType } from './utils';\n\nconst propTypes = {\n  ...Transition.propTypes,\n  horizontal: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]),\n  tag: tagPropType,\n  className: PropTypes.node,\n  navbar: PropTypes.bool,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.object\n  ]),\n};\n\nconst defaultProps = {\n  ...Transition.defaultProps,\n  horizontal: false,\n  isOpen: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  tag: 'div',\n  timeout: TransitionTimeouts.Collapse,\n};\n\nconst transitionStatusToClassHash = {\n  [TransitionStatuses.ENTERING]: 'collapsing',\n  [TransitionStatuses.ENTERED]: 'collapse show',\n  [TransitionStatuses.EXITING]: 'collapsing',\n  [TransitionStatuses.EXITED]: 'collapse',\n};\n\nfunction getTransitionClass(status) {\n  return transitionStatusToClassHash[status] || 'collapse';\n}\n\nclass Collapse extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dimension: null\n    };\n\n    ['onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited'].forEach((name) => {\n      this[name] = this[name].bind(this);\n    });\n  }\n\n  getDimension(node) {\n    return this.props.horizontal ? node.scrollWidth : node.scrollHeight;\n  }\n\n  onEntering(node, isAppearing) {\n    this.setState({ dimension: this.getDimension(node) });\n    this.props.onEntering(node, isAppearing);\n  }\n\n  onEntered(node, isAppearing) {\n    this.setState({ dimension: null });\n    this.props.onEntered(node, isAppearing);\n  }\n\n  onExit(node) {\n    this.setState({ dimension: this.getDimension(node) });\n    this.props.onExit(node);\n  }\n\n  onExiting(node) {\n    // getting this variable triggers a reflow\n    const _unused = this.getDimension(node); // eslint-disable-line no-unused-vars\n    this.setState({ dimension: 0 });\n    this.props.onExiting(node);\n  }\n\n  onExited(node) {\n    this.setState({ dimension: null });\n    this.props.onExited(node);\n  }\n\n  render() {\n    const {\n      tag: Tag,\n      horizontal,\n      isOpen,\n      className,\n      navbar,\n      cssModule,\n      children,\n      innerRef,\n      ...otherProps\n    } = this.props;\n\n    const { dimension } = this.state;\n\n    const transitionProps = pick(otherProps, TransitionPropTypeKeys);\n    const childProps = omit(otherProps, TransitionPropTypeKeys);\n    return (\n      <Transition\n        {...transitionProps}\n        in={isOpen}\n        onEntering={this.onEntering}\n        onEntered={this.onEntered}\n        onExit={this.onExit}\n        onExiting={this.onExiting}\n        onExited={this.onExited}\n      >\n        {(status) => {\n          let collapseClass = getTransitionClass(status);\n          const classes = mapToCssModules(classNames(\n            className,\n            horizontal && 'collapse-horizontal',\n            collapseClass,\n            navbar && 'navbar-collapse'\n          ), cssModule);\n          const style = dimension === null ? null : { [horizontal ? 'width' : 'height']: dimension };\n          return (\n            <Tag\n              {...childProps}\n              style={{ ...childProps.style, ...style }}\n              className={classes}\n              ref={this.props.innerRef}\n            >\n              {children}\n            </Tag>\n          );\n        }}\n      </Transition>\n    );\n  }\n}\n\nCollapse.propTypes = propTypes;\nCollapse.defaultProps = defaultProps;\nexport default Collapse;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Collapse from './Collapse';\nimport { AccordionContext } from './AccordionContext';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.func,\n  ]),\n  children: PropTypes.node,\n  accordionId: PropTypes.string.isRequired,\n};\n\nconst defaultProps = {\n  tag: 'div'\n};\n\nconst AccordionBody = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    innerRef,\n    children,\n    accordionId,\n    ...attributes\n  } = props;\n\n  const { open } = useContext(AccordionContext);\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'accordion-collapse',\n  ), cssModule);\n\n  return (\n    <Collapse\n      {...attributes}\n      className={classes}\n      ref={innerRef} isOpen={Array.isArray(open) ? open.includes(accordionId) : open === accordionId }>\n      <Tag className=\"accordion-body\">{children}</Tag>\n    </Collapse>\n  );\n};\n\nAccordionBody.propTypes = propTypes;\nAccordionBody.defaultProps = defaultProps;\n\nexport default AccordionBody;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  color: PropTypes.string,\n  pill: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  color: 'secondary',\n  pill: false,\n  tag: 'span'\n};\n\nconst Badge = (props) => {\n  let {\n    className,\n    cssModule,\n    color,\n    innerRef,\n    pill,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'badge',\n    'bg-' + color,\n    pill ? 'rounded-pill' : false\n  ), cssModule);\n\n  if (attributes.href && Tag === 'span') {\n    Tag = 'a';\n  }\n\n  return (\n    <Tag {...attributes} className={classes} ref={innerRef} />\n  );\n};\n\nBadge.propTypes = propTypes;\nBadge.defaultProps = defaultProps;\n\nexport default Badge;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.func,\n  ]),\n};\n\nconst defaultProps = {\n  tag: 'div'\n};\n\nconst Card = (props) => {\n  const {\n    className,\n    cssModule,\n    color,\n    body,\n    inverse,\n    outline,\n    tag: Tag,\n    innerRef,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'card',\n    inverse ? 'text-white' : false,\n    body ? 'card-body' : false,\n    color ? `${outline ? 'border' : 'bg'}-${color}` : false\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} ref={innerRef} />\n  );\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\n\nexport default Card;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'div'\n};\n\nconst CardGroup = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'card-group'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nCardGroup.propTypes = propTypes;\nCardGroup.defaultProps = defaultProps;\n\nexport default CardGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'div',\n};\n\nconst CardDeck = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'card-deck'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nCardDeck.propTypes = propTypes;\nCardDeck.defaultProps = defaultProps;\n\nexport default CardDeck;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'div'\n};\n\nconst CardColumns = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'card-columns'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nCardColumns.propTypes = propTypes;\nCardColumns.defaultProps = defaultProps;\n\nexport default CardColumns;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.func,\n  ]),\n};\n\nconst defaultProps = {\n  tag: 'div'\n};\n\nconst CardBody = (props) => {\n  const {\n    className,\n    cssModule,\n    innerRef,\n    tag: Tag,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'card-body'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} ref={innerRef} />\n  );\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\n\nexport default CardBody;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'a'\n};\n\nconst CardLink = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    innerRef,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'card-link'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} ref={innerRef} className={classes} />\n  );\n};\n\nCardLink.propTypes = propTypes;\nCardLink.defaultProps = defaultProps;\n\nexport default CardLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'div'\n};\n\nconst CardFooter = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'card-footer'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nCardFooter.propTypes = propTypes;\nCardFooter.defaultProps = defaultProps;\n\nexport default CardFooter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'div'\n};\n\nconst CardHeader = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'card-header'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\n\nexport default CardHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  top: PropTypes.bool,\n  bottom: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'img'\n};\n\nconst CardImg = (props) => {\n  const {\n    className,\n    cssModule,\n    top,\n    bottom,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  let cardImgClassName = 'card-img';\n  if (top) {\n    cardImgClassName = 'card-img-top';\n  }\n  if (bottom) {\n    cardImgClassName = 'card-img-bottom';\n  }\n\n  const classes = mapToCssModules(classNames(\n    className,\n    cardImgClassName\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nCardImg.propTypes = propTypes;\nCardImg.defaultProps = defaultProps;\n\nexport default CardImg;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'div'\n};\n\nconst CardImgOverlay = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'card-img-overlay'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nCardImgOverlay.propTypes = propTypes;\nCardImgOverlay.defaultProps = defaultProps;\n\nexport default CardImgOverlay;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Transition } from 'react-transition-group';\nimport { mapToCssModules, TransitionTimeouts, TransitionStatuses, tagPropType } from './utils';\n\nclass CarouselItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      startAnimation: false,\n    };\n\n    this.onEnter = this.onEnter.bind(this);\n    this.onEntering = this.onEntering.bind(this);\n    this.onExit = this.onExit.bind(this);\n    this.onExiting = this.onExiting.bind(this);\n    this.onExited = this.onExited.bind(this);\n  }\n\n  onEnter(node, isAppearing) {\n    this.setState({ startAnimation: false });\n    this.props.onEnter(node, isAppearing);\n  }\n\n  onEntering(node, isAppearing) {\n    // getting this variable triggers a reflow\n    const offsetHeight = node.offsetHeight;\n    this.setState({ startAnimation: true });\n    this.props.onEntering(node, isAppearing);\n    return offsetHeight;\n  }\n\n  onExit(node) {\n    this.setState({ startAnimation: false });\n    this.props.onExit(node);\n  }\n\n  onExiting(node) {\n    this.setState({ startAnimation: true });\n    node.dispatchEvent(new CustomEvent('slide.bs.carousel'));\n    this.props.onExiting(node);\n  }\n\n  onExited(node) {\n    node.dispatchEvent(new CustomEvent('slid.bs.carousel'));\n    this.props.onExited(node);\n  }\n\n  render() {\n    const { in: isIn, children, cssModule, slide, tag: Tag, className, ...transitionProps } = this.props;\n\n    return (\n      <Transition\n        {...transitionProps}\n        enter={slide}\n        exit={slide}\n        in={isIn}\n        onEnter={this.onEnter}\n        onEntering={this.onEntering}\n        onExit={this.onExit}\n        onExiting={this.onExiting}\n        onExited={this.onExited}\n      >\n        {(status) => {\n          const { direction } = this.context;\n          const isActive = (status === TransitionStatuses.ENTERED) || (status === TransitionStatuses.EXITING);\n          const directionClassName = (status === TransitionStatuses.ENTERING || status === TransitionStatuses.EXITING) &&\n            this.state.startAnimation &&\n            (direction === 'end' ? 'carousel-item-start' : 'carousel-item-end');\n          const orderClassName = (status === TransitionStatuses.ENTERING) &&\n            (direction === 'end' ? 'carousel-item-next' : 'carousel-item-prev');\n          const itemClasses = mapToCssModules(classNames(\n            className,\n            'carousel-item',\n            isActive && 'active',\n            directionClassName,\n            orderClassName,\n          ), cssModule);\n\n          return (\n            <Tag className={itemClasses}>\n              {children}\n            </Tag>\n          );\n        }}\n      </Transition>\n    );\n  }\n}\n\nCarouselItem.propTypes = {\n  ...Transition.propTypes,\n  tag: tagPropType,\n  in: PropTypes.bool,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  slide: PropTypes.bool,\n  className: PropTypes.string,\n};\n\nCarouselItem.defaultProps = {\n  ...Transition.defaultProps,\n  tag: 'div',\n  timeout: TransitionTimeouts.Carousel,\n  slide: true,\n};\n\nCarouselItem.contextTypes = {\n  direction: PropTypes.string\n};\n\nexport default CarouselItem;\n","import React from 'react';\n\n/**\n * CarouselContext\n * {\n *  direction: PropTypes.oneOf(['start', 'end']).isRequired,\n * }\n */\nexport const CarouselContext = React.createContext({});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CarouselItem from './CarouselItem';\nimport { CarouselContext } from './CarouselContext';\nimport { mapToCssModules } from './utils';\n    \nconst SWIPE_THRESHOLD = 40;\n\nclass Carousel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.renderItems = this.renderItems.bind(this);\n    this.hoverStart = this.hoverStart.bind(this);\n    this.hoverEnd = this.hoverEnd.bind(this);\n    this.handleTouchStart = this.handleTouchStart.bind(this);\n    this.handleTouchEnd = this.handleTouchEnd.bind(this);\n    this.touchStartX = 0;\n    this.touchStartY = 0;\n    this.state = {\n      activeIndex: this.props.activeIndex,\n      direction: 'end',\n      indicatorClicked: false,\n    };\n  }\n\n  getContextValue() {\n    return { direction: this.state.direction };\n  }\n\n  componentDidMount() {\n    // Set up the cycle\n    if (this.props.ride === 'carousel') {\n      this.setInterval();\n    }\n\n    // TODO: move this to the specific carousel like bootstrap. Currently it will trigger ALL carousels on the page.\n    document.addEventListener('keyup', this.handleKeyPress);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    let newState = null;\n    let { activeIndex, direction, indicatorClicked } = prevState;\n\n    if (nextProps.activeIndex !== activeIndex) {\n      // Calculate the direction to turn\n      if (nextProps.activeIndex === activeIndex + 1) {\n        direction = 'end';\n      } else if (nextProps.activeIndex === activeIndex -1) {\n        direction = 'start';\n      } else if (nextProps.activeIndex < activeIndex) {\n        direction = indicatorClicked ? 'start' : 'end';\n      } else if (nextProps.activeIndex !== activeIndex) {\n        direction = indicatorClicked ? 'end' : 'start';\n      }\n\n      newState = {\n        activeIndex: nextProps.activeIndex,\n        direction,\n        indicatorClicked: false,\n      }\n    }\n\n    return newState;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.activeIndex === this.state.activeIndex) return;\n    this.setInterval(this.props);\n  }\n\n  componentWillUnmount() {\n    this.clearInterval();\n    document.removeEventListener('keyup', this.handleKeyPress);\n  }\n\n  setInterval(props = this.props) {\n    // make sure not to have multiple intervals going...\n    this.clearInterval();\n    if (props.interval) {\n      this.cycleInterval = setInterval(() => {\n        props.next();\n      }, parseInt(props.interval, 10));\n    }\n  }\n\n  clearInterval() {\n    clearInterval(this.cycleInterval);\n  }\n\n  hoverStart(...args) {\n    if (this.props.pause === 'hover') {\n      this.clearInterval();\n    }\n    if (this.props.mouseEnter) {\n      this.props.mouseEnter(...args);\n    }\n  }\n\n  hoverEnd(...args) {\n    if (this.props.pause === 'hover') {\n      this.setInterval();\n    }\n    if (this.props.mouseLeave) {\n      this.props.mouseLeave(...args);\n    }\n  }\n\n  handleKeyPress(evt) {\n    if (this.props.keyboard) {\n      if (evt.keyCode === 37) {\n        this.props.previous();\n      } else if (evt.keyCode === 39) {\n        this.props.next();\n      }\n    }\n  }\n\n  handleTouchStart(e) {\n    if(!this.props.enableTouch) {\n      return;\n    }\n    this.touchStartX = e.changedTouches[0].screenX;\n    this.touchStartY = e.changedTouches[0].screenY;\n  }\n\n  handleTouchEnd(e) {\n    if(!this.props.enableTouch) {\n      return;\n    }\n\n    const currentX = e.changedTouches[0].screenX;\n    const currentY = e.changedTouches[0].screenY;\n    const diffX = Math.abs(this.touchStartX - currentX);\n    const diffY = Math.abs(this.touchStartY - currentY);\n\n    // Don't swipe if Y-movement is bigger than X-movement\n    if(diffX < diffY) {\n      return;\n    }\n\n    if(diffX < SWIPE_THRESHOLD) {\n      return;\n    }\n\n    if(currentX < this.touchStartX) {\n      this.props.next();\n    } else {\n      this.props.previous();\n    }\n  }\n\n  renderItems(carouselItems, className) {\n    const { slide } = this.props;\n    return (\n      <div className={className}>\n        {carouselItems.map((item, index) => {\n          const isIn = (index === this.state.activeIndex);\n          return React.cloneElement(item, {\n            in: isIn,\n            slide: slide,\n          });\n        })}\n      </div>\n    );\n  }\n\n  render() {\n    const { cssModule, slide, className, dark, fade } = this.props;\n    const outerClasses = mapToCssModules(classNames(\n      className,\n      'carousel',\n      'carousel-fade' && fade,\n      slide && 'slide',\n      dark && 'carousel-dark'\n    ), cssModule);\n\n    const innerClasses = mapToCssModules(classNames(\n      'carousel-inner'\n    ), cssModule);\n\n    // filter out booleans, null, or undefined\n    const children = this.props.children.filter(child => child !== null && child !== undefined && typeof child !== 'boolean');\n\n    const slidesOnly = children.every(child => child.type === CarouselItem);\n\n    // Rendering only slides\n    if (slidesOnly) {\n      return (\n        <div className={outerClasses} onMouseEnter={this.hoverStart} onMouseLeave={this.hoverEnd}>\n          <CarouselContext.Provider value={this.getContextValue()}>\n            {this.renderItems(children, innerClasses)}\n          </CarouselContext.Provider>\n        </div>\n      );\n    }\n\n    // Rendering slides and controls\n    if (children[0] instanceof Array) {\n      const carouselItems = children[0];\n      const controlLeft = children[1];\n      const controlRight = children[2];\n\n      return (\n        <div className={outerClasses} onMouseEnter={this.hoverStart} onMouseLeave={this.hoverEnd}>\n          <CarouselContext.Provider value={this.getContextValue()}>\n            {this.renderItems(carouselItems, innerClasses)}\n            {controlLeft}\n            {controlRight}\n          </CarouselContext.Provider>\n        </div>\n      );\n    }\n\n    // Rendering indicators, slides and controls\n    const indicators = children[0];\n    const wrappedOnClick = (e) => {\n      if (typeof indicators.props.onClickHandler === 'function') {\n        this.setState({ indicatorClicked: true }, () => indicators.props.onClickHandler(e));\n      }\n    };\n    const wrappedIndicators = React.cloneElement(indicators, { onClickHandler: wrappedOnClick });\n    const carouselItems = children[1];\n    const controlLeft = children[2];\n    const controlRight = children[3];\n\n    return (\n      <div className={outerClasses} onMouseEnter={this.hoverStart} onMouseLeave={this.hoverEnd}\n        onTouchStart={this.handleTouchStart} onTouchEnd={this.handleTouchEnd}>\n        <CarouselContext.Provider value={this.getContextValue()}>\n          {wrappedIndicators}\n          {this.renderItems(carouselItems, innerClasses)}\n          {controlLeft}\n          {controlRight}\n        </CarouselContext.Provider>\n      </div>\n    );\n  }\n}\n\nCarousel.propTypes = {\n  // the current active slide of the carousel\n  activeIndex: PropTypes.number,\n  // a function which should advance the carousel to the next slide (via activeIndex)\n  next: PropTypes.func.isRequired,\n  // a function which should advance the carousel to the previous slide (via activeIndex)\n  previous: PropTypes.func.isRequired,\n  // controls if the left and right arrow keys should control the carousel\n  keyboard: PropTypes.bool,\n  /* If set to \"hover\", pauses the cycling of the carousel on mouseenter and resumes the cycling of the carousel on\n   * mouseleave. If set to false, hovering over the carousel won't pause it. (default: \"hover\")\n   */\n  pause: PropTypes.oneOf(['hover', false]),\n  // Autoplays the carousel after the user manually cycles the first item. If \"carousel\", autoplays the carousel on load.\n  // This is how bootstrap defines it... I would prefer a bool named autoplay or something...\n  ride: PropTypes.oneOf(['carousel']),\n  // the interval at which the carousel automatically cycles (default: 5000)\n  // eslint-disable-next-line react/no-unused-prop-types\n  interval: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n    PropTypes.bool,\n  ]),\n  children: PropTypes.array,\n  // called when the mouse enters the Carousel\n  mouseEnter: PropTypes.func,\n  // called when the mouse exits the Carousel\n  mouseLeave: PropTypes.func,\n  // controls whether the slide animation on the Carousel works or not\n  slide: PropTypes.bool,\n  // make the controls, indicators and captions dark on the Carousel\n  dark: PropTypes.bool,\n  cssModule: PropTypes.object,\n  className: PropTypes.string,\n  enableTouch: PropTypes.bool,\n};\n\nCarousel.defaultProps = {\n  interval: 5000,\n  pause: 'hover',\n  keyboard: true,\n  slide: true,\n  enableTouch: true,\n  fade: false,\n};\n\nCarousel.childContextTypes = {\n  direction: PropTypes.string\n};\n\nexport default Carousel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules } from './utils';\n\nconst CarouselControl = (props) => {\n  const { direction, onClickHandler, cssModule, directionText, className } = props;\n\n  const anchorClasses = mapToCssModules(classNames(\n    className,\n    `carousel-control-${direction}`\n  ), cssModule);\n\n  const iconClasses = mapToCssModules(classNames(\n    `carousel-control-${direction}-icon`\n  ), cssModule);\n\n  const screenReaderClasses = mapToCssModules(classNames(\n    'visually-hidden'\n  ), cssModule);\n\n\n  return (\n    // We need to disable this linting rule to use an `<a>` instead of\n    // `<button>` because that's what the Bootstrap examples require:\n    // https://getbootstrap.com/docs/4.5/components/carousel/#with-controls\n    // eslint-disable-next-line jsx-a11y/anchor-is-valid\n    <a\n      className={anchorClasses}\n      style={{cursor: \"pointer\"}}\n      role=\"button\"\n      tabIndex=\"0\"\n      onClick={(e) => {\n        e.preventDefault();\n        onClickHandler();\n      }}\n    >\n      <span className={iconClasses} aria-hidden=\"true\" />\n      <span className={screenReaderClasses}>{directionText || direction}</span>\n    </a>\n  );\n};\n\nCarouselControl.propTypes = {\n  direction: PropTypes.oneOf(['prev', 'next']).isRequired,\n  onClickHandler: PropTypes.func.isRequired,\n  cssModule: PropTypes.object,\n  directionText: PropTypes.string,\n  className: PropTypes.string,\n};\n\nexport default CarouselControl;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules } from './utils';\n\nconst CarouselIndicators = (props) => {\n  const { items, activeIndex, cssModule, onClickHandler, className } = props;\n\n  const listClasses = mapToCssModules(classNames(className, 'carousel-indicators'), cssModule);\n  const indicators = items.map((item, idx) => {\n    const indicatorClasses = mapToCssModules(classNames(\n      { active: activeIndex === idx }\n    ), cssModule);\n    return (\n      <button\n        aria-label={item.caption}\n        data-bs-target\n        key={`${item.key || Object.values(item).join('')}`}\n        onClick={(e) => {\n          e.preventDefault();\n          onClickHandler(idx);\n        }}\n        className={indicatorClasses}\n      />);\n  });\n\n  return (\n    <div className={listClasses}>\n      {indicators}\n    </div>\n  );\n};\n\nCarouselIndicators.propTypes = {\n  items: PropTypes.array.isRequired,\n  activeIndex: PropTypes.number.isRequired,\n  cssModule: PropTypes.object,\n  onClickHandler: PropTypes.func.isRequired,\n  className: PropTypes.string,\n};\n\nexport default CarouselIndicators;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules } from './utils';\n\nconst CarouselCaption = (props) => {\n  const { captionHeader, captionText, cssModule, className } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'carousel-caption',\n    'd-none',\n    'd-md-block'\n  ), cssModule);\n\n  return (\n    <div className={classes}>\n      <h3>{captionHeader}</h3>\n      <p>{captionText}</p>\n    </div>\n  );\n};\n\nCarouselCaption.propTypes = {\n  captionHeader: PropTypes.node,\n  captionText: PropTypes.node.isRequired,\n  cssModule: PropTypes.object,\n  className: PropTypes.string,\n};\n\nexport default CarouselCaption;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Carousel from './Carousel';\nimport CarouselItem from './CarouselItem';\nimport CarouselControl from './CarouselControl';\nimport CarouselIndicators from './CarouselIndicators';\nimport CarouselCaption from './CarouselCaption';\n\nconst propTypes = {\n  items: PropTypes.array.isRequired,\n  indicators: PropTypes.bool,\n  controls: PropTypes.bool,\n  autoPlay: PropTypes.bool,\n  defaultActiveIndex: PropTypes.number,\n  activeIndex: PropTypes.number,\n  next: PropTypes.func,\n  previous: PropTypes.func,\n  goToIndex: PropTypes.func,\n};\n\nclass UncontrolledCarousel extends Component {\n  constructor(props) {\n    super(props);\n    this.animating = false;\n    this.state = { activeIndex: props.defaultActiveIndex || 0 };\n    this.next = this.next.bind(this);\n    this.previous = this.previous.bind(this);\n    this.goToIndex = this.goToIndex.bind(this);\n    this.onExiting = this.onExiting.bind(this);\n    this.onExited = this.onExited.bind(this);\n  }\n\n  onExiting() {\n    this.animating = true;\n  }\n\n  onExited() {\n    this.animating = false;\n  }\n\n  next() {\n    if (this.animating) return;\n    const nextIndex = this.state.activeIndex === this.props.items.length - 1 ? 0 : this.state.activeIndex + 1;\n    this.setState({ activeIndex: nextIndex });\n  }\n\n  previous() {\n    if (this.animating) return;\n    const nextIndex = this.state.activeIndex === 0 ? this.props.items.length - 1 : this.state.activeIndex - 1;\n    this.setState({ activeIndex: nextIndex });\n  }\n\n  goToIndex(newIndex) {\n    if (this.animating) return;\n    this.setState({ activeIndex: newIndex });\n  }\n\n  render() {\n    const { defaultActiveIndex, autoPlay, indicators, controls, items, goToIndex, ...props } = this.props;\n    const { activeIndex } = this.state;\n\n    const slides = items.map((item) => {\n      const key = item.key || item.src;\n      return (\n        <CarouselItem\n          onExiting={this.onExiting}\n          onExited={this.onExited}\n          key={key}\n        >\n          <img className=\"d-block w-100\" src={item.src} alt={item.altText} />\n          <CarouselCaption captionText={item.caption} captionHeader={item.header || item.caption} />\n        </CarouselItem>\n      );\n    });\n\n    return (\n      <Carousel\n        activeIndex={activeIndex}\n        next={this.next}\n        previous={this.previous}\n        ride={autoPlay ? 'carousel' : undefined}\n        {...props}\n      >\n        {indicators && <CarouselIndicators\n          items={items}\n          activeIndex={props.activeIndex || activeIndex}\n          onClickHandler={goToIndex || this.goToIndex}\n        />}\n        {slides}\n        {controls && <CarouselControl\n          direction=\"prev\"\n          directionText=\"Previous\"\n          onClickHandler={props.previous || this.previous}\n        />}\n        {controls && <CarouselControl\n          direction=\"next\"\n          directionText=\"Next\"\n          onClickHandler={props.next || this.next}\n        />}\n      </Carousel>\n    );\n  }\n}\n\nUncontrolledCarousel.propTypes = propTypes;\nUncontrolledCarousel.defaultProps = {\n  controls: true,\n  indicators: true,\n  autoPlay: true,\n};\n\nexport default UncontrolledCarousel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'div'\n};\n\nconst CardSubtitle = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'card-subtitle'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nCardSubtitle.propTypes = propTypes;\nCardSubtitle.defaultProps = defaultProps;\n\nexport default CardSubtitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'p'\n};\n\nconst CardText = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'card-text'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nCardText.propTypes = propTypes;\nCardText.defaultProps = defaultProps;\n\nexport default CardText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'div'\n};\n\nconst CardTitle = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'card-title'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\n\nexport default CardTitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport { Popper as ReactPopper } from 'react-popper';\nimport { getTarget, targetPropType, mapToCssModules, DOMElement, tagPropType } from './utils';\nimport Fade from './Fade';\n\nfunction noop() {  }\n\nconst propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n  popperClassName: PropTypes.string,\n  placement: PropTypes.string,\n  placementPrefix: PropTypes.string,\n  arrowClassName: PropTypes.string,\n  hideArrow: PropTypes.bool,\n  tag: tagPropType,\n  isOpen: PropTypes.bool.isRequired,\n  cssModule: PropTypes.object,\n  offset: PropTypes.arrayOf(PropTypes.number),\n  fallbackPlacements: PropTypes.array,\n  flip: PropTypes.bool,\n  container: targetPropType,\n  target: targetPropType.isRequired,\n  modifiers: PropTypes.array,\n  strategy: PropTypes.string,\n  boundariesElement: PropTypes.oneOfType([PropTypes.string, DOMElement]),\n  onClosed: PropTypes.func,\n  fade: PropTypes.bool,\n  transition: PropTypes.shape(Fade.propTypes),\n};\n\nconst defaultProps = {\n  boundariesElement: 'scrollParent',\n  placement: 'auto',\n  hideArrow: false,\n  isOpen: false,\n  offset: [0, 0],\n  flip: true,\n  container: 'body',\n  modifiers: [],\n  onClosed: noop,\n  fade: true,\n  transition: {\n      ...Fade.defaultProps,\n  }\n};\n\nclass PopperContent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setTargetNode = this.setTargetNode.bind(this);\n    this.getTargetNode = this.getTargetNode.bind(this);\n    this.getRef = this.getRef.bind(this);\n    this.onClosed = this.onClosed.bind(this);\n    this.state = { isOpen: props.isOpen };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.isOpen && !state.isOpen) {\n      return { isOpen: props.isOpen };\n    }\n    else return null;\n  }\n\n  componentDidUpdate() {\n    if (this._element && this._element.childNodes && this._element.childNodes[0] && this._element.childNodes[0].focus) {\n      this._element.childNodes[0].focus();\n    }\n  }\n\n  setTargetNode(node) {\n    this.targetNode = typeof node === 'string' ? getTarget(node) : node;\n  }\n\n  getTargetNode() {\n    return this.targetNode;\n  }\n\n  getContainerNode() {\n    return getTarget(this.props.container);\n  }\n\n  getRef(ref) {\n    this._element = ref;\n  }\n\n  onClosed() {\n    this.props.onClosed();\n    this.setState({ isOpen: false });\n  }\n\n  renderChildren() {\n    const {\n      cssModule,\n      children,\n      isOpen,\n      flip,\n      target,\n      offset,\n      fallbackPlacements,\n      placementPrefix,\n      arrowClassName: _arrowClassName,\n      hideArrow,\n      popperClassName: _popperClassName,\n      tag,\n      container,\n      modifiers,\n      strategy,\n      boundariesElement,\n      onClosed,\n      fade,\n      transition,\n      placement,\n      ...attrs\n    } = this.props;\n    const arrowClassName = mapToCssModules(classNames(\n      'arrow',\n      _arrowClassName\n    ), cssModule);\n    const popperClassName = mapToCssModules(classNames(\n      _popperClassName,\n      placementPrefix ? `${placementPrefix}-auto` : ''\n    ), this.props.cssModule);\n\n    const modifierNames = modifiers.map(m => m.name);\n    const baseModifiers = [\n      {\n        name: 'offset',\n        options: {\n          offset,\n        },\n      },\n      {\n        name: 'flip',\n        enabled: flip,\n        options: {\n          fallbackPlacements,\n        },\n      },\n      {\n        name: 'preventOverflow',\n        options: {\n          boundary: boundariesElement,\n        },\n      },\n    ].filter(m => !modifierNames.includes(m.name));\n    const extendedModifiers = [ ...baseModifiers, ...modifiers];\n\n    const popperTransition = {\n      ...Fade.defaultProps,\n      ...transition,\n      baseClass: fade ? transition.baseClass : '',\n      timeout: fade ? transition.timeout : 0,\n    }\n\n    return (\n      <Fade\n        {...popperTransition}\n        {...attrs}\n        in={isOpen}\n        onExited={this.onClosed}\n        tag={tag}\n      >\n        <ReactPopper\n          referenceElement={this.targetNode}\n          modifiers={extendedModifiers}\n          placement={placement}\n          strategy={strategy}\n        >\n          {({ ref, style, placement: popperPlacement, isReferenceHidden, arrowProps, update }) => (\n            <div ref={ref} style={style} className={popperClassName} data-popper-placement={popperPlacement} data-popper-reference-hidden={isReferenceHidden ? 'true' : undefined}>\n              {typeof children === 'function' ? children({ update }) : children}\n              {!hideArrow && <span ref={arrowProps.ref} className={arrowClassName} style={arrowProps.style} />}\n            </div>\n          )}\n        </ReactPopper>\n      </Fade>\n    );\n  }\n\n  render() {\n    this.setTargetNode(this.props.target);\n\n    if (this.state.isOpen) {\n      return this.props.container === 'inline' ?\n        this.renderChildren() :\n        ReactDOM.createPortal((<div ref={this.getRef}>{this.renderChildren()}</div>), this.getContainerNode());\n    }\n\n    return null;\n  }\n}\n\nPopperContent.propTypes = propTypes;\nPopperContent.defaultProps = defaultProps;\n\nexport default PopperContent;\n","import PropTypes from 'prop-types';\nimport { getTarget, targetPropType } from './utils';\n\nconst PopperTargetHelper = (props, context) => {\n  context.popperManager.setTargetNode(getTarget(props.target));\n  return null;\n};\n\nPopperTargetHelper.contextTypes = {\n  popperManager: PropTypes.object.isRequired,\n};\n\nPopperTargetHelper.propTypes = {\n  target: targetPropType.isRequired,\n};\n\nexport default PopperTargetHelper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PopperContent from './PopperContent';\nimport {\n  getTarget,\n  targetPropType,\n  omit,\n  PopperPlacements,\n  mapToCssModules,\n  DOMElement\n} from './utils';\n\nexport const propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  placement: PropTypes.oneOf(PopperPlacements),\n  target: targetPropType.isRequired,\n  container: targetPropType,\n  isOpen: PropTypes.bool,\n  disabled: PropTypes.bool,\n  hideArrow: PropTypes.bool,\n  boundariesElement: PropTypes.oneOfType([PropTypes.string, DOMElement]),\n  className: PropTypes.string,\n  innerClassName: PropTypes.string,\n  arrowClassName: PropTypes.string,\n  popperClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  toggle: PropTypes.func,\n  autohide: PropTypes.bool,\n  placementPrefix: PropTypes.string,\n  delay: PropTypes.oneOfType([\n    PropTypes.shape({ show: PropTypes.number, hide: PropTypes.number }),\n    PropTypes.number\n  ]),\n  modifiers: PropTypes.array,\n  strategy: PropTypes.string,\n  offset: PropTypes.arrayOf(PropTypes.number),\n  innerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.object\n  ]),\n  trigger: PropTypes.string,\n  fade: PropTypes.bool,\n  flip: PropTypes.bool,\n};\n\nconst DEFAULT_DELAYS = {\n  show: 0,\n  hide: 50\n};\n\nconst defaultProps = {\n  isOpen: false,\n  hideArrow: false,\n  autohide: false,\n  delay: DEFAULT_DELAYS,\n  toggle: function () {},\n  trigger: 'click',\n  fade: true,\n};\n\nfunction isInDOMSubtree(element, subtreeRoot) {\n  return subtreeRoot && (element === subtreeRoot || subtreeRoot.contains(element));\n}\n\nfunction isInDOMSubtrees(element, subtreeRoots = []) {\n  return subtreeRoots && subtreeRoots.length && subtreeRoots.filter(subTreeRoot=> isInDOMSubtree(element, subTreeRoot))[0];\n}\n\nclass TooltipPopoverWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._targets = [];\n    this.currentTargetElement = null;\n    this.addTargetEvents = this.addTargetEvents.bind(this);\n    this.handleDocumentClick = this.handleDocumentClick.bind(this);\n    this.removeTargetEvents = this.removeTargetEvents.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.showWithDelay = this.showWithDelay.bind(this);\n    this.hideWithDelay = this.hideWithDelay.bind(this);\n    this.onMouseOverTooltipContent = this.onMouseOverTooltipContent.bind(this);\n    this.onMouseLeaveTooltipContent = this.onMouseLeaveTooltipContent.bind(\n      this\n    );\n    this.show = this.show.bind(this);\n    this.hide = this.hide.bind(this);\n    this.onEscKeyDown = this.onEscKeyDown.bind(this);\n    this.getRef = this.getRef.bind(this);\n    this.state = { isOpen: props.isOpen };\n    this._isMounted = false;\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.updateTarget();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n    this.removeTargetEvents();\n    this._targets = null;\n    this.clearShowTimeout();\n    this.clearHideTimeout();\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.isOpen && !state.isOpen) {\n      return { isOpen: props.isOpen };\n    }\n    else return null;\n  }\n\n  onMouseOverTooltipContent() {\n    if (this.props.trigger.indexOf('hover') > -1 && !this.props.autohide) {\n      if (this._hideTimeout) {\n        this.clearHideTimeout();\n      }\n      if (this.state.isOpen && !this.props.isOpen) {\n        this.toggle();\n      }\n    }\n  }\n\n  onMouseLeaveTooltipContent(e) {\n    if (this.props.trigger.indexOf('hover') > -1 && !this.props.autohide) {\n      if (this._showTimeout) {\n        this.clearShowTimeout();\n      }\n      e.persist();\n      this._hideTimeout = setTimeout(\n        this.hide.bind(this, e),\n        this.getDelay('hide')\n      );\n    }\n  }\n\n  onEscKeyDown(e) {\n    if (e.key === 'Escape') {\n      this.hide(e);\n    }\n  }\n\n  getRef(ref) {\n    const { innerRef } = this.props;\n    if (innerRef) {\n      if (typeof innerRef === 'function') {\n        innerRef(ref);\n      } else if (typeof innerRef === 'object') {\n        innerRef.current = ref;\n      }\n    }\n    this._popover = ref;\n  }\n\n  getDelay(key) {\n    const { delay } = this.props;\n    if (typeof delay === 'object') {\n      return isNaN(delay[key]) ? DEFAULT_DELAYS[key] : delay[key];\n    }\n    return delay;\n  }\n\n  getCurrentTarget(target) {\n    if (!target)\n      return null;\n    const index = this._targets.indexOf(target);\n    if (index >= 0)\n      return this._targets[index];\n    return this.getCurrentTarget(target.parentElement);\n  }\n\n  show(e) {\n    if (!this.props.isOpen) {\n      this.clearShowTimeout();\n      this.currentTargetElement = e ? e.currentTarget || this.getCurrentTarget(e.target) : null;\n      if (e && e.composedPath && typeof e.composedPath === 'function') {\n        const path = e.composedPath();\n        this.currentTargetElement = (path && path[0]) || this.currentTargetElement;\n      }\n      this.toggle(e);\n    }\n  }\n\n  showWithDelay(e) {\n    if (this._hideTimeout) {\n      this.clearHideTimeout();\n    }\n    this._showTimeout = setTimeout(\n      this.show.bind(this, e),\n      this.getDelay('show')\n    );\n  }\n  hide(e) {\n    if (this.props.isOpen) {\n      this.clearHideTimeout();\n      this.currentTargetElement = null;\n      this.toggle(e);\n    }\n  }\n\n  hideWithDelay(e) {\n    if (this._showTimeout) {\n      this.clearShowTimeout();\n    }\n    this._hideTimeout = setTimeout(\n      this.hide.bind(this, e),\n      this.getDelay('hide')\n    );\n  }\n\n\n  clearShowTimeout() {\n    clearTimeout(this._showTimeout);\n    this._showTimeout = undefined;\n  }\n\n  clearHideTimeout() {\n    clearTimeout(this._hideTimeout);\n    this._hideTimeout = undefined;\n  }\n\n  handleDocumentClick(e) {\n    const triggers = this.props.trigger.split(' ');\n\n    if (triggers.indexOf('legacy') > -1 && (this.props.isOpen || isInDOMSubtrees(e.target, this._targets))) {\n      if (this._hideTimeout) {\n        this.clearHideTimeout();\n      }\n      if (this.props.isOpen && !isInDOMSubtree(e.target, this._popover)) {\n        this.hideWithDelay(e);\n      } else if (!this.props.isOpen) {\n        this.showWithDelay(e);\n      }\n    } else if (triggers.indexOf('click') > -1 && isInDOMSubtrees(e.target, this._targets)) {\n      if (this._hideTimeout) {\n        this.clearHideTimeout();\n      }\n\n      if (!this.props.isOpen) {\n        this.showWithDelay(e);\n      } else {\n        this.hideWithDelay(e);\n      }\n    }\n  }\n\n  addEventOnTargets(type, handler, isBubble) {\n    this._targets.forEach(target=> {\n      target.addEventListener(type, handler, isBubble);\n    });\n  }\n\n  removeEventOnTargets(type, handler, isBubble) {\n    this._targets.forEach(target=> {\n      target.removeEventListener(type, handler, isBubble);\n    });\n  }\n\n  addTargetEvents() {\n    if (this.props.trigger) {\n      let triggers = this.props.trigger.split(' ');\n      if (triggers.indexOf('manual') === -1) {\n        if (triggers.indexOf('click') > -1 || triggers.indexOf('legacy') > -1) {\n          document.addEventListener('click', this.handleDocumentClick, true);\n        }\n\n        if (this._targets && this._targets.length) {\n          if (triggers.indexOf('hover') > -1) {\n            this.addEventOnTargets(\n              'mouseover',\n              this.showWithDelay,\n              true\n            );\n            this.addEventOnTargets(\n              'mouseout',\n              this.hideWithDelay,\n              true\n            );\n          }\n          if (triggers.indexOf('focus') > -1) {\n            this.addEventOnTargets('focusin', this.show, true);\n            this.addEventOnTargets('focusout', this.hide, true);\n          }\n          this.addEventOnTargets('keydown', this.onEscKeyDown, true);\n        }\n      }\n    }\n  }\n\n  removeTargetEvents() {\n    if (this._targets) {\n      this.removeEventOnTargets(\n        'mouseover',\n        this.showWithDelay,\n        true\n      );\n      this.removeEventOnTargets(\n        'mouseout',\n        this.hideWithDelay,\n        true\n      );\n      this.removeEventOnTargets('keydown', this.onEscKeyDown, true);\n      this.removeEventOnTargets('focusin', this.show, true);\n      this.removeEventOnTargets('focusout', this.hide, true);\n    }\n\n    document.removeEventListener('click', this.handleDocumentClick, true)\n  }\n\n  updateTarget() {\n    const newTarget = getTarget(this.props.target, true);\n    if (newTarget !== this._targets) {\n      this.removeTargetEvents();\n      this._targets = newTarget ? Array.from(newTarget) : [];\n      this.currentTargetElement = this.currentTargetElement || this._targets[0];\n      this.addTargetEvents();\n    }\n  }\n\n  toggle(e) {\n    if (this.props.disabled || !this._isMounted) {\n      return e && e.preventDefault();\n    }\n\n    return this.props.toggle(e);\n  }\n\n  render() {\n    if (this.props.isOpen) {\n      this.updateTarget();\n    }\n\n    const target = this.currentTargetElement || this._targets[0];\n    if (!target) {\n      return null;\n    }\n\n    const {\n      className,\n      cssModule,\n      innerClassName,\n      isOpen,\n      hideArrow,\n      boundariesElement,\n      placement,\n      placementPrefix,\n      arrowClassName,\n      popperClassName,\n      container,\n      modifiers,\n      strategy,\n      offset,\n      fade,\n      flip,\n      children\n    } = this.props;\n\n    const attributes = omit(this.props, Object.keys(propTypes));\n\n    const popperClasses = mapToCssModules(popperClassName, cssModule);\n\n    const classes = mapToCssModules(innerClassName, cssModule);\n\n    return (\n      <PopperContent\n        className={className}\n        target={target}\n        isOpen={isOpen}\n        hideArrow={hideArrow}\n        boundariesElement={boundariesElement}\n        placement={placement}\n        placementPrefix={placementPrefix}\n        arrowClassName={arrowClassName}\n        popperClassName={popperClasses}\n        container={container}\n        modifiers={modifiers}\n        strategy={strategy}\n        offset={offset}\n        cssModule={cssModule}\n        fade={fade}\n        flip={flip}\n      >\n        {({ update }) => (\n          <div\n            {...attributes}\n            ref={this.getRef}\n            className={classes}\n            role=\"tooltip\"\n            onMouseOver={this.onMouseOverTooltipContent}\n            onMouseLeave={this.onMouseLeaveTooltipContent}\n            onKeyDown={this.onEscKeyDown}\n          >\n            {typeof children === 'function' ? children({ update }) : children}\n          </div>\n        )}\n\n      </PopperContent>\n    );\n  }\n}\n\nTooltipPopoverWrapper.propTypes = propTypes;\nTooltipPopoverWrapper.defaultProps = defaultProps;\n\nexport default TooltipPopoverWrapper;\n","import React from 'react';\nimport classNames from 'classnames';\nimport TooltipPopoverWrapper, { propTypes } from './TooltipPopoverWrapper';\n\nconst defaultProps = {\n  placement: 'right',\n  placementPrefix: 'bs-popover',\n  trigger: 'click',\n  offset: [0, 8]\n};\n\nconst Popover = (props) => {\n  const popperClasses = classNames(\n    'popover',\n    'show',\n    props.popperClassName\n  );\n\n  const classes = classNames(\n    'popover-inner',\n    props.innerClassName\n  );\n\n\n  return (\n    <TooltipPopoverWrapper\n      {...props}\n      arrowClassName=\"popover-arrow\"\n      popperClassName={popperClasses}\n      innerClassName={classes}\n    />\n  );\n};\n\nPopover.propTypes = propTypes;\nPopover.defaultProps = defaultProps;\n\n\nexport default Popover;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Popover from './Popover';\nimport { omit } from './utils';\n\nconst omitKeys = ['defaultOpen'];\n\nexport default class UncontrolledPopover extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { isOpen: props.defaultOpen || false };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState({ isOpen: !this.state.isOpen });\n  }\n\n  render() {\n    return <Popover isOpen={this.state.isOpen} toggle={this.toggle} {...omit(this.props, omitKeys)} />;\n  }\n}\n\nUncontrolledPopover.propTypes = {\n  defaultOpen: PropTypes.bool,\n  ...Popover.propTypes\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'h3'\n};\n\nconst PopoverHeader = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'popover-header'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nPopoverHeader.propTypes = propTypes;\nPopoverHeader.defaultProps = defaultProps;\n\nexport default PopoverHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'div'\n};\n\nconst PopoverBody = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'popover-body'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nPopoverBody.propTypes = propTypes;\nPopoverBody.defaultProps = defaultProps;\n\nexport default PopoverBody;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, toNumber } from './utils';\n\nconst propTypes = {\n  children: PropTypes.node,\n  bar: PropTypes.bool,\n  multi: PropTypes.bool,\n  tag: tagPropType,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  min: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  max: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  animated: PropTypes.bool,\n  striped: PropTypes.bool,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  barClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  style: PropTypes.object,\n  barStyle: PropTypes.object,\n  barAriaValueText: PropTypes.string,\n  barAriaLabelledBy: PropTypes.string,\n};\n\nconst defaultProps = {\n  tag: 'div',\n  value: 0,\n  min: 0,\n  max: 100,\n  style: {},\n  barStyle: {}\n};\n\nconst Progress = (props) => {\n  const {\n    children,\n    className,\n    barClassName,\n    cssModule,\n    value,\n    min,\n    max,\n    animated,\n    striped,\n    color,\n    bar,\n    multi,\n    tag: Tag,\n    style,\n    barStyle,\n    barAriaValueText,\n    barAriaLabelledBy,\n    ...attributes\n  } = props;\n\n  const percent = ((toNumber(value) / toNumber(max)) * 100);\n\n  const progressClasses = mapToCssModules(classNames(\n    className,\n    'progress'\n  ), cssModule);\n\n  const progressBarClasses = mapToCssModules(classNames(\n    'progress-bar',\n    bar ? className || barClassName : barClassName,\n    animated ? 'progress-bar-animated' : null,\n    color ? `bg-${color}` : null,\n    striped || animated ? 'progress-bar-striped' : null\n  ), cssModule);\n\n  const progressBarProps = {\n    className: progressBarClasses,\n    style: {\n      ...(bar ? style : {}),\n      ...barStyle,\n      width: `${percent}%`,\n    },\n    role: 'progressbar',\n    'aria-valuenow': value,\n    'aria-valuemin': min,\n    'aria-valuemax': max,\n    'aria-valuetext': barAriaValueText,\n    'aria-labelledby': barAriaLabelledBy,\n    children: children\n  };\n\n  if (bar) {\n    return (\n      <Tag \n        {...attributes}\n        {...progressBarProps} \n      />\n    );\n  }\n\n  return (\n    <Tag {...attributes} style={style} className={progressClasses}>\n      {multi ? children : <div {...progressBarProps} />}\n    </Tag>\n  );\n};\n\nProgress.propTypes = propTypes;\nProgress.defaultProps = defaultProps;\n\nexport default Progress;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { canUseDOM } from './utils';\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n  node: PropTypes.any\n};\n\nclass Portal extends React.Component {\n  componentWillUnmount() {\n    if (this.defaultNode) {\n      document.body.removeChild(this.defaultNode);\n    }\n    this.defaultNode = null;\n  }\n\n  render() {\n    if (!canUseDOM) {\n      return null;\n    }\n\n    if (!this.props.node && !this.defaultNode) {\n      this.defaultNode = document.createElement('div');\n      document.body.appendChild(this.defaultNode);\n    }\n\n    return ReactDOM.createPortal(\n      this.props.children,\n      this.props.node || this.defaultNode\n    );\n  }\n}\n\nPortal.propTypes = propTypes;\n\nexport default Portal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Portal from './Portal';\nimport Fade from './Fade';\nimport {\n  getOriginalBodyPadding,\n  conditionallyUpdateScrollbar,\n  setScrollbarWidth,\n  mapToCssModules,\n  omit,\n  focusableElements,\n  TransitionTimeouts,\n  keyCodes,\n  targetPropType,\n  getTarget\n} from './utils';\n\nfunction noop() { }\n\nconst FadePropTypes = PropTypes.shape(Fade.propTypes);\n\nconst propTypes = {\n  isOpen: PropTypes.bool,\n  autoFocus: PropTypes.bool,\n  centered: PropTypes.bool,\n  fullscreen: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf(['sm', 'md', 'lg', 'xl']),\n  ]),\n  scrollable: PropTypes.bool,\n  size: PropTypes.string,\n  toggle: PropTypes.func,\n  keyboard: PropTypes.bool,\n  role: PropTypes.string,\n  labelledBy: PropTypes.string,\n  backdrop: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf(['static'])\n  ]),\n  onEnter: PropTypes.func,\n  onExit: PropTypes.func,\n  onOpened: PropTypes.func,\n  onClosed: PropTypes.func,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  wrapClassName: PropTypes.string,\n  modalClassName: PropTypes.string,\n  backdropClassName: PropTypes.string,\n  contentClassName: PropTypes.string,\n  external: PropTypes.node,\n  fade: PropTypes.bool,\n  cssModule: PropTypes.object,\n  zIndex: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  backdropTransition: FadePropTypes,\n  modalTransition: FadePropTypes,\n  innerRef: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.func,\n  ]),\n  unmountOnClose: PropTypes.bool,\n  returnFocusAfterClose: PropTypes.bool,\n  container: targetPropType,\n  trapFocus: PropTypes.bool\n};\n\nconst propsToOmit = Object.keys(propTypes);\n\nconst defaultProps = {\n  isOpen: false,\n  autoFocus: true,\n  centered: false,\n  scrollable: false,\n  role: 'dialog',\n  backdrop: true,\n  keyboard: true,\n  zIndex: 1050,\n  fade: true,\n  onOpened: noop,\n  onClosed: noop,\n  modalTransition: {\n    timeout: TransitionTimeouts.Modal,\n  },\n  backdropTransition: {\n    mountOnEnter: true,\n    timeout: TransitionTimeouts.Fade, // uses standard fade transition\n  },\n  unmountOnClose: true,\n  returnFocusAfterClose: true,\n  container: 'body',\n  trapFocus: false\n};\n\nclass Modal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._element = null;\n    this._originalBodyPadding = null;\n    this._originalBodyOverflow = null;\n    this.getFocusableChildren = this.getFocusableChildren.bind(this);\n    this.handleBackdropClick = this.handleBackdropClick.bind(this);\n    this.handleBackdropMouseDown = this.handleBackdropMouseDown.bind(this);\n    this.handleEscape = this.handleEscape.bind(this);\n    this.handleStaticBackdropAnimation = this.handleStaticBackdropAnimation.bind(this);\n    this.handleTab = this.handleTab.bind(this);\n    this.onOpened = this.onOpened.bind(this);\n    this.onClosed = this.onClosed.bind(this);\n    this.manageFocusAfterClose = this.manageFocusAfterClose.bind(this);\n    this.clearBackdropAnimationTimeout = this.clearBackdropAnimationTimeout.bind(this);\n    this.trapFocus = this.trapFocus.bind(this);\n\n    this.state = {\n      isOpen: false,\n      showStaticBackdropAnimation: false\n    };\n  }\n\n  componentDidMount() {\n    const { isOpen, autoFocus, onEnter } = this.props;\n\n    if (isOpen) {\n      this.init();\n      this.setState({ isOpen: true })\n      if (autoFocus) {\n        this.setFocus();\n      }\n    }\n\n    if (onEnter) {\n      onEnter();\n    }\n\n    // traps focus inside the Modal, even if the browser address bar is focused\n    document.addEventListener('focus', this.trapFocus, true);\n\n    this._isMounted = true;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.isOpen && !prevProps.isOpen) {\n      this.init();\n      this.setState({ isOpen: true});\n      // let render() renders Modal Dialog first\n      return;\n    }\n\n    // now Modal Dialog is rendered and we can refer this._element and this._dialog\n    if (this.props.autoFocus && this.state.isOpen && !prevState.isOpen) {\n      this.setFocus();\n    }\n\n    if (this._element && prevProps.zIndex !== this.props.zIndex) {\n      this._element.style.zIndex = this.props.zIndex;\n    }\n  }\n\n  componentWillUnmount() {\n    this.clearBackdropAnimationTimeout();\n\n    if (this.props.onExit) {\n      this.props.onExit();\n    }\n\n    if (this._element) {\n      this.destroy();\n      if (this.props.isOpen || this.state.isOpen) {\n        this.close();\n      }\n    }\n\n    document.removeEventListener('focus', this.trapFocus, true);\n    this._isMounted = false;\n  }\n\n  trapFocus (ev) {\n    if (!this.props.trapFocus) {\n      return;\n    }\n\n    if (!this._element) //element is not attached\n      return;\n\n    if (this._dialog && this._dialog.parentNode === ev.target) // initial focus when the Modal is opened\n      return;\n\n    if (this.modalIndex < (Modal.openCount - 1)) // last opened modal\n      return;\n\n    const children = this.getFocusableChildren();\n\n    for (let i = 0; i < children.length; i++) { // focus is already inside the Modal\n      if (children[i] === ev.target)\n        return;\n    }\n\n    if (children.length > 0) { // otherwise focus the first focusable element in the Modal\n      ev.preventDefault();\n      ev.stopPropagation();\n      children[0].focus();\n    }\n  }\n\n  onOpened(node, isAppearing) {\n    this.props.onOpened();\n    (this.props.modalTransition.onEntered || noop)(node, isAppearing);\n  }\n\n  onClosed(node) {\n    const { unmountOnClose } = this.props;\n    // so all methods get called before it is unmounted\n    this.props.onClosed();\n    (this.props.modalTransition.onExited || noop)(node);\n\n    if (unmountOnClose) {\n      this.destroy();\n    }\n    this.close();\n\n    if (this._isMounted) {\n      this.setState({ isOpen: false });\n    }\n  }\n\n  setFocus() {\n    if (this._dialog && this._dialog.parentNode && typeof this._dialog.parentNode.focus === 'function') {\n      this._dialog.parentNode.focus();\n    }\n  }\n\n  getFocusableChildren() {\n    return this._element.querySelectorAll(focusableElements.join(', '));\n  }\n\n  getFocusedChild() {\n    let currentFocus;\n    const focusableChildren = this.getFocusableChildren();\n\n    try {\n      currentFocus = document.activeElement;\n    } catch (err) {\n      currentFocus = focusableChildren[0];\n    }\n    return currentFocus;\n  }\n\n  // not mouseUp because scrollbar fires it, shouldn't close when user scrolls\n  handleBackdropClick(e) {\n    if (e.target === this._mouseDownElement) {\n      e.stopPropagation();\n\n      const backdrop = this._dialog ? this._dialog.parentNode : null;\n\n      if (backdrop && e.target === backdrop && this.props.backdrop === 'static') {\n        this.handleStaticBackdropAnimation();\n      }\n\n      if (!this.props.isOpen || this.props.backdrop !== true) return;\n\n      if (backdrop && e.target === backdrop && this.props.toggle) {\n        this.props.toggle(e);\n      }\n    }\n  }\n\n  handleTab(e) {\n    if (e.which !== 9) return;\n    if (this.modalIndex < (Modal.openCount - 1)) return; // last opened modal\n\n    const focusableChildren = this.getFocusableChildren();\n    const totalFocusable = focusableChildren.length;\n    if (totalFocusable === 0) return;\n    const currentFocus = this.getFocusedChild();\n\n    let focusedIndex = 0;\n\n    for (let i = 0; i < totalFocusable; i += 1) {\n      if (focusableChildren[i] === currentFocus) {\n        focusedIndex = i;\n        break;\n      }\n    }\n\n    if (e.shiftKey && focusedIndex === 0) {\n      e.preventDefault();\n      focusableChildren[totalFocusable - 1].focus();\n    } else if (!e.shiftKey && focusedIndex === totalFocusable - 1) {\n      e.preventDefault();\n      focusableChildren[0].focus();\n    }\n  }\n\n  handleBackdropMouseDown(e) {\n    this._mouseDownElement = e.target;\n  }\n\n  handleEscape(e) {\n    if (this.props.isOpen && e.keyCode === keyCodes.esc && this.props.toggle) {\n      if (this.props.keyboard) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.props.toggle(e);\n      }\n      else if (this.props.backdrop === 'static') {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.handleStaticBackdropAnimation();\n      }\n    }\n  }\n\n  handleStaticBackdropAnimation() {\n    this.clearBackdropAnimationTimeout();\n    this.setState({ showStaticBackdropAnimation: true });\n    this._backdropAnimationTimeout = setTimeout(() => {\n      this.setState({ showStaticBackdropAnimation: false });\n    }, 100);\n  }\n\n  init() {\n    try {\n      this._triggeringElement = document.activeElement;\n    } catch (err) {\n      this._triggeringElement = null;\n    }\n\n    if (!this._element) {\n      this._element = document.createElement('div');\n      this._element.setAttribute('tabindex', '-1');\n      this._element.style.position = 'relative';\n      this._element.style.zIndex = this.props.zIndex;\n      this._mountContainer = getTarget(this.props.container);\n      this._mountContainer.appendChild(this._element);\n    }\n\n    this._originalBodyPadding = getOriginalBodyPadding();\n    this._originalBodyOverflow = window.getComputedStyle(document.body).overflow;\n    conditionallyUpdateScrollbar();\n\n    if (Modal.openCount === 0) {\n      document.body.className = classNames(\n        document.body.className,\n        mapToCssModules('modal-open', this.props.cssModule)\n      );\n      document.body.style.overflow = 'hidden';\n    }\n\n    this.modalIndex = Modal.openCount;\n    Modal.openCount += 1;\n  }\n\n  destroy() {\n    if (this._element) {\n      this._mountContainer.removeChild(this._element);\n      this._element = null;\n    }\n\n    this.manageFocusAfterClose();\n  }\n\n  manageFocusAfterClose() {\n    if (this._triggeringElement) {\n      const { returnFocusAfterClose } = this.props;\n      if (this._triggeringElement.focus && returnFocusAfterClose) this._triggeringElement.focus();\n      this._triggeringElement = null;\n    }\n  }\n\n  close() {\n    if (Modal.openCount <= 1) {\n      const modalOpenClassName = mapToCssModules('modal-open', this.props.cssModule);\n      // Use regex to prevent matching `modal-open` as part of a different class, e.g. `my-modal-opened`\n      const modalOpenClassNameRegex = new RegExp(`(^| )${modalOpenClassName}( |$)`);\n      document.body.className = document.body.className.replace(modalOpenClassNameRegex, ' ').trim();\n      document.body.style.overflow = this._originalBodyOverflow;\n    }\n    this.manageFocusAfterClose();\n    Modal.openCount = Math.max(0, Modal.openCount - 1);\n\n    setScrollbarWidth(this._originalBodyPadding);\n  }\n\n  renderModalDialog() {\n    const attributes = omit(this.props, propsToOmit);\n    const dialogBaseClass = 'modal-dialog';\n\n    return (\n      <div\n        {...attributes}\n        className={mapToCssModules(classNames(dialogBaseClass, this.props.className, {\n          [`modal-${this.props.size}`]: this.props.size,\n          [`${dialogBaseClass}-centered`]: this.props.centered,\n          [`${dialogBaseClass}-scrollable`]: this.props.scrollable,\n          'modal-fullscreen': this.props.fullscreen === true,\n          [`modal-fullscreen-${this.props.fullscreen}-down`]: (typeof this.props.fullscreen) === 'string',\n        }), this.props.cssModule)}\n        role=\"document\"\n        ref={(c) => {\n          this._dialog = c;\n        }}\n      >\n        <div\n          className={mapToCssModules(\n            classNames('modal-content', this.props.contentClassName),\n            this.props.cssModule\n          )}\n        >\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      unmountOnClose\n    } = this.props;\n\n    if (!!this._element && (this.state.isOpen || !unmountOnClose)) {\n      const isModalHidden = !!this._element && !this.state.isOpen && !unmountOnClose;\n      this._element.style.display = isModalHidden ? 'none' : 'block';\n\n      const {\n        wrapClassName,\n        modalClassName,\n        backdropClassName,\n        cssModule,\n        isOpen,\n        backdrop,\n        role,\n        labelledBy,\n        external,\n        innerRef,\n      } = this.props;\n\n      const modalAttributes = {\n        onClick: this.handleBackdropClick,\n        onMouseDown: this.handleBackdropMouseDown,\n        onKeyUp: this.handleEscape,\n        onKeyDown: this.handleTab,\n        style: { display: 'block' },\n        'aria-labelledby': labelledBy,\n        role,\n        tabIndex: '-1'\n      };\n\n      const hasTransition = this.props.fade;\n      const modalTransition = {\n        ...Fade.defaultProps,\n        ...this.props.modalTransition,\n        baseClass: hasTransition ? this.props.modalTransition.baseClass : '',\n        timeout: hasTransition ? this.props.modalTransition.timeout : 0,\n      };\n      const backdropTransition = {\n        ...Fade.defaultProps,\n        ...this.props.backdropTransition,\n        baseClass: hasTransition ? this.props.backdropTransition.baseClass : '',\n        timeout: hasTransition ? this.props.backdropTransition.timeout : 0,\n      };\n\n      const Backdrop = backdrop && (\n        hasTransition ?\n          (<Fade\n            {...backdropTransition}\n            in={isOpen && !!backdrop}\n            cssModule={cssModule}\n            className={mapToCssModules(classNames('modal-backdrop', backdropClassName), cssModule)}\n          />)\n          : <div className={mapToCssModules(classNames('modal-backdrop', 'show', backdropClassName), cssModule)} />\n      );\n\n      return (\n        <Portal node={this._element}>\n          <div className={mapToCssModules(wrapClassName)}>\n            <Fade\n              {...modalAttributes}\n              {...modalTransition}\n              in={isOpen}\n              onEntered={this.onOpened}\n              onExited={this.onClosed}\n              cssModule={cssModule}\n              className={mapToCssModules(classNames('modal', modalClassName, this.state.showStaticBackdropAnimation && 'modal-static'), cssModule)}\n              innerRef={innerRef}\n            >\n              {external}\n              {this.renderModalDialog()}\n            </Fade>\n            {Backdrop}\n          </div>\n        </Portal>\n      );\n    }\n    return null;\n  }\n\n  clearBackdropAnimationTimeout() {\n    if (this._backdropAnimationTimeout) {\n      clearTimeout(this._backdropAnimationTimeout);\n      this._backdropAnimationTimeout = undefined;\n    }\n  }\n}\n\nModal.propTypes = propTypes;\nModal.defaultProps = defaultProps;\nModal.openCount = 0;\n\nexport default Modal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  wrapTag: tagPropType,\n  toggle: PropTypes.func,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  closeAriaLabel: PropTypes.string,\n  close: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'h5',\n  wrapTag: 'div',\n  closeAriaLabel: 'Close',\n};\n\nconst ModalHeader = (props) => {\n  let closeButton;\n  const {\n    className,\n    cssModule,\n    children,\n    toggle,\n    tag: Tag,\n    wrapTag: WrapTag,\n    closeAriaLabel,\n    close,\n    ...attributes } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'modal-header'\n  ), cssModule);\n\n  if (!close && toggle) {\n    closeButton = (\n      <button type=\"button\" onClick={toggle} className={mapToCssModules('btn-close', cssModule)} aria-label={closeAriaLabel} />\n    );\n  }\n\n  return (\n    <WrapTag {...attributes} className={classes}>\n      <Tag className={mapToCssModules('modal-title', cssModule)}>\n        {children}\n      </Tag>\n      {close || closeButton}\n    </WrapTag>\n  );\n};\n\nModalHeader.propTypes = propTypes;\nModalHeader.defaultProps = defaultProps;\n\nexport default ModalHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'div',\n};\n\nconst ModalBody = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'modal-body'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nModalBody.propTypes = propTypes;\nModalBody.defaultProps = defaultProps;\n\nexport default ModalBody;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'div',\n};\n\nconst ModalFooter = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'modal-footer'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nModalFooter.propTypes = propTypes;\nModalFooter.defaultProps = defaultProps;\n\nexport default ModalFooter;\n","import React from 'react';\nimport classNames from 'classnames';\nimport TooltipPopoverWrapper, { propTypes } from './TooltipPopoverWrapper';\n\nconst defaultProps = {\n  placement: 'top',\n  autohide: true,\n  placementPrefix: 'bs-tooltip',\n  trigger: 'hover focus',\n};\n\nconst Tooltip = (props) => {\n  const popperClasses = classNames(\n    'tooltip',\n    'show',\n    props.popperClassName\n  );\n\n  const classes = classNames(\n    'tooltip-inner',\n    props.innerClassName\n  );\n\n\n  return (\n    <TooltipPopoverWrapper\n      {...props}\n      arrowClassName=\"tooltip-arrow\"\n      popperClassName={popperClasses}\n      innerClassName={classes}\n    />\n  );\n};\n\nTooltip.propTypes = propTypes;\nTooltip.defaultProps = defaultProps;\n\n\nexport default Tooltip;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  bordered: PropTypes.bool,\n  borderless: PropTypes.bool,\n  striped: PropTypes.bool,\n  dark: PropTypes.bool,\n  hover: PropTypes.bool,\n  responsive: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: tagPropType,\n  responsiveTag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object]),\n};\n\nconst defaultProps = {\n  tag: 'table',\n  responsiveTag: 'div',\n};\n\nconst Table = (props) => {\n  const {\n    className,\n    cssModule,\n    size,\n    bordered,\n    borderless,\n    striped,\n    dark,\n    hover,\n    responsive,\n    tag: Tag,\n    responsiveTag: ResponsiveTag,\n    innerRef,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'table',\n    size ? 'table-' + size : false,\n    bordered ? 'table-bordered' : false,\n    borderless ? 'table-borderless' : false,\n    striped ? 'table-striped' : false,\n    dark ? 'table-dark' : false,\n    hover ? 'table-hover' : false,\n  ), cssModule);\n\n  const table = <Tag {...attributes} ref={innerRef} className={classes} />;\n\n  if (responsive) {\n    const responsiveClassName = mapToCssModules(responsive === true ? 'table-responsive' : `table-responsive-${responsive}`, cssModule);\n\n    return (\n      <ResponsiveTag className={responsiveClassName}>{table}</ResponsiveTag>\n    );\n  }\n\n  return table;\n};\n\nTable.propTypes = propTypes;\nTable.defaultProps = defaultProps;\n\nexport default Table;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  flush: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  horizontal: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  numbered: PropTypes.bool\n};\n\nconst defaultProps = {\n  tag: 'ul',\n  horizontal: false,\n  numbered: false\n};\n\nconst getHorizontalClass = horizontal => {\n  if (horizontal === false) {\n    return false;\n  } else if (horizontal === true || horizontal === \"xs\") {\n    return \"list-group-horizontal\";\n  }\n  return `list-group-horizontal-${horizontal}`;\n};\n\nconst ListGroup = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    flush,\n    horizontal,\n    numbered,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'list-group',\n    // list-group-horizontal cannot currently be mixed with list-group-flush\n    // we only try to apply horizontal classes if flush is false\n    flush ? 'list-group-flush' : getHorizontalClass(horizontal),\n    {\n      'list-group-numbered': numbered\n    }\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nListGroup.propTypes = propTypes;\nListGroup.defaultProps = defaultProps;\n\nexport default ListGroup;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'form',\n};\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.getRef = this.getRef.bind(this);\n    this.submit = this.submit.bind(this);\n  }\n\n  getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n    this.ref = ref;\n  }\n\n  submit() {\n    if (this.ref) {\n      this.ref.submit();\n    }\n  }\n\n  render() {\n    const {\n      className,\n      cssModule,\n      inline,\n      tag: Tag,\n      innerRef,\n      ...attributes\n    } = this.props;\n\n    const classes = mapToCssModules(classNames(\n      className,\n      inline ? 'form-inline' : false\n    ), cssModule);\n\n    return (\n      <Tag {...attributes} ref={innerRef} className={classes} />\n    );\n  }\n}\n\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  children: PropTypes.node,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  valid: PropTypes.bool,\n  tooltip: PropTypes.bool\n};\n\nconst defaultProps = {\n  tag: 'div',\n  valid: undefined\n};\n\nconst FormFeedback = (props) => {\n  const {\n    className,\n    cssModule,\n    valid,\n    tooltip,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  const validMode = tooltip ? 'tooltip' : 'feedback';\n\n  const classes = mapToCssModules(\n    classNames(\n      className,\n      valid ? `valid-${validMode}` : `invalid-${validMode}`\n    ),\n    cssModule\n  );\n\n  return <Tag {...attributes} className={classes} />;\n};\n\nFormFeedback.propTypes = propTypes;\nFormFeedback.defaultProps = defaultProps;\n\nexport default FormFeedback;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  switch: PropTypes.bool,\n  inline: PropTypes.bool,\n  floating: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'div',\n};\n\nconst FormGroup = (props) => {\n  const {\n    className,\n    cssModule,\n    row,\n    disabled,\n    check,\n    inline,\n    floating,\n    tag: Tag,\n    switch: switchProp,\n    ...attributes\n  } = props;\n\n  const formCheck = check || switchProp;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    row ? 'row' : false,\n    formCheck ? 'form-check' : 'mb-3',\n    switchProp ? 'form-switch' : false,\n    formCheck && inline ? 'form-check-inline' : false,\n    formCheck && disabled ? 'disabled' : false,\n    floating && 'form-floating'\n  ), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\n\nexport default FormGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'small',\n  color: 'muted',\n};\n\nconst FormText = (props) => {\n  const {\n    className,\n    cssModule,\n    inline,\n    color,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    !inline ? 'form-text' : false,\n    color ? `text-${color}` : false\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nFormText.propTypes = propTypes;\nFormText.defaultProps = defaultProps;\n\nexport default FormText;\n","/* eslint react/prefer-stateless-function: 0 */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, warnOnce, tagPropType } from './utils';\n\nconst propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  bsSize: PropTypes.string,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.func,\n    PropTypes.string\n  ]),\n  plaintext: PropTypes.bool,\n  addon: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\n\nconst defaultProps = {\n  type: 'text'\n};\n\nclass Input extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getRef = this.getRef.bind(this);\n    this.focus = this.focus.bind(this);\n  }\n\n  getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n    this.ref = ref;\n  }\n\n  focus() {\n    if (this.ref) {\n      this.ref.focus();\n    }\n  }\n\n  render() {\n    let {\n      className,\n      cssModule,\n      type,\n      bsSize,\n      valid,\n      invalid,\n      tag,\n      addon,\n      plaintext,\n      innerRef,\n      ...attributes\n    } = this.props;\n\n    const checkInput = ['switch', 'radio', 'checkbox'].indexOf(type) > -1;\n    const isNotaNumber = new RegExp('\\\\D', 'g');\n\n    const textareaInput = type === 'textarea';\n    const selectInput = type === 'select';\n    const rangeInput = type === 'range';\n    let Tag = tag || (selectInput || textareaInput ? type : 'input');\n\n    let formControlClass = 'form-control';\n\n    if (plaintext) {\n      formControlClass = `${formControlClass}-plaintext`;\n      Tag = tag || 'input';\n    } else if (rangeInput) {\n      formControlClass = 'form-range';\n    } else if (selectInput) {\n      formControlClass = \"form-select\";\n    } else if (checkInput) {\n      if (addon) {\n        formControlClass = null;\n      } else {\n        formControlClass = 'form-check-input';\n      }\n    }\n\n    if (attributes.size && isNotaNumber.test(attributes.size)) {\n      warnOnce(\n        'Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.'\n      );\n      bsSize = attributes.size;\n      delete attributes.size;\n    }\n\n    const classes = mapToCssModules(\n      classNames(\n        className,\n        invalid && 'is-invalid',\n        valid && 'is-valid',\n        bsSize\n          ? selectInput\n            ? `form-select-${bsSize}`\n            : `form-control-${bsSize}`\n          : false,\n        formControlClass\n      ),\n      cssModule\n    );\n\n    if (Tag === 'input' || (tag && typeof tag === 'function')) {\n      attributes.type = type === 'switch' ? 'checkbox' : type;\n    }\n\n    if (\n      attributes.children &&\n      !(\n        plaintext ||\n        type === 'select' ||\n        typeof Tag !== 'string' ||\n        Tag === 'select'\n      )\n    ) {\n      warnOnce(\n        `Input with a type of \"${type}\" cannot have children. Please use \"value\"/\"defaultValue\" instead.`\n      );\n      delete attributes.children;\n    }\n\n    return <Tag {...attributes} ref={innerRef} className={classes} aria-invalid={invalid} />;\n  }\n}\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Dropdown from './Dropdown';\n\nconst propTypes = {\n  tag: tagPropType,\n  type: PropTypes.bool,\n  size: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'div'\n};\n\nconst InputGroup = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    type,\n    size,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'input-group',\n    size ? `input-group-${size}` : null\n  ), cssModule);\n\n  if (props.type === 'dropdown') {\n    return <Dropdown {...attributes} className={classes} />\n  }\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nInputGroup.propTypes = propTypes;\nInputGroup.defaultProps = defaultProps;\n\nexport default InputGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'span'\n};\n\nconst InputGroupText = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'input-group-text'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nInputGroupText.propTypes = propTypes;\nInputGroupText.defaultProps = defaultProps;\n\nexport default InputGroupText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\n\nconst colWidths = ['xs', 'sm', 'md', 'lg', 'xl', 'xxl'];\n\nconst stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\n\nconst columnProps = PropTypes.oneOfType([\n  PropTypes.bool,\n  PropTypes.string,\n  PropTypes.number,\n  PropTypes.shape({\n    size: stringOrNumberProp,\n    order: stringOrNumberProp,\n    offset: stringOrNumberProp,\n  }),\n]);\n\nconst propTypes = {\n  children: PropTypes.node,\n  hidden: PropTypes.bool,\n  check: PropTypes.bool,\n  size: PropTypes.string,\n  for: PropTypes.string,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  xxl: columnProps,\n  widths: PropTypes.array,\n};\n\nconst defaultProps = {\n  tag: 'label',\n  widths: colWidths,\n};\n\nconst getColumnSizeClass = (isXs, colWidth, colSize) => {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : `col-${colWidth}`;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : `col-${colWidth}-auto`;\n  }\n\n  return isXs ? `col-${colSize}` : `col-${colWidth}-${colSize}`;\n};\n\nconst Label = (props) => {\n  const {\n    className,\n    cssModule,\n    hidden,\n    widths,\n    tag: Tag,\n    check,\n    size,\n    for: htmlFor,\n    ...attributes\n  } = props;\n\n  const colClasses = [];\n\n  widths.forEach((colWidth, i) => {\n    let columnProp = props[colWidth];\n\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    const isXs = !i;\n    let colClass;\n\n    if (isObject(columnProp)) {\n      const colSizeInterfix = isXs ? '-' : `-${colWidth}-`;\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n\n      colClasses.push(mapToCssModules(classNames({\n        [colClass]: columnProp.size || columnProp.size === '',\n        [`order${colSizeInterfix}${columnProp.order}`]: columnProp.order || columnProp.order === 0,\n        [`offset${colSizeInterfix}${columnProp.offset}`]: columnProp.offset || columnProp.offset === 0\n      })), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n\n  const colFormLabel = size || colClasses.length;\n  const formLabel = !(check || colFormLabel);\n\n  const classes = mapToCssModules(classNames(\n    className,\n    hidden ? 'visually-hidden' : false,\n    check ? 'form-check-label' : false,\n    size ? `col-form-label-${size}` : false,\n    colClasses,\n    colFormLabel ? 'col-form-label' : false,\n    formLabel ? 'form-label' : false\n  ), cssModule);\n\n  return (\n    <Tag htmlFor={htmlFor} {...attributes} className={classes} />\n  );\n};\n\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\n\nexport default Label;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  body: PropTypes.bool,\n  bottom: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  heading: PropTypes.bool,\n  left: PropTypes.bool,\n  list: PropTypes.bool,\n  middle: PropTypes.bool,\n  object: PropTypes.bool,\n  right: PropTypes.bool,\n  tag: tagPropType,\n  top: PropTypes.bool,\n};\n\nconst Media = (props) => {\n  const {\n    body,\n    bottom,\n    className,\n    cssModule,\n    heading,\n    left,\n    list,\n    middle,\n    object,\n    right,\n    tag,\n    top,\n    ...attributes\n  } = props;\n\n  let defaultTag;\n  if (heading) {\n    defaultTag = 'h4';\n  } else if (attributes.href) {\n    defaultTag = 'a';\n  } else if (attributes.src || object) {\n    defaultTag = 'img';\n  } else if (list) {\n    defaultTag = 'ul';\n  } else {\n    defaultTag = 'div';\n  }\n  const Tag = tag || defaultTag;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    {\n      'media-body': body,\n      'media-heading': heading,\n      'media-left': left,\n      'media-right': right,\n      'media-top': top,\n      'media-bottom': bottom,\n      'media-middle': middle,\n      'media-object': object,\n      'media-list': list,\n      media: !body && !heading && !left && !right && !top && !bottom && !middle && !object && !list,\n    }\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nMedia.propTypes = propTypes;\n\nexport default Media;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Portal from './Portal';\nimport Fade from './Fade';\nimport {\n  TransitionTimeouts,\n  conditionallyUpdateScrollbar,\n  focusableElements,\n  getOriginalBodyPadding,\n  getTarget,\n  keyCodes,\n  mapToCssModules,\n  omit,\n  setScrollbarWidth,\n  targetPropType,\n} from './utils';\n\nfunction noop() { }\n\nconst FadePropTypes = PropTypes.shape(Fade.propTypes);\n\nconst propTypes = {\n  autoFocus: PropTypes.bool,\n  backdrop: PropTypes.bool,\n  backdropClassName: PropTypes.string,\n  backdropTransition: FadePropTypes,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  container: targetPropType,\n  cssModule: PropTypes.object,\n  direction: PropTypes.oneOf(['start', 'end', 'bottom', 'top']),\n  fade: PropTypes.bool,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func,]),\n  isOpen: PropTypes.bool,\n  keyboard: PropTypes.bool,\n  labelledBy: PropTypes.string,\n  offcanvasTransition: FadePropTypes,\n  onClosed: PropTypes.func,\n  onEnter: PropTypes.func,\n  onExit: PropTypes.func,\n  onOpened: PropTypes.func,\n  returnFocusAfterClose: PropTypes.bool,\n  role: PropTypes.string,\n  scrollable: PropTypes.bool,\n  toggle: PropTypes.func,\n  trapFocus: PropTypes.bool,\n  unmountOnClose: PropTypes.bool,\n  zIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string,])\n};\n\nconst propsToOmit = Object.keys(propTypes);\n\nconst defaultProps = {\n  isOpen: false,\n  autoFocus: true,\n  direction: 'start',\n  scrollable: false,\n  role: 'dialog',\n  backdrop: true,\n  keyboard: true,\n  zIndex: 1050,\n  fade: true,\n  onOpened: noop,\n  onClosed: noop,\n  offcanvasTransition: {\n    timeout: TransitionTimeouts.Offcanvas,\n  },\n  backdropTransition: {\n    mountOnEnter: true,\n    timeout: TransitionTimeouts.Fade, // uses standard fade transition\n  },\n  unmountOnClose: true,\n  returnFocusAfterClose: true,\n  container: 'body',\n  trapFocus: false\n};\n\nclass Offcanvas extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._element = null;\n    this._originalBodyPadding = null;\n    this.getFocusableChildren = this.getFocusableChildren.bind(this);\n    this.handleBackdropClick = this.handleBackdropClick.bind(this);\n    this.handleBackdropMouseDown = this.handleBackdropMouseDown.bind(this);\n    this.handleEscape = this.handleEscape.bind(this);\n    this.handleTab = this.handleTab.bind(this);\n    this.onOpened = this.onOpened.bind(this);\n    this.onClosed = this.onClosed.bind(this);\n    this.manageFocusAfterClose = this.manageFocusAfterClose.bind(this);\n    this.clearBackdropAnimationTimeout = this.clearBackdropAnimationTimeout.bind(this);\n    this.trapFocus = this.trapFocus.bind(this);\n\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  componentDidMount() {\n    const { isOpen, autoFocus, onEnter } = this.props;\n\n    if (isOpen) {\n      this.init();\n      this.setState({ isOpen: true })\n      if (autoFocus) {\n        this.setFocus();\n      }\n    }\n\n    if (onEnter) {\n      onEnter();\n    }\n\n    // traps focus inside the Offcanvas, even if the browser address bar is focused\n    document.addEventListener('focus', this.trapFocus, true);\n\n    this._isMounted = true;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.isOpen && !prevProps.isOpen) {\n      this.init();\n      this.setState({ isOpen: true });\n\n      return;\n    }\n\n    // now Offcanvas Dialog is rendered and we can refer this._element and this._dialog\n    if (this.props.autoFocus && this.state.isOpen && !prevState.isOpen) {\n      this.setFocus();\n    }\n\n    if (this._element && prevProps.zIndex !== this.props.zIndex) {\n      this._element.style.zIndex = this.props.zIndex;\n    }\n  }\n\n  componentWillUnmount() {\n    this.clearBackdropAnimationTimeout();\n\n    if (this.props.onExit) {\n      this.props.onExit();\n    }\n\n    if (this._element) {\n      this.destroy();\n      if (this.props.isOpen || this.state.isOpen) {\n        this.close();\n      }\n    }\n\n    document.removeEventListener('focus', this.trapFocus, true);\n    this._isMounted = false;\n  }\n\n  trapFocus (ev) {\n    if (!this.props.trapFocus) {\n      return;\n    }\n\n    if (!this._element) //element is not attached\n      return;\n\n    if (this._dialog === ev.target) // initial focus when the Offcanvas is opened\n      return;\n\n    if (this.offcanvasIndex < (Offcanvas.openCount - 1)) // last opened offcanvas\n      return;\n\n    const children = this.getFocusableChildren();\n\n    for (let i = 0; i < children.length; i++) { // focus is already inside the Offcanvas\n      if (children[i] === ev.target)\n        return;\n    }\n\n    if (children.length > 0) { // otherwise focus the first focusable element in the Offcanvas\n      ev.preventDefault();\n      ev.stopPropagation();\n      children[0].focus();\n    }\n  }\n\n  onOpened(node, isAppearing) {\n    this.props.onOpened();\n    (this.props.offcanvasTransition.onEntered || noop)(node, isAppearing);\n  }\n\n  onClosed(node) {\n    const { unmountOnClose } = this.props;\n    // so all methods get called before it is unmounted\n    this.props.onClosed();\n    (this.props.offcanvasTransition.onExited || noop)(node);\n\n    if (unmountOnClose) {\n      this.destroy();\n    }\n    this.close();\n\n    if (this._isMounted) {\n      this.setState({ isOpen: false });\n    }\n  }\n\n  setFocus() {\n    if (this._dialog && typeof this._dialog.focus === 'function') {\n      this._dialog.focus();\n    }\n  }\n\n  getFocusableChildren() {\n    return this._element.querySelectorAll(focusableElements.join(', '));\n  }\n\n  getFocusedChild() {\n    let currentFocus;\n    const focusableChildren = this.getFocusableChildren();\n\n    try {\n      currentFocus = document.activeElement;\n    } catch (err) {\n      currentFocus = focusableChildren[0];\n    }\n    return currentFocus;\n  }\n\n  // not mouseUp because scrollbar fires it, shouldn't close when user scrolls\n  handleBackdropClick(e) {\n    if (e.target === this._mouseDownElement) {\n      e.stopPropagation();\n      const backdrop = this._backdrop;\n\n      if (!this.props.isOpen || this.props.backdrop !== true) return;\n\n      if (backdrop && e.target === backdrop && this.props.toggle) {\n        this.props.toggle(e);\n      }\n    }\n  }\n\n  handleTab(e) {\n    if (e.which !== 9) return;\n    if (this.offcanvasIndex < (Offcanvas.openCount - 1)) return; // last opened offcanvas\n\n    const focusableChildren = this.getFocusableChildren();\n    const totalFocusable = focusableChildren.length;\n    if (totalFocusable === 0) return;\n    const currentFocus = this.getFocusedChild();\n\n    let focusedIndex = 0;\n\n    for (let i = 0; i < totalFocusable; i += 1) {\n      if (focusableChildren[i] === currentFocus) {\n        focusedIndex = i;\n        break;\n      }\n    }\n\n    if (e.shiftKey && focusedIndex === 0) {\n      e.preventDefault();\n      focusableChildren[totalFocusable - 1].focus();\n    } else if (!e.shiftKey && focusedIndex === totalFocusable - 1) {\n      e.preventDefault();\n      focusableChildren[0].focus();\n    }\n  }\n\n  handleBackdropMouseDown(e) {\n    this._mouseDownElement = e.target;\n  }\n\n  handleEscape(e) {\n    if (this.props.isOpen && e.keyCode === keyCodes.esc && this.props.toggle) {\n      if (this.props.keyboard) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.props.toggle(e);\n      }\n    }\n  }\n\n  init() {\n    try {\n      this._triggeringElement = document.activeElement;\n    } catch (err) {\n      this._triggeringElement = null;\n    }\n\n    if (!this._element) {\n      this._element = document.createElement('div');\n      this._element.setAttribute('tabindex', '-1');\n      this._element.style.position = 'relative';\n      this._element.style.zIndex = this.props.zIndex;\n      this._mountContainer = getTarget(this.props.container);\n      this._mountContainer.appendChild(this._element);\n    }\n\n    this._originalBodyPadding = getOriginalBodyPadding();\n    conditionallyUpdateScrollbar();\n\n    if (Offcanvas.openCount === 0 && (this.props.backdrop && !this.props.scrollable)) {\n      document.body.style.overflow = 'hidden'; \n    }\n\n    this.offcanvasIndex = Offcanvas.openCount;\n    Offcanvas.openCount += 1;\n  }\n\n  destroy() {\n    if (this._element) {\n      this._mountContainer.removeChild(this._element);\n      this._element = null;\n    }\n\n    this.manageFocusAfterClose();\n  }\n\n  manageFocusAfterClose() {\n    if (this._triggeringElement) {\n      const { returnFocusAfterClose } = this.props;\n      if (this._triggeringElement.focus && returnFocusAfterClose) this._triggeringElement.focus();\n      this._triggeringElement = null;\n    }\n  }\n\n  close() {\n    this.manageFocusAfterClose();\n    Offcanvas.openCount = Math.max(0, Offcanvas.openCount - 1);\n\n    document.body.style.overflow = null; \n    setScrollbarWidth(this._originalBodyPadding);\n  }\n\n  render() {\n    const {\n      direction,\n      unmountOnClose\n    } = this.props;\n\n    if (!!this._element && (this.state.isOpen || !unmountOnClose)) {\n      const isOffcanvasHidden = !!this._element && !this.state.isOpen && !unmountOnClose;\n      this._element.style.display = isOffcanvasHidden ? 'none' : 'block';\n\n      const {\n        className,\n        backdropClassName,\n        cssModule,\n        isOpen,\n        backdrop,\n        role,\n        labelledBy,\n        style\n      } = this.props;\n\n      const offcanvasAttributes = {\n        onKeyUp: this.handleEscape,\n        onKeyDown: this.handleTab,\n        'aria-labelledby': labelledBy,\n        role,\n        tabIndex: '-1'\n      };\n\n      const hasTransition = this.props.fade;\n      const offcanvasTransition = {\n        ...Fade.defaultProps,\n        ...this.props.offcanvasTransition,\n        baseClass: hasTransition ? this.props.offcanvasTransition.baseClass : '',\n        timeout: hasTransition ? this.props.offcanvasTransition.timeout : 0,\n      };\n      const backdropTransition = {\n        ...Fade.defaultProps,\n        ...this.props.backdropTransition,\n        baseClass: hasTransition ? this.props.backdropTransition.baseClass : '',\n        timeout: hasTransition ? this.props.backdropTransition.timeout : 0,\n      };\n\n      const Backdrop = backdrop && (\n        hasTransition ?\n          (<Fade\n            {...backdropTransition}\n            in={isOpen && !!backdrop}\n            innerRef={(c) => {\n              this._backdrop = c;\n            }}\n            cssModule={cssModule}\n            className={mapToCssModules(classNames('offcanvas-backdrop', backdropClassName), cssModule)}\n            onClick={this.handleBackdropClick}\n            onMouseDown={this.handleBackdropMouseDown}\n          />)\n          : <div\n              className={mapToCssModules(classNames('offcanvas-backdrop', 'show', backdropClassName), cssModule)}\n              onClick={this.handleBackdropClick}\n              onMouseDown={this.handleBackdropMouseDown}\n            />\n      );\n\n      const attributes = omit(this.props, propsToOmit);\n\n      return (\n        <Portal node={this._element}>\n          <Fade\n            {...attributes}\n            {...offcanvasAttributes}\n            {...offcanvasTransition}\n            in={isOpen}\n            onEntered={this.onOpened}\n            onExited={this.onClosed}\n            cssModule={cssModule}\n            className={mapToCssModules(classNames('offcanvas', className,\n              `offcanvas-${direction}`\n            ), cssModule)}\n            innerRef={(c) => {\n              this._dialog = c;\n            }}\n            style={{\n              ...style,\n              visibility: isOpen ? 'visible' : 'hidden'\n            }}\n          >\n            {this.props.children}\n          </Fade>\n          {Backdrop}\n        </Portal>\n      );\n    }\n    return null;\n  }\n\n  clearBackdropAnimationTimeout() {\n    if (this._backdropAnimationTimeout) {\n      clearTimeout(this._backdropAnimationTimeout);\n      this._backdropAnimationTimeout = undefined;\n    }\n  }\n}\n\nOffcanvas.propTypes = propTypes;\nOffcanvas.defaultProps = defaultProps;\nOffcanvas.openCount = 0;\n\nexport default Offcanvas;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'div',\n};\n\nconst OffcanvasBody = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'offcanvas-body'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nOffcanvasBody.propTypes = propTypes;\nOffcanvasBody.defaultProps = defaultProps;\n\nexport default OffcanvasBody;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  close: PropTypes.object,\n  closeAriaLabel: PropTypes.string,\n  cssModule: PropTypes.object,\n  tag: tagPropType,\n  toggle: PropTypes.func,\n  wrapTag: tagPropType\n};\n\nconst defaultProps = {\n  closeAriaLabel: 'Close',\n  tag: 'h5',\n  wrapTag: 'div'\n};\n\nconst OffcanvasHeader = (props) => {\n  let closeButton;\n  const {\n    children,\n    className,\n    close,\n    closeAriaLabel,\n    cssModule,\n    tag: Tag,\n    toggle,\n    wrapTag: WrapTag,\n    ...attributes } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'offcanvas-header'\n  ), cssModule);\n\n  if (!close && toggle) {\n    closeButton = (\n      <button type=\"button\" onClick={toggle} className={mapToCssModules('btn-close', cssModule)} aria-label={closeAriaLabel} />\n    );\n  }\n\n  return (\n    <WrapTag {...attributes} className={classes}>\n      <Tag className={mapToCssModules('offcanvas-title', cssModule)}>\n        {children}\n      </Tag>\n      {close || closeButton}\n    </WrapTag>\n  );\n};\n\nOffcanvasHeader.propTypes = propTypes;\nOffcanvasHeader.defaultProps = defaultProps;\n\nexport default OffcanvasHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  tag: tagPropType,\n  listTag: tagPropType,\n  'aria-label': PropTypes.string\n};\n\nconst defaultProps = {\n  tag: 'nav',\n  listTag: 'ul',\n  'aria-label': 'pagination'\n};\n\nconst Pagination = (props) => {\n  const {\n    className,\n    listClassName,\n    cssModule,\n    size,\n    tag: Tag,\n    listTag: ListTag,\n    'aria-label': label,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className\n  ), cssModule);\n\n  const listClasses = mapToCssModules(classNames(\n    listClassName,\n    'pagination',\n    {\n      [`pagination-${size}`]: !!size,\n    }\n  ), cssModule);\n\n  return (\n    <Tag className={classes} aria-label={label}>\n      <ListTag {...attributes} className={listClasses} />\n    </Tag>\n  );\n};\n\nPagination.propTypes = propTypes;\nPagination.defaultProps = defaultProps;\n\nexport default Pagination;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n};\n\nconst defaultProps = {\n  tag: 'li',\n};\n\nconst PaginationItem = (props) => {\n  const {\n    active,\n    className,\n    cssModule,\n    disabled,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'page-item',\n    {\n      active,\n      disabled,\n    }\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nPaginationItem.propTypes = propTypes;\nPaginationItem.defaultProps = defaultProps;\n\nexport default PaginationItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  'aria-label': PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  next: PropTypes.bool,\n  previous: PropTypes.bool,\n  first: PropTypes.bool,\n  last: PropTypes.bool,\n  tag: tagPropType,\n};\n\nconst defaultProps = {\n  tag: 'a',\n};\n\nconst PaginationLink = (props) => {\n  let {\n    className,\n    cssModule,\n    next,\n    previous,\n    first,\n    last,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'page-link'\n  ), cssModule);\n\n  let defaultAriaLabel;\n  if (previous) {\n    defaultAriaLabel = 'Previous';\n  } else if (next) {\n    defaultAriaLabel = 'Next';\n  } else if (first) {\n    defaultAriaLabel = 'First';\n  } else if (last) {\n    defaultAriaLabel = 'Last';\n  }\n\n  const ariaLabel = props['aria-label'] || defaultAriaLabel;\n\n  let defaultCaret;\n  if (previous) {\n    defaultCaret = '\\u2039';\n  } else if (next) {\n    defaultCaret = '\\u203A';\n  } else if (first) {\n    defaultCaret = '\\u00ab';\n  } else if (last) {\n    defaultCaret = '\\u00bb';\n  }\n\n  let children = props.children;\n  if (children && Array.isArray(children) && children.length === 0) {\n    children = null;\n  }\n\n  if (!attributes.href && Tag === 'a') {\n    Tag = 'button';\n  }\n\n  if (previous || next || first || last) {\n    children = [\n      <span\n        aria-hidden=\"true\"\n        key=\"caret\"\n      >\n        {children || defaultCaret}\n      </span>,\n      <span\n        className=\"visually-hidden\"\n        key=\"ariaLabel\"\n      >\n        {ariaLabel}\n      </span>,\n    ];\n  }\n\n  return (\n    <Tag\n      {...attributes}\n      className={classes}\n      aria-label={ariaLabel}\n    >\n      {children}\n    </Tag>\n  );\n};\n\nPaginationLink.propTypes = propTypes;\nPaginationLink.defaultProps = defaultProps;\n\nexport default PaginationLink;\n","import React from 'react';\n\n/**\n * TabContext\n * {\n *  activeTabId: PropTypes.any\n * }\n */\nexport const TabContext = React.createContext({});","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, omit, tagPropType } from './utils';\n\n\nconst propTypes = {\n  tag: tagPropType,\n  activeTab: PropTypes.any,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'div',\n};\n\n\nclass TabContent extends Component {\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (prevState.activeTab !== nextProps.activeTab) {\n      return {\n        activeTab: nextProps.activeTab\n      };\n    }\n    return null;\n  }\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTab: this.props.activeTab\n    };\n  }\n\n  render() {\n    const {\n      className,\n      cssModule,\n      tag: Tag,\n    } = this.props;\n\n    const attributes = omit(this.props, Object.keys(propTypes));\n\n    const classes = mapToCssModules(classNames('tab-content', className), cssModule);\n\n    return (\n      <TabContext.Provider value={{activeTabId: this.state.activeTab}}>\n        <Tag {...attributes} className={classes} />\n      </TabContext.Provider>\n    );\n  }\n}\n\nexport default TabContent;\n\nTabContent.propTypes = propTypes;\nTabContent.defaultProps = defaultProps;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { TabContext } from './TabContext';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  tabId: PropTypes.any,\n};\n\nconst defaultProps = {\n  tag: 'div',\n};\n\nexport default function TabPane(props) {\n  const {\n    className,\n    cssModule,\n    tabId,\n    tag: Tag,\n    ...attributes\n  } = props;\n  const getClasses = (activeTabId) => mapToCssModules(classNames('tab-pane', className, { active: tabId === activeTabId }), cssModule);\n  return (\n    <TabContext.Consumer>\n      {({activeTabId}) => <Tag {...attributes} className={getClasses(activeTabId)} />}\n    </TabContext.Consumer>\n  );\n}\nTabPane.propTypes = propTypes;\nTabPane.defaultProps = defaultProps;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Fade from './Fade';\n\nconst propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  closeClassName: PropTypes.string,\n  closeAriaLabel: PropTypes.string,\n  cssModule: PropTypes.object,\n  color: PropTypes.string,\n  fade: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func,\n  tag: tagPropType,\n  transition: PropTypes.shape(Fade.propTypes),\n  innerRef: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.func,\n  ]),\n};\n\nconst defaultProps = {\n  color: 'success',\n  isOpen: true,\n  tag: 'div',\n  closeAriaLabel: 'Close',\n  fade: true,\n  transition: {\n    ...Fade.defaultProps,\n    unmountOnExit: true,\n  },\n};\n\nfunction Alert(props) {\n  const {\n    className,\n    closeClassName,\n    closeAriaLabel,\n    cssModule,\n    tag: Tag,\n    color,\n    isOpen,\n    toggle,\n    children,\n    transition,\n    fade,\n    innerRef,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'alert',\n    `alert-${color}`,\n    { 'alert-dismissible': toggle }\n  ), cssModule);\n\n  const closeClasses = mapToCssModules(classNames('btn-close', closeClassName), cssModule);\n\n  const alertTransition = {\n    ...Fade.defaultProps,\n    ...transition,\n    baseClass: fade ? transition.baseClass : '',\n    timeout: fade ? transition.timeout : 0,\n  };\n\n  return (\n    <Fade {...attributes} {...alertTransition} tag={Tag} className={classes} in={isOpen} role=\"alert\" innerRef={innerRef}>\n      {toggle ?\n        <button type=\"button\" className={closeClasses} aria-label={closeAriaLabel} onClick={toggle} />\n        : null}\n      {children}\n    </Fade>\n  );\n}\n\nAlert.propTypes = propTypes;\nAlert.defaultProps = defaultProps;\n\nexport default Alert;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Fade from './Fade';\n\nconst propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  fade: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  tag: tagPropType,\n  transition: PropTypes.shape(Fade.propTypes),\n  innerRef: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.func,\n  ]),\n};\n\nconst defaultProps = {\n  isOpen: true,\n  tag: 'div',\n  fade: true,\n  transition: {\n    ...Fade.defaultProps,\n    unmountOnExit: true,\n  },\n};\n\nfunction Toast(props) {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    isOpen,\n    children,\n    transition,\n    fade,\n    innerRef,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(classNames(className, 'toast'), cssModule);\n\n  const toastTransition = {\n    ...Fade.defaultProps,\n    ...transition,\n    baseClass: fade ? transition.baseClass : '',\n    timeout: fade ? transition.timeout : 0,\n  };\n\n  return (\n    <Fade {...attributes} {...toastTransition} tag={Tag} className={classes} in={isOpen} role=\"alert\" innerRef={innerRef}>\n      {children}\n    </Fade>\n  );\n}\n\nToast.propTypes = propTypes;\nToast.defaultProps = defaultProps;\n\nexport default Toast;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.string,\n    PropTypes.func,\n  ]),\n};\n\nconst defaultProps = {\n  tag: 'div'\n};\n\nconst ToastBody = (props) => {\n  const {\n    className,\n    cssModule,\n    innerRef,\n    tag: Tag,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'toast-body'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} ref={innerRef} />\n  );\n};\n\nToastBody.propTypes = propTypes;\nToastBody.defaultProps = defaultProps;\n\nexport default ToastBody;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  wrapTag: tagPropType,\n  toggle: PropTypes.func,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  closeAriaLabel: PropTypes.string,\n  charCode: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  close: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'strong',\n  wrapTag: 'div',\n  tagClassName: 'me-auto',\n  closeAriaLabel: 'Close',\n};\n\nconst ToastHeader = (props) => {\n  let closeButton;\n  let icon;\n  const {\n    className,\n    cssModule,\n    children,\n    toggle,\n    tag: Tag,\n    wrapTag: WrapTag,\n    closeAriaLabel,\n    close,\n    tagClassName,\n    icon: iconProp,\n    ...attributes } = props;\n\n  const classes = mapToCssModules(classNames(\n    className,\n    'toast-header'\n  ), cssModule);\n\n  if (!close && toggle) {\n    closeButton = (\n      <button type=\"button\" onClick={toggle} className={mapToCssModules('btn-close', cssModule)} aria-label={closeAriaLabel} />\n    );\n  }\n\n  if (typeof iconProp === \"string\") {\n    icon = (\n      <svg\n        className={mapToCssModules(`rounded text-${iconProp}`)}\n        width=\"20\"\n        height=\"20\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        preserveAspectRatio=\"xMidYMid slice\"\n        focusable=\"false\"\n        role=\"img\"\n      >\n        <rect fill=\"currentColor\" width=\"100%\" height=\"100%\"></rect>\n      </svg>\n    );\n  } else if (iconProp) {\n    icon = iconProp;\n  }\n\n  return (\n    <WrapTag {...attributes} className={classes}>\n      {icon}\n      <Tag className={mapToCssModules(classNames(tagClassName, { \"ms-2\": icon != null }), cssModule)}>\n        {children}\n      </Tag>\n      {close || closeButton}\n    </WrapTag>\n  );\n};\n\nToastHeader.propTypes = propTypes;\nToastHeader.defaultProps = defaultProps;\n\nexport default ToastHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  disabled: PropTypes.bool,\n  color: PropTypes.string,\n  action: PropTypes.bool,\n  className: PropTypes.any,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'li'\n};\n\nconst handleDisabledOnClick = (e) => {\n  e.preventDefault();\n};\n\nconst ListGroupItem = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    active,\n    disabled,\n    action,\n    color,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    active ? 'active' : false,\n    disabled ? 'disabled' : false,\n    action ? 'list-group-item-action' : false,\n    color ? `list-group-item-${color}` : false,\n    'list-group-item'\n  ), cssModule);\n\n  // Prevent click event when disabled.\n  if (disabled) {\n    attributes.onClick = handleDisabledOnClick;\n  }\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nListGroupItem.propTypes = propTypes;\nListGroupItem.defaultProps = defaultProps;\n\nexport default ListGroupItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.any,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'h5'\n};\n\nconst ListGroupItemHeading = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'list-group-item-heading'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nListGroupItemHeading.propTypes = propTypes;\nListGroupItemHeading.defaultProps = defaultProps;\n\nexport default ListGroupItemHeading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.any,\n  cssModule: PropTypes.object,\n};\n\nconst defaultProps = {\n  tag: 'p'\n};\n\nconst ListGroupItemText = (props) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'list-group-item-text'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} />\n  );\n};\n\nListGroupItemText.propTypes = propTypes;\nListGroupItemText.defaultProps = defaultProps;\n\nexport default ListGroupItemText;\n","import React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  type: PropTypes.string\n};\n\nconst defaultProps ={\n  tag: 'ul'\n};\n\nconst List = forwardRef((props, ref) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    type,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    type ? `list-${type}` : false\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} ref={ref} />\n  );\n});\n\nList.name = 'List';\nList.propTypes = propTypes;\nList.defaultProps = defaultProps;\n\nexport default List;\n","import React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\n\nconst defaultProps ={\n  tag: 'li'\n};\n\nconst ListInlineItem = forwardRef((props, ref) => {\n  const {\n    className,\n    cssModule,\n    tag: Tag,\n    ...attributes\n  } = props;\n  const classes = mapToCssModules(classNames(\n    className,\n    'list-inline-item'\n  ), cssModule);\n\n  return (\n    <Tag {...attributes} className={classes} ref={ref} />\n  );\n});\n\nListInlineItem.name = 'ListInlineItem';\nListInlineItem.propTypes = propTypes;\nListInlineItem.defaultProps = defaultProps;\n\nexport default ListInlineItem;\n","import React, { Component } from 'react';\nimport Alert from './Alert';\n\nclass UncontrolledAlert extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { isOpen: true };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState({ isOpen: !this.state.isOpen });\n  }\n\n  render() {\n    return <Alert isOpen={this.state.isOpen} toggle={this.toggle} {...this.props} />;\n  }\n}\n\nexport default UncontrolledAlert;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ButtonDropdown from './ButtonDropdown';\nimport { omit } from './utils';\n\nconst omitKeys = ['defaultOpen'];\n\nexport default class UncontrolledButtonDropdown extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { isOpen: props.defaultOpen || false };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState({ isOpen: !this.state.isOpen });\n  }\n\n  render() {\n    return <ButtonDropdown isOpen={this.state.isOpen} toggle={this.toggle} {...omit(this.props, omitKeys)} />;\n  }\n}\n\nUncontrolledButtonDropdown.propTypes = {\n  defaultOpen: PropTypes.bool,\n  ...ButtonDropdown.propTypes\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Collapse from './Collapse';\nimport { omit, findDOMElements, defaultToggleEvents, addMultipleEventListeners } from './utils';\n\nconst omitKeys = ['toggleEvents', 'defaultOpen'];\n\nconst propTypes = {\n  defaultOpen: PropTypes.bool,\n  toggler: PropTypes.string.isRequired,\n  toggleEvents: PropTypes.arrayOf(PropTypes.string)\n};\n\nconst defaultProps = {\n  toggleEvents: defaultToggleEvents\n};\n\nclass UncontrolledCollapse extends Component {\n  constructor(props) {\n    super(props);\n\n    this.togglers = null;\n    this.removeEventListeners = null;\n    this.toggle = this.toggle.bind(this);\n\n    this.state = { isOpen: props.defaultOpen || false };\n  }\n\n  componentDidMount() {\n    this.togglers = findDOMElements(this.props.toggler);\n    if (this.togglers.length) {\n      this.removeEventListeners = addMultipleEventListeners(\n        this.togglers,\n        this.toggle,\n        this.props.toggleEvents\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.togglers.length && this.removeEventListeners) {\n      this.removeEventListeners();\n    }\n  }\n\n  toggle(e) {\n    this.setState(({ isOpen }) => ({ isOpen: !isOpen }));\n    e.preventDefault();\n  }\n\n  render() {\n    return <Collapse isOpen={this.state.isOpen} {...omit(this.props, omitKeys)} />;\n  }\n}\n\nUncontrolledCollapse.propTypes = propTypes;\nUncontrolledCollapse.defaultProps = defaultProps;\n\nexport default UncontrolledCollapse;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport { omit } from './utils';\n\nconst omitKeys = ['defaultOpen'];\n\nexport default class UncontrolledDropdown extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { isOpen: props.defaultOpen || false };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle(e) {\n    const isOpen = !this.state.isOpen;\n    this.setState({ isOpen }, () => {\n      if (this.props.onToggle) {\n        this.props.onToggle(e, isOpen);\n      }\n    });\n  }\n\n  render() {\n    return <Dropdown isOpen={this.state.isOpen} toggle={this.toggle} {...omit(this.props, omitKeys)} />;\n  }\n}\n\nUncontrolledDropdown.propTypes = {\n  defaultOpen: PropTypes.bool,\n  onToggle: PropTypes.func,\n  ...Dropdown.propTypes\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from './Tooltip';\nimport { omit } from './utils';\n\nconst omitKeys = ['defaultOpen'];\n\nexport default class UncontrolledTooltip extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { isOpen: props.defaultOpen || false };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState({ isOpen: !this.state.isOpen });\n  }\n\n  render() {\n    return <Tooltip isOpen={this.state.isOpen} toggle={this.toggle} {...omit(this.props, omitKeys)} />;\n  }\n}\n\nUncontrolledTooltip.propTypes = {\n  defaultOpen: PropTypes.bool,\n  ...Tooltip.propTypes\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\n\nconst propTypes = {\n  tag: tagPropType,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.string\n};\n\nconst defaultProps = {\n  tag: 'div',\n  type: 'border',\n  children: 'Loading...'\n};\n\nconst Spinner = props => {\n  const {\n    className,\n    cssModule,\n    type,\n    size,\n    color,\n    children,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  const classes = mapToCssModules(\n    classNames(\n      className,\n      size ? `spinner-${type}-${size}` : false,\n      `spinner-${type}`,\n      color ? `text-${color}` : false\n    ),\n    cssModule\n  );\n\n  return (\n    <Tag role=\"status\" {...attributes} className={classes}>\n      {children &&\n        <span className={mapToCssModules('visually-hidden', cssModule)}>\n          {children}\n        </span>\n      }\n    </Tag>\n  );\n};\n\nSpinner.propTypes = propTypes;\nSpinner.defaultProps = defaultProps;\n\nexport default Spinner;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Col, { getColumnClasses } from './Col';\n\nconst propTypes = {\n  ...Col.propTypes,\n  color: PropTypes.string,\n  tag: tagPropType,\n  animation: PropTypes.oneOf(['glow', 'wave']),\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  size: PropTypes.oneOf(['lg', 'sm', 'xs']),\n};\n\nconst defaultProps = {\n  tag: 'span'\n};\n\nconst Placeholder = (props) => {\n  let {\n    className,\n    cssModule,\n    color,\n    innerRef,\n    tag: Tag,\n    animation,\n    size,\n    widths,\n    ...attributes\n  } = props;\n\n  let { attributes: modifiedAttributes, colClasses } = getColumnClasses(attributes, cssModule, widths)\n\n  const classes = mapToCssModules(classNames(\n    className,\n    colClasses,\n    'placeholder' + (animation ? '-'+animation : ''),\n    size ? 'placeholder-'+ size : false,\n    color ? 'bg-'+color : false\n  ), cssModule);\n\n\n\n  return (\n    <Tag {...modifiedAttributes} className={classes} ref={innerRef} />\n  );\n};\n\nPlaceholder.propTypes = propTypes;\nPlaceholder.defaultProps = defaultProps;\n\nexport default Placeholder;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Button from \"./Button\";\nimport { getColumnClasses } from './Col';\n\nconst propTypes = {\n  size: PropTypes.string,\n  color: PropTypes.string,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  tag: tagPropType\n}\n\nconst defaultProps = {\n  color: 'primary',\n  tag: Button\n}\n\nconst PlaceholderButton = (props) => {\n  let {\n    cssModule,\n    className,\n    tag: Tag,\n    ...attributes\n  } = props;\n\n  let { attributes: modifiedAttributes, colClasses } = getColumnClasses(attributes, cssModule)\n\n  const classes = mapToCssModules(classNames(\n    \"placeholder\",\n    className,\n    colClasses\n  ), cssModule);\n\n  return (\n    <Button {...modifiedAttributes} className={classes} disabled={true}></Button>\n  )\n}\n\nPlaceholderButton.propTypes = propTypes;\nPlaceholderButton.defaultProps = defaultProps;\n\nexport default PlaceholderButton ","(() => {\n  if ( typeof window !== 'object' || typeof window.CustomEvent === 'function' ) return;\n\n  const CustomEvent = (( event, params ) => {\n    params = params || { bubbles: false, cancelable: false, detail: null };\n    var evt = document.createEvent( 'CustomEvent' );\n    evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail );\n    return evt;\n  });\n\n  window.CustomEvent = CustomEvent;\n})();\n\n(() => {\n  if ( typeof Object.values === 'function' ) return;\n\n  const values = ( (O) => Object.keys(O).map((key) => O[key]) );\n\n  Object.values = values;\n})();\n","import React, { useState, useEffect } from \"react\";\nimport { Table, Label, Input, Button } from \"reactstrap\";\nimport Axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Link } from \"react-router-dom\";\n\nfunction EpisodeListing() {\n  const [info, setInfo] = useState([]);\n  const [episodes, setEpisodes] = useState([]);\n\n  useEffect(() => {\n    Axios.get(\"https://rickandmortyapi.com/api/episode\").then((result) => {\n      setEpisodes(result.data.results);\n      setInfo(result.data.info);\n    });\n  }, []);\n\n  const pagination = (direction) => {\n    const api = direction === \"next\" ? info.next : info.prev;\n    if (api) {\n      Axios.get(api).then((result) => {\n        setEpisodes(result.data.results);\n        setInfo(result.data.info);\n      });\n    }\n  };\n\n  const search = () => {\n    const sName = document.getElementById(\"searchName\").value;\n    const sEpisode = document.getElementById(\"searchEpisode\").value;\n    const apiURL = `https://rickandmortyapi.com/api/episode/?name=${sName}&episode=${sEpisode}`;\n    Axios.get(apiURL).then((result) => {\n      setEpisodes(result.data.results);\n      setInfo(result.data.info);\n    });\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-6 mt-3\">\n          <Label for=\"searchName\">Name</Label>\n          <Input id=\"searchName\" placeholder=\"Pilot\" type=\"text\" />\n        </div>\n        <div className=\"col-md-6 mt-3\">\n          <Label for=\"searchEpisode\">Episode</Label>\n          <Input id=\"searchEpisode\" placeholder=\"S01\" type=\"text\" />\n        </div>\n        <div className=\"d-flex justify-content-end mt-3\">\n          <Button onClick={search}>Search</Button>\n        </div>\n      </div>\n      <div className=\"row w-100\">\n        <Table dark hover responsive striped>\n          <thead>\n            <tr>\n              <th>Id</th>\n              <th>Name</th>\n              <th>Air Date</th>\n              <th>Episode</th>\n            </tr>\n          </thead>\n          <tbody>\n            {episodes.map((episode) => (\n              <tr key={episode.id}>\n                <th scope=\"row\">{episode.id}</th>\n                <td><Link to={`/episode/${episode.id}`}>{episode.name}</Link></td>\n                <td>{episode.air_date}</td>\n                <td>{episode.episode}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n        <nav className=\"col-12 justify-content-center d-flex mt-5\">\n          <ul className=\"pagination\">\n            <li className=\"page-item\">\n              <button className=\"page-link cursor\" onClick={() => pagination(\"prev\")}>Previous</button>\n            </li>\n            <li className=\"page-item\">\n              <button className=\"page-link cursor\" onClick={() => pagination(\"next\")}>Next</button>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </div>\n  );\n}\n\nexport default EpisodeListing;\n","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\";\n  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n\n  var exports = {},\n      Op = Object.prototype,\n      hasOwn = Op.hasOwnProperty,\n      $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n      iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n      asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n      toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n        generator = Object.create(protoGenerator.prototype),\n        context = new Context(tryLocsList || []);\n    return generator._invoke = function (innerFn, self, context) {\n      var state = \"suspendedStart\";\n      return function (method, arg) {\n        if (\"executing\" === state) throw new Error(\"Generator is already running\");\n\n        if (\"completed\" === state) {\n          if (\"throw\" === method) throw arg;\n          return doneResult();\n        }\n\n        for (context.method = method, context.arg = arg;;) {\n          var delegate = context.delegate;\n\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n\n          if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n            if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n            context.dispatchException(context.arg);\n          } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n          state = \"executing\";\n          var record = tryCatch(innerFn, self, context);\n\n          if (\"normal\" === record.type) {\n            if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          }\n\n          \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n        }\n      };\n    }(innerFn, self, context), generator;\n  }\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {}\n\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n      NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n            value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n\n      reject(record.arg);\n    }\n\n    var previousPromise;\n\n    this._invoke = function (method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    };\n  }\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          for (; ++i < iterable.length;) {\n            if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n          }\n\n          return next.value = undefined, next.done = !0, next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    return {\n      next: doneResult\n    };\n  }\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n            record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n              hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      }\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\n */\n\nexport const CONSTANTS = {\n  /**\n   * @define {boolean} Whether this is the client Node.js SDK.\n   */\n  NODE_CLIENT: false,\n  /**\n   * @define {boolean} Whether this is the Admin Node.js SDK.\n   */\n  NODE_ADMIN: false,\n\n  /**\n   * Firebase SDK Version\n   */\n  SDK_VERSION: '${JSCORE_VERSION}'\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw new DecodeBase64StringError();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * An error encountered while decoding base64 string.\n */\nexport class DecodeBase64StringError extends Error {\n  readonly name = 'DecodeBase64StringError';\n}\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './global';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  /**\n   * Override Firebase's runtime environment detection and\n   * force the SDK to act as if it were in the specified environment.\n   */\n  forceEnvironment?: 'browser' | 'node';\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\n * The dots are in parens because certain compilers (Vite?) cannot\n * handle seeing that variable in comments.\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n * @public\n */\nexport const getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n * @public\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\nimport { getDefaults } from './defaults';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected or specified.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  const forceEnvironment = getDefaults()?.forceEnvironment;\n  if (forceEnvironment === 'node') {\n    return true;\n  } else if (forceEnvironment === 'browser') {\n    return false;\n  }\n\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    !!navigator.userAgent &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  try {\n    return typeof indexedDB === 'object';\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as vertexName } from '../../../packages/vertexai/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  [vertexName]: 'fire-vertex',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseServerApp\n} from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { FirebaseServerAppImpl } from './firebaseServerApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * @internal\n */\nexport const _serverApps = new Map<string, FirebaseServerApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  for (const serverApp of _serverApps.values()) {\n    _addComponent(serverApp as FirebaseServerAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n *\n * @param obj - an object of type FirebaseApp or FirebaseOptions.\n *\n * @returns true if the provide object is of type FirebaseApp.\n *\n * @internal\n */\nexport function _isFirebaseApp(\n  obj: FirebaseApp | FirebaseOptions\n): obj is FirebaseApp {\n  return (obj as FirebaseApp).options !== undefined;\n}\n\n/**\n *\n * @param obj - an object of type FirebaseApp.\n *\n * @returns true if the provided object is of type FirebaseServerAppImpl.\n *\n * @internal\n */\nexport function _isFirebaseServerApp(\n  obj: FirebaseApp | FirebaseServerApp\n): obj is FirebaseServerApp {\n  return (obj as FirebaseServerApp).settings !== undefined;\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  SERVER_APP_DELETED = 'server-app-deleted',\n  NO_OPTIONS = 'no-options',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete',\n  FINALIZATION_REGISTRY_NOT_SUPPORTED = 'finalization-registry-not-supported',\n  INVALID_SERVER_APP_ENVIRONMENT = 'invalid-server-app-environment'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call initializeApp() first',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}'\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.SERVER_APP_DELETED]: 'Firebase Server App has been deleted',\n  [AppError.NO_OPTIONS]:\n    'Need to provide options, when not being deployed to hosting via source.',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED]:\n    'FirebaseServerApp deleteOnDeref field defined but the JS runtime does not support FinalizationRegistry.',\n  [AppError.INVALID_SERVER_APP_ENVIRONMENT]:\n    'FirebaseServerApp is not for use in browser environments.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n  [AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED]: { appName?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  protected readonly _options: FirebaseOptions;\n  protected readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  protected _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  protected checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseServerApp,\n  FirebaseOptions,\n  FirebaseAppSettings,\n  FirebaseServerAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { FirebaseServerAppImpl } from './firebaseServerApp';\nimport {\n  _apps,\n  _components,\n  _isFirebaseApp,\n  _registerComponent,\n  _serverApps\n} from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual, getDefaultAppConfig, isBrowser } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseServerApp} instance.\n *\n * The `FirebaseServerApp` is similar to `FirebaseApp`, but is intended for execution in\n * server side rendering environments only. Initialization will fail if invoked from a\n * browser environment.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize an instance of `FirebaseServerApp`.\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeServerApp({\n *     apiKey: \"AIza....\",                             // Auth / General Use\n *     authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *     databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *     storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *     messagingSenderId: \"123456789\"                  // Cloud Messaging\n *   },\n *   {\n *    authIdToken: \"Your Auth ID Token\"\n *   });\n * ```\n *\n * @param options - `Firebase.AppOptions` to configure the app's services, or a\n *   a `FirebaseApp` instance which contains the `AppOptions` within.\n * @param config - `FirebaseServerApp` configuration.\n *\n * @returns The initialized `FirebaseServerApp`.\n *\n * @public\n */\nexport function initializeServerApp(\n  options: FirebaseOptions | FirebaseApp,\n  config: FirebaseServerAppSettings\n): FirebaseServerApp;\n\nexport function initializeServerApp(\n  _options: FirebaseOptions | FirebaseApp,\n  _serverAppConfig: FirebaseServerAppSettings\n): FirebaseServerApp {\n  if (isBrowser()) {\n    // FirebaseServerApp isn't designed to be run in browsers.\n    throw ERROR_FACTORY.create(AppError.INVALID_SERVER_APP_ENVIRONMENT);\n  }\n\n  if (_serverAppConfig.automaticDataCollectionEnabled === undefined) {\n    _serverAppConfig.automaticDataCollectionEnabled = false;\n  }\n\n  let appOptions: FirebaseOptions;\n  if (_isFirebaseApp(_options)) {\n    appOptions = _options.options;\n  } else {\n    appOptions = _options;\n  }\n\n  // Build an app name based on a hash of the configuration options.\n  const nameObj = {\n    ..._serverAppConfig,\n    ...appOptions\n  };\n\n  // However, Do not mangle the name based on releaseOnDeref, since it will vary between the\n  // construction of FirebaseServerApp instances. For example, if the object is the request headers.\n  if (nameObj.releaseOnDeref !== undefined) {\n    delete nameObj.releaseOnDeref;\n  }\n\n  const hashCode = (s: string): number => {\n    return [...s].reduce(\n      (hash, c) => (Math.imul(31, hash) + c.charCodeAt(0)) | 0,\n      0\n    );\n  };\n\n  if (_serverAppConfig.releaseOnDeref !== undefined) {\n    if (typeof FinalizationRegistry === 'undefined') {\n      throw ERROR_FACTORY.create(\n        AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED,\n        {}\n      );\n    }\n  }\n\n  const nameString = '' + hashCode(JSON.stringify(nameObj));\n  const existingApp = _serverApps.get(nameString) as FirebaseServerApp;\n  if (existingApp) {\n    (existingApp as FirebaseServerAppImpl).incRefCount(\n      _serverAppConfig.releaseOnDeref\n    );\n    return existingApp;\n  }\n\n  const container = new ComponentContainer(nameString);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseServerAppImpl(\n    appOptions,\n    _serverAppConfig,\n    nameString,\n    container\n  );\n\n  _serverApps.set(nameString, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME && getDefaultAppConfig()) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  let cleanupProviders = false;\n  const name = app.name;\n  if (_apps.has(name)) {\n    cleanupProviders = true;\n    _apps.delete(name);\n  } else if (_serverApps.has(name)) {\n    const firebaseServerApp = app as FirebaseServerAppImpl;\n    if (firebaseServerApp.decRefCount() <= 0) {\n      _serverApps.delete(name);\n      cleanupProviders = true;\n    }\n  }\n\n  if (cleanupProviders) {\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            try {\n              db.createObjectStore(STORE_NAME);\n            } catch (e) {\n              // Safari/iOS browsers throw occasional exceptions on\n              // db.createObjectStore() that may be a bug. Avoid blocking\n              // the rest of the app functionality.\n              console.warn(e);\n            }\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME);\n    const result = await tx.objectStore(STORE_NAME).get(computeKey(app));\n    // We already have the value but tx.done can throw,\n    // so we need to await it here to catch errors\n    await tx.done;\n    return result;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    await tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache?.heartbeats == null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n      // If we failed to construct a heartbeats cache, then return immediately.\n      if (this._heartbeatsCache?.heartbeats == null) {\n        return;\n      }\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache?.heartbeats == null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      if (idbHeartbeatObject?.heartbeats) {\n        return idbHeartbeatObject;\n      } else {\n        return { heartbeats: [] };\n      }\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nregisterVersion(name, version, 'app');\nexport * from '@firebase/app';\n","/** @license\nCopyright The Closure Library Authors.\nSPDX-License-Identifier: Apache-2.0\n*/\n(function() {'use strict';var h;/** @license\n\n Copyright The Closure Library Authors.\n SPDX-License-Identifier: Apache-2.0\n*/\nfunction k(f,a){function c(){}c.prototype=a.prototype;f.D=a.prototype;f.prototype=new c;f.prototype.constructor=f;f.C=function(d,e,g){for(var b=Array(arguments.length-2),r=2;r<arguments.length;r++)b[r-2]=arguments[r];return a.prototype[e].apply(d,b)}};function l(){this.blockSize=-1};function m(){this.blockSize=-1;this.blockSize=64;this.g=Array(4);this.B=Array(this.blockSize);this.o=this.h=0;this.s()}k(m,l);m.prototype.s=function(){this.g[0]=1732584193;this.g[1]=4023233417;this.g[2]=2562383102;this.g[3]=271733878;this.o=this.h=0};\nfunction n(f,a,c){c||(c=0);var d=Array(16);if(\"string\"===typeof a)for(var e=0;16>e;++e)d[e]=a.charCodeAt(c++)|a.charCodeAt(c++)<<8|a.charCodeAt(c++)<<16|a.charCodeAt(c++)<<24;else for(e=0;16>e;++e)d[e]=a[c++]|a[c++]<<8|a[c++]<<16|a[c++]<<24;a=f.g[0];c=f.g[1];e=f.g[2];var g=f.g[3];var b=a+(g^c&(e^g))+d[0]+3614090360&4294967295;a=c+(b<<7&4294967295|b>>>25);b=g+(e^a&(c^e))+d[1]+3905402710&4294967295;g=a+(b<<12&4294967295|b>>>20);b=e+(c^g&(a^c))+d[2]+606105819&4294967295;e=g+(b<<17&4294967295|b>>>15);\nb=c+(a^e&(g^a))+d[3]+3250441966&4294967295;c=e+(b<<22&4294967295|b>>>10);b=a+(g^c&(e^g))+d[4]+4118548399&4294967295;a=c+(b<<7&4294967295|b>>>25);b=g+(e^a&(c^e))+d[5]+1200080426&4294967295;g=a+(b<<12&4294967295|b>>>20);b=e+(c^g&(a^c))+d[6]+2821735955&4294967295;e=g+(b<<17&4294967295|b>>>15);b=c+(a^e&(g^a))+d[7]+4249261313&4294967295;c=e+(b<<22&4294967295|b>>>10);b=a+(g^c&(e^g))+d[8]+1770035416&4294967295;a=c+(b<<7&4294967295|b>>>25);b=g+(e^a&(c^e))+d[9]+2336552879&4294967295;g=a+(b<<12&4294967295|\nb>>>20);b=e+(c^g&(a^c))+d[10]+4294925233&4294967295;e=g+(b<<17&4294967295|b>>>15);b=c+(a^e&(g^a))+d[11]+2304563134&4294967295;c=e+(b<<22&4294967295|b>>>10);b=a+(g^c&(e^g))+d[12]+1804603682&4294967295;a=c+(b<<7&4294967295|b>>>25);b=g+(e^a&(c^e))+d[13]+4254626195&4294967295;g=a+(b<<12&4294967295|b>>>20);b=e+(c^g&(a^c))+d[14]+2792965006&4294967295;e=g+(b<<17&4294967295|b>>>15);b=c+(a^e&(g^a))+d[15]+1236535329&4294967295;c=e+(b<<22&4294967295|b>>>10);b=a+(e^g&(c^e))+d[1]+4129170786&4294967295;a=c+(b<<\n5&4294967295|b>>>27);b=g+(c^e&(a^c))+d[6]+3225465664&4294967295;g=a+(b<<9&4294967295|b>>>23);b=e+(a^c&(g^a))+d[11]+643717713&4294967295;e=g+(b<<14&4294967295|b>>>18);b=c+(g^a&(e^g))+d[0]+3921069994&4294967295;c=e+(b<<20&4294967295|b>>>12);b=a+(e^g&(c^e))+d[5]+3593408605&4294967295;a=c+(b<<5&4294967295|b>>>27);b=g+(c^e&(a^c))+d[10]+38016083&4294967295;g=a+(b<<9&4294967295|b>>>23);b=e+(a^c&(g^a))+d[15]+3634488961&4294967295;e=g+(b<<14&4294967295|b>>>18);b=c+(g^a&(e^g))+d[4]+3889429448&4294967295;c=\ne+(b<<20&4294967295|b>>>12);b=a+(e^g&(c^e))+d[9]+568446438&4294967295;a=c+(b<<5&4294967295|b>>>27);b=g+(c^e&(a^c))+d[14]+3275163606&4294967295;g=a+(b<<9&4294967295|b>>>23);b=e+(a^c&(g^a))+d[3]+4107603335&4294967295;e=g+(b<<14&4294967295|b>>>18);b=c+(g^a&(e^g))+d[8]+1163531501&4294967295;c=e+(b<<20&4294967295|b>>>12);b=a+(e^g&(c^e))+d[13]+2850285829&4294967295;a=c+(b<<5&4294967295|b>>>27);b=g+(c^e&(a^c))+d[2]+4243563512&4294967295;g=a+(b<<9&4294967295|b>>>23);b=e+(a^c&(g^a))+d[7]+1735328473&4294967295;\ne=g+(b<<14&4294967295|b>>>18);b=c+(g^a&(e^g))+d[12]+2368359562&4294967295;c=e+(b<<20&4294967295|b>>>12);b=a+(c^e^g)+d[5]+4294588738&4294967295;a=c+(b<<4&4294967295|b>>>28);b=g+(a^c^e)+d[8]+2272392833&4294967295;g=a+(b<<11&4294967295|b>>>21);b=e+(g^a^c)+d[11]+1839030562&4294967295;e=g+(b<<16&4294967295|b>>>16);b=c+(e^g^a)+d[14]+4259657740&4294967295;c=e+(b<<23&4294967295|b>>>9);b=a+(c^e^g)+d[1]+2763975236&4294967295;a=c+(b<<4&4294967295|b>>>28);b=g+(a^c^e)+d[4]+1272893353&4294967295;g=a+(b<<11&4294967295|\nb>>>21);b=e+(g^a^c)+d[7]+4139469664&4294967295;e=g+(b<<16&4294967295|b>>>16);b=c+(e^g^a)+d[10]+3200236656&4294967295;c=e+(b<<23&4294967295|b>>>9);b=a+(c^e^g)+d[13]+681279174&4294967295;a=c+(b<<4&4294967295|b>>>28);b=g+(a^c^e)+d[0]+3936430074&4294967295;g=a+(b<<11&4294967295|b>>>21);b=e+(g^a^c)+d[3]+3572445317&4294967295;e=g+(b<<16&4294967295|b>>>16);b=c+(e^g^a)+d[6]+76029189&4294967295;c=e+(b<<23&4294967295|b>>>9);b=a+(c^e^g)+d[9]+3654602809&4294967295;a=c+(b<<4&4294967295|b>>>28);b=g+(a^c^e)+d[12]+\n3873151461&4294967295;g=a+(b<<11&4294967295|b>>>21);b=e+(g^a^c)+d[15]+530742520&4294967295;e=g+(b<<16&4294967295|b>>>16);b=c+(e^g^a)+d[2]+3299628645&4294967295;c=e+(b<<23&4294967295|b>>>9);b=a+(e^(c|~g))+d[0]+4096336452&4294967295;a=c+(b<<6&4294967295|b>>>26);b=g+(c^(a|~e))+d[7]+1126891415&4294967295;g=a+(b<<10&4294967295|b>>>22);b=e+(a^(g|~c))+d[14]+2878612391&4294967295;e=g+(b<<15&4294967295|b>>>17);b=c+(g^(e|~a))+d[5]+4237533241&4294967295;c=e+(b<<21&4294967295|b>>>11);b=a+(e^(c|~g))+d[12]+1700485571&\n4294967295;a=c+(b<<6&4294967295|b>>>26);b=g+(c^(a|~e))+d[3]+2399980690&4294967295;g=a+(b<<10&4294967295|b>>>22);b=e+(a^(g|~c))+d[10]+4293915773&4294967295;e=g+(b<<15&4294967295|b>>>17);b=c+(g^(e|~a))+d[1]+2240044497&4294967295;c=e+(b<<21&4294967295|b>>>11);b=a+(e^(c|~g))+d[8]+1873313359&4294967295;a=c+(b<<6&4294967295|b>>>26);b=g+(c^(a|~e))+d[15]+4264355552&4294967295;g=a+(b<<10&4294967295|b>>>22);b=e+(a^(g|~c))+d[6]+2734768916&4294967295;e=g+(b<<15&4294967295|b>>>17);b=c+(g^(e|~a))+d[13]+1309151649&\n4294967295;c=e+(b<<21&4294967295|b>>>11);b=a+(e^(c|~g))+d[4]+4149444226&4294967295;a=c+(b<<6&4294967295|b>>>26);b=g+(c^(a|~e))+d[11]+3174756917&4294967295;g=a+(b<<10&4294967295|b>>>22);b=e+(a^(g|~c))+d[2]+718787259&4294967295;e=g+(b<<15&4294967295|b>>>17);b=c+(g^(e|~a))+d[9]+3951481745&4294967295;f.g[0]=f.g[0]+a&4294967295;f.g[1]=f.g[1]+(e+(b<<21&4294967295|b>>>11))&4294967295;f.g[2]=f.g[2]+e&4294967295;f.g[3]=f.g[3]+g&4294967295}\nm.prototype.u=function(f,a){void 0===a&&(a=f.length);for(var c=a-this.blockSize,d=this.B,e=this.h,g=0;g<a;){if(0==e)for(;g<=c;)n(this,f,g),g+=this.blockSize;if(\"string\"===typeof f)for(;g<a;){if(d[e++]=f.charCodeAt(g++),e==this.blockSize){n(this,d);e=0;break}}else for(;g<a;)if(d[e++]=f[g++],e==this.blockSize){n(this,d);e=0;break}}this.h=e;this.o+=a};\nm.prototype.v=function(){var f=Array((56>this.h?this.blockSize:2*this.blockSize)-this.h);f[0]=128;for(var a=1;a<f.length-8;++a)f[a]=0;var c=8*this.o;for(a=f.length-8;a<f.length;++a)f[a]=c&255,c/=256;this.u(f);f=Array(16);for(a=c=0;4>a;++a)for(var d=0;32>d;d+=8)f[c++]=this.g[a]>>>d&255;return f};function p(f,a){var c=q;return Object.prototype.hasOwnProperty.call(c,f)?c[f]:c[f]=a(f)};function t(f,a){this.h=a;for(var c=[],d=!0,e=f.length-1;0<=e;e--){var g=f[e]|0;d&&g==a||(c[e]=g,d=!1)}this.g=c}var q={};function u(f){return-128<=f&&128>f?p(f,function(a){return new t([a|0],0>a?-1:0)}):new t([f|0],0>f?-1:0)}function v(f){if(isNaN(f)||!isFinite(f))return w;if(0>f)return x(v(-f));for(var a=[],c=1,d=0;f>=c;d++)a[d]=f/c|0,c*=4294967296;return new t(a,0)}\nfunction y(f,a){if(0==f.length)throw Error(\"number format error: empty string\");a=a||10;if(2>a||36<a)throw Error(\"radix out of range: \"+a);if(\"-\"==f.charAt(0))return x(y(f.substring(1),a));if(0<=f.indexOf(\"-\"))throw Error('number format error: interior \"-\" character');for(var c=v(Math.pow(a,8)),d=w,e=0;e<f.length;e+=8){var g=Math.min(8,f.length-e),b=parseInt(f.substring(e,e+g),a);8>g?(g=v(Math.pow(a,g)),d=d.j(g).add(v(b))):(d=d.j(c),d=d.add(v(b)))}return d}var w=u(0),z=u(1),A=u(16777216);h=t.prototype;\nh.m=function(){if(B(this))return-x(this).m();for(var f=0,a=1,c=0;c<this.g.length;c++){var d=this.i(c);f+=(0<=d?d:4294967296+d)*a;a*=4294967296}return f};h.toString=function(f){f=f||10;if(2>f||36<f)throw Error(\"radix out of range: \"+f);if(C(this))return\"0\";if(B(this))return\"-\"+x(this).toString(f);for(var a=v(Math.pow(f,6)),c=this,d=\"\";;){var e=D(c,a).g;c=F(c,e.j(a));var g=((0<c.g.length?c.g[0]:c.h)>>>0).toString(f);c=e;if(C(c))return g+d;for(;6>g.length;)g=\"0\"+g;d=g+d}};\nh.i=function(f){return 0>f?0:f<this.g.length?this.g[f]:this.h};function C(f){if(0!=f.h)return!1;for(var a=0;a<f.g.length;a++)if(0!=f.g[a])return!1;return!0}function B(f){return-1==f.h}h.l=function(f){f=F(this,f);return B(f)?-1:C(f)?0:1};function x(f){for(var a=f.g.length,c=[],d=0;d<a;d++)c[d]=~f.g[d];return(new t(c,~f.h)).add(z)}h.abs=function(){return B(this)?x(this):this};\nh.add=function(f){for(var a=Math.max(this.g.length,f.g.length),c=[],d=0,e=0;e<=a;e++){var g=d+(this.i(e)&65535)+(f.i(e)&65535),b=(g>>>16)+(this.i(e)>>>16)+(f.i(e)>>>16);d=b>>>16;g&=65535;b&=65535;c[e]=b<<16|g}return new t(c,c[c.length-1]&-2147483648?-1:0)};function F(f,a){return f.add(x(a))}\nh.j=function(f){if(C(this)||C(f))return w;if(B(this))return B(f)?x(this).j(x(f)):x(x(this).j(f));if(B(f))return x(this.j(x(f)));if(0>this.l(A)&&0>f.l(A))return v(this.m()*f.m());for(var a=this.g.length+f.g.length,c=[],d=0;d<2*a;d++)c[d]=0;for(d=0;d<this.g.length;d++)for(var e=0;e<f.g.length;e++){var g=this.i(d)>>>16,b=this.i(d)&65535,r=f.i(e)>>>16,E=f.i(e)&65535;c[2*d+2*e]+=b*E;G(c,2*d+2*e);c[2*d+2*e+1]+=g*E;G(c,2*d+2*e+1);c[2*d+2*e+1]+=b*r;G(c,2*d+2*e+1);c[2*d+2*e+2]+=g*r;G(c,2*d+2*e+2)}for(d=0;d<\na;d++)c[d]=c[2*d+1]<<16|c[2*d];for(d=a;d<2*a;d++)c[d]=0;return new t(c,0)};function G(f,a){for(;(f[a]&65535)!=f[a];)f[a+1]+=f[a]>>>16,f[a]&=65535,a++}function H(f,a){this.g=f;this.h=a}\nfunction D(f,a){if(C(a))throw Error(\"division by zero\");if(C(f))return new H(w,w);if(B(f))return a=D(x(f),a),new H(x(a.g),x(a.h));if(B(a))return a=D(f,x(a)),new H(x(a.g),a.h);if(30<f.g.length){if(B(f)||B(a))throw Error(\"slowDivide_ only works with positive integers.\");for(var c=z,d=a;0>=d.l(f);)c=I(c),d=I(d);var e=J(c,1),g=J(d,1);d=J(d,2);for(c=J(c,2);!C(d);){var b=g.add(d);0>=b.l(f)&&(e=e.add(c),g=b);d=J(d,1);c=J(c,1)}a=F(f,e.j(a));return new H(e,a)}for(e=w;0<=f.l(a);){c=Math.max(1,Math.floor(f.m()/\na.m()));d=Math.ceil(Math.log(c)/Math.LN2);d=48>=d?1:Math.pow(2,d-48);g=v(c);for(b=g.j(a);B(b)||0<b.l(f);)c-=d,g=v(c),b=g.j(a);C(g)&&(g=z);e=e.add(g);f=F(f,b)}return new H(e,f)}h.A=function(f){return D(this,f).h};h.and=function(f){for(var a=Math.max(this.g.length,f.g.length),c=[],d=0;d<a;d++)c[d]=this.i(d)&f.i(d);return new t(c,this.h&f.h)};h.or=function(f){for(var a=Math.max(this.g.length,f.g.length),c=[],d=0;d<a;d++)c[d]=this.i(d)|f.i(d);return new t(c,this.h|f.h)};\nh.xor=function(f){for(var a=Math.max(this.g.length,f.g.length),c=[],d=0;d<a;d++)c[d]=this.i(d)^f.i(d);return new t(c,this.h^f.h)};function I(f){for(var a=f.g.length+1,c=[],d=0;d<a;d++)c[d]=f.i(d)<<1|f.i(d-1)>>>31;return new t(c,f.h)}function J(f,a){var c=a>>5;a%=32;for(var d=f.g.length-c,e=[],g=0;g<d;g++)e[g]=0<a?f.i(g+c)>>>a|f.i(g+c+1)<<32-a:f.i(g+c);return new t(e,f.h)};m.prototype.digest=m.prototype.v;m.prototype.reset=m.prototype.s;m.prototype.update=m.prototype.u;module.exports.Md5=m;t.prototype.add=t.prototype.add;t.prototype.multiply=t.prototype.j;t.prototype.modulo=t.prototype.A;t.prototype.compare=t.prototype.l;t.prototype.toNumber=t.prototype.m;t.prototype.toString=t.prototype.toString;t.prototype.getBits=t.prototype.i;t.fromNumber=v;t.fromString=y;module.exports.Integer=t;}).apply( typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self  : typeof window !== 'undefined' ? window  : {});\n","/** @license\nCopyright The Closure Library Authors.\nSPDX-License-Identifier: Apache-2.0\n*/\n(function() {'use strict';var h,aa=\"function\"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){if(a==Array.prototype||a==Object.prototype)return a;a[b]=c.value;return a};function ba(a){a=[\"object\"==typeof globalThis&&globalThis,a,\"object\"==typeof window&&window,\"object\"==typeof self&&self,\"object\"==typeof global&&global];for(var b=0;b<a.length;++b){var c=a[b];if(c&&c.Math==Math)return c}throw Error(\"Cannot find global object\");}var ca=ba(this);\nfunction da(a,b){if(b)a:{var c=ca;a=a.split(\".\");for(var d=0;d<a.length-1;d++){var e=a[d];if(!(e in c))break a;c=c[e]}a=a[a.length-1];d=c[a];b=b(d);b!=d&&null!=b&&aa(c,a,{configurable:!0,writable:!0,value:b})}}function ea(a,b){a instanceof String&&(a+=\"\");var c=0,d=!1,e={next:function(){if(!d&&c<a.length){var f=c++;return{value:b(f,a[f]),done:!1}}d=!0;return{done:!0,value:void 0}}};e[Symbol.iterator]=function(){return e};return e}\nda(\"Array.prototype.values\",function(a){return a?a:function(){return ea(this,function(b,c){return c})}});/** @license\n\n Copyright The Closure Library Authors.\n SPDX-License-Identifier: Apache-2.0\n*/\nvar fa=fa||{},k=this||self;function ha(a){var b=typeof a;b=\"object\"!=b?b:a?Array.isArray(a)?\"array\":b:\"null\";return\"array\"==b||\"object\"==b&&\"number\"==typeof a.length}function n(a){var b=typeof a;return\"object\"==b&&null!=a||\"function\"==b}function ia(a,b,c){return a.call.apply(a.bind,arguments)}\nfunction ja(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var e=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(e,d);return a.apply(b,e)}}return function(){return a.apply(b,arguments)}}function p(a,b,c){p=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf(\"native code\")?ia:ja;return p.apply(null,arguments)}\nfunction ka(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var d=c.slice();d.push.apply(d,arguments);return a.apply(this,d)}}function r(a,b){function c(){}c.prototype=b.prototype;a.aa=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.Qb=function(d,e,f){for(var g=Array(arguments.length-2),m=2;m<arguments.length;m++)g[m-2]=arguments[m];return b.prototype[e].apply(d,g)}};function la(a){const b=a.length;if(0<b){const c=Array(b);for(let d=0;d<b;d++)c[d]=a[d];return c}return[]}function ma(a,b){for(let c=1;c<arguments.length;c++){const d=arguments[c];if(ha(d)){const e=a.length||0,f=d.length||0;a.length=e+f;for(let g=0;g<f;g++)a[e+g]=d[g]}else a.push(d)}};class na{constructor(a,b){this.i=a;this.j=b;this.h=0;this.g=null}get(){let a;0<this.h?(this.h--,a=this.g,this.g=a.next,a.next=null):a=this.i();return a}};function t(a){return/^[\\s\\xa0]*$/.test(a)};function u(){var a=k.navigator;return a&&(a=a.userAgent)?a:\"\"};function oa(a){oa[\" \"](a);return a}oa[\" \"]=function(){};var pa=-1!=u().indexOf(\"Gecko\")&&!(-1!=u().toLowerCase().indexOf(\"webkit\")&&-1==u().indexOf(\"Edge\"))&&!(-1!=u().indexOf(\"Trident\")||-1!=u().indexOf(\"MSIE\"))&&-1==u().indexOf(\"Edge\");function qa(a,b,c){for(const d in a)b.call(c,a[d],d,a)}function ra(a,b){for(const c in a)b.call(void 0,a[c],c,a)}function sa(a){const b={};for(const c in a)b[c]=a[c];return b}const ta=\"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");function ua(a,b){let c,d;for(let e=1;e<arguments.length;e++){d=arguments[e];for(c in d)a[c]=d[c];for(let f=0;f<ta.length;f++)c=ta[f],Object.prototype.hasOwnProperty.call(d,c)&&(a[c]=d[c])}};function va(a){var b=1;a=a.split(\":\");const c=[];for(;0<b&&a.length;)c.push(a.shift()),b--;a.length&&c.push(a.join(\":\"));return c};function wa(a){k.setTimeout(()=>{throw a;},0)};function xa(){var a=za;let b=null;a.g&&(b=a.g,a.g=a.g.next,a.g||(a.h=null),b.next=null);return b}class Aa{constructor(){this.h=this.g=null}add(a,b){const c=Ba.get();c.set(a,b);this.h?this.h.next=c:this.g=c;this.h=c}}var Ba=new na(()=>new Ca,a=>a.reset());class Ca{constructor(){this.next=this.g=this.h=null}set(a,b){this.h=a;this.g=b;this.next=null}reset(){this.next=this.g=this.h=null}};let x,y=!1,za=new Aa,Ea=()=>{const a=k.Promise.resolve(void 0);x=()=>{a.then(Da)}};var Da=()=>{for(var a;a=xa();){try{a.h.call(a.g)}catch(c){wa(c)}var b=Ba;b.j(a);100>b.h&&(b.h++,a.next=b.g,b.g=a)}y=!1};function z(){this.s=this.s;this.C=this.C}z.prototype.s=!1;z.prototype.ma=function(){this.s||(this.s=!0,this.N())};z.prototype.N=function(){if(this.C)for(;this.C.length;)this.C.shift()()};function A(a,b){this.type=a;this.g=this.target=b;this.defaultPrevented=!1}A.prototype.h=function(){this.defaultPrevented=!0};var Fa=function(){if(!k.addEventListener||!Object.defineProperty)return!1;var a=!1,b=Object.defineProperty({},\"passive\",{get:function(){a=!0}});try{const c=()=>{};k.addEventListener(\"test\",c,b);k.removeEventListener(\"test\",c,b)}catch(c){}return a}();function C(a,b){A.call(this,a?a.type:\"\");this.relatedTarget=this.g=this.target=null;this.button=this.screenY=this.screenX=this.clientY=this.clientX=0;this.key=\"\";this.metaKey=this.shiftKey=this.altKey=this.ctrlKey=!1;this.state=null;this.pointerId=0;this.pointerType=\"\";this.i=null;if(a){var c=this.type=a.type,d=a.changedTouches&&a.changedTouches.length?a.changedTouches[0]:null;this.target=a.target||a.srcElement;this.g=b;if(b=a.relatedTarget){if(pa){a:{try{oa(b.nodeName);var e=!0;break a}catch(f){}e=\n!1}e||(b=null)}}else\"mouseover\"==c?b=a.fromElement:\"mouseout\"==c&&(b=a.toElement);this.relatedTarget=b;d?(this.clientX=void 0!==d.clientX?d.clientX:d.pageX,this.clientY=void 0!==d.clientY?d.clientY:d.pageY,this.screenX=d.screenX||0,this.screenY=d.screenY||0):(this.clientX=void 0!==a.clientX?a.clientX:a.pageX,this.clientY=void 0!==a.clientY?a.clientY:a.pageY,this.screenX=a.screenX||0,this.screenY=a.screenY||0);this.button=a.button;this.key=a.key||\"\";this.ctrlKey=a.ctrlKey;this.altKey=a.altKey;this.shiftKey=\na.shiftKey;this.metaKey=a.metaKey;this.pointerId=a.pointerId||0;this.pointerType=\"string\"===typeof a.pointerType?a.pointerType:Ga[a.pointerType]||\"\";this.state=a.state;this.i=a;a.defaultPrevented&&C.aa.h.call(this)}}r(C,A);var Ga={2:\"touch\",3:\"pen\",4:\"mouse\"};C.prototype.h=function(){C.aa.h.call(this);var a=this.i;a.preventDefault?a.preventDefault():a.returnValue=!1};var D=\"closure_listenable_\"+(1E6*Math.random()|0);var Ha=0;function Ia(a,b,c,d,e){this.listener=a;this.proxy=null;this.src=b;this.type=c;this.capture=!!d;this.ha=e;this.key=++Ha;this.da=this.fa=!1}function Ja(a){a.da=!0;a.listener=null;a.proxy=null;a.src=null;a.ha=null};function Ka(a){this.src=a;this.g={};this.h=0}Ka.prototype.add=function(a,b,c,d,e){var f=a.toString();a=this.g[f];a||(a=this.g[f]=[],this.h++);var g=La(a,b,d,e);-1<g?(b=a[g],c||(b.fa=!1)):(b=new Ia(b,this.src,f,!!d,e),b.fa=c,a.push(b));return b};function Ma(a,b){var c=b.type;if(c in a.g){var d=a.g[c],e=Array.prototype.indexOf.call(d,b,void 0),f;(f=0<=e)&&Array.prototype.splice.call(d,e,1);f&&(Ja(b),0==a.g[c].length&&(delete a.g[c],a.h--))}}\nfunction La(a,b,c,d){for(var e=0;e<a.length;++e){var f=a[e];if(!f.da&&f.listener==b&&f.capture==!!c&&f.ha==d)return e}return-1};var Na=\"closure_lm_\"+(1E6*Math.random()|0),Oa={},Pa=0;function Qa(a,b,c,d,e){if(d&&d.once)return Ra(a,b,c,d,e);if(Array.isArray(b)){for(var f=0;f<b.length;f++)Qa(a,b[f],c,d,e);return null}c=Sa(c);return a&&a[D]?a.K(b,c,n(d)?!!d.capture:!!d,e):Ta(a,b,c,!1,d,e)}\nfunction Ta(a,b,c,d,e,f){if(!b)throw Error(\"Invalid event type\");var g=n(e)?!!e.capture:!!e,m=Ua(a);m||(a[Na]=m=new Ka(a));c=m.add(b,c,d,g,f);if(c.proxy)return c;d=Va();c.proxy=d;d.src=a;d.listener=c;if(a.addEventListener)Fa||(e=g),void 0===e&&(e=!1),a.addEventListener(b.toString(),d,e);else if(a.attachEvent)a.attachEvent(Wa(b.toString()),d);else if(a.addListener&&a.removeListener)a.addListener(d);else throw Error(\"addEventListener and attachEvent are unavailable.\");Pa++;return c}\nfunction Va(){function a(c){return b.call(a.src,a.listener,c)}const b=Xa;return a}function Ra(a,b,c,d,e){if(Array.isArray(b)){for(var f=0;f<b.length;f++)Ra(a,b[f],c,d,e);return null}c=Sa(c);return a&&a[D]?a.L(b,c,n(d)?!!d.capture:!!d,e):Ta(a,b,c,!0,d,e)}\nfunction Ya(a,b,c,d,e){if(Array.isArray(b))for(var f=0;f<b.length;f++)Ya(a,b[f],c,d,e);else(d=n(d)?!!d.capture:!!d,c=Sa(c),a&&a[D])?(a=a.i,b=String(b).toString(),b in a.g&&(f=a.g[b],c=La(f,c,d,e),-1<c&&(Ja(f[c]),Array.prototype.splice.call(f,c,1),0==f.length&&(delete a.g[b],a.h--)))):a&&(a=Ua(a))&&(b=a.g[b.toString()],a=-1,b&&(a=La(b,c,d,e)),(c=-1<a?b[a]:null)&&Za(c))}\nfunction Za(a){if(\"number\"!==typeof a&&a&&!a.da){var b=a.src;if(b&&b[D])Ma(b.i,a);else{var c=a.type,d=a.proxy;b.removeEventListener?b.removeEventListener(c,d,a.capture):b.detachEvent?b.detachEvent(Wa(c),d):b.addListener&&b.removeListener&&b.removeListener(d);Pa--;(c=Ua(b))?(Ma(c,a),0==c.h&&(c.src=null,b[Na]=null)):Ja(a)}}}function Wa(a){return a in Oa?Oa[a]:Oa[a]=\"on\"+a}function Xa(a,b){if(a.da)a=!0;else{b=new C(b,this);var c=a.listener,d=a.ha||a.src;a.fa&&Za(a);a=c.call(d,b)}return a}\nfunction Ua(a){a=a[Na];return a instanceof Ka?a:null}var $a=\"__closure_events_fn_\"+(1E9*Math.random()>>>0);function Sa(a){if(\"function\"===typeof a)return a;a[$a]||(a[$a]=function(b){return a.handleEvent(b)});return a[$a]};function E(){z.call(this);this.i=new Ka(this);this.M=this;this.F=null}r(E,z);E.prototype[D]=!0;E.prototype.removeEventListener=function(a,b,c,d){Ya(this,a,b,c,d)};\nfunction F(a,b){var c,d=a.F;if(d)for(c=[];d;d=d.F)c.push(d);a=a.M;d=b.type||b;if(\"string\"===typeof b)b=new A(b,a);else if(b instanceof A)b.target=b.target||a;else{var e=b;b=new A(d,a);ua(b,e)}e=!0;if(c)for(var f=c.length-1;0<=f;f--){var g=b.g=c[f];e=ab(g,d,!0,b)&&e}g=b.g=a;e=ab(g,d,!0,b)&&e;e=ab(g,d,!1,b)&&e;if(c)for(f=0;f<c.length;f++)g=b.g=c[f],e=ab(g,d,!1,b)&&e}\nE.prototype.N=function(){E.aa.N.call(this);if(this.i){var a=this.i,b=0,c;for(c in a.g){for(var d=a.g[c],e=0;e<d.length;e++)++b,Ja(d[e]);delete a.g[c];a.h--}}this.F=null};E.prototype.K=function(a,b,c,d){return this.i.add(String(a),b,!1,c,d)};E.prototype.L=function(a,b,c,d){return this.i.add(String(a),b,!0,c,d)};\nfunction ab(a,b,c,d){b=a.i.g[String(b)];if(!b)return!0;b=b.concat();for(var e=!0,f=0;f<b.length;++f){var g=b[f];if(g&&!g.da&&g.capture==c){var m=g.listener,q=g.ha||g.src;g.fa&&Ma(a.i,g);e=!1!==m.call(q,d)&&e}}return e&&!d.defaultPrevented};function bb(a,b,c){if(\"function\"===typeof a)c&&(a=p(a,c));else if(a&&\"function\"==typeof a.handleEvent)a=p(a.handleEvent,a);else throw Error(\"Invalid listener argument\");return 2147483647<Number(b)?-1:k.setTimeout(a,b||0)};function cb(a){a.g=bb(()=>{a.g=null;a.i&&(a.i=!1,cb(a))},a.l);const b=a.h;a.h=null;a.m.apply(null,b)}class eb extends z{constructor(a,b){super();this.m=a;this.l=b;this.h=null;this.i=!1;this.g=null}j(a){this.h=arguments;this.g?this.i=!0:cb(this)}N(){super.N();this.g&&(k.clearTimeout(this.g),this.g=null,this.i=!1,this.h=null)}};function G(a){z.call(this);this.h=a;this.g={}}r(G,z);var fb=[];function gb(a){qa(a.g,function(b,c){this.g.hasOwnProperty(c)&&Za(b)},a);a.g={}}G.prototype.N=function(){G.aa.N.call(this);gb(this)};G.prototype.handleEvent=function(){throw Error(\"EventHandler.handleEvent not implemented\");};var hb=k.JSON.stringify;var ib=k.JSON.parse;var jb=class{stringify(a){return k.JSON.stringify(a,void 0)}parse(a){return k.JSON.parse(a,void 0)}};function kb(){}kb.prototype.h=null;function lb(a){return a.h||(a.h=a.i())};function mb(){}var H={OPEN:\"a\",kb:\"b\",Ja:\"c\",wb:\"d\"};function nb(){A.call(this,\"d\")}r(nb,A);function ob(){A.call(this,\"c\")}r(ob,A);var I={},pb=null;function qb(){return pb=pb||new E}I.La=\"serverreachability\";function rb(a){A.call(this,I.La,a)}r(rb,A);function J(a){const b=qb();F(b,new rb(b,a))}I.STAT_EVENT=\"statevent\";function sb(a,b){A.call(this,I.STAT_EVENT,a);this.stat=b}r(sb,A);function K(a){const b=qb();F(b,new sb(b,a))}I.Ma=\"timingevent\";function tb(a,b){A.call(this,I.Ma,a);this.size=b}r(tb,A);\nfunction ub(a,b){if(\"function\"!==typeof a)throw Error(\"Fn must not be null and must be a function\");return k.setTimeout(function(){a()},b)};function vb(){this.g=!0}vb.prototype.xa=function(){this.g=!1};function wb(a,b,c,d,e,f){a.info(function(){if(a.g)if(f){var g=\"\";for(var m=f.split(\"&\"),q=0;q<m.length;q++){var l=m[q].split(\"=\");if(1<l.length){var v=l[0];l=l[1];var w=v.split(\"_\");g=2<=w.length&&\"type\"==w[1]?g+(v+\"=\"+l+\"&\"):g+(v+\"=redacted&\")}}}else g=null;else g=f;return\"XMLHTTP REQ (\"+d+\") [attempt \"+e+\"]: \"+b+\"\\n\"+c+\"\\n\"+g})}\nfunction xb(a,b,c,d,e,f,g){a.info(function(){return\"XMLHTTP RESP (\"+d+\") [ attempt \"+e+\"]: \"+b+\"\\n\"+c+\"\\n\"+f+\" \"+g})}function L(a,b,c,d){a.info(function(){return\"XMLHTTP TEXT (\"+b+\"): \"+yb(a,c)+(d?\" \"+d:\"\")})}function zb(a,b){a.info(function(){return\"TIMEOUT: \"+b})}vb.prototype.info=function(){};\nfunction yb(a,b){if(!a.g)return b;if(!b)return null;try{var c=JSON.parse(b);if(c)for(a=0;a<c.length;a++)if(Array.isArray(c[a])){var d=c[a];if(!(2>d.length)){var e=d[1];if(Array.isArray(e)&&!(1>e.length)){var f=e[0];if(\"noop\"!=f&&\"stop\"!=f&&\"close\"!=f)for(var g=1;g<e.length;g++)e[g]=\"\"}}}return hb(c)}catch(m){return b}};var Ab={NO_ERROR:0,gb:1,tb:2,sb:3,nb:4,rb:5,ub:6,Ia:7,TIMEOUT:8,xb:9};var Bb={lb:\"complete\",Hb:\"success\",Ja:\"error\",Ia:\"abort\",zb:\"ready\",Ab:\"readystatechange\",TIMEOUT:\"timeout\",vb:\"incrementaldata\",yb:\"progress\",ob:\"downloadprogress\",Pb:\"uploadprogress\"};var Cb;function Db(){}r(Db,kb);Db.prototype.g=function(){return new XMLHttpRequest};Db.prototype.i=function(){return{}};Cb=new Db;function M(a,b,c,d){this.j=a;this.i=b;this.l=c;this.R=d||1;this.U=new G(this);this.I=45E3;this.H=null;this.o=!1;this.m=this.A=this.v=this.L=this.F=this.S=this.B=null;this.D=[];this.g=null;this.C=0;this.s=this.u=null;this.X=-1;this.J=!1;this.O=0;this.M=null;this.W=this.K=this.T=this.P=!1;this.h=new Eb}function Eb(){this.i=null;this.g=\"\";this.h=!1}var Fb={},Gb={};function Hb(a,b,c){a.L=1;a.v=Ib(N(b));a.m=c;a.P=!0;Jb(a,null)}\nfunction Jb(a,b){a.F=Date.now();Kb(a);a.A=N(a.v);var c=a.A,d=a.R;Array.isArray(d)||(d=[String(d)]);Lb(c.i,\"t\",d);a.C=0;c=a.j.J;a.h=new Eb;a.g=Mb(a.j,c?b:null,!a.m);0<a.O&&(a.M=new eb(p(a.Y,a,a.g),a.O));b=a.U;c=a.g;d=a.ca;var e=\"readystatechange\";Array.isArray(e)||(e&&(fb[0]=e.toString()),e=fb);for(var f=0;f<e.length;f++){var g=Qa(c,e[f],d||b.handleEvent,!1,b.h||b);if(!g)break;b.g[g.key]=g}b=a.H?sa(a.H):{};a.m?(a.u||(a.u=\"POST\"),b[\"Content-Type\"]=\"application/x-www-form-urlencoded\",a.g.ea(a.A,a.u,\na.m,b)):(a.u=\"GET\",a.g.ea(a.A,a.u,null,b));J(1);wb(a.i,a.u,a.A,a.l,a.R,a.m)}M.prototype.ca=function(a){a=a.target;const b=this.M;b&&3==P(a)?b.j():this.Y(a)};\nM.prototype.Y=function(a){try{if(a==this.g)a:{const w=P(this.g);var b=this.g.Ba();const O=this.g.Z();if(!(3>w)&&(3!=w||this.g&&(this.h.h||this.g.oa()||Nb(this.g)))){this.J||4!=w||7==b||(8==b||0>=O?J(3):J(2));Ob(this);var c=this.g.Z();this.X=c;b:if(Pb(this)){var d=Nb(this.g);a=\"\";var e=d.length,f=4==P(this.g);if(!this.h.i){if(\"undefined\"===typeof TextDecoder){Q(this);Qb(this);var g=\"\";break b}this.h.i=new k.TextDecoder}for(b=0;b<e;b++)this.h.h=!0,a+=this.h.i.decode(d[b],{stream:!(f&&b==e-1)});d.length=\n0;this.h.g+=a;this.C=0;g=this.h.g}else g=this.g.oa();this.o=200==c;xb(this.i,this.u,this.A,this.l,this.R,w,c);if(this.o){if(this.T&&!this.K){b:{if(this.g){var m,q=this.g;if((m=q.g?q.g.getResponseHeader(\"X-HTTP-Initial-Response\"):null)&&!t(m)){var l=m;break b}}l=null}if(c=l)L(this.i,this.l,c,\"Initial handshake response via X-HTTP-Initial-Response\"),this.K=!0,Rb(this,c);else{this.o=!1;this.s=3;K(12);Q(this);Qb(this);break a}}if(this.P){c=!0;let B;for(;!this.J&&this.C<g.length;)if(B=Sb(this,g),B==Gb){4==\nw&&(this.s=4,K(14),c=!1);L(this.i,this.l,null,\"[Incomplete Response]\");break}else if(B==Fb){this.s=4;K(15);L(this.i,this.l,g,\"[Invalid Chunk]\");c=!1;break}else L(this.i,this.l,B,null),Rb(this,B);Pb(this)&&0!=this.C&&(this.h.g=this.h.g.slice(this.C),this.C=0);4!=w||0!=g.length||this.h.h||(this.s=1,K(16),c=!1);this.o=this.o&&c;if(!c)L(this.i,this.l,g,\"[Invalid Chunked Response]\"),Q(this),Qb(this);else if(0<g.length&&!this.W){this.W=!0;var v=this.j;v.g==this&&v.ba&&!v.M&&(v.j.info(\"Great, no buffering proxy detected. Bytes received: \"+\ng.length),Tb(v),v.M=!0,K(11))}}else L(this.i,this.l,g,null),Rb(this,g);4==w&&Q(this);this.o&&!this.J&&(4==w?Ub(this.j,this):(this.o=!1,Kb(this)))}else Vb(this.g),400==c&&0<g.indexOf(\"Unknown SID\")?(this.s=3,K(12)):(this.s=0,K(13)),Q(this),Qb(this)}}}catch(w){}finally{}};function Pb(a){return a.g?\"GET\"==a.u&&2!=a.L&&a.j.Ca:!1}\nfunction Sb(a,b){var c=a.C,d=b.indexOf(\"\\n\",c);if(-1==d)return Gb;c=Number(b.substring(c,d));if(isNaN(c))return Fb;d+=1;if(d+c>b.length)return Gb;b=b.slice(d,d+c);a.C=d+c;return b}M.prototype.cancel=function(){this.J=!0;Q(this)};function Kb(a){a.S=Date.now()+a.I;Wb(a,a.I)}function Wb(a,b){if(null!=a.B)throw Error(\"WatchDog timer not null\");a.B=ub(p(a.ba,a),b)}function Ob(a){a.B&&(k.clearTimeout(a.B),a.B=null)}\nM.prototype.ba=function(){this.B=null;const a=Date.now();0<=a-this.S?(zb(this.i,this.A),2!=this.L&&(J(3),K(17)),Q(this),this.s=2,Qb(this)):Wb(this,this.S-a)};function Qb(a){0==a.j.G||a.J||Ub(a.j,a)}function Q(a){Ob(a);var b=a.M;b&&\"function\"==typeof b.ma&&b.ma();a.M=null;gb(a.U);a.g&&(b=a.g,a.g=null,b.abort(),b.ma())}\nfunction Rb(a,b){try{var c=a.j;if(0!=c.G&&(c.g==a||Xb(c.h,a)))if(!a.K&&Xb(c.h,a)&&3==c.G){try{var d=c.Da.g.parse(b)}catch(l){d=null}if(Array.isArray(d)&&3==d.length){var e=d;if(0==e[0])a:{if(!c.u){if(c.g)if(c.g.F+3E3<a.F)Yb(c),Zb(c);else break a;$b(c);K(18)}}else c.za=e[1],0<c.za-c.T&&37500>e[2]&&c.F&&0==c.v&&!c.C&&(c.C=ub(p(c.Za,c),6E3));if(1>=ac(c.h)&&c.ca){try{c.ca()}catch(l){}c.ca=void 0}}else R(c,11)}else if((a.K||c.g==a)&&Yb(c),!t(b))for(e=c.Da.g.parse(b),b=0;b<e.length;b++){let l=e[b];c.T=\nl[0];l=l[1];if(2==c.G)if(\"c\"==l[0]){c.K=l[1];c.ia=l[2];const v=l[3];null!=v&&(c.la=v,c.j.info(\"VER=\"+c.la));const w=l[4];null!=w&&(c.Aa=w,c.j.info(\"SVER=\"+c.Aa));const O=l[5];null!=O&&\"number\"===typeof O&&0<O&&(d=1.5*O,c.L=d,c.j.info(\"backChannelRequestTimeoutMs_=\"+d));d=c;const B=a.g;if(B){const ya=B.g?B.g.getResponseHeader(\"X-Client-Wire-Protocol\"):null;if(ya){var f=d.h;f.g||-1==ya.indexOf(\"spdy\")&&-1==ya.indexOf(\"quic\")&&-1==ya.indexOf(\"h2\")||(f.j=f.l,f.g=new Set,f.h&&(bc(f,f.h),f.h=null))}if(d.D){const db=\nB.g?B.g.getResponseHeader(\"X-HTTP-Session-Id\"):null;db&&(d.ya=db,S(d.I,d.D,db))}}c.G=3;c.l&&c.l.ua();c.ba&&(c.R=Date.now()-a.F,c.j.info(\"Handshake RTT: \"+c.R+\"ms\"));d=c;var g=a;d.qa=cc(d,d.J?d.ia:null,d.W);if(g.K){dc(d.h,g);var m=g,q=d.L;q&&(m.I=q);m.B&&(Ob(m),Kb(m));d.g=g}else ec(d);0<c.i.length&&fc(c)}else\"stop\"!=l[0]&&\"close\"!=l[0]||R(c,7);else 3==c.G&&(\"stop\"==l[0]||\"close\"==l[0]?\"stop\"==l[0]?R(c,7):gc(c):\"noop\"!=l[0]&&c.l&&c.l.ta(l),c.v=0)}J(4)}catch(l){}};var hc=class{constructor(a,b){this.g=a;this.map=b}};function ic(a){this.l=a||10;k.PerformanceNavigationTiming?(a=k.performance.getEntriesByType(\"navigation\"),a=0<a.length&&(\"hq\"==a[0].nextHopProtocol||\"h2\"==a[0].nextHopProtocol)):a=!!(k.chrome&&k.chrome.loadTimes&&k.chrome.loadTimes()&&k.chrome.loadTimes().wasFetchedViaSpdy);this.j=a?this.l:1;this.g=null;1<this.j&&(this.g=new Set);this.h=null;this.i=[]}function jc(a){return a.h?!0:a.g?a.g.size>=a.j:!1}function ac(a){return a.h?1:a.g?a.g.size:0}function Xb(a,b){return a.h?a.h==b:a.g?a.g.has(b):!1}\nfunction bc(a,b){a.g?a.g.add(b):a.h=b}function dc(a,b){a.h&&a.h==b?a.h=null:a.g&&a.g.has(b)&&a.g.delete(b)}ic.prototype.cancel=function(){this.i=kc(this);if(this.h)this.h.cancel(),this.h=null;else if(this.g&&0!==this.g.size){for(const a of this.g.values())a.cancel();this.g.clear()}};function kc(a){if(null!=a.h)return a.i.concat(a.h.D);if(null!=a.g&&0!==a.g.size){let b=a.i;for(const c of a.g.values())b=b.concat(c.D);return b}return la(a.i)};function lc(a){if(a.V&&\"function\"==typeof a.V)return a.V();if(\"undefined\"!==typeof Map&&a instanceof Map||\"undefined\"!==typeof Set&&a instanceof Set)return Array.from(a.values());if(\"string\"===typeof a)return a.split(\"\");if(ha(a)){for(var b=[],c=a.length,d=0;d<c;d++)b.push(a[d]);return b}b=[];c=0;for(d in a)b[c++]=a[d];return b}\nfunction mc(a){if(a.na&&\"function\"==typeof a.na)return a.na();if(!a.V||\"function\"!=typeof a.V){if(\"undefined\"!==typeof Map&&a instanceof Map)return Array.from(a.keys());if(!(\"undefined\"!==typeof Set&&a instanceof Set)){if(ha(a)||\"string\"===typeof a){var b=[];a=a.length;for(var c=0;c<a;c++)b.push(c);return b}b=[];c=0;for(const d in a)b[c++]=d;return b}}}\nfunction nc(a,b){if(a.forEach&&\"function\"==typeof a.forEach)a.forEach(b,void 0);else if(ha(a)||\"string\"===typeof a)Array.prototype.forEach.call(a,b,void 0);else for(var c=mc(a),d=lc(a),e=d.length,f=0;f<e;f++)b.call(void 0,d[f],c&&c[f],a)};var oc=RegExp(\"^(?:([^:/?#.]+):)?(?://(?:([^\\\\\\\\/?#]*)@)?([^\\\\\\\\/?#]*?)(?::([0-9]+))?(?=[\\\\\\\\/?#]|$))?([^?#]+)?(?:\\\\?([^#]*))?(?:#([\\\\s\\\\S]*))?$\");function pc(a,b){if(a){a=a.split(\"&\");for(var c=0;c<a.length;c++){var d=a[c].indexOf(\"=\"),e=null;if(0<=d){var f=a[c].substring(0,d);e=a[c].substring(d+1)}else f=a[c];b(f,e?decodeURIComponent(e.replace(/\\+/g,\" \")):\"\")}}};function T(a){this.g=this.o=this.j=\"\";this.s=null;this.m=this.l=\"\";this.h=!1;if(a instanceof T){this.h=a.h;qc(this,a.j);this.o=a.o;this.g=a.g;rc(this,a.s);this.l=a.l;var b=a.i;var c=new sc;c.i=b.i;b.g&&(c.g=new Map(b.g),c.h=b.h);tc(this,c);this.m=a.m}else a&&(b=String(a).match(oc))?(this.h=!1,qc(this,b[1]||\"\",!0),this.o=uc(b[2]||\"\"),this.g=uc(b[3]||\"\",!0),rc(this,b[4]),this.l=uc(b[5]||\"\",!0),tc(this,b[6]||\"\",!0),this.m=uc(b[7]||\"\")):(this.h=!1,this.i=new sc(null,this.h))}\nT.prototype.toString=function(){var a=[],b=this.j;b&&a.push(vc(b,wc,!0),\":\");var c=this.g;if(c||\"file\"==b)a.push(\"//\"),(b=this.o)&&a.push(vc(b,wc,!0),\"@\"),a.push(encodeURIComponent(String(c)).replace(/%25([0-9a-fA-F]{2})/g,\"%$1\")),c=this.s,null!=c&&a.push(\":\",String(c));if(c=this.l)this.g&&\"/\"!=c.charAt(0)&&a.push(\"/\"),a.push(vc(c,\"/\"==c.charAt(0)?xc:yc,!0));(c=this.i.toString())&&a.push(\"?\",c);(c=this.m)&&a.push(\"#\",vc(c,zc));return a.join(\"\")};function N(a){return new T(a)}\nfunction qc(a,b,c){a.j=c?uc(b,!0):b;a.j&&(a.j=a.j.replace(/:$/,\"\"))}function rc(a,b){if(b){b=Number(b);if(isNaN(b)||0>b)throw Error(\"Bad port number \"+b);a.s=b}else a.s=null}function tc(a,b,c){b instanceof sc?(a.i=b,Ac(a.i,a.h)):(c||(b=vc(b,Bc)),a.i=new sc(b,a.h))}function S(a,b,c){a.i.set(b,c)}function Ib(a){S(a,\"zx\",Math.floor(2147483648*Math.random()).toString(36)+Math.abs(Math.floor(2147483648*Math.random())^Date.now()).toString(36));return a}\nfunction uc(a,b){return a?b?decodeURI(a.replace(/%25/g,\"%2525\")):decodeURIComponent(a):\"\"}function vc(a,b,c){return\"string\"===typeof a?(a=encodeURI(a).replace(b,Cc),c&&(a=a.replace(/%25([0-9a-fA-F]{2})/g,\"%$1\")),a):null}function Cc(a){a=a.charCodeAt(0);return\"%\"+(a>>4&15).toString(16)+(a&15).toString(16)}var wc=/[#\\/\\?@]/g,yc=/[#\\?:]/g,xc=/[#\\?]/g,Bc=/[#\\?@]/g,zc=/#/g;function sc(a,b){this.h=this.g=null;this.i=a||null;this.j=!!b}\nfunction U(a){a.g||(a.g=new Map,a.h=0,a.i&&pc(a.i,function(b,c){a.add(decodeURIComponent(b.replace(/\\+/g,\" \")),c)}))}h=sc.prototype;h.add=function(a,b){U(this);this.i=null;a=V(this,a);var c=this.g.get(a);c||this.g.set(a,c=[]);c.push(b);this.h+=1;return this};function Dc(a,b){U(a);b=V(a,b);a.g.has(b)&&(a.i=null,a.h-=a.g.get(b).length,a.g.delete(b))}function Ec(a,b){U(a);b=V(a,b);return a.g.has(b)}\nh.forEach=function(a,b){U(this);this.g.forEach(function(c,d){c.forEach(function(e){a.call(b,e,d,this)},this)},this)};h.na=function(){U(this);const a=Array.from(this.g.values()),b=Array.from(this.g.keys()),c=[];for(let d=0;d<b.length;d++){const e=a[d];for(let f=0;f<e.length;f++)c.push(b[d])}return c};h.V=function(a){U(this);let b=[];if(\"string\"===typeof a)Ec(this,a)&&(b=b.concat(this.g.get(V(this,a))));else{a=Array.from(this.g.values());for(let c=0;c<a.length;c++)b=b.concat(a[c])}return b};\nh.set=function(a,b){U(this);this.i=null;a=V(this,a);Ec(this,a)&&(this.h-=this.g.get(a).length);this.g.set(a,[b]);this.h+=1;return this};h.get=function(a,b){if(!a)return b;a=this.V(a);return 0<a.length?String(a[0]):b};function Lb(a,b,c){Dc(a,b);0<c.length&&(a.i=null,a.g.set(V(a,b),la(c)),a.h+=c.length)}\nh.toString=function(){if(this.i)return this.i;if(!this.g)return\"\";const a=[],b=Array.from(this.g.keys());for(var c=0;c<b.length;c++){var d=b[c];const f=encodeURIComponent(String(d)),g=this.V(d);for(d=0;d<g.length;d++){var e=f;\"\"!==g[d]&&(e+=\"=\"+encodeURIComponent(String(g[d])));a.push(e)}}return this.i=a.join(\"&\")};function V(a,b){b=String(b);a.j&&(b=b.toLowerCase());return b}\nfunction Ac(a,b){b&&!a.j&&(U(a),a.i=null,a.g.forEach(function(c,d){var e=d.toLowerCase();d!=e&&(Dc(this,d),Lb(this,e,c))},a));a.j=b};function Fc(a,b){const c=new vb;if(k.Image){const d=new Image;d.onload=ka(W,c,\"TestLoadImage: loaded\",!0,b,d);d.onerror=ka(W,c,\"TestLoadImage: error\",!1,b,d);d.onabort=ka(W,c,\"TestLoadImage: abort\",!1,b,d);d.ontimeout=ka(W,c,\"TestLoadImage: timeout\",!1,b,d);k.setTimeout(function(){if(d.ontimeout)d.ontimeout()},1E4);d.src=a}else b(!1)}\nfunction Gc(a,b){const c=new vb,d=new AbortController,e=setTimeout(()=>{d.abort();W(c,\"TestPingServer: timeout\",!1,b)},1E4);fetch(a,{signal:d.signal}).then(f=>{clearTimeout(e);f.ok?W(c,\"TestPingServer: ok\",!0,b):W(c,\"TestPingServer: server error\",!1,b)}).catch(()=>{clearTimeout(e);W(c,\"TestPingServer: error\",!1,b)})}function W(a,b,c,d,e){try{e&&(e.onload=null,e.onerror=null,e.onabort=null,e.ontimeout=null),d(c)}catch(f){}};function Hc(){this.g=new jb}function Ic(a,b,c){const d=c||\"\";try{nc(a,function(e,f){let g=e;n(e)&&(g=hb(e));b.push(d+f+\"=\"+encodeURIComponent(g))})}catch(e){throw b.push(d+\"type=\"+encodeURIComponent(\"_badmap\")),e;}};function Jc(a){this.l=a.Ub||null;this.j=a.eb||!1}r(Jc,kb);Jc.prototype.g=function(){return new Kc(this.l,this.j)};Jc.prototype.i=function(a){return function(){return a}}({});function Kc(a,b){E.call(this);this.D=a;this.o=b;this.m=void 0;this.status=this.readyState=0;this.responseType=this.responseText=this.response=this.statusText=\"\";this.onreadystatechange=null;this.u=new Headers;this.h=null;this.B=\"GET\";this.A=\"\";this.g=!1;this.v=this.j=this.l=null}r(Kc,E);h=Kc.prototype;\nh.open=function(a,b){if(0!=this.readyState)throw this.abort(),Error(\"Error reopening a connection\");this.B=a;this.A=b;this.readyState=1;Lc(this)};h.send=function(a){if(1!=this.readyState)throw this.abort(),Error(\"need to call open() first. \");this.g=!0;const b={headers:this.u,method:this.B,credentials:this.m,cache:void 0};a&&(b.body=a);(this.D||k).fetch(new Request(this.A,b)).then(this.Sa.bind(this),this.ga.bind(this))};\nh.abort=function(){this.response=this.responseText=\"\";this.u=new Headers;this.status=0;this.j&&this.j.cancel(\"Request was aborted.\").catch(()=>{});1<=this.readyState&&this.g&&4!=this.readyState&&(this.g=!1,Mc(this));this.readyState=0};\nh.Sa=function(a){if(this.g&&(this.l=a,this.h||(this.status=this.l.status,this.statusText=this.l.statusText,this.h=a.headers,this.readyState=2,Lc(this)),this.g&&(this.readyState=3,Lc(this),this.g)))if(\"arraybuffer\"===this.responseType)a.arrayBuffer().then(this.Qa.bind(this),this.ga.bind(this));else if(\"undefined\"!==typeof k.ReadableStream&&\"body\"in a){this.j=a.body.getReader();if(this.o){if(this.responseType)throw Error('responseType must be empty for \"streamBinaryChunks\" mode responses.');this.response=\n[]}else this.response=this.responseText=\"\",this.v=new TextDecoder;Nc(this)}else a.text().then(this.Ra.bind(this),this.ga.bind(this))};function Nc(a){a.j.read().then(a.Pa.bind(a)).catch(a.ga.bind(a))}h.Pa=function(a){if(this.g){if(this.o&&a.value)this.response.push(a.value);else if(!this.o){var b=a.value?a.value:new Uint8Array(0);if(b=this.v.decode(b,{stream:!a.done}))this.response=this.responseText+=b}a.done?Mc(this):Lc(this);3==this.readyState&&Nc(this)}};\nh.Ra=function(a){this.g&&(this.response=this.responseText=a,Mc(this))};h.Qa=function(a){this.g&&(this.response=a,Mc(this))};h.ga=function(){this.g&&Mc(this)};function Mc(a){a.readyState=4;a.l=null;a.j=null;a.v=null;Lc(a)}h.setRequestHeader=function(a,b){this.u.append(a,b)};h.getResponseHeader=function(a){return this.h?this.h.get(a.toLowerCase())||\"\":\"\"};\nh.getAllResponseHeaders=function(){if(!this.h)return\"\";const a=[],b=this.h.entries();for(var c=b.next();!c.done;)c=c.value,a.push(c[0]+\": \"+c[1]),c=b.next();return a.join(\"\\r\\n\")};function Lc(a){a.onreadystatechange&&a.onreadystatechange.call(a)}Object.defineProperty(Kc.prototype,\"withCredentials\",{get:function(){return\"include\"===this.m},set:function(a){this.m=a?\"include\":\"same-origin\"}});function Oc(a){let b=\"\";qa(a,function(c,d){b+=d;b+=\":\";b+=c;b+=\"\\r\\n\"});return b}function Pc(a,b,c){a:{for(d in c){var d=!1;break a}d=!0}d||(c=Oc(c),\"string\"===typeof a?(encodeURIComponent(String(b)),null!=c&&encodeURIComponent(String(c))):S(a,b,c))};function X(a){E.call(this);this.headers=new Map;this.o=a||null;this.h=!1;this.v=this.g=null;this.D=\"\";this.m=0;this.l=\"\";this.j=this.B=this.u=this.A=!1;this.I=null;this.H=\"\";this.J=!1}r(X,E);var Qc=/^https?$/i,Rc=[\"POST\",\"PUT\"];h=X.prototype;h.Ha=function(a){this.J=a};\nh.ea=function(a,b,c,d){if(this.g)throw Error(\"[goog.net.XhrIo] Object is active with another request=\"+this.D+\"; newUri=\"+a);b=b?b.toUpperCase():\"GET\";this.D=a;this.l=\"\";this.m=0;this.A=!1;this.h=!0;this.g=this.o?this.o.g():Cb.g();this.v=this.o?lb(this.o):lb(Cb);this.g.onreadystatechange=p(this.Ea,this);try{this.B=!0,this.g.open(b,String(a),!0),this.B=!1}catch(f){Sc(this,f);return}a=c||\"\";c=new Map(this.headers);if(d)if(Object.getPrototypeOf(d)===Object.prototype)for(var e in d)c.set(e,d[e]);else if(\"function\"===\ntypeof d.keys&&\"function\"===typeof d.get)for(const f of d.keys())c.set(f,d.get(f));else throw Error(\"Unknown input type for opt_headers: \"+String(d));d=Array.from(c.keys()).find(f=>\"content-type\"==f.toLowerCase());e=k.FormData&&a instanceof k.FormData;!(0<=Array.prototype.indexOf.call(Rc,b,void 0))||d||e||c.set(\"Content-Type\",\"application/x-www-form-urlencoded;charset=utf-8\");for(const [f,g]of c)this.g.setRequestHeader(f,g);this.H&&(this.g.responseType=this.H);\"withCredentials\"in this.g&&this.g.withCredentials!==\nthis.J&&(this.g.withCredentials=this.J);try{Tc(this),this.u=!0,this.g.send(a),this.u=!1}catch(f){Sc(this,f)}};function Sc(a,b){a.h=!1;a.g&&(a.j=!0,a.g.abort(),a.j=!1);a.l=b;a.m=5;Uc(a);Vc(a)}function Uc(a){a.A||(a.A=!0,F(a,\"complete\"),F(a,\"error\"))}h.abort=function(a){this.g&&this.h&&(this.h=!1,this.j=!0,this.g.abort(),this.j=!1,this.m=a||7,F(this,\"complete\"),F(this,\"abort\"),Vc(this))};h.N=function(){this.g&&(this.h&&(this.h=!1,this.j=!0,this.g.abort(),this.j=!1),Vc(this,!0));X.aa.N.call(this)};\nh.Ea=function(){this.s||(this.B||this.u||this.j?Wc(this):this.bb())};h.bb=function(){Wc(this)};\nfunction Wc(a){if(a.h&&\"undefined\"!=typeof fa&&(!a.v[1]||4!=P(a)||2!=a.Z()))if(a.u&&4==P(a))bb(a.Ea,0,a);else if(F(a,\"readystatechange\"),4==P(a)){a.h=!1;try{const g=a.Z();a:switch(g){case 200:case 201:case 202:case 204:case 206:case 304:case 1223:var b=!0;break a;default:b=!1}var c;if(!(c=b)){var d;if(d=0===g){var e=String(a.D).match(oc)[1]||null;!e&&k.self&&k.self.location&&(e=k.self.location.protocol.slice(0,-1));d=!Qc.test(e?e.toLowerCase():\"\")}c=d}if(c)F(a,\"complete\"),F(a,\"success\");else{a.m=\n6;try{var f=2<P(a)?a.g.statusText:\"\"}catch(m){f=\"\"}a.l=f+\" [\"+a.Z()+\"]\";Uc(a)}}finally{Vc(a)}}}function Vc(a,b){if(a.g){Tc(a);const c=a.g,d=a.v[0]?()=>{}:null;a.g=null;a.v=null;b||F(a,\"ready\");try{c.onreadystatechange=d}catch(e){}}}function Tc(a){a.I&&(k.clearTimeout(a.I),a.I=null)}h.isActive=function(){return!!this.g};function P(a){return a.g?a.g.readyState:0}h.Z=function(){try{return 2<P(this)?this.g.status:-1}catch(a){return-1}};h.oa=function(){try{return this.g?this.g.responseText:\"\"}catch(a){return\"\"}};\nh.Oa=function(a){if(this.g){var b=this.g.responseText;a&&0==b.indexOf(a)&&(b=b.substring(a.length));return ib(b)}};function Nb(a){try{if(!a.g)return null;if(\"response\"in a.g)return a.g.response;switch(a.H){case \"\":case \"text\":return a.g.responseText;case \"arraybuffer\":if(\"mozResponseArrayBuffer\"in a.g)return a.g.mozResponseArrayBuffer}return null}catch(b){return null}}\nfunction Vb(a){const b={};a=(a.g&&2<=P(a)?a.g.getAllResponseHeaders()||\"\":\"\").split(\"\\r\\n\");for(let d=0;d<a.length;d++){if(t(a[d]))continue;var c=va(a[d]);const e=c[0];c=c[1];if(\"string\"!==typeof c)continue;c=c.trim();const f=b[e]||[];b[e]=f;f.push(c)}ra(b,function(d){return d.join(\", \")})}h.Ba=function(){return this.m};h.Ka=function(){return\"string\"===typeof this.l?this.l:String(this.l)};function Xc(a,b,c){return c&&c.internalChannelParams?c.internalChannelParams[a]||b:b}\nfunction Yc(a){this.Aa=0;this.i=[];this.j=new vb;this.ia=this.qa=this.I=this.W=this.g=this.ya=this.D=this.H=this.m=this.S=this.o=null;this.Ya=this.U=0;this.Va=Xc(\"failFast\",!1,a);this.F=this.C=this.u=this.s=this.l=null;this.X=!0;this.za=this.T=-1;this.Y=this.v=this.B=0;this.Ta=Xc(\"baseRetryDelayMs\",5E3,a);this.cb=Xc(\"retryDelaySeedMs\",1E4,a);this.Wa=Xc(\"forwardChannelMaxRetries\",2,a);this.wa=Xc(\"forwardChannelRequestTimeoutMs\",2E4,a);this.pa=a&&a.xmlHttpFactory||void 0;this.Xa=a&&a.Tb||void 0;this.Ca=\na&&a.useFetchStreams||!1;this.L=void 0;this.J=a&&a.supportsCrossDomainXhr||!1;this.K=\"\";this.h=new ic(a&&a.concurrentRequestLimit);this.Da=new Hc;this.P=a&&a.fastHandshake||!1;this.O=a&&a.encodeInitMessageHeaders||!1;this.P&&this.O&&(this.O=!1);this.Ua=a&&a.Rb||!1;a&&a.xa&&this.j.xa();a&&a.forceLongPolling&&(this.X=!1);this.ba=!this.P&&this.X&&a&&a.detectBufferingProxy||!1;this.ja=void 0;a&&a.longPollingTimeout&&0<a.longPollingTimeout&&(this.ja=a.longPollingTimeout);this.ca=void 0;this.R=0;this.M=\n!1;this.ka=this.A=null}h=Yc.prototype;h.la=8;h.G=1;h.connect=function(a,b,c,d){K(0);this.W=a;this.H=b||{};c&&void 0!==d&&(this.H.OSID=c,this.H.OAID=d);this.F=this.X;this.I=cc(this,null,this.W);fc(this)};\nfunction gc(a){Zc(a);if(3==a.G){var b=a.U++,c=N(a.I);S(c,\"SID\",a.K);S(c,\"RID\",b);S(c,\"TYPE\",\"terminate\");$c(a,c);b=new M(a,a.j,b);b.L=2;b.v=Ib(N(c));c=!1;if(k.navigator&&k.navigator.sendBeacon)try{c=k.navigator.sendBeacon(b.v.toString(),\"\")}catch(d){}!c&&k.Image&&((new Image).src=b.v,c=!0);c||(b.g=Mb(b.j,null),b.g.ea(b.v));b.F=Date.now();Kb(b)}ad(a)}function Zb(a){a.g&&(Tb(a),a.g.cancel(),a.g=null)}\nfunction Zc(a){Zb(a);a.u&&(k.clearTimeout(a.u),a.u=null);Yb(a);a.h.cancel();a.s&&(\"number\"===typeof a.s&&k.clearTimeout(a.s),a.s=null)}function fc(a){if(!jc(a.h)&&!a.s){a.s=!0;var b=a.Ga;x||Ea();y||(x(),y=!0);za.add(b,a);a.B=0}}function bd(a,b){if(ac(a.h)>=a.h.j-(a.s?1:0))return!1;if(a.s)return a.i=b.D.concat(a.i),!0;if(1==a.G||2==a.G||a.B>=(a.Va?0:a.Wa))return!1;a.s=ub(p(a.Ga,a,b),cd(a,a.B));a.B++;return!0}\nh.Ga=function(a){if(this.s)if(this.s=null,1==this.G){if(!a){this.U=Math.floor(1E5*Math.random());a=this.U++;const e=new M(this,this.j,a);let f=this.o;this.S&&(f?(f=sa(f),ua(f,this.S)):f=this.S);null!==this.m||this.O||(e.H=f,f=null);if(this.P)a:{var b=0;for(var c=0;c<this.i.length;c++){b:{var d=this.i[c];if(\"__data__\"in d.map&&(d=d.map.__data__,\"string\"===typeof d)){d=d.length;break b}d=void 0}if(void 0===d)break;b+=d;if(4096<b){b=c;break a}if(4096===b||c===this.i.length-1){b=c+1;break a}}b=1E3}else b=\n1E3;b=dd(this,e,b);c=N(this.I);S(c,\"RID\",a);S(c,\"CVER\",22);this.D&&S(c,\"X-HTTP-Session-Id\",this.D);$c(this,c);f&&(this.O?b=\"headers=\"+encodeURIComponent(String(Oc(f)))+\"&\"+b:this.m&&Pc(c,this.m,f));bc(this.h,e);this.Ua&&S(c,\"TYPE\",\"init\");this.P?(S(c,\"$req\",b),S(c,\"SID\",\"null\"),e.T=!0,Hb(e,c,null)):Hb(e,c,b);this.G=2}}else 3==this.G&&(a?ed(this,a):0==this.i.length||jc(this.h)||ed(this))};\nfunction ed(a,b){var c;b?c=b.l:c=a.U++;const d=N(a.I);S(d,\"SID\",a.K);S(d,\"RID\",c);S(d,\"AID\",a.T);$c(a,d);a.m&&a.o&&Pc(d,a.m,a.o);c=new M(a,a.j,c,a.B+1);null===a.m&&(c.H=a.o);b&&(a.i=b.D.concat(a.i));b=dd(a,c,1E3);c.I=Math.round(.5*a.wa)+Math.round(.5*a.wa*Math.random());bc(a.h,c);Hb(c,d,b)}function $c(a,b){a.H&&qa(a.H,function(c,d){S(b,d,c)});a.l&&nc({},function(c,d){S(b,d,c)})}\nfunction dd(a,b,c){c=Math.min(a.i.length,c);var d=a.l?p(a.l.Na,a.l,a):null;a:{var e=a.i;let f=-1;for(;;){const g=[\"count=\"+c];-1==f?0<c?(f=e[0].g,g.push(\"ofs=\"+f)):f=0:g.push(\"ofs=\"+f);let m=!0;for(let q=0;q<c;q++){let l=e[q].g;const v=e[q].map;l-=f;if(0>l)f=Math.max(0,e[q].g-100),m=!1;else try{Ic(v,g,\"req\"+l+\"_\")}catch(w){d&&d(v)}}if(m){d=g.join(\"&\");break a}}}a=a.i.splice(0,c);b.D=a;return d}function ec(a){if(!a.g&&!a.u){a.Y=1;var b=a.Fa;x||Ea();y||(x(),y=!0);za.add(b,a);a.v=0}}\nfunction $b(a){if(a.g||a.u||3<=a.v)return!1;a.Y++;a.u=ub(p(a.Fa,a),cd(a,a.v));a.v++;return!0}h.Fa=function(){this.u=null;fd(this);if(this.ba&&!(this.M||null==this.g||0>=this.R)){var a=2*this.R;this.j.info(\"BP detection timer enabled: \"+a);this.A=ub(p(this.ab,this),a)}};h.ab=function(){this.A&&(this.A=null,this.j.info(\"BP detection timeout reached.\"),this.j.info(\"Buffering proxy detected and switch to long-polling!\"),this.F=!1,this.M=!0,K(10),Zb(this),fd(this))};\nfunction Tb(a){null!=a.A&&(k.clearTimeout(a.A),a.A=null)}function fd(a){a.g=new M(a,a.j,\"rpc\",a.Y);null===a.m&&(a.g.H=a.o);a.g.O=0;var b=N(a.qa);S(b,\"RID\",\"rpc\");S(b,\"SID\",a.K);S(b,\"AID\",a.T);S(b,\"CI\",a.F?\"0\":\"1\");!a.F&&a.ja&&S(b,\"TO\",a.ja);S(b,\"TYPE\",\"xmlhttp\");$c(a,b);a.m&&a.o&&Pc(b,a.m,a.o);a.L&&(a.g.I=a.L);var c=a.g;a=a.ia;c.L=1;c.v=Ib(N(b));c.m=null;c.P=!0;Jb(c,a)}h.Za=function(){null!=this.C&&(this.C=null,Zb(this),$b(this),K(19))};function Yb(a){null!=a.C&&(k.clearTimeout(a.C),a.C=null)}\nfunction Ub(a,b){var c=null;if(a.g==b){Yb(a);Tb(a);a.g=null;var d=2}else if(Xb(a.h,b))c=b.D,dc(a.h,b),d=1;else return;if(0!=a.G)if(b.o)if(1==d){c=b.m?b.m.length:0;b=Date.now()-b.F;var e=a.B;d=qb();F(d,new tb(d,c,b,e));fc(a)}else ec(a);else if(e=b.s,3==e||0==e&&0<b.X||!(1==d&&bd(a,b)||2==d&&$b(a)))switch(c&&0<c.length&&(b=a.h,b.i=b.i.concat(c)),e){case 1:R(a,5);break;case 4:R(a,10);break;case 3:R(a,6);break;default:R(a,2)}}\nfunction cd(a,b){let c=a.Ta+Math.floor(Math.random()*a.cb);a.isActive()||(c*=2);return c*b}function R(a,b){a.j.info(\"Error code \"+b);if(2==b){var c=p(a.fb,a),d=a.Xa;const e=!d;d=new T(d||\"//www.google.com/images/cleardot.gif\");k.location&&\"http\"==k.location.protocol||qc(d,\"https\");Ib(d);e?Fc(d.toString(),c):Gc(d.toString(),c)}else K(2);a.G=0;a.l&&a.l.sa(b);ad(a);Zc(a)}h.fb=function(a){a?(this.j.info(\"Successfully pinged google.com\"),K(2)):(this.j.info(\"Failed to ping google.com\"),K(1))};\nfunction ad(a){a.G=0;a.ka=[];if(a.l){const b=kc(a.h);if(0!=b.length||0!=a.i.length)ma(a.ka,b),ma(a.ka,a.i),a.h.i.length=0,la(a.i),a.i.length=0;a.l.ra()}}function cc(a,b,c){var d=c instanceof T?N(c):new T(c);if(\"\"!=d.g)b&&(d.g=b+\".\"+d.g),rc(d,d.s);else{var e=k.location;d=e.protocol;b=b?b+\".\"+e.hostname:e.hostname;e=+e.port;var f=new T(null);d&&qc(f,d);b&&(f.g=b);e&&rc(f,e);c&&(f.l=c);d=f}c=a.D;b=a.ya;c&&b&&S(d,c,b);S(d,\"VER\",a.la);$c(a,d);return d}\nfunction Mb(a,b,c){if(b&&!a.J)throw Error(\"Can't create secondary domain capable XhrIo object.\");b=a.Ca&&!a.pa?new X(new Jc({eb:c})):new X(a.pa);b.Ha(a.J);return b}h.isActive=function(){return!!this.l&&this.l.isActive(this)};function gd(){}h=gd.prototype;h.ua=function(){};h.ta=function(){};h.sa=function(){};h.ra=function(){};h.isActive=function(){return!0};h.Na=function(){};function hd(){}hd.prototype.g=function(a,b){return new Y(a,b)};\nfunction Y(a,b){E.call(this);this.g=new Yc(b);this.l=a;this.h=b&&b.messageUrlParams||null;a=b&&b.messageHeaders||null;b&&b.clientProtocolHeaderRequired&&(a?a[\"X-Client-Protocol\"]=\"webchannel\":a={\"X-Client-Protocol\":\"webchannel\"});this.g.o=a;a=b&&b.initMessageHeaders||null;b&&b.messageContentType&&(a?a[\"X-WebChannel-Content-Type\"]=b.messageContentType:a={\"X-WebChannel-Content-Type\":b.messageContentType});b&&b.va&&(a?a[\"X-WebChannel-Client-Profile\"]=b.va:a={\"X-WebChannel-Client-Profile\":b.va});this.g.S=\na;(a=b&&b.Sb)&&!t(a)&&(this.g.m=a);this.v=b&&b.supportsCrossDomainXhr||!1;this.u=b&&b.sendRawJson||!1;(b=b&&b.httpSessionIdParam)&&!t(b)&&(this.g.D=b,a=this.h,null!==a&&b in a&&(a=this.h,b in a&&delete a[b]));this.j=new Z(this)}r(Y,E);Y.prototype.m=function(){this.g.l=this.j;this.v&&(this.g.J=!0);this.g.connect(this.l,this.h||void 0)};Y.prototype.close=function(){gc(this.g)};\nY.prototype.o=function(a){var b=this.g;if(\"string\"===typeof a){var c={};c.__data__=a;a=c}else this.u&&(c={},c.__data__=hb(a),a=c);b.i.push(new hc(b.Ya++,a));3==b.G&&fc(b)};Y.prototype.N=function(){this.g.l=null;delete this.j;gc(this.g);delete this.g;Y.aa.N.call(this)};\nfunction id(a){nb.call(this);a.__headers__&&(this.headers=a.__headers__,this.statusCode=a.__status__,delete a.__headers__,delete a.__status__);var b=a.__sm__;if(b){a:{for(const c in b){a=c;break a}a=void 0}if(this.i=a)a=this.i,b=null!==b&&a in b?b[a]:void 0;this.data=b}else this.data=a}r(id,nb);function jd(){ob.call(this);this.status=1}r(jd,ob);function Z(a){this.g=a}r(Z,gd);Z.prototype.ua=function(){F(this.g,\"a\")};Z.prototype.ta=function(a){F(this.g,new id(a))};\nZ.prototype.sa=function(a){F(this.g,new jd(a))};Z.prototype.ra=function(){F(this.g,\"b\")};hd.prototype.createWebChannel=hd.prototype.g;Y.prototype.send=Y.prototype.o;Y.prototype.open=Y.prototype.m;Y.prototype.close=Y.prototype.close;module.exports.createWebChannelTransport=function(){return new hd};module.exports.getStatEventTarget=function(){return qb()};module.exports.Event=I;module.exports.Stat={mb:0,pb:1,qb:2,Jb:3,Ob:4,Lb:5,Mb:6,Kb:7,Ib:8,Nb:9,PROXY:10,NOPROXY:11,Gb:12,Cb:13,Db:14,Bb:15,Eb:16,Fb:17,ib:18,hb:19,jb:20};Ab.NO_ERROR=0;Ab.TIMEOUT=8;Ab.HTTP_ERROR=6;\nmodule.exports.ErrorCode=Ab;Bb.COMPLETE=\"complete\";module.exports.EventType=Bb;mb.EventType=H;H.OPEN=\"a\";H.CLOSE=\"b\";H.ERROR=\"c\";H.MESSAGE=\"d\";E.prototype.listen=E.prototype.K;module.exports.WebChannel=mb;module.exports.FetchXmlHttpFactory=Jc;X.prototype.listenOnce=X.prototype.L;X.prototype.getLastError=X.prototype.Ka;X.prototype.getLastErrorCode=X.prototype.Ba;X.prototype.getStatus=X.prototype.Z;X.prototype.getResponseJson=X.prototype.Oa;X.prototype.getResponseText=X.prototype.oa;\nX.prototype.send=X.prototype.ea;X.prototype.setWithCredentials=X.prototype.Ha;module.exports.XhrIo=X;}).apply( typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self  : typeof window !== 'undefined' ? window  : {});\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nexport class User {\n  /** A user with a null UID. */\n  static readonly UNAUTHENTICATED = new User(null);\n\n  // TODO(mikelehen): Look into getting a proper uid-equivalent for\n  // non-FirebaseAuth providers.\n  static readonly GOOGLE_CREDENTIALS = new User('google-credentials-uid');\n  static readonly FIRST_PARTY = new User('first-party-uid');\n  static readonly MOCK_USER = new User('mock-user');\n\n  constructor(readonly uid: string | null) {}\n\n  isAuthenticated(): boolean {\n    return this.uid != null;\n  }\n\n  /**\n   * Returns a key representing this user, suitable for inclusion in a\n   * dictionary.\n   */\n  toKey(): string {\n    if (this.isAuthenticated()) {\n      return 'uid:' + this.uid;\n    } else {\n      return 'anonymous-user';\n    }\n  }\n\n  isEqual(otherUser: User): boolean {\n    return otherUser.uid === this.uid;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** The semver (www.semver.org) version of the SDK. */\nimport { version } from '../../../firebase/package.json';\nexport let SDK_VERSION = version;\nexport function setSDKVersion(version: string): void {\n  SDK_VERSION = version;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel, LogLevelString } from '@firebase/logger';\n\nimport { SDK_VERSION } from '../core/version';\nimport { formatJSON } from '../platform/format_json';\n\nexport { LogLevel, LogLevelString };\n\nconst logClient = new Logger('@firebase/firestore');\n\n// Helper methods are needed because variables can't be exported as read/write\nexport function getLogLevel(): LogLevel {\n  return logClient.logLevel;\n}\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  logClient.setLogLevel(logLevel);\n}\n\nexport function logDebug(msg: string, ...obj: unknown[]): void {\n  if (logClient.logLevel <= LogLevel.DEBUG) {\n    const args = obj.map(argToString);\n    logClient.debug(`Firestore (${SDK_VERSION}): ${msg}`, ...args);\n  }\n}\n\nexport function logError(msg: string, ...obj: unknown[]): void {\n  if (logClient.logLevel <= LogLevel.ERROR) {\n    const args = obj.map(argToString);\n    logClient.error(`Firestore (${SDK_VERSION}): ${msg}`, ...args);\n  }\n}\n\n/**\n * @internal\n */\nexport function logWarn(msg: string, ...obj: unknown[]): void {\n  if (logClient.logLevel <= LogLevel.WARN) {\n    const args = obj.map(argToString);\n    logClient.warn(`Firestore (${SDK_VERSION}): ${msg}`, ...args);\n  }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */\nfunction argToString(obj: unknown): string | unknown {\n  if (typeof obj === 'string') {\n    return obj;\n  } else {\n    try {\n      return formatJSON(obj);\n    } catch (e) {\n      // Converting to JSON failed, just log the object directly\n      return obj;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Formats an object as a JSON string, suitable for logging. */\nexport function formatJSON(value: unknown): string {\n  return JSON.stringify(value);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SDK_VERSION } from '../core/version';\n\nimport { logError } from './log';\n\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */\nexport function fail(failure: string = 'Unexpected state'): never {\n  // Log the failure in addition to throw an exception, just in case the\n  // exception is swallowed.\n  const message =\n    `FIRESTORE (${SDK_VERSION}) INTERNAL ASSERTION FAILED: ` + failure;\n  logError(message);\n\n  // NOTE: We don't use FirestoreError here because these are internal failures\n  // that cannot be handled by the user. (Also it would create a circular\n  // dependency between the error and assert modules which doesn't work.)\n  throw new Error(message);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */\nexport function hardAssert(\n  assertion: boolean,\n  message?: string\n): asserts assertion {\n  if (!assertion) {\n    fail(message);\n  }\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * The code of callsites invoking this function are stripped out in production\n * builds. Any side-effects of code within the debugAssert() invocation will not\n * happen in this case.\n *\n * @internal\n */\nexport function debugAssert(\n  assertion: boolean,\n  message: string\n): asserts assertion {\n  if (!assertion) {\n    fail(message);\n  }\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */\nexport function debugCast<T>(\n  obj: object,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor: { new (...args: any[]): T }\n): T | never {\n  debugAssert(\n    obj instanceof constructor,\n    `Expected type '${constructor.name}', but was '${obj.constructor.name}'`\n  );\n  return obj as T;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\n\n/**\n * The set of Firestore status codes. The codes are the same at the ones\n * exposed by gRPC here:\n * https://github.com/grpc/grpc/blob/master/doc/statuscodes.md\n *\n * Possible values:\n * - 'cancelled': The operation was cancelled (typically by the caller).\n * - 'unknown': Unknown error or an error from a different error domain.\n * - 'invalid-argument': Client specified an invalid argument. Note that this\n *   differs from 'failed-precondition'. 'invalid-argument' indicates\n *   arguments that are problematic regardless of the state of the system\n *   (e.g. an invalid field name).\n * - 'deadline-exceeded': Deadline expired before operation could complete.\n *   For operations that change the state of the system, this error may be\n *   returned even if the operation has completed successfully. For example,\n *   a successful response from a server could have been delayed long enough\n *   for the deadline to expire.\n * - 'not-found': Some requested document was not found.\n * - 'already-exists': Some document that we attempted to create already\n *   exists.\n * - 'permission-denied': The caller does not have permission to execute the\n *   specified operation.\n * - 'resource-exhausted': Some resource has been exhausted, perhaps a\n *   per-user quota, or perhaps the entire file system is out of space.\n * - 'failed-precondition': Operation was rejected because the system is not\n *   in a state required for the operation's execution.\n * - 'aborted': The operation was aborted, typically due to a concurrency\n *   issue like transaction aborts, etc.\n * - 'out-of-range': Operation was attempted past the valid range.\n * - 'unimplemented': Operation is not implemented or not supported/enabled.\n * - 'internal': Internal errors. Means some invariants expected by\n *   underlying system has been broken. If you see one of these errors,\n *   something is very broken.\n * - 'unavailable': The service is currently unavailable. This is most likely\n *   a transient condition and may be corrected by retrying with a backoff.\n * - 'data-loss': Unrecoverable data loss or corruption.\n * - 'unauthenticated': The request does not have valid authentication\n *   credentials for the operation.\n */\nexport type FirestoreErrorCode =\n  | 'cancelled'\n  | 'unknown'\n  | 'invalid-argument'\n  | 'deadline-exceeded'\n  | 'not-found'\n  | 'already-exists'\n  | 'permission-denied'\n  | 'resource-exhausted'\n  | 'failed-precondition'\n  | 'aborted'\n  | 'out-of-range'\n  | 'unimplemented'\n  | 'internal'\n  | 'unavailable'\n  | 'data-loss'\n  | 'unauthenticated';\n\n/**\n * Error Codes describing the different ways Firestore can fail. These come\n * directly from GRPC.\n */\nexport type Code = FirestoreErrorCode;\n\nexport const Code = {\n  // Causes are copied from:\n  // https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n  /** Not an error; returned on success. */\n  OK: 'ok' as FirestoreErrorCode,\n\n  /** The operation was cancelled (typically by the caller). */\n  CANCELLED: 'cancelled' as FirestoreErrorCode,\n\n  /** Unknown error or an error from a different error domain. */\n  UNKNOWN: 'unknown' as FirestoreErrorCode,\n\n  /**\n   * Client specified an invalid argument. Note that this differs from\n   * FAILED_PRECONDITION. INVALID_ARGUMENT indicates arguments that are\n   * problematic regardless of the state of the system (e.g., a malformed file\n   * name).\n   */\n  INVALID_ARGUMENT: 'invalid-argument' as FirestoreErrorCode,\n\n  /**\n   * Deadline expired before operation could complete. For operations that\n   * change the state of the system, this error may be returned even if the\n   * operation has completed successfully. For example, a successful response\n   * from a server could have been delayed long enough for the deadline to\n   * expire.\n   */\n  DEADLINE_EXCEEDED: 'deadline-exceeded' as FirestoreErrorCode,\n\n  /** Some requested entity (e.g., file or directory) was not found. */\n  NOT_FOUND: 'not-found' as FirestoreErrorCode,\n\n  /**\n   * Some entity that we attempted to create (e.g., file or directory) already\n   * exists.\n   */\n  ALREADY_EXISTS: 'already-exists' as FirestoreErrorCode,\n\n  /**\n   * The caller does not have permission to execute the specified operation.\n   * PERMISSION_DENIED must not be used for rejections caused by exhausting\n   * some resource (use RESOURCE_EXHAUSTED instead for those errors).\n   * PERMISSION_DENIED must not be used if the caller can not be identified\n   * (use UNAUTHENTICATED instead for those errors).\n   */\n  PERMISSION_DENIED: 'permission-denied' as FirestoreErrorCode,\n\n  /**\n   * The request does not have valid authentication credentials for the\n   * operation.\n   */\n  UNAUTHENTICATED: 'unauthenticated' as FirestoreErrorCode,\n\n  /**\n   * Some resource has been exhausted, perhaps a per-user quota, or perhaps the\n   * entire file system is out of space.\n   */\n  RESOURCE_EXHAUSTED: 'resource-exhausted' as FirestoreErrorCode,\n\n  /**\n   * Operation was rejected because the system is not in a state required for\n   * the operation's execution. For example, directory to be deleted may be\n   * non-empty, an rmdir operation is applied to a non-directory, etc.\n   *\n   * A litmus test that may help a service implementor in deciding\n   * between FAILED_PRECONDITION, ABORTED, and UNAVAILABLE:\n   *  (a) Use UNAVAILABLE if the client can retry just the failing call.\n   *  (b) Use ABORTED if the client should retry at a higher-level\n   *      (e.g., restarting a read-modify-write sequence).\n   *  (c) Use FAILED_PRECONDITION if the client should not retry until\n   *      the system state has been explicitly fixed. E.g., if an \"rmdir\"\n   *      fails because the directory is non-empty, FAILED_PRECONDITION\n   *      should be returned since the client should not retry unless\n   *      they have first fixed up the directory by deleting files from it.\n   *  (d) Use FAILED_PRECONDITION if the client performs conditional\n   *      REST Get/Update/Delete on a resource and the resource on the\n   *      server does not match the condition. E.g., conflicting\n   *      read-modify-write on the same resource.\n   */\n  FAILED_PRECONDITION: 'failed-precondition' as FirestoreErrorCode,\n\n  /**\n   * The operation was aborted, typically due to a concurrency issue like\n   * sequencer check failures, transaction aborts, etc.\n   *\n   * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,\n   * and UNAVAILABLE.\n   */\n  ABORTED: 'aborted' as FirestoreErrorCode,\n\n  /**\n   * Operation was attempted past the valid range. E.g., seeking or reading\n   * past end of file.\n   *\n   * Unlike INVALID_ARGUMENT, this error indicates a problem that may be fixed\n   * if the system state changes. For example, a 32-bit file system will\n   * generate INVALID_ARGUMENT if asked to read at an offset that is not in the\n   * range [0,2^32-1], but it will generate OUT_OF_RANGE if asked to read from\n   * an offset past the current file size.\n   *\n   * There is a fair bit of overlap between FAILED_PRECONDITION and\n   * OUT_OF_RANGE. We recommend using OUT_OF_RANGE (the more specific error)\n   * when it applies so that callers who are iterating through a space can\n   * easily look for an OUT_OF_RANGE error to detect when they are done.\n   */\n  OUT_OF_RANGE: 'out-of-range' as FirestoreErrorCode,\n\n  /** Operation is not implemented or not supported/enabled in this service. */\n  UNIMPLEMENTED: 'unimplemented' as FirestoreErrorCode,\n\n  /**\n   * Internal errors. Means some invariants expected by underlying System has\n   * been broken. If you see one of these errors, Something is very broken.\n   */\n  INTERNAL: 'internal' as FirestoreErrorCode,\n\n  /**\n   * The service is currently unavailable. This is a most likely a transient\n   * condition and may be corrected by retrying with a backoff.\n   *\n   * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,\n   * and UNAVAILABLE.\n   */\n  UNAVAILABLE: 'unavailable' as FirestoreErrorCode,\n\n  /** Unrecoverable data loss or corruption. */\n  DATA_LOSS: 'data-loss' as FirestoreErrorCode\n};\n\n/** An error returned by a Firestore operation. */\nexport class FirestoreError extends FirebaseError {\n  /** The stack of the error. */\n  readonly stack?: string;\n\n  /** @hideconstructor */\n  constructor(\n    /**\n     * The backend error code associated with this error.\n     */\n    readonly code: FirestoreErrorCode,\n    /**\n     * A custom error description.\n     */\n    readonly message: string\n  ) {\n    super(code, message);\n\n    // HACK: We write a toString property directly because Error is not a real\n    // class and so inheritance does not work correctly. We could alternatively\n    // do the same \"back-door inheritance\" trick that FirebaseError does.\n    this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Resolver<R> {\n  (value: R | Promise<R>): void;\n}\n\nexport interface Rejecter {\n  (reason?: Error): void;\n}\n\nexport class Deferred<R = void> {\n  promise: Promise<R>;\n  // Assigned synchronously in constructor by Promise constructor callback.\n  resolve!: Resolver<R>;\n  reject!: Rejecter;\n\n  constructor() {\n    this.promise = new Promise((resolve: Resolver<R>, reject: Rejecter) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    });\n  }\n}\n\n/**\n * Takes an array of values and a function from a value to a Promise. The function is run on each\n * value sequentially, waiting for the previous promise to resolve before starting the next one.\n * The returned promise resolves once the function has been run on all values.\n */\nexport function sequence<T>(\n  values: T[],\n  fn: (value: T) => Promise<void>\n): Promise<void> {\n  let p = Promise.resolve();\n  for (const value of values) {\n    p = p.then(() => fn(value));\n  }\n  return p;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AppCheckInternalComponentName,\n  AppCheckTokenListener,\n  AppCheckTokenResult,\n  FirebaseAppCheckInternal\n} from '@firebase/app-check-interop-types';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { User } from '../auth/user';\nimport { debugAssert, hardAssert } from '../util/assert';\nimport { AsyncQueue } from '../util/async_queue';\nimport { Code, FirestoreError } from '../util/error';\nimport { logDebug } from '../util/log';\nimport { Deferred } from '../util/promise';\n\n// TODO(mikelehen): This should be split into multiple files and probably\n// moved to an auth/ folder to match other platforms.\n\n/**\n * @internal\n */\nexport type AuthTokenFactory = () => string;\n\n/**\n * @internal\n */\nexport interface FirstPartyCredentialsSettings {\n  // These are external types. Prevent minification.\n  ['type']: 'firstParty';\n  ['sessionIndex']: string;\n  ['iamToken']: string | null;\n  ['authTokenFactory']: AuthTokenFactory | null;\n}\n\nexport interface ProviderCredentialsSettings {\n  // These are external types. Prevent minification.\n  ['type']: 'provider';\n  ['client']: CredentialsProvider<User>;\n}\n\n/** Settings for private credentials */\nexport type CredentialsSettings =\n  | FirstPartyCredentialsSettings\n  | ProviderCredentialsSettings;\n\nexport type TokenType = 'OAuth' | 'FirstParty' | 'AppCheck';\nexport interface Token {\n  /** Type of token. */\n  type: TokenType;\n\n  /**\n   * The user with which the token is associated (used for persisting user\n   * state on disk, etc.).\n   * This will be null for Tokens of the type 'AppCheck'.\n   */\n  user?: User;\n\n  /** Header values to set for this token */\n  headers: Map<string, string>;\n}\n\nexport class OAuthToken implements Token {\n  type = 'OAuth' as TokenType;\n  headers = new Map();\n\n  constructor(value: string, public user: User) {\n    this.headers.set('Authorization', `Bearer ${value}`);\n  }\n}\n\n/**\n * A Listener for credential change events. The listener should fetch a new\n * token and may need to invalidate other state if the current user has also\n * changed.\n */\nexport type CredentialChangeListener<T> = (credential: T) => Promise<void>;\n\n/**\n * Provides methods for getting the uid and token for the current user and\n * listening for changes.\n */\nexport interface CredentialsProvider<T> {\n  /**\n   * Starts the credentials provider and specifies a listener to be notified of\n   * credential changes (sign-in / sign-out, token changes). It is immediately\n   * called once with the initial user.\n   *\n   * The change listener is invoked on the provided AsyncQueue.\n   */\n  start(\n    asyncQueue: AsyncQueue,\n    changeListener: CredentialChangeListener<T>\n  ): void;\n\n  /** Requests a token for the current user. */\n  getToken(): Promise<Token | null>;\n\n  /**\n   * Marks the last retrieved token as invalid, making the next GetToken request\n   * force-refresh the token.\n   */\n  invalidateToken(): void;\n\n  shutdown(): void;\n}\n\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */\nexport class EmptyAuthCredentialsProvider implements CredentialsProvider<User> {\n  getToken(): Promise<Token | null> {\n    return Promise.resolve<Token | null>(null);\n  }\n\n  invalidateToken(): void {}\n\n  start(\n    asyncQueue: AsyncQueue,\n    changeListener: CredentialChangeListener<User>\n  ): void {\n    // Fire with initial user.\n    asyncQueue.enqueueRetryable(() => changeListener(User.UNAUTHENTICATED));\n  }\n\n  shutdown(): void {}\n}\n\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */\nexport class EmulatorAuthCredentialsProvider\n  implements CredentialsProvider<User>\n{\n  constructor(private token: Token) {}\n\n  /**\n   * Stores the listener registered with setChangeListener()\n   * This isn't actually necessary since the UID never changes, but we use this\n   * to verify the listen contract is adhered to in tests.\n   */\n  private changeListener: CredentialChangeListener<User> | null = null;\n\n  getToken(): Promise<Token | null> {\n    return Promise.resolve(this.token);\n  }\n\n  invalidateToken(): void {}\n\n  start(\n    asyncQueue: AsyncQueue,\n    changeListener: CredentialChangeListener<User>\n  ): void {\n    debugAssert(\n      !this.changeListener,\n      'Can only call setChangeListener() once.'\n    );\n    this.changeListener = changeListener;\n    // Fire with initial user.\n    asyncQueue.enqueueRetryable(() => changeListener(this.token.user!));\n  }\n\n  shutdown(): void {\n    this.changeListener = null;\n  }\n}\n\n/** Credential provider for the Lite SDK. */\nexport class LiteAuthCredentialsProvider implements CredentialsProvider<User> {\n  private auth: FirebaseAuthInternal | null = null;\n\n  constructor(authProvider: Provider<FirebaseAuthInternalName>) {\n    authProvider.onInit(auth => {\n      this.auth = auth;\n    });\n  }\n\n  getToken(): Promise<Token | null> {\n    if (!this.auth) {\n      return Promise.resolve(null);\n    }\n\n    return this.auth.getToken().then(tokenData => {\n      if (tokenData) {\n        hardAssert(\n          typeof tokenData.accessToken === 'string',\n          'Invalid tokenData returned from getToken():' + tokenData\n        );\n        return new OAuthToken(\n          tokenData.accessToken,\n          new User(this.auth!.getUid())\n        );\n      } else {\n        return null;\n      }\n    });\n  }\n\n  invalidateToken(): void {}\n\n  start(\n    asyncQueue: AsyncQueue,\n    changeListener: CredentialChangeListener<User>\n  ): void {}\n\n  shutdown(): void {}\n}\n\nexport class FirebaseAuthCredentialsProvider\n  implements CredentialsProvider<User>\n{\n  /**\n   * The auth token listener registered with FirebaseApp, retained here so we\n   * can unregister it.\n   */\n  private tokenListener!: () => void;\n\n  /** Tracks the current User. */\n  private currentUser: User = User.UNAUTHENTICATED;\n\n  /**\n   * Counter used to detect if the token changed while a getToken request was\n   * outstanding.\n   */\n  private tokenCounter = 0;\n\n  private forceRefresh = false;\n\n  private auth: FirebaseAuthInternal | null = null;\n\n  constructor(private authProvider: Provider<FirebaseAuthInternalName>) {}\n\n  start(\n    asyncQueue: AsyncQueue,\n    changeListener: CredentialChangeListener<User>\n  ): void {\n    let lastTokenId = this.tokenCounter;\n\n    // A change listener that prevents double-firing for the same token change.\n    const guardedChangeListener: (user: User) => Promise<void> = user => {\n      if (this.tokenCounter !== lastTokenId) {\n        lastTokenId = this.tokenCounter;\n        return changeListener(user);\n      } else {\n        return Promise.resolve();\n      }\n    };\n\n    // A promise that can be waited on to block on the next token change.\n    // This promise is re-created after each change.\n    let nextToken = new Deferred<void>();\n\n    this.tokenListener = () => {\n      this.tokenCounter++;\n      this.currentUser = this.getUser();\n      nextToken.resolve();\n      nextToken = new Deferred<void>();\n      asyncQueue.enqueueRetryable(() =>\n        guardedChangeListener(this.currentUser)\n      );\n    };\n\n    const awaitNextToken: () => void = () => {\n      const currentTokenAttempt = nextToken;\n      asyncQueue.enqueueRetryable(async () => {\n        await currentTokenAttempt.promise;\n        await guardedChangeListener(this.currentUser);\n      });\n    };\n\n    const registerAuth = (auth: FirebaseAuthInternal): void => {\n      logDebug('FirebaseAuthCredentialsProvider', 'Auth detected');\n      this.auth = auth;\n      this.auth.addAuthTokenListener(this.tokenListener);\n      awaitNextToken();\n    };\n\n    this.authProvider.onInit(auth => registerAuth(auth));\n\n    // Our users can initialize Auth right after Firestore, so we give it\n    // a chance to register itself with the component framework before we\n    // determine whether to start up in unauthenticated mode.\n    setTimeout(() => {\n      if (!this.auth) {\n        const auth = this.authProvider.getImmediate({ optional: true });\n        if (auth) {\n          registerAuth(auth);\n        } else {\n          // If auth is still not available, proceed with `null` user\n          logDebug('FirebaseAuthCredentialsProvider', 'Auth not yet detected');\n          nextToken.resolve();\n          nextToken = new Deferred<void>();\n        }\n      }\n    }, 0);\n\n    awaitNextToken();\n  }\n\n  getToken(): Promise<Token | null> {\n    debugAssert(\n      this.tokenListener != null,\n      'FirebaseAuthCredentialsProvider not started.'\n    );\n\n    // Take note of the current value of the tokenCounter so that this method\n    // can fail (with an ABORTED error) if there is a token change while the\n    // request is outstanding.\n    const initialTokenCounter = this.tokenCounter;\n    const forceRefresh = this.forceRefresh;\n    this.forceRefresh = false;\n\n    if (!this.auth) {\n      return Promise.resolve(null);\n    }\n\n    return this.auth.getToken(forceRefresh).then(tokenData => {\n      // Cancel the request since the token changed while the request was\n      // outstanding so the response is potentially for a previous user (which\n      // user, we can't be sure).\n      if (this.tokenCounter !== initialTokenCounter) {\n        logDebug(\n          'FirebaseAuthCredentialsProvider',\n          'getToken aborted due to token change.'\n        );\n        return this.getToken();\n      } else {\n        if (tokenData) {\n          hardAssert(\n            typeof tokenData.accessToken === 'string',\n            'Invalid tokenData returned from getToken():' + tokenData\n          );\n          return new OAuthToken(tokenData.accessToken, this.currentUser);\n        } else {\n          return null;\n        }\n      }\n    });\n  }\n\n  invalidateToken(): void {\n    this.forceRefresh = true;\n  }\n\n  shutdown(): void {\n    if (this.auth) {\n      this.auth.removeAuthTokenListener(this.tokenListener!);\n    }\n  }\n\n  // Auth.getUid() can return null even with a user logged in. It is because\n  // getUid() is synchronous, but the auth code populating Uid is asynchronous.\n  // This method should only be called in the AuthTokenListener callback\n  // to guarantee to get the actual user.\n  private getUser(): User {\n    const currentUid = this.auth && this.auth.getUid();\n    hardAssert(\n      currentUid === null || typeof currentUid === 'string',\n      'Received invalid UID: ' + currentUid\n    );\n    return new User(currentUid);\n  }\n}\n\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */\nexport class FirstPartyToken implements Token {\n  type = 'FirstParty' as TokenType;\n  user = User.FIRST_PARTY;\n  private _headers = new Map();\n\n  constructor(\n    private readonly sessionIndex: string,\n    private readonly iamToken: string | null,\n    private readonly authTokenFactory: AuthTokenFactory | null\n  ) {}\n\n  /**\n   * Gets an authorization token, using a provided factory function, or return\n   * null.\n   */\n  private getAuthToken(): string | null {\n    if (this.authTokenFactory) {\n      return this.authTokenFactory();\n    } else {\n      return null;\n    }\n  }\n\n  get headers(): Map<string, string> {\n    this._headers.set('X-Goog-AuthUser', this.sessionIndex);\n    // Use array notation to prevent minification\n    const authHeaderTokenValue = this.getAuthToken();\n    if (authHeaderTokenValue) {\n      this._headers.set('Authorization', authHeaderTokenValue);\n    }\n    if (this.iamToken) {\n      this._headers.set('X-Goog-Iam-Authorization-Token', this.iamToken);\n    }\n\n    return this._headers;\n  }\n}\n\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */\nexport class FirstPartyAuthCredentialsProvider\n  implements CredentialsProvider<User>\n{\n  constructor(\n    private sessionIndex: string,\n    private iamToken: string | null,\n    private authTokenFactory: AuthTokenFactory | null\n  ) {}\n\n  getToken(): Promise<Token | null> {\n    return Promise.resolve(\n      new FirstPartyToken(\n        this.sessionIndex,\n        this.iamToken,\n        this.authTokenFactory\n      )\n    );\n  }\n\n  start(\n    asyncQueue: AsyncQueue,\n    changeListener: CredentialChangeListener<User>\n  ): void {\n    // Fire with initial uid.\n    asyncQueue.enqueueRetryable(() => changeListener(User.FIRST_PARTY));\n  }\n\n  shutdown(): void {}\n\n  invalidateToken(): void {}\n}\n\nexport class AppCheckToken implements Token {\n  type = 'AppCheck' as TokenType;\n  headers = new Map();\n\n  constructor(private value: string) {\n    if (value && value.length > 0) {\n      this.headers.set('x-firebase-appcheck', this.value);\n    }\n  }\n}\n\nexport class FirebaseAppCheckTokenProvider\n  implements CredentialsProvider<string>\n{\n  /**\n   * The AppCheck token listener registered with FirebaseApp, retained here so\n   * we can unregister it.\n   */\n  private tokenListener!: AppCheckTokenListener;\n  private forceRefresh = false;\n  private appCheck: FirebaseAppCheckInternal | null = null;\n  private latestAppCheckToken: string | null = null;\n\n  constructor(\n    private appCheckProvider: Provider<AppCheckInternalComponentName>\n  ) {}\n\n  start(\n    asyncQueue: AsyncQueue,\n    changeListener: CredentialChangeListener<string>\n  ): void {\n    const onTokenChanged: (\n      tokenResult: AppCheckTokenResult\n    ) => Promise<void> = tokenResult => {\n      if (tokenResult.error != null) {\n        logDebug(\n          'FirebaseAppCheckTokenProvider',\n          `Error getting App Check token; using placeholder token instead. Error: ${tokenResult.error.message}`\n        );\n      }\n      const tokenUpdated = tokenResult.token !== this.latestAppCheckToken;\n      this.latestAppCheckToken = tokenResult.token;\n      logDebug(\n        'FirebaseAppCheckTokenProvider',\n        `Received ${tokenUpdated ? 'new' : 'existing'} token.`\n      );\n      return tokenUpdated\n        ? changeListener(tokenResult.token)\n        : Promise.resolve();\n    };\n\n    this.tokenListener = (tokenResult: AppCheckTokenResult) => {\n      asyncQueue.enqueueRetryable(() => onTokenChanged(tokenResult));\n    };\n\n    const registerAppCheck = (appCheck: FirebaseAppCheckInternal): void => {\n      logDebug('FirebaseAppCheckTokenProvider', 'AppCheck detected');\n      this.appCheck = appCheck;\n      this.appCheck.addTokenListener(this.tokenListener);\n    };\n\n    this.appCheckProvider.onInit(appCheck => registerAppCheck(appCheck));\n\n    // Our users can initialize AppCheck after Firestore, so we give it\n    // a chance to register itself with the component framework.\n    setTimeout(() => {\n      if (!this.appCheck) {\n        const appCheck = this.appCheckProvider.getImmediate({ optional: true });\n        if (appCheck) {\n          registerAppCheck(appCheck);\n        } else {\n          // If AppCheck is still not available, proceed without it.\n          logDebug(\n            'FirebaseAppCheckTokenProvider',\n            'AppCheck not yet detected'\n          );\n        }\n      }\n    }, 0);\n  }\n\n  getToken(): Promise<Token | null> {\n    debugAssert(\n      this.tokenListener != null,\n      'FirebaseAppCheckTokenProvider not started.'\n    );\n\n    const forceRefresh = this.forceRefresh;\n    this.forceRefresh = false;\n\n    if (!this.appCheck) {\n      return Promise.resolve(null);\n    }\n\n    return this.appCheck.getToken(forceRefresh).then(tokenResult => {\n      if (tokenResult) {\n        hardAssert(\n          typeof tokenResult.token === 'string',\n          'Invalid tokenResult returned from getToken():' + tokenResult\n        );\n        this.latestAppCheckToken = tokenResult.token;\n        return new AppCheckToken(tokenResult.token);\n      } else {\n        return null;\n      }\n    });\n  }\n\n  invalidateToken(): void {\n    this.forceRefresh = true;\n  }\n\n  shutdown(): void {\n    if (this.appCheck) {\n      this.appCheck.removeTokenListener(this.tokenListener!);\n    }\n  }\n}\n\n/**\n * An AppCheck token provider that always yields an empty token.\n * @internal\n */\nexport class EmptyAppCheckTokenProvider implements CredentialsProvider<string> {\n  getToken(): Promise<Token | null> {\n    return Promise.resolve<Token | null>(new AppCheckToken(''));\n  }\n\n  invalidateToken(): void {}\n\n  start(\n    asyncQueue: AsyncQueue,\n    changeListener: CredentialChangeListener<string>\n  ): void {}\n\n  shutdown(): void {}\n}\n\n/** AppCheck token provider for the Lite SDK. */\nexport class LiteAppCheckTokenProvider implements CredentialsProvider<string> {\n  private appCheck: FirebaseAppCheckInternal | null = null;\n\n  constructor(\n    private appCheckProvider: Provider<AppCheckInternalComponentName>\n  ) {\n    appCheckProvider.onInit(appCheck => {\n      this.appCheck = appCheck;\n    });\n  }\n\n  getToken(): Promise<Token | null> {\n    if (!this.appCheck) {\n      return Promise.resolve(null);\n    }\n\n    return this.appCheck.getToken().then(tokenResult => {\n      if (tokenResult) {\n        hardAssert(\n          typeof tokenResult.token === 'string',\n          'Invalid tokenResult returned from getToken():' + tokenResult\n        );\n        return new AppCheckToken(tokenResult.token);\n      } else {\n        return null;\n      }\n    });\n  }\n\n  invalidateToken(): void {}\n\n  start(\n    asyncQueue: AsyncQueue,\n    changeListener: CredentialChangeListener<string>\n  ): void {}\n\n  shutdown(): void {}\n}\n\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\nexport function makeAuthCredentialsProvider(\n  credentials?: CredentialsSettings\n): CredentialsProvider<User> {\n  if (!credentials) {\n    return new EmptyAuthCredentialsProvider();\n  }\n  switch (credentials['type']) {\n    case 'firstParty':\n      return new FirstPartyAuthCredentialsProvider(\n        credentials['sessionIndex'] || '0',\n        credentials['iamToken'] || null,\n        credentials['authTokenFactory'] || null\n      );\n\n    case 'provider':\n      return credentials['client'];\n\n    default:\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'makeAuthCredentialsProvider failed due to invalid credential type'\n      );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugAssert } from '../../util/assert';\n\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\nexport function randomBytes(nBytes: number): Uint8Array {\n  debugAssert(nBytes >= 0, `Expecting non-negative nBytes, got: ${nBytes}`);\n\n  // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n  const crypto =\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof self !== 'undefined' && (self.crypto || (self as any)['msCrypto']);\n  const bytes = new Uint8Array(nBytes);\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    crypto.getRandomValues(bytes);\n  } else {\n    // Falls back to Math.random\n    for (let i = 0; i < nBytes; i++) {\n      bytes[i] = Math.floor(Math.random() * 256);\n    }\n  }\n  return bytes;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { randomBytes } from '../platform/random_bytes';\n\nimport { debugAssert } from './assert';\n\nexport type EventHandler<E> = (value: E) => void;\nexport interface Indexable {\n  [k: string]: unknown;\n}\n\n/**\n * A utility class for generating unique alphanumeric IDs of a specified length.\n *\n * @internal\n * Exported internally for testing purposes.\n */\nexport class AutoId {\n  static newId(): string {\n    // Alphanumeric characters\n    const chars =\n      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    // The largest byte value that is a multiple of `char.length`.\n    const maxMultiple = Math.floor(256 / chars.length) * chars.length;\n    debugAssert(\n      0 < maxMultiple && maxMultiple < 256,\n      `Expect maxMultiple to be (0, 256), but got ${maxMultiple}`\n    );\n\n    let autoId = '';\n    const targetLength = 20;\n    while (autoId.length < targetLength) {\n      const bytes = randomBytes(40);\n      for (let i = 0; i < bytes.length; ++i) {\n        // Only accept values that are [0, maxMultiple), this ensures they can\n        // be evenly mapped to indices of `chars` via a modulo operation.\n        if (autoId.length < targetLength && bytes[i] < maxMultiple) {\n          autoId += chars.charAt(bytes[i] % chars.length);\n        }\n      }\n    }\n    debugAssert(autoId.length === targetLength, 'Invalid auto ID: ' + autoId);\n\n    return autoId;\n  }\n}\n\nexport function primitiveComparator<T>(left: T, right: T): number {\n  if (left < right) {\n    return -1;\n  }\n  if (left > right) {\n    return 1;\n  }\n  return 0;\n}\n\nexport interface Equatable<T> {\n  isEqual(other: T): boolean;\n}\n\nexport interface Iterable<V> {\n  forEach: (cb: (v: V) => void) => void;\n}\n\n/** Helper to compare arrays using isEqual(). */\nexport function arrayEquals<T>(\n  left: T[],\n  right: T[],\n  comparator: (l: T, r: T) => boolean\n): boolean {\n  if (left.length !== right.length) {\n    return false;\n  }\n  return left.every((value, index) => comparator(value, right[index]));\n}\n/**\n * Returns the immediate lexicographically-following string. This is useful to\n * construct an inclusive range for indexeddb iterators.\n */\nexport function immediateSuccessor(s: string): string {\n  // Return the input string, with an additional NUL byte appended.\n  return s + '\\0';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Code, FirestoreError } from '../util/error';\nimport { primitiveComparator } from '../util/misc';\n\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\nconst MIN_SECONDS = -62135596800;\n\n// Number of nanoseconds in a millisecond.\nconst MS_TO_NANOS = 1e6;\n\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\nexport class Timestamp {\n  /**\n   * Creates a new timestamp with the current date, with millisecond precision.\n   *\n   * @returns a new timestamp representing the current date.\n   */\n  static now(): Timestamp {\n    return Timestamp.fromMillis(Date.now());\n  }\n\n  /**\n   * Creates a new timestamp from the given date.\n   *\n   * @param date - The date to initialize the `Timestamp` from.\n   * @returns A new `Timestamp` representing the same point in time as the given\n   *     date.\n   */\n  static fromDate(date: Date): Timestamp {\n    return Timestamp.fromMillis(date.getTime());\n  }\n\n  /**\n   * Creates a new timestamp from the given number of milliseconds.\n   *\n   * @param milliseconds - Number of milliseconds since Unix epoch\n   *     1970-01-01T00:00:00Z.\n   * @returns A new `Timestamp` representing the same point in time as the given\n   *     number of milliseconds.\n   */\n  static fromMillis(milliseconds: number): Timestamp {\n    const seconds = Math.floor(milliseconds / 1000);\n    const nanos = Math.floor((milliseconds - seconds * 1000) * MS_TO_NANOS);\n    return new Timestamp(seconds, nanos);\n  }\n\n  /**\n   * Creates a new timestamp.\n   *\n   * @param seconds - The number of seconds of UTC time since Unix epoch\n   *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n   *     9999-12-31T23:59:59Z inclusive.\n   * @param nanoseconds - The non-negative fractions of a second at nanosecond\n   *     resolution. Negative second values with fractions must still have\n   *     non-negative nanoseconds values that count forward in time. Must be\n   *     from 0 to 999,999,999 inclusive.\n   */\n  constructor(\n    /**\n     * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n     */\n    readonly seconds: number,\n    /**\n     * The fractions of a second at nanosecond resolution.*\n     */\n    readonly nanoseconds: number\n  ) {\n    if (nanoseconds < 0) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'Timestamp nanoseconds out of range: ' + nanoseconds\n      );\n    }\n    if (nanoseconds >= 1e9) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'Timestamp nanoseconds out of range: ' + nanoseconds\n      );\n    }\n    if (seconds < MIN_SECONDS) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'Timestamp seconds out of range: ' + seconds\n      );\n    }\n    // This will break in the year 10,000.\n    if (seconds >= 253402300800) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'Timestamp seconds out of range: ' + seconds\n      );\n    }\n  }\n\n  /**\n   * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n   * causes a loss of precision since `Date` objects only support millisecond\n   * precision.\n   *\n   * @returns JavaScript `Date` object representing the same point in time as\n   *     this `Timestamp`, with millisecond precision.\n   */\n  toDate(): Date {\n    return new Date(this.toMillis());\n  }\n\n  /**\n   * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n   * epoch). This operation causes a loss of precision.\n   *\n   * @returns The point in time corresponding to this timestamp, represented as\n   *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n   */\n  toMillis(): number {\n    return this.seconds * 1000 + this.nanoseconds / MS_TO_NANOS;\n  }\n\n  _compareTo(other: Timestamp): number {\n    if (this.seconds === other.seconds) {\n      return primitiveComparator(this.nanoseconds, other.nanoseconds);\n    }\n    return primitiveComparator(this.seconds, other.seconds);\n  }\n\n  /**\n   * Returns true if this `Timestamp` is equal to the provided one.\n   *\n   * @param other - The `Timestamp` to compare against.\n   * @returns true if this `Timestamp` is equal to the provided one.\n   */\n  isEqual(other: Timestamp): boolean {\n    return (\n      other.seconds === this.seconds && other.nanoseconds === this.nanoseconds\n    );\n  }\n\n  /** Returns a textual representation of this `Timestamp`. */\n  toString(): string {\n    return (\n      'Timestamp(seconds=' +\n      this.seconds +\n      ', nanoseconds=' +\n      this.nanoseconds +\n      ')'\n    );\n  }\n\n  /** Returns a JSON-serializable representation of this `Timestamp`. */\n  toJSON(): { seconds: number; nanoseconds: number } {\n    return { seconds: this.seconds, nanoseconds: this.nanoseconds };\n  }\n\n  /**\n   * Converts this object to a primitive string, which allows `Timestamp` objects\n   * to be compared using the `>`, `<=`, `>=` and `>` operators.\n   */\n  valueOf(): string {\n    // This method returns a string of the form <seconds>.<nanoseconds> where\n    // <seconds> is translated to have a non-negative value and both <seconds>\n    // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n    // Strings with this format then have a lexiographical ordering that matches\n    // the expected ordering. The <seconds> translation is done to avoid having\n    // a leading negative sign (i.e. a leading '-' character) in its string\n    // representation, which would affect its lexiographical ordering.\n    const adjustedSeconds = this.seconds - MIN_SECONDS;\n    // Note: Up to 12 decimal digits are required to represent all valid\n    // 'seconds' values.\n    const formattedSeconds = String(adjustedSeconds).padStart(12, '0');\n    const formattedNanoseconds = String(this.nanoseconds).padStart(9, '0');\n    return formattedSeconds + '.' + formattedNanoseconds;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Timestamp } from '../lite-api/timestamp';\n\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */\nexport class SnapshotVersion {\n  static fromTimestamp(value: Timestamp): SnapshotVersion {\n    return new SnapshotVersion(value);\n  }\n\n  static min(): SnapshotVersion {\n    return new SnapshotVersion(new Timestamp(0, 0));\n  }\n\n  static max(): SnapshotVersion {\n    return new SnapshotVersion(new Timestamp(253402300799, 1e9 - 1));\n  }\n\n  private constructor(private timestamp: Timestamp) {}\n\n  compareTo(other: SnapshotVersion): number {\n    return this.timestamp._compareTo(other.timestamp);\n  }\n\n  isEqual(other: SnapshotVersion): boolean {\n    return this.timestamp.isEqual(other.timestamp);\n  }\n\n  /** Returns a number representation of the version for use in spec tests. */\n  toMicroseconds(): number {\n    // Convert to microseconds.\n    return this.timestamp.seconds * 1e6 + this.timestamp.nanoseconds / 1000;\n  }\n\n  toString(): string {\n    return 'SnapshotVersion(' + this.timestamp.toString() + ')';\n  }\n\n  toTimestamp(): Timestamp {\n    return this.timestamp;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugAssert, fail } from '../util/assert';\nimport { Code, FirestoreError } from '../util/error';\n\nexport const DOCUMENT_KEY_NAME = '__name__';\n\n/**\n * Path represents an ordered sequence of string segments.\n */\nabstract class BasePath<B extends BasePath<B>> {\n  private segments: string[];\n  private offset: number;\n  private len: number;\n\n  constructor(segments: string[], offset?: number, length?: number) {\n    if (offset === undefined) {\n      offset = 0;\n    } else if (offset > segments.length) {\n      fail('offset ' + offset + ' out of range ' + segments.length);\n    }\n\n    if (length === undefined) {\n      length = segments.length - offset;\n    } else if (length > segments.length - offset) {\n      fail('length ' + length + ' out of range ' + (segments.length - offset));\n    }\n    this.segments = segments;\n    this.offset = offset;\n    this.len = length;\n  }\n\n  /**\n   * Abstract constructor method to construct an instance of B with the given\n   * parameters.\n   */\n  protected abstract construct(\n    segments: string[],\n    offset?: number,\n    length?: number\n  ): B;\n\n  /**\n   * Returns a String representation.\n   *\n   * Implementing classes are required to provide deterministic implementations as\n   * the String representation is used to obtain canonical Query IDs.\n   */\n  abstract toString(): string;\n\n  get length(): number {\n    return this.len;\n  }\n\n  isEqual(other: B): boolean {\n    return BasePath.comparator(this, other) === 0;\n  }\n\n  child(nameOrPath: string | B): B {\n    const segments = this.segments.slice(this.offset, this.limit());\n    if (nameOrPath instanceof BasePath) {\n      nameOrPath.forEach(segment => {\n        segments.push(segment);\n      });\n    } else {\n      segments.push(nameOrPath);\n    }\n    return this.construct(segments);\n  }\n\n  /** The index of one past the last segment of the path. */\n  private limit(): number {\n    return this.offset + this.length;\n  }\n\n  popFirst(size?: number): B {\n    size = size === undefined ? 1 : size;\n    debugAssert(\n      this.length >= size,\n      \"Can't call popFirst() with less segments\"\n    );\n    return this.construct(\n      this.segments,\n      this.offset + size,\n      this.length - size\n    );\n  }\n\n  popLast(): B {\n    debugAssert(!this.isEmpty(), \"Can't call popLast() on empty path\");\n    return this.construct(this.segments, this.offset, this.length - 1);\n  }\n\n  firstSegment(): string {\n    debugAssert(!this.isEmpty(), \"Can't call firstSegment() on empty path\");\n    return this.segments[this.offset];\n  }\n\n  lastSegment(): string {\n    debugAssert(!this.isEmpty(), \"Can't call lastSegment() on empty path\");\n    return this.get(this.length - 1);\n  }\n\n  get(index: number): string {\n    debugAssert(index < this.length, 'Index out of range');\n    return this.segments[this.offset + index];\n  }\n\n  isEmpty(): boolean {\n    return this.length === 0;\n  }\n\n  isPrefixOf(other: this): boolean {\n    if (other.length < this.length) {\n      return false;\n    }\n\n    for (let i = 0; i < this.length; i++) {\n      if (this.get(i) !== other.get(i)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  isImmediateParentOf(potentialChild: this): boolean {\n    if (this.length + 1 !== potentialChild.length) {\n      return false;\n    }\n\n    for (let i = 0; i < this.length; i++) {\n      if (this.get(i) !== potentialChild.get(i)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  forEach(fn: (segment: string) => void): void {\n    for (let i = this.offset, end = this.limit(); i < end; i++) {\n      fn(this.segments[i]);\n    }\n  }\n\n  toArray(): string[] {\n    return this.segments.slice(this.offset, this.limit());\n  }\n\n  static comparator<T extends BasePath<T>>(\n    p1: BasePath<T>,\n    p2: BasePath<T>\n  ): number {\n    const len = Math.min(p1.length, p2.length);\n    for (let i = 0; i < len; i++) {\n      const left = p1.get(i);\n      const right = p2.get(i);\n      if (left < right) {\n        return -1;\n      }\n      if (left > right) {\n        return 1;\n      }\n    }\n    if (p1.length < p2.length) {\n      return -1;\n    }\n    if (p1.length > p2.length) {\n      return 1;\n    }\n    return 0;\n  }\n}\n\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */\nexport class ResourcePath extends BasePath<ResourcePath> {\n  protected construct(\n    segments: string[],\n    offset?: number,\n    length?: number\n  ): ResourcePath {\n    return new ResourcePath(segments, offset, length);\n  }\n\n  canonicalString(): string {\n    // NOTE: The client is ignorant of any path segments containing escape\n    // sequences (e.g. __id123__) and just passes them through raw (they exist\n    // for legacy reasons and should not be used frequently).\n\n    return this.toArray().join('/');\n  }\n\n  toString(): string {\n    return this.canonicalString();\n  }\n\n  /**\n   * Returns a string representation of this path\n   * where each path segment has been encoded with\n   * `encodeURIComponent`.\n   */\n  toUriEncodedString(): string {\n    return this.toArray().map(encodeURIComponent).join('/');\n  }\n\n  /**\n   * Creates a resource path from the given slash-delimited string. If multiple\n   * arguments are provided, all components are combined. Leading and trailing\n   * slashes from all components are ignored.\n   */\n  static fromString(...pathComponents: string[]): ResourcePath {\n    // NOTE: The client is ignorant of any path segments containing escape\n    // sequences (e.g. __id123__) and just passes them through raw (they exist\n    // for legacy reasons and should not be used frequently).\n\n    const segments: string[] = [];\n    for (const path of pathComponents) {\n      if (path.indexOf('//') >= 0) {\n        throw new FirestoreError(\n          Code.INVALID_ARGUMENT,\n          `Invalid segment (${path}). Paths must not contain // in them.`\n        );\n      }\n      // Strip leading and traling slashed.\n      segments.push(...path.split('/').filter(segment => segment.length > 0));\n    }\n\n    return new ResourcePath(segments);\n  }\n\n  static emptyPath(): ResourcePath {\n    return new ResourcePath([]);\n  }\n}\n\nconst identifierRegExp = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */\nexport class FieldPath extends BasePath<FieldPath> {\n  protected construct(\n    segments: string[],\n    offset?: number,\n    length?: number\n  ): FieldPath {\n    return new FieldPath(segments, offset, length);\n  }\n\n  /**\n   * Returns true if the string could be used as a segment in a field path\n   * without escaping.\n   */\n  private static isValidIdentifier(segment: string): boolean {\n    return identifierRegExp.test(segment);\n  }\n\n  canonicalString(): string {\n    return this.toArray()\n      .map(str => {\n        str = str.replace(/\\\\/g, '\\\\\\\\').replace(/`/g, '\\\\`');\n        if (!FieldPath.isValidIdentifier(str)) {\n          str = '`' + str + '`';\n        }\n        return str;\n      })\n      .join('.');\n  }\n\n  toString(): string {\n    return this.canonicalString();\n  }\n\n  /**\n   * Returns true if this field references the key of a document.\n   */\n  isKeyField(): boolean {\n    return this.length === 1 && this.get(0) === DOCUMENT_KEY_NAME;\n  }\n\n  /**\n   * The field designating the key of a document.\n   */\n  static keyField(): FieldPath {\n    return new FieldPath([DOCUMENT_KEY_NAME]);\n  }\n\n  /**\n   * Parses a field string from the given server-formatted string.\n   *\n   * - Splitting the empty string is not allowed (for now at least).\n   * - Empty segments within the string (e.g. if there are two consecutive\n   *   separators) are not allowed.\n   *\n   * TODO(b/37244157): we should make this more strict. Right now, it allows\n   * non-identifier path components, even if they aren't escaped.\n   */\n  static fromServerFormat(path: string): FieldPath {\n    const segments: string[] = [];\n    let current = '';\n    let i = 0;\n\n    const addCurrentSegment = (): void => {\n      if (current.length === 0) {\n        throw new FirestoreError(\n          Code.INVALID_ARGUMENT,\n          `Invalid field path (${path}). Paths must not be empty, begin ` +\n            `with '.', end with '.', or contain '..'`\n        );\n      }\n      segments.push(current);\n      current = '';\n    };\n\n    let inBackticks = false;\n\n    while (i < path.length) {\n      const c = path[i];\n      if (c === '\\\\') {\n        if (i + 1 === path.length) {\n          throw new FirestoreError(\n            Code.INVALID_ARGUMENT,\n            'Path has trailing escape character: ' + path\n          );\n        }\n        const next = path[i + 1];\n        if (!(next === '\\\\' || next === '.' || next === '`')) {\n          throw new FirestoreError(\n            Code.INVALID_ARGUMENT,\n            'Path has invalid escape sequence: ' + path\n          );\n        }\n        current += next;\n        i += 2;\n      } else if (c === '`') {\n        inBackticks = !inBackticks;\n        i++;\n      } else if (c === '.' && !inBackticks) {\n        addCurrentSegment();\n        i++;\n      } else {\n        current += c;\n        i++;\n      }\n    }\n    addCurrentSegment();\n\n    if (inBackticks) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'Unterminated ` in path: ' + path\n      );\n    }\n\n    return new FieldPath(segments);\n  }\n\n  static emptyPath(): FieldPath {\n    return new FieldPath([]);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugAssert } from '../util/assert';\n\nimport { ResourcePath } from './path';\n\n/**\n * @internal\n */\nexport class DocumentKey {\n  constructor(readonly path: ResourcePath) {\n    debugAssert(\n      DocumentKey.isDocumentKey(path),\n      'Invalid DocumentKey with an odd number of segments: ' +\n        path.toArray().join('/')\n    );\n  }\n\n  static fromPath(path: string): DocumentKey {\n    return new DocumentKey(ResourcePath.fromString(path));\n  }\n\n  static fromName(name: string): DocumentKey {\n    return new DocumentKey(ResourcePath.fromString(name).popFirst(5));\n  }\n\n  static empty(): DocumentKey {\n    return new DocumentKey(ResourcePath.emptyPath());\n  }\n\n  get collectionGroup(): string {\n    debugAssert(\n      !this.path.isEmpty(),\n      'Cannot get collection group for empty key'\n    );\n    return this.path.popLast().lastSegment();\n  }\n\n  /** Returns true if the document is in the specified collectionId. */\n  hasCollectionId(collectionId: string): boolean {\n    return (\n      this.path.length >= 2 &&\n      this.path.get(this.path.length - 2) === collectionId\n    );\n  }\n\n  /** Returns the collection group (i.e. the name of the parent collection) for this key. */\n  getCollectionGroup(): string {\n    debugAssert(\n      !this.path.isEmpty(),\n      'Cannot get collection group for empty key'\n    );\n    return this.path.get(this.path.length - 2);\n  }\n\n  /** Returns the fully qualified path to the parent collection. */\n  getCollectionPath(): ResourcePath {\n    return this.path.popLast();\n  }\n\n  isEqual(other: DocumentKey | null): boolean {\n    return (\n      other !== null && ResourcePath.comparator(this.path, other.path) === 0\n    );\n  }\n\n  toString(): string {\n    return this.path.toString();\n  }\n\n  static comparator(k1: DocumentKey, k2: DocumentKey): number {\n    return ResourcePath.comparator(k1.path, k2.path);\n  }\n\n  static isDocumentKey(path: ResourcePath): boolean {\n    return path.length % 2 === 0;\n  }\n\n  /**\n   * Creates and returns a new document key with the given segments.\n   *\n   * @param segments - The segments of the path to the document\n   * @returns A new instance of DocumentKey\n   */\n  static fromSegments(segments: string[]): DocumentKey {\n    return new DocumentKey(new ResourcePath(segments.slice()));\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { Timestamp } from '../lite-api/timestamp';\nimport { primitiveComparator } from '../util/misc';\n\nimport { Document } from './document';\nimport { DocumentKey } from './document_key';\nimport { FieldPath } from './path';\n\n/**\n * The initial mutation batch id for each index. Gets updated during index\n * backfill.\n */\nexport const INITIAL_LARGEST_BATCH_ID = -1;\n\n/**\n * The initial sequence number for each index. Gets updated during index\n * backfill.\n */\nexport const INITIAL_SEQUENCE_NUMBER = 0;\n\n/**\n * An index definition for field indexes in Firestore.\n *\n * Every index is associated with a collection. The definition contains a list\n * of fields and their index kind (which can be `ASCENDING`, `DESCENDING` or\n * `CONTAINS` for ArrayContains/ArrayContainsAny queries).\n *\n * Unlike the backend, the SDK does not differentiate between collection or\n * collection group-scoped indices. Every index can be used for both single\n * collection and collection group queries.\n */\nexport class FieldIndex {\n  /** An ID for an index that has not yet been added to persistence.  */\n  static UNKNOWN_ID = -1;\n\n  constructor(\n    /**\n     * The index ID. Returns -1 if the index ID is not available (e.g. the index\n     * has not yet been persisted).\n     */\n    readonly indexId: number,\n    /** The collection ID this index applies to. */\n    readonly collectionGroup: string,\n    /** The field segments for this index. */\n    readonly fields: IndexSegment[],\n    /** Shows how up-to-date the index is for the current user. */\n    readonly indexState: IndexState\n  ) {}\n}\n\n/** Returns the ArrayContains/ArrayContainsAny segment for this index. */\nexport function fieldIndexGetArraySegment(\n  fieldIndex: FieldIndex\n): IndexSegment | undefined {\n  return fieldIndex.fields.find(s => s.kind === IndexKind.CONTAINS);\n}\n\n/** Returns all directional (ascending/descending) segments for this index. */\nexport function fieldIndexGetDirectionalSegments(\n  fieldIndex: FieldIndex\n): IndexSegment[] {\n  return fieldIndex.fields.filter(s => s.kind !== IndexKind.CONTAINS);\n}\n\n/**\n * Returns the order of the document key component for the given index.\n *\n * PORTING NOTE: This is only used in the Web IndexedDb implementation.\n */\nexport function fieldIndexGetKeyOrder(fieldIndex: FieldIndex): IndexKind {\n  const directionalSegments = fieldIndexGetDirectionalSegments(fieldIndex);\n  return directionalSegments.length === 0\n    ? IndexKind.ASCENDING\n    : directionalSegments[directionalSegments.length - 1].kind;\n}\n\n/**\n * Compares indexes by collection group and segments. Ignores update time and\n * index ID.\n */\nexport function fieldIndexSemanticComparator(\n  left: FieldIndex,\n  right: FieldIndex\n): number {\n  let cmp = primitiveComparator(left.collectionGroup, right.collectionGroup);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  for (let i = 0; i < Math.min(left.fields.length, right.fields.length); ++i) {\n    cmp = indexSegmentComparator(left.fields[i], right.fields[i]);\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n  return primitiveComparator(left.fields.length, right.fields.length);\n}\n\n/** Returns a debug representation of the field index */\nexport function fieldIndexToString(fieldIndex: FieldIndex): string {\n  return `id=${fieldIndex.indexId}|cg=${\n    fieldIndex.collectionGroup\n  }|f=${fieldIndex.fields.map(f => `${f.fieldPath}:${f.kind}`).join(',')}`;\n}\n\n/** The type of the index, e.g. for which type of query it can be used. */\nexport const enum IndexKind {\n  // Note: The order of these values cannot be changed as the enum values are\n  // stored in IndexedDb.\n  /**\n   * Ordered index. Can be used for <, <=, ==, >=, >, !=, IN and NOT IN queries.\n   */\n  ASCENDING,\n  /**\n   * Ordered index. Can be used for <, <=, ==, >=, >, !=, IN and NOT IN queries.\n   */\n  DESCENDING,\n  /** Contains index. Can be used for ArrayContains and ArrayContainsAny. */\n  CONTAINS\n}\n\n/** An index component consisting of field path and index type.  */\nexport class IndexSegment {\n  constructor(\n    /** The field path of the component. */\n    readonly fieldPath: FieldPath,\n    /** The fields sorting order. */\n    readonly kind: IndexKind\n  ) {}\n}\n\nfunction indexSegmentComparator(\n  left: IndexSegment,\n  right: IndexSegment\n): number {\n  const cmp = FieldPath.comparator(left.fieldPath, right.fieldPath);\n  if (cmp !== 0) {\n    return cmp;\n  }\n  return primitiveComparator(left.kind, right.kind);\n}\n\n/**\n * Stores the \"high water mark\" that indicates how updated the Index is for the\n * current user.\n */\nexport class IndexState {\n  constructor(\n    /**\n     * Indicates when the index was last updated (relative to other indexes).\n     */\n    readonly sequenceNumber: number,\n    /** The the latest indexed read time, document and batch id. */\n    readonly offset: IndexOffset\n  ) {}\n\n  /** The state of an index that has not yet been backfilled. */\n  static empty(): IndexState {\n    return new IndexState(INITIAL_SEQUENCE_NUMBER, IndexOffset.min());\n  }\n}\n\n/**\n * Creates an offset that matches all documents with a read time higher than\n * `readTime`.\n */\nexport function newIndexOffsetSuccessorFromReadTime(\n  readTime: SnapshotVersion,\n  largestBatchId: number\n): IndexOffset {\n  // We want to create an offset that matches all documents with a read time\n  // greater than the provided read time. To do so, we technically need to\n  // create an offset for `(readTime, MAX_DOCUMENT_KEY)`. While we could use\n  // Unicode codepoints to generate MAX_DOCUMENT_KEY, it is much easier to use\n  // `(readTime + 1, DocumentKey.empty())` since `> DocumentKey.empty()` matches\n  // all valid document IDs.\n  const successorSeconds = readTime.toTimestamp().seconds;\n  const successorNanos = readTime.toTimestamp().nanoseconds + 1;\n  const successor = SnapshotVersion.fromTimestamp(\n    successorNanos === 1e9\n      ? new Timestamp(successorSeconds + 1, 0)\n      : new Timestamp(successorSeconds, successorNanos)\n  );\n  return new IndexOffset(successor, DocumentKey.empty(), largestBatchId);\n}\n\n/** Creates a new offset based on the provided document. */\nexport function newIndexOffsetFromDocument(document: Document): IndexOffset {\n  return new IndexOffset(\n    document.readTime,\n    document.key,\n    INITIAL_LARGEST_BATCH_ID\n  );\n}\n\n/**\n * Stores the latest read time, document and batch ID that were processed for an\n * index.\n */\nexport class IndexOffset {\n  constructor(\n    /**\n     * The latest read time version that has been indexed by Firestore for this\n     * field index.\n     */\n    readonly readTime: SnapshotVersion,\n\n    /**\n     * The key of the last document that was indexed for this query. Use\n     * `DocumentKey.empty()` if no document has been indexed.\n     */\n    readonly documentKey: DocumentKey,\n\n    /*\n     * The largest mutation batch id that's been processed by Firestore.\n     */\n    readonly largestBatchId: number\n  ) {}\n\n  /** Returns an offset that sorts before all regular offsets. */\n  static min(): IndexOffset {\n    return new IndexOffset(\n      SnapshotVersion.min(),\n      DocumentKey.empty(),\n      INITIAL_LARGEST_BATCH_ID\n    );\n  }\n\n  /** Returns an offset that sorts after all regular offsets. */\n  static max(): IndexOffset {\n    return new IndexOffset(\n      SnapshotVersion.max(),\n      DocumentKey.empty(),\n      INITIAL_LARGEST_BATCH_ID\n    );\n  }\n}\n\nexport function indexOffsetComparator(\n  left: IndexOffset,\n  right: IndexOffset\n): number {\n  let cmp = left.readTime.compareTo(right.readTime);\n  if (cmp !== 0) {\n    return cmp;\n  }\n  cmp = DocumentKey.comparator(left.documentKey, right.documentKey);\n  if (cmp !== 0) {\n    return cmp;\n  }\n  return primitiveComparator(left.largestBatchId, right.largestBatchId);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ListenSequenceNumber } from '../core/types';\nexport const PRIMARY_LEASE_LOST_ERROR_MSG =\n  'The current tab is not in the required state to perform this operation. ' +\n  'It might be necessary to refresh the browser tab.';\n\n/** The different modes supported by `Persistence.runTransaction()`. */\nexport type PersistenceTransactionMode =\n  | 'readonly'\n  | 'readwrite'\n  | 'readwrite-primary';\n\n/**\n * A base class representing a persistence transaction, encapsulating both the\n * transaction's sequence numbers as well as a list of onCommitted listeners.\n *\n * When you call Persistence.runTransaction(), it will create a transaction and\n * pass it to your callback. You then pass it to any method that operates\n * on persistence.\n */\nexport abstract class PersistenceTransaction {\n  private readonly onCommittedListeners: Array<() => void> = [];\n\n  abstract readonly currentSequenceNumber: ListenSequenceNumber;\n\n  addOnCommittedListener(listener: () => void): void {\n    this.onCommittedListeners.push(listener);\n  }\n\n  raiseOnCommittedEvent(): void {\n    this.onCommittedListeners.forEach(listener => listener());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Code, FirestoreError } from '../util/error';\nimport { logDebug } from '../util/log';\n\nimport { IndexManager } from './index_manager';\nimport { LocalDocumentsView } from './local_documents_view';\nimport { LruGarbageCollector, LruResults } from './lru_garbage_collector';\nimport { PRIMARY_LEASE_LOST_ERROR_MSG } from './persistence_transaction';\n\nexport interface LocalStore {\n  collectGarbage(garbageCollector: LruGarbageCollector): Promise<LruResults>;\n\n  /** Manages the list of active field and collection indices. */\n  indexManager: IndexManager;\n\n  /**\n   * The \"local\" view of all documents (layering mutationQueue on top of\n   * remoteDocumentCache).\n   */\n  localDocuments: LocalDocumentsView;\n}\n\n/**\n * Verifies the error thrown by a LocalStore operation. If a LocalStore\n * operation fails because the primary lease has been taken by another client,\n * we ignore the error (the persistence layer will immediately call\n * `applyPrimaryLease` to propagate the primary state change). All other errors\n * are re-thrown.\n *\n * @param err - An error returned by a LocalStore operation.\n * @returns A Promise that resolves after we recovered, or the original error.\n */\nexport async function ignoreIfPrimaryLeaseLoss(\n  err: FirestoreError\n): Promise<void> {\n  if (\n    err.code === Code.FAILED_PRECONDITION &&\n    err.message === PRIMARY_LEASE_LOST_ERROR_MSG\n  ) {\n    logDebug('LocalStore', 'Unexpectedly lost primary lease');\n  } else {\n    throw err;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { fail } from '../util/assert';\n\nexport type FulfilledHandler<T, R> =\n  | ((result: T) => R | PersistencePromise<R>)\n  | null;\nexport type RejectedHandler<R> =\n  | ((reason: Error) => R | PersistencePromise<R>)\n  | null;\nexport type Resolver<T> = (value?: T) => void;\nexport type Rejector = (error: Error) => void;\n\n/**\n * PersistencePromise is essentially a re-implementation of Promise except\n * it has a .next() method instead of .then() and .next() and .catch() callbacks\n * are executed synchronously when a PersistencePromise resolves rather than\n * asynchronously (Promise implementations use setImmediate() or similar).\n *\n * This is necessary to interoperate with IndexedDB which will automatically\n * commit transactions if control is returned to the event loop without\n * synchronously initiating another operation on the transaction.\n *\n * NOTE: .then() and .catch() only allow a single consumer, unlike normal\n * Promises.\n */\nexport class PersistencePromise<T> {\n  // NOTE: next/catchCallback will always point to our own wrapper functions,\n  // not the user's raw next() or catch() callbacks.\n  private nextCallback: FulfilledHandler<T, unknown> = null;\n  private catchCallback: RejectedHandler<unknown> = null;\n\n  // When the operation resolves, we'll set result or error and mark isDone.\n  private result: T | undefined = undefined;\n  private error: Error | undefined = undefined;\n  private isDone = false;\n\n  // Set to true when .then() or .catch() are called and prevents additional\n  // chaining.\n  private callbackAttached = false;\n\n  constructor(callback: (resolve: Resolver<T>, reject: Rejector) => void) {\n    callback(\n      value => {\n        this.isDone = true;\n        this.result = value;\n        if (this.nextCallback) {\n          // value should be defined unless T is Void, but we can't express\n          // that in the type system.\n          this.nextCallback(value!);\n        }\n      },\n      error => {\n        this.isDone = true;\n        this.error = error;\n        if (this.catchCallback) {\n          this.catchCallback(error);\n        }\n      }\n    );\n  }\n\n  catch<R>(\n    fn: (error: Error) => R | PersistencePromise<R>\n  ): PersistencePromise<R> {\n    return this.next(undefined, fn);\n  }\n\n  next<R>(\n    nextFn?: FulfilledHandler<T, R>,\n    catchFn?: RejectedHandler<R>\n  ): PersistencePromise<R> {\n    if (this.callbackAttached) {\n      fail('Called next() or catch() twice for PersistencePromise');\n    }\n    this.callbackAttached = true;\n    if (this.isDone) {\n      if (!this.error) {\n        return this.wrapSuccess(nextFn, this.result!);\n      } else {\n        return this.wrapFailure(catchFn, this.error);\n      }\n    } else {\n      return new PersistencePromise<R>((resolve, reject) => {\n        this.nextCallback = (value: T) => {\n          this.wrapSuccess(nextFn, value).next(resolve, reject);\n        };\n        this.catchCallback = (error: Error) => {\n          this.wrapFailure(catchFn, error).next(resolve, reject);\n        };\n      });\n    }\n  }\n\n  toPromise(): Promise<T> {\n    return new Promise((resolve, reject) => {\n      this.next(resolve, reject);\n    });\n  }\n\n  private wrapUserFunction<R>(\n    fn: () => R | PersistencePromise<R>\n  ): PersistencePromise<R> {\n    try {\n      const result = fn();\n      if (result instanceof PersistencePromise) {\n        return result;\n      } else {\n        return PersistencePromise.resolve(result);\n      }\n    } catch (e) {\n      return PersistencePromise.reject<R>(e as Error);\n    }\n  }\n\n  private wrapSuccess<R>(\n    nextFn: FulfilledHandler<T, R> | undefined,\n    value: T\n  ): PersistencePromise<R> {\n    if (nextFn) {\n      return this.wrapUserFunction(() => nextFn(value));\n    } else {\n      // If there's no nextFn, then R must be the same as T\n      return PersistencePromise.resolve<R>(value as unknown as R);\n    }\n  }\n\n  private wrapFailure<R>(\n    catchFn: RejectedHandler<R> | undefined,\n    error: Error\n  ): PersistencePromise<R> {\n    if (catchFn) {\n      return this.wrapUserFunction(() => catchFn(error));\n    } else {\n      return PersistencePromise.reject<R>(error);\n    }\n  }\n\n  static resolve(): PersistencePromise<void>;\n  static resolve<R>(result: R): PersistencePromise<R>;\n  static resolve<R>(result?: R): PersistencePromise<R | void> {\n    return new PersistencePromise<R | void>((resolve, reject) => {\n      resolve(result);\n    });\n  }\n\n  static reject<R>(error: Error): PersistencePromise<R> {\n    return new PersistencePromise<R>((resolve, reject) => {\n      reject(error);\n    });\n  }\n\n  static waitFor(\n    // Accept all Promise types in waitFor().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    all: { forEach: (cb: (el: PersistencePromise<any>) => void) => void }\n  ): PersistencePromise<void> {\n    return new PersistencePromise<void>((resolve, reject) => {\n      let expectedCount = 0;\n      let resolvedCount = 0;\n      let done = false;\n\n      all.forEach(element => {\n        ++expectedCount;\n        element.next(\n          () => {\n            ++resolvedCount;\n            if (done && resolvedCount === expectedCount) {\n              resolve();\n            }\n          },\n          err => reject(err)\n        );\n      });\n\n      done = true;\n      if (resolvedCount === expectedCount) {\n        resolve();\n      }\n    });\n  }\n\n  /**\n   * Given an array of predicate functions that asynchronously evaluate to a\n   * boolean, implements a short-circuiting `or` between the results. Predicates\n   * will be evaluated until one of them returns `true`, then stop. The final\n   * result will be whether any of them returned `true`.\n   */\n  static or(\n    predicates: Array<() => PersistencePromise<boolean>>\n  ): PersistencePromise<boolean> {\n    let p: PersistencePromise<boolean> =\n      PersistencePromise.resolve<boolean>(false);\n    for (const predicate of predicates) {\n      p = p.next(isTrue => {\n        if (isTrue) {\n          return PersistencePromise.resolve<boolean>(isTrue);\n        } else {\n          return predicate();\n        }\n      });\n    }\n    return p;\n  }\n\n  /**\n   * Given an iterable, call the given function on each element in the\n   * collection and wait for all of the resulting concurrent PersistencePromises\n   * to resolve.\n   */\n  static forEach<R, S>(\n    collection: { forEach: (cb: (r: R, s: S) => void) => void },\n    f:\n      | ((r: R, s: S) => PersistencePromise<void>)\n      | ((r: R) => PersistencePromise<void>)\n  ): PersistencePromise<void>;\n  static forEach<R>(\n    collection: { forEach: (cb: (r: R) => void) => void },\n    f: (r: R) => PersistencePromise<void>\n  ): PersistencePromise<void>;\n  static forEach<R, S>(\n    collection: { forEach: (cb: (r: R, s?: S) => void) => void },\n    f: (r: R, s?: S) => PersistencePromise<void>\n  ): PersistencePromise<void> {\n    const promises: Array<PersistencePromise<void>> = [];\n    collection.forEach((r, s) => {\n      promises.push(f.call(this, r, s));\n    });\n    return this.waitFor(promises);\n  }\n\n  /**\n   * Concurrently map all array elements through asynchronous function.\n   */\n  static mapArray<T, U>(\n    array: T[],\n    f: (t: T) => PersistencePromise<U>\n  ): PersistencePromise<U[]> {\n    return new PersistencePromise<U[]>((resolve, reject) => {\n      const expectedCount = array.length;\n      const results: U[] = new Array(expectedCount);\n      let resolvedCount = 0;\n      for (let i = 0; i < expectedCount; i++) {\n        const current = i;\n        f(array[current]).next(\n          result => {\n            results[current] = result;\n            ++resolvedCount;\n            if (resolvedCount === expectedCount) {\n              resolve(results);\n            }\n          },\n          err => reject(err)\n        );\n      }\n    });\n  }\n\n  /**\n   * An alternative to recursive PersistencePromise calls, that avoids\n   * potential memory problems from unbounded chains of promises.\n   *\n   * The `action` will be called repeatedly while `condition` is true.\n   */\n  static doWhile(\n    condition: () => boolean,\n    action: () => PersistencePromise<void>\n  ): PersistencePromise<void> {\n    return new PersistencePromise<void>((resolve, reject) => {\n      const process = (): void => {\n        if (condition() === true) {\n          action().next(() => {\n            process();\n          }, reject);\n        } else {\n          resolve();\n        }\n      };\n      process();\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getUA, isIndexedDBAvailable } from '@firebase/util';\n\nimport { debugAssert } from '../util/assert';\nimport { Code, FirestoreError } from '../util/error';\nimport { logDebug, logError } from '../util/log';\nimport { Deferred } from '../util/promise';\n\nimport { PersistencePromise } from './persistence_promise';\n\n// References to `window` are guarded by SimpleDb.isAvailable()\n/* eslint-disable no-restricted-globals */\n\nconst LOG_TAG = 'SimpleDb';\n\n/**\n * The maximum number of retry attempts for an IndexedDb transaction that fails\n * with a DOMException.\n */\nconst TRANSACTION_RETRY_COUNT = 3;\n\n// The different modes supported by `SimpleDb.runTransaction()`\ntype SimpleDbTransactionMode = 'readonly' | 'readwrite';\n\nexport interface SimpleDbSchemaConverter {\n  createOrUpgrade(\n    db: IDBDatabase,\n    txn: IDBTransaction,\n    fromVersion: number,\n    toVersion: number\n  ): PersistencePromise<void>;\n}\n\n/**\n * Wraps an IDBTransaction and exposes a store() method to get a handle to a\n * specific object store.\n */\nexport class SimpleDbTransaction {\n  private aborted = false;\n\n  /**\n   * A `Promise` that resolves with the result of the IndexedDb transaction.\n   */\n  private readonly completionDeferred = new Deferred<void>();\n\n  static open(\n    db: IDBDatabase,\n    action: string,\n    mode: IDBTransactionMode,\n    objectStoreNames: string[]\n  ): SimpleDbTransaction {\n    try {\n      return new SimpleDbTransaction(\n        action,\n        db.transaction(objectStoreNames, mode)\n      );\n    } catch (e) {\n      throw new IndexedDbTransactionError(action, e as Error);\n    }\n  }\n\n  constructor(\n    private readonly action: string,\n    private readonly transaction: IDBTransaction\n  ) {\n    this.transaction.oncomplete = () => {\n      this.completionDeferred.resolve();\n    };\n    this.transaction.onabort = () => {\n      if (transaction.error) {\n        this.completionDeferred.reject(\n          new IndexedDbTransactionError(action, transaction.error)\n        );\n      } else {\n        this.completionDeferred.resolve();\n      }\n    };\n    this.transaction.onerror = (event: Event) => {\n      const error = checkForAndReportiOSError(\n        (event.target as IDBRequest).error!\n      );\n      this.completionDeferred.reject(\n        new IndexedDbTransactionError(action, error)\n      );\n    };\n  }\n\n  get completionPromise(): Promise<void> {\n    return this.completionDeferred.promise;\n  }\n\n  abort(error?: Error): void {\n    if (error) {\n      this.completionDeferred.reject(error);\n    }\n\n    if (!this.aborted) {\n      logDebug(\n        LOG_TAG,\n        'Aborting transaction:',\n        error ? error.message : 'Client-initiated abort'\n      );\n      this.aborted = true;\n      this.transaction.abort();\n    }\n  }\n\n  maybeCommit(): void {\n    // If the browser supports V3 IndexedDB, we invoke commit() explicitly to\n    // speed up index DB processing if the event loop remains blocks.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const maybeV3IndexedDb = this.transaction as any;\n    if (!this.aborted && typeof maybeV3IndexedDb.commit === 'function') {\n      maybeV3IndexedDb.commit();\n    }\n  }\n\n  /**\n   * Returns a SimpleDbStore<KeyType, ValueType> for the specified store. All\n   * operations performed on the SimpleDbStore happen within the context of this\n   * transaction and it cannot be used anymore once the transaction is\n   * completed.\n   *\n   * Note that we can't actually enforce that the KeyType and ValueType are\n   * correct, but they allow type safety through the rest of the consuming code.\n   */\n  store<KeyType extends IDBValidKey, ValueType extends unknown>(\n    storeName: string\n  ): SimpleDbStore<KeyType, ValueType> {\n    const store = this.transaction.objectStore(storeName);\n    debugAssert(!!store, 'Object store not part of transaction: ' + storeName);\n    return new SimpleDbStore<KeyType, ValueType>(store);\n  }\n}\n\n/**\n * Provides a wrapper around IndexedDb with a simplified interface that uses\n * Promise-like return values to chain operations. Real promises cannot be used\n * since .then() continuations are executed asynchronously (e.g. via\n * .setImmediate), which would cause IndexedDB to end the transaction.\n * See PersistencePromise for more details.\n */\nexport class SimpleDb {\n  private db?: IDBDatabase;\n  private versionchangelistener?: (event: IDBVersionChangeEvent) => void;\n\n  /** Deletes the specified database. */\n  static delete(name: string): Promise<void> {\n    logDebug(LOG_TAG, 'Removing database:', name);\n    return wrapRequest<void>(window.indexedDB.deleteDatabase(name)).toPromise();\n  }\n\n  /** Returns true if IndexedDB is available in the current environment. */\n  static isAvailable(): boolean {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    }\n\n    if (SimpleDb.isMockPersistence()) {\n      return true;\n    }\n\n    // We extensively use indexed array values and compound keys,\n    // which IE and Edge do not support. However, they still have indexedDB\n    // defined on the window, so we need to check for them here and make sure\n    // to return that persistence is not enabled for those browsers.\n    // For tracking support of this feature, see here:\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/status/indexeddbarraysandmultientrysupport/\n\n    // Check the UA string to find out the browser.\n    const ua = getUA();\n\n    // IE 10\n    // ua = 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)';\n\n    // IE 11\n    // ua = 'Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko';\n\n    // Edge\n    // ua = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML,\n    // like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0';\n\n    // iOS Safari: Disable for users running iOS version < 10.\n    const iOSVersion = SimpleDb.getIOSVersion(ua);\n    const isUnsupportedIOS = 0 < iOSVersion && iOSVersion < 10;\n\n    // Android browser: Disable for userse running version < 4.5.\n    const androidVersion = getAndroidVersion(ua);\n    const isUnsupportedAndroid = 0 < androidVersion && androidVersion < 4.5;\n\n    if (\n      ua.indexOf('MSIE ') > 0 ||\n      ua.indexOf('Trident/') > 0 ||\n      ua.indexOf('Edge/') > 0 ||\n      isUnsupportedIOS ||\n      isUnsupportedAndroid\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Returns true if the backing IndexedDB store is the Node IndexedDBShim\n   * (see https://github.com/axemclion/IndexedDBShim).\n   */\n  static isMockPersistence(): boolean {\n    return (\n      typeof process !== 'undefined' &&\n      process.env?.USE_MOCK_PERSISTENCE === 'YES'\n    );\n  }\n\n  /** Helper to get a typed SimpleDbStore from a transaction. */\n  static getStore<KeyType extends IDBValidKey, ValueType extends unknown>(\n    txn: SimpleDbTransaction,\n    store: string\n  ): SimpleDbStore<KeyType, ValueType> {\n    return txn.store<KeyType, ValueType>(store);\n  }\n\n  // visible for testing\n  /** Parse User Agent to determine iOS version. Returns -1 if not found. */\n  static getIOSVersion(ua: string): number {\n    const iOSVersionRegex = ua.match(/i(?:phone|pad|pod) os ([\\d_]+)/i);\n    const version = iOSVersionRegex\n      ? iOSVersionRegex[1].split('_').slice(0, 2).join('.')\n      : '-1';\n    return Number(version);\n  }\n\n  /*\n   * Creates a new SimpleDb wrapper for IndexedDb database `name`.\n   *\n   * Note that `version` must not be a downgrade. IndexedDB does not support\n   * downgrading the schema version. We currently do not support any way to do\n   * versioning outside of IndexedDB's versioning mechanism, as only\n   * version-upgrade transactions are allowed to do things like create\n   * objectstores.\n   */\n  constructor(\n    private readonly name: string,\n    private readonly version: number,\n    private readonly schemaConverter: SimpleDbSchemaConverter\n  ) {\n    debugAssert(\n      SimpleDb.isAvailable(),\n      'IndexedDB not supported in current environment.'\n    );\n\n    const iOSVersion = SimpleDb.getIOSVersion(getUA());\n    // NOTE: According to https://bugs.webkit.org/show_bug.cgi?id=197050, the\n    // bug we're checking for should exist in iOS >= 12.2 and < 13, but for\n    // whatever reason it's much harder to hit after 12.2 so we only proactively\n    // log on 12.2.\n    if (iOSVersion === 12.2) {\n      logError(\n        'Firestore persistence suffers from a bug in iOS 12.2 ' +\n          'Safari that may cause your app to stop working. See ' +\n          'https://stackoverflow.com/q/56496296/110915 for details ' +\n          'and a potential workaround.'\n      );\n    }\n  }\n\n  /**\n   * Opens the specified database, creating or upgrading it if necessary.\n   */\n  async ensureDb(action: string): Promise<IDBDatabase> {\n    if (!this.db) {\n      logDebug(LOG_TAG, 'Opening database:', this.name);\n      this.db = await new Promise<IDBDatabase>((resolve, reject) => {\n        // TODO(mikelehen): Investigate browser compatibility.\n        // https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB\n        // suggests IE9 and older WebKit browsers handle upgrade\n        // differently. They expect setVersion, as described here:\n        // https://developer.mozilla.org/en-US/docs/Web/API/IDBVersionChangeRequest/setVersion\n        const request = indexedDB.open(this.name, this.version);\n\n        request.onsuccess = (event: Event) => {\n          const db = (event.target as IDBOpenDBRequest).result;\n          resolve(db);\n        };\n\n        request.onblocked = () => {\n          reject(\n            new IndexedDbTransactionError(\n              action,\n              'Cannot upgrade IndexedDB schema while another tab is open. ' +\n                'Close all tabs that access Firestore and reload this page to proceed.'\n            )\n          );\n        };\n\n        request.onerror = (event: Event) => {\n          const error: DOMException = (event.target as IDBOpenDBRequest).error!;\n          if (error.name === 'VersionError') {\n            reject(\n              new FirestoreError(\n                Code.FAILED_PRECONDITION,\n                'A newer version of the Firestore SDK was previously used and so the persisted ' +\n                  'data is not compatible with the version of the SDK you are now using. The SDK ' +\n                  'will operate with persistence disabled. If you need persistence, please ' +\n                  're-upgrade to a newer version of the SDK or else clear the persisted IndexedDB ' +\n                  'data for your app to start fresh.'\n              )\n            );\n          } else if (error.name === 'InvalidStateError') {\n            reject(\n              new FirestoreError(\n                Code.FAILED_PRECONDITION,\n                'Unable to open an IndexedDB connection. This could be due to running in a ' +\n                  'private browsing session on a browser whose private browsing sessions do not ' +\n                  'support IndexedDB: ' +\n                  error\n              )\n            );\n          } else {\n            reject(new IndexedDbTransactionError(action, error));\n          }\n        };\n\n        request.onupgradeneeded = (event: IDBVersionChangeEvent) => {\n          logDebug(\n            LOG_TAG,\n            'Database \"' + this.name + '\" requires upgrade from version:',\n            event.oldVersion\n          );\n          const db = (event.target as IDBOpenDBRequest).result;\n          this.schemaConverter\n            .createOrUpgrade(\n              db,\n              request.transaction!,\n              event.oldVersion,\n              this.version\n            )\n            .next(() => {\n              logDebug(\n                LOG_TAG,\n                'Database upgrade to version ' + this.version + ' complete'\n              );\n            });\n        };\n      });\n    }\n\n    if (this.versionchangelistener) {\n      this.db.onversionchange = event => this.versionchangelistener!(event);\n    }\n    return this.db;\n  }\n\n  setVersionChangeListener(\n    versionChangeListener: (event: IDBVersionChangeEvent) => void\n  ): void {\n    this.versionchangelistener = versionChangeListener;\n    if (this.db) {\n      this.db.onversionchange = (event: IDBVersionChangeEvent) => {\n        return versionChangeListener(event);\n      };\n    }\n  }\n\n  async runTransaction<T>(\n    action: string,\n    mode: SimpleDbTransactionMode,\n    objectStores: string[],\n    transactionFn: (transaction: SimpleDbTransaction) => PersistencePromise<T>\n  ): Promise<T> {\n    const readonly = mode === 'readonly';\n    let attemptNumber = 0;\n\n    while (true) {\n      ++attemptNumber;\n\n      try {\n        this.db = await this.ensureDb(action);\n\n        const transaction = SimpleDbTransaction.open(\n          this.db,\n          action,\n          readonly ? 'readonly' : 'readwrite',\n          objectStores\n        );\n        const transactionFnResult = transactionFn(transaction)\n          .next(result => {\n            transaction.maybeCommit();\n            return result;\n          })\n          .catch(error => {\n            // Abort the transaction if there was an error.\n            transaction.abort(error);\n            // We cannot actually recover, and calling `abort()` will cause the transaction's\n            // completion promise to be rejected. This in turn means that we won't use\n            // `transactionFnResult` below. We return a rejection here so that we don't add the\n            // possibility of returning `void` to the type of `transactionFnResult`.\n            return PersistencePromise.reject<T>(error);\n          })\n          .toPromise();\n\n        // As noted above, errors are propagated by aborting the transaction. So\n        // we swallow any error here to avoid the browser logging it as unhandled.\n        transactionFnResult.catch(() => {});\n\n        // Wait for the transaction to complete (i.e. IndexedDb's onsuccess event to\n        // fire), but still return the original transactionFnResult back to the\n        // caller.\n        await transaction.completionPromise;\n        return transactionFnResult;\n      } catch (e) {\n        const error = e as Error;\n        // TODO(schmidt-sebastian): We could probably be smarter about this and\n        // not retry exceptions that are likely unrecoverable (such as quota\n        // exceeded errors).\n\n        // Note: We cannot use an instanceof check for FirestoreException, since the\n        // exception is wrapped in a generic error by our async/await handling.\n        const retryable =\n          error.name !== 'FirebaseError' &&\n          attemptNumber < TRANSACTION_RETRY_COUNT;\n        logDebug(\n          LOG_TAG,\n          'Transaction failed with error:',\n          error.message,\n          'Retrying:',\n          retryable\n        );\n\n        this.close();\n\n        if (!retryable) {\n          return Promise.reject(error);\n        }\n      }\n    }\n  }\n\n  close(): void {\n    if (this.db) {\n      this.db.close();\n    }\n    this.db = undefined;\n  }\n}\n\n/** Parse User Agent to determine Android version. Returns -1 if not found. */\nexport function getAndroidVersion(ua: string): number {\n  const androidVersionRegex = ua.match(/Android ([\\d.]+)/i);\n  const version = androidVersionRegex\n    ? androidVersionRegex[1].split('.').slice(0, 2).join('.')\n    : '-1';\n  return Number(version);\n}\n\n/**\n * A controller for iterating over a key range or index. It allows an iterate\n * callback to delete the currently-referenced object, or jump to a new key\n * within the key range or index.\n */\nexport class IterationController {\n  private shouldStop = false;\n  private nextKey: IDBValidKey | null = null;\n\n  constructor(private dbCursor: IDBCursorWithValue) {}\n\n  get isDone(): boolean {\n    return this.shouldStop;\n  }\n\n  get skipToKey(): IDBValidKey | null {\n    return this.nextKey;\n  }\n\n  set cursor(value: IDBCursorWithValue) {\n    this.dbCursor = value;\n  }\n\n  /**\n   * This function can be called to stop iteration at any point.\n   */\n  done(): void {\n    this.shouldStop = true;\n  }\n\n  /**\n   * This function can be called to skip to that next key, which could be\n   * an index or a primary key.\n   */\n  skip(key: IDBValidKey): void {\n    this.nextKey = key;\n  }\n\n  /**\n   * Delete the current cursor value from the object store.\n   *\n   * NOTE: You CANNOT do this with a keysOnly query.\n   */\n  delete(): PersistencePromise<void> {\n    return wrapRequest<void>(this.dbCursor.delete());\n  }\n}\n\n/**\n * Callback used with iterate() method.\n */\nexport type IterateCallback<KeyType, ValueType> = (\n  key: KeyType,\n  value: ValueType,\n  control: IterationController\n) => void | PersistencePromise<void>;\n\n/** Options available to the iterate() method. */\nexport interface IterateOptions {\n  /** Index to iterate over (else primary keys will be iterated) */\n  index?: string;\n\n  /** IndxedDB Range to iterate over (else entire store will be iterated) */\n  range?: IDBKeyRange;\n\n  /** If true, values aren't read while iterating. */\n  keysOnly?: boolean;\n\n  /** If true, iterate over the store in reverse. */\n  reverse?: boolean;\n}\n\n/** An error that wraps exceptions that thrown during IndexedDB execution. */\nexport class IndexedDbTransactionError extends FirestoreError {\n  name = 'IndexedDbTransactionError';\n\n  constructor(actionName: string, cause: Error | string) {\n    super(\n      Code.UNAVAILABLE,\n      `IndexedDB transaction '${actionName}' failed: ${cause}`\n    );\n  }\n}\n\n/** Verifies whether `e` is an IndexedDbTransactionError. */\nexport function isIndexedDbTransactionError(e: Error): boolean {\n  // Use name equality, as instanceof checks on errors don't work with errors\n  // that wrap other errors.\n  return e.name === 'IndexedDbTransactionError';\n}\n\n/**\n * A wrapper around an IDBObjectStore providing an API that:\n *\n * 1) Has generic KeyType / ValueType parameters to provide strongly-typed\n * methods for acting against the object store.\n * 2) Deals with IndexedDB's onsuccess / onerror event callbacks, making every\n * method return a PersistencePromise instead.\n * 3) Provides a higher-level API to avoid needing to do excessive wrapping of\n * intermediate IndexedDB types (IDBCursorWithValue, etc.)\n */\nexport class SimpleDbStore<\n  KeyType extends IDBValidKey,\n  ValueType extends unknown\n> {\n  constructor(private store: IDBObjectStore) {}\n\n  /**\n   * Writes a value into the Object Store.\n   *\n   * @param key - Optional explicit key to use when writing the object, else the\n   * key will be auto-assigned (e.g. via the defined keyPath for the store).\n   * @param value - The object to write.\n   */\n  put(value: ValueType): PersistencePromise<void>;\n  put(key: KeyType, value: ValueType): PersistencePromise<void>;\n  put(\n    keyOrValue: KeyType | ValueType,\n    value?: ValueType\n  ): PersistencePromise<void> {\n    let request;\n    if (value !== undefined) {\n      logDebug(LOG_TAG, 'PUT', this.store.name, keyOrValue, value);\n      request = this.store.put(value, keyOrValue as KeyType);\n    } else {\n      logDebug(LOG_TAG, 'PUT', this.store.name, '<auto-key>', keyOrValue);\n      request = this.store.put(keyOrValue as ValueType);\n    }\n    return wrapRequest<void>(request);\n  }\n\n  /**\n   * Adds a new value into an Object Store and returns the new key. Similar to\n   * IndexedDb's `add()`, this method will fail on primary key collisions.\n   *\n   * @param value - The object to write.\n   * @returns The key of the value to add.\n   */\n  add(value: ValueType): PersistencePromise<KeyType> {\n    logDebug(LOG_TAG, 'ADD', this.store.name, value, value);\n    const request = this.store.add(value as ValueType);\n    return wrapRequest<KeyType>(request);\n  }\n\n  /**\n   * Gets the object with the specified key from the specified store, or null\n   * if no object exists with the specified key.\n   *\n   * @key The key of the object to get.\n   * @returns The object with the specified key or null if no object exists.\n   */\n  get(key: KeyType): PersistencePromise<ValueType | null> {\n    const request = this.store.get(key);\n    // We're doing an unsafe cast to ValueType.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return wrapRequest<any>(request).next(result => {\n      // Normalize nonexistence to null.\n      if (result === undefined) {\n        result = null;\n      }\n      logDebug(LOG_TAG, 'GET', this.store.name, key, result);\n      return result;\n    });\n  }\n\n  delete(key: KeyType | IDBKeyRange): PersistencePromise<void> {\n    logDebug(LOG_TAG, 'DELETE', this.store.name, key);\n    const request = this.store.delete(key);\n    return wrapRequest<void>(request);\n  }\n\n  /**\n   * If we ever need more of the count variants, we can add overloads. For now,\n   * all we need is to count everything in a store.\n   *\n   * Returns the number of rows in the store.\n   */\n  count(): PersistencePromise<number> {\n    logDebug(LOG_TAG, 'COUNT', this.store.name);\n    const request = this.store.count();\n    return wrapRequest<number>(request);\n  }\n\n  /** Loads all elements from the object store. */\n  loadAll(): PersistencePromise<ValueType[]>;\n  /** Loads all elements for the index range from the object store. */\n  loadAll(range: IDBKeyRange): PersistencePromise<ValueType[]>;\n  /** Loads all elements ordered by the given index. */\n  loadAll(index: string): PersistencePromise<ValueType[]>;\n  /**\n   * Loads all elements from the object store that fall into the provided in the\n   * index range for the given index.\n   */\n  loadAll(index: string, range: IDBKeyRange): PersistencePromise<ValueType[]>;\n  loadAll(\n    indexOrRange?: string | IDBKeyRange,\n    range?: IDBKeyRange\n  ): PersistencePromise<ValueType[]> {\n    const iterateOptions = this.options(indexOrRange, range);\n    // Use `getAll()` if the browser supports IndexedDB v3, as it is roughly\n    // 20% faster.\n    const store = iterateOptions.index\n      ? this.store.index(iterateOptions.index)\n      : this.store;\n    if (typeof store.getAll === 'function') {\n      const request = store.getAll(iterateOptions.range);\n      return new PersistencePromise((resolve, reject) => {\n        request.onerror = (event: Event) => {\n          reject((event.target as IDBRequest).error!);\n        };\n        request.onsuccess = (event: Event) => {\n          resolve((event.target as IDBRequest).result);\n        };\n      });\n    } else {\n      const cursor = this.cursor(iterateOptions);\n      const results: ValueType[] = [];\n      return this.iterateCursor(cursor, (key, value) => {\n        results.push(value);\n      }).next(() => {\n        return results;\n      });\n    }\n  }\n\n  /**\n   * Loads the first `count` elements from the provided index range. Loads all\n   * elements if no limit is provided.\n   */\n  loadFirst(\n    range: IDBKeyRange,\n    count: number | null\n  ): PersistencePromise<ValueType[]> {\n    const request = this.store.getAll(\n      range,\n      count === null ? undefined : count\n    );\n    return new PersistencePromise((resolve, reject) => {\n      request.onerror = (event: Event) => {\n        reject((event.target as IDBRequest).error!);\n      };\n      request.onsuccess = (event: Event) => {\n        resolve((event.target as IDBRequest).result);\n      };\n    });\n  }\n\n  deleteAll(): PersistencePromise<void>;\n  deleteAll(range: IDBKeyRange): PersistencePromise<void>;\n  deleteAll(index: string, range: IDBKeyRange): PersistencePromise<void>;\n  deleteAll(\n    indexOrRange?: string | IDBKeyRange,\n    range?: IDBKeyRange\n  ): PersistencePromise<void> {\n    logDebug(LOG_TAG, 'DELETE ALL', this.store.name);\n    const options = this.options(indexOrRange, range);\n    options.keysOnly = false;\n    const cursor = this.cursor(options);\n    return this.iterateCursor(cursor, (key, value, control) => {\n      // NOTE: Calling delete() on a cursor is documented as more efficient than\n      // calling delete() on an object store with a single key\n      // (https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/delete),\n      // however, this requires us *not* to use a keysOnly cursor\n      // (https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/delete). We\n      // may want to compare the performance of each method.\n      return control.delete();\n    });\n  }\n\n  /**\n   * Iterates over keys and values in an object store.\n   *\n   * @param options - Options specifying how to iterate the objects in the\n   * store.\n   * @param callback - will be called for each iterated object. Iteration can be\n   * canceled at any point by calling the doneFn passed to the callback.\n   * The callback can return a PersistencePromise if it performs async\n   * operations but note that iteration will continue without waiting for them\n   * to complete.\n   * @returns A PersistencePromise that resolves once all PersistencePromises\n   * returned by callbacks resolve.\n   */\n  iterate(\n    callback: IterateCallback<KeyType, ValueType>\n  ): PersistencePromise<void>;\n  iterate(\n    options: IterateOptions,\n    callback: IterateCallback<KeyType, ValueType>\n  ): PersistencePromise<void>;\n  iterate(\n    optionsOrCallback: IterateOptions | IterateCallback<KeyType, ValueType>,\n    callback?: IterateCallback<KeyType, ValueType>\n  ): PersistencePromise<void> {\n    let options;\n    if (!callback) {\n      options = {};\n      callback = optionsOrCallback as IterateCallback<KeyType, ValueType>;\n    } else {\n      options = optionsOrCallback as IterateOptions;\n    }\n    const cursor = this.cursor(options);\n    return this.iterateCursor(cursor, callback);\n  }\n\n  /**\n   * Iterates over a store, but waits for the given callback to complete for\n   * each entry before iterating the next entry. This allows the callback to do\n   * asynchronous work to determine if this iteration should continue.\n   *\n   * The provided callback should return `true` to continue iteration, and\n   * `false` otherwise.\n   */\n  iterateSerial(\n    callback: (k: KeyType, v: ValueType) => PersistencePromise<boolean>\n  ): PersistencePromise<void> {\n    const cursorRequest = this.cursor({});\n    return new PersistencePromise((resolve, reject) => {\n      cursorRequest.onerror = (event: Event) => {\n        const error = checkForAndReportiOSError(\n          (event.target as IDBRequest).error!\n        );\n        reject(error);\n      };\n      cursorRequest.onsuccess = (event: Event) => {\n        const cursor: IDBCursorWithValue = (event.target as IDBRequest).result;\n        if (!cursor) {\n          resolve();\n          return;\n        }\n\n        callback(cursor.primaryKey as KeyType, cursor.value).next(\n          shouldContinue => {\n            if (shouldContinue) {\n              cursor.continue();\n            } else {\n              resolve();\n            }\n          }\n        );\n      };\n    });\n  }\n\n  private iterateCursor(\n    cursorRequest: IDBRequest,\n    fn: IterateCallback<KeyType, ValueType>\n  ): PersistencePromise<void> {\n    const results: Array<PersistencePromise<void>> = [];\n    return new PersistencePromise((resolve, reject) => {\n      cursorRequest.onerror = (event: Event) => {\n        reject((event.target as IDBRequest).error!);\n      };\n      cursorRequest.onsuccess = (event: Event) => {\n        const cursor: IDBCursorWithValue = (event.target as IDBRequest).result;\n        if (!cursor) {\n          resolve();\n          return;\n        }\n        const controller = new IterationController(cursor);\n        const userResult = fn(\n          cursor.primaryKey as KeyType,\n          cursor.value,\n          controller\n        );\n        if (userResult instanceof PersistencePromise) {\n          const userPromise: PersistencePromise<void> = userResult.catch(\n            err => {\n              controller.done();\n              return PersistencePromise.reject(err);\n            }\n          );\n          results.push(userPromise);\n        }\n        if (controller.isDone) {\n          resolve();\n        } else if (controller.skipToKey === null) {\n          cursor.continue();\n        } else {\n          cursor.continue(controller.skipToKey);\n        }\n      };\n    }).next(() => PersistencePromise.waitFor(results));\n  }\n\n  private options(\n    indexOrRange?: string | IDBKeyRange,\n    range?: IDBKeyRange\n  ): IterateOptions {\n    let indexName: string | undefined = undefined;\n    if (indexOrRange !== undefined) {\n      if (typeof indexOrRange === 'string') {\n        indexName = indexOrRange;\n      } else {\n        debugAssert(\n          range === undefined,\n          '3rd argument must not be defined if 2nd is a range.'\n        );\n        range = indexOrRange;\n      }\n    }\n    return { index: indexName, range };\n  }\n\n  private cursor(options: IterateOptions): IDBRequest {\n    let direction: IDBCursorDirection = 'next';\n    if (options.reverse) {\n      direction = 'prev';\n    }\n    if (options.index) {\n      const index = this.store.index(options.index);\n      if (options.keysOnly) {\n        return index.openKeyCursor(options.range, direction);\n      } else {\n        return index.openCursor(options.range, direction);\n      }\n    } else {\n      return this.store.openCursor(options.range, direction);\n    }\n  }\n}\n\n/**\n * Wraps an IDBRequest in a PersistencePromise, using the onsuccess / onerror\n * handlers to resolve / reject the PersistencePromise as appropriate.\n */\nfunction wrapRequest<R>(request: IDBRequest): PersistencePromise<R> {\n  return new PersistencePromise<R>((resolve, reject) => {\n    request.onsuccess = (event: Event) => {\n      const result = (event.target as IDBRequest).result;\n      resolve(result);\n    };\n\n    request.onerror = (event: Event) => {\n      const error = checkForAndReportiOSError(\n        (event.target as IDBRequest).error!\n      );\n      reject(error);\n    };\n  });\n}\n\n// Guard so we only report the error once.\nlet reportedIOSError = false;\nfunction checkForAndReportiOSError(error: DOMException): Error {\n  const iOSVersion = SimpleDb.getIOSVersion(getUA());\n  if (iOSVersion >= 12.2 && iOSVersion < 13) {\n    const IOS_ERROR =\n      'An internal error was encountered in the Indexed Database server';\n    if (error.message.indexOf(IOS_ERROR) >= 0) {\n      // Wrap error in a more descriptive one.\n      const newError = new FirestoreError(\n        'internal',\n        `IOS_INDEXEDDB_BUG1: IndexedDb has thrown '${IOS_ERROR}'. This is likely ` +\n          `due to an unavoidable bug in iOS. See https://stackoverflow.com/q/56496296/110915 ` +\n          `for details and a potential workaround.`\n      );\n      if (!reportedIOSError) {\n        reportedIOSError = true;\n        // Throw a global exception outside of this promise chain, for the user to\n        // potentially catch.\n        setTimeout(() => {\n          throw newError;\n        }, 0);\n      }\n      return newError;\n    }\n  }\n  return error;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ListenSequenceNumber } from './types';\n\n/**\n * `SequenceNumberSyncer` defines the methods required to keep multiple instances of a\n * `ListenSequence` in sync.\n */\nexport interface SequenceNumberSyncer {\n  // Notify the syncer that a new sequence number has been used.\n  writeSequenceNumber(sequenceNumber: ListenSequenceNumber): void;\n  // Setting this property allows the syncer to notify when a sequence number has been used, and\n  // and lets the ListenSequence adjust its internal previous value accordingly.\n  sequenceNumberHandler:\n    | ((sequenceNumber: ListenSequenceNumber) => void)\n    | null;\n}\n\n/**\n * `ListenSequence` is a monotonic sequence. It is initialized with a minimum value to\n * exceed. All subsequent calls to next will return increasing values. If provided with a\n * `SequenceNumberSyncer`, it will additionally bump its next value when told of a new value, as\n * well as write out sequence numbers that it produces via `next()`.\n */\nexport class ListenSequence {\n  static readonly INVALID: ListenSequenceNumber = -1;\n\n  private writeNewSequenceNumber?: (\n    newSequenceNumber: ListenSequenceNumber\n  ) => void;\n\n  constructor(\n    private previousValue: ListenSequenceNumber,\n    sequenceNumberSyncer?: SequenceNumberSyncer\n  ) {\n    if (sequenceNumberSyncer) {\n      sequenceNumberSyncer.sequenceNumberHandler = sequenceNumber =>\n        this.setPreviousValue(sequenceNumber);\n      this.writeNewSequenceNumber = sequenceNumber =>\n        sequenceNumberSyncer.writeSequenceNumber(sequenceNumber);\n    }\n  }\n\n  private setPreviousValue(\n    externalPreviousValue: ListenSequenceNumber\n  ): ListenSequenceNumber {\n    this.previousValue = Math.max(externalPreviousValue, this.previousValue);\n    return this.previousValue;\n  }\n\n  next(): ListenSequenceNumber {\n    const nextValue = ++this.previousValue;\n    if (this.writeNewSequenceNumber) {\n      this.writeNewSequenceNumber(nextValue);\n    }\n    return nextValue;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Sentinel value that sorts before any Mutation Batch ID. */\nexport const BATCHID_UNKNOWN = -1;\n\n// An Object whose keys and values are strings.\nexport interface StringMap {\n  [key: string]: string;\n}\n\n/**\n * Returns whether a variable is either undefined or null.\n */\nexport function isNullOrUndefined(value: unknown): value is null | undefined {\n  return value === null || value === undefined;\n}\n\n/** Returns whether the value represents -0. */\nexport function isNegativeZero(value: number): boolean {\n  // Detect if the value is -0.0. Based on polyfill from\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n  return value === 0 && 1 / value === 1 / -0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\nexport function isSafeInteger(value: unknown): boolean {\n  return (\n    typeof value === 'number' &&\n    Number.isInteger(value) &&\n    !isNegativeZero(value) &&\n    value <= Number.MAX_SAFE_INTEGER &&\n    value >= Number.MIN_SAFE_INTEGER\n  );\n}\n\n/** The subset of the browser's Window interface used by the SDK. */\nexport interface WindowLike {\n  readonly localStorage: Storage;\n  readonly indexedDB: IDBFactory | null;\n  addEventListener(type: string, listener: EventListener): void;\n  removeEventListener(type: string, listener: EventListener): void;\n}\n\n/** The subset of the browser's Document interface used by the SDK. */\nexport interface DocumentLike {\n  readonly visibilityState: DocumentVisibilityState;\n  addEventListener(type: string, listener: EventListener): void;\n  removeEventListener(type: string, listener: EventListener): void;\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BatchId, TargetId } from '../core/types';\nimport { ResourcePath } from '../model/path';\nimport { fail } from '../util/assert';\n\nimport {\n  EncodedResourcePath,\n  encodeResourcePath\n} from './encoded_resource_path';\nimport { DbDocumentMutation } from './indexeddb_schema';\nimport { DbRemoteDocumentStore as DbRemoteDocumentStoreLegacy } from './indexeddb_schema_legacy';\n\n// This file contains static constants and helper functions for IndexedDB.\n// It is split from indexeddb_schema to allow for minification.\n\n/** A timestamp type that can be used in IndexedDb keys. */\nexport type DbTimestampKey = [/* seconds */ number, /* nanos */ number];\n\n// The key for the singleton object in the DbPrimaryClient is a single string.\nexport type DbPrimaryClientKey = typeof DbPrimaryClientKey;\n\n/**\n * Name of the IndexedDb object store.\n *\n * Note that the name 'owner' is chosen to ensure backwards compatibility with\n * older clients that only supported single locked access to the persistence\n * layer.\n */\nexport const DbPrimaryClientStore = 'owner';\n\n/**\n * The key string used for the single object that exists in the\n * DbPrimaryClient store.\n */\n\nexport const DbPrimaryClientKey = 'owner';\n\n/** Object keys in the 'mutationQueues' store are userId strings. */\nexport type DbMutationQueueKey = string;\n\n/** Name of the IndexedDb object store.  */\nexport const DbMutationQueueStore = 'mutationQueues';\n\n/** Keys are automatically assigned via the userId property. */\nexport const DbMutationQueueKeyPath = 'userId';\n\n/** The 'mutations' store  is keyed by batch ID. */\nexport type DbMutationBatchKey = BatchId;\n\n/** Name of the IndexedDb object store.  */\nexport const DbMutationBatchStore = 'mutations';\n\n/** Keys are automatically assigned via the userId, batchId properties. */\nexport const DbMutationBatchKeyPath = 'batchId';\n\n/** The index name for lookup of mutations by user. */\n\nexport const DbMutationBatchUserMutationsIndex = 'userMutationsIndex';\n\n/** The user mutations index is keyed by [userId, batchId] pairs. */\nexport const DbMutationBatchUserMutationsKeyPath = ['userId', 'batchId'];\n\n/**\n * The key for a db document mutation, which is made up of a userID, path, and\n * batchId. Note that the path must be serialized into a form that indexedDB can\n * sort.\n */\nexport type DbDocumentMutationKey = [string, EncodedResourcePath, BatchId];\n\n/**\n * Creates a [userId] key for use in the DbDocumentMutations index to iterate\n * over all of a user's document mutations.\n */\nexport function newDbDocumentMutationPrefixForUser(userId: string): [string] {\n  return [userId];\n}\n\n/**\n * Creates a [userId, encodedPath] key for use in the DbDocumentMutations\n * index to iterate over all at document mutations for a given path or lower.\n */\nexport function newDbDocumentMutationPrefixForPath(\n  userId: string,\n  path: ResourcePath\n): [string, EncodedResourcePath] {\n  return [userId, encodeResourcePath(path)];\n}\n\n/**\n * Creates a full index key of [userId, encodedPath, batchId] for inserting\n * and deleting into the DbDocumentMutations index.\n */\nexport function newDbDocumentMutationKey(\n  userId: string,\n  path: ResourcePath,\n  batchId: BatchId\n): DbDocumentMutationKey {\n  return [userId, encodeResourcePath(path), batchId];\n}\n\n/**\n * Because we store all the useful information for this store in the key,\n * there is no useful information to store as the value. The raw (unencoded)\n * path cannot be stored because IndexedDb doesn't store prototype\n * information.\n */\nexport const DbDocumentMutationPlaceholder: DbDocumentMutation = {};\n\nexport const DbDocumentMutationStore = 'documentMutations';\n\nexport const DbRemoteDocumentStore = 'remoteDocumentsV14';\n\n/**\n * A key in the 'remoteDocumentsV14' object store is an array containing the\n * collection path, the collection group, the read time and the document id.\n */\nexport type DbRemoteDocumentKey = [\n  /** path to collection */ string[],\n  /** collection group */ string,\n  /** read time */ DbTimestampKey,\n  /** document ID */ string\n];\n\n/**\n * The primary key of the remote documents store, which allows for efficient\n * access by collection path and read time.\n */\nexport const DbRemoteDocumentKeyPath = [\n  'prefixPath',\n  'collectionGroup',\n  'readTime',\n  'documentId'\n];\n\n/** An index that provides access to documents by key. */\nexport const DbRemoteDocumentDocumentKeyIndex = 'documentKeyIndex';\n\nexport const DbRemoteDocumentDocumentKeyIndexPath = [\n  'prefixPath',\n  'collectionGroup',\n  'documentId'\n];\n\n/**\n * An index that provides access to documents by collection group and read\n * time.\n *\n * This index is used by the index backfiller.\n */\nexport const DbRemoteDocumentCollectionGroupIndex = 'collectionGroupIndex';\n\nexport const DbRemoteDocumentCollectionGroupIndexPath = [\n  'collectionGroup',\n  'readTime',\n  'prefixPath',\n  'documentId'\n];\n\nexport const DbRemoteDocumentGlobalStore = 'remoteDocumentGlobal';\n\nexport const DbRemoteDocumentGlobalKey = 'remoteDocumentGlobalKey';\n\nexport type DbRemoteDocumentGlobalKey = typeof DbRemoteDocumentGlobalKey;\n\n/**\n * A key in the 'targets' object store is a targetId of the query.\n */\nexport type DbTargetKey = TargetId;\n\nexport const DbTargetStore = 'targets';\n\n/** Keys are automatically assigned via the targetId property. */\nexport const DbTargetKeyPath = 'targetId';\n\n/** The name of the queryTargets index. */\nexport const DbTargetQueryTargetsIndexName = 'queryTargetsIndex';\n\n/**\n * The index of all canonicalIds to the targets that they match. This is not\n * a unique mapping because canonicalId does not promise a unique name for all\n * possible queries, so we append the targetId to make the mapping unique.\n */\nexport const DbTargetQueryTargetsKeyPath = ['canonicalId', 'targetId'];\n\n/**\n * The key for a DbTargetDocument, containing a targetId and an encoded resource\n * path.\n */\nexport type DbTargetDocumentKey = [TargetId, EncodedResourcePath];\n\n/** Name of the IndexedDb object store.  */\nexport const DbTargetDocumentStore = 'targetDocuments';\n\n/** Keys are automatically assigned via the targetId, path properties. */\nexport const DbTargetDocumentKeyPath = ['targetId', 'path'];\n\n/** The index name for the reverse index. */\nexport const DbTargetDocumentDocumentTargetsIndex = 'documentTargetsIndex';\n\n/** We also need to create the reverse index for these properties. */\nexport const DbTargetDocumentDocumentTargetsKeyPath = ['path', 'targetId'];\n\n/**\n * The type to represent the single allowed key for the DbTargetGlobal store.\n */\nexport type DbTargetGlobalKey = typeof DbTargetGlobalKey;\n/**\n * The key string used for the single object that exists in the\n * DbTargetGlobal store.\n */\nexport const DbTargetGlobalKey = 'targetGlobalKey';\n\nexport const DbTargetGlobalStore = 'targetGlobal';\n\n/**\n * The key for a DbCollectionParent entry, containing the collection ID\n * and the parent path that contains it. Note that the parent path will be an\n * empty path in the case of root-level collections.\n */\nexport type DbCollectionParentKey = [string, EncodedResourcePath];\n\n/** Name of the IndexedDb object store. */\nexport const DbCollectionParentStore = 'collectionParents';\n\n/** Keys are automatically assigned via the collectionId, parent properties. */\nexport const DbCollectionParentKeyPath = ['collectionId', 'parent'];\n\n/** Name of the IndexedDb object store. */\nexport const DbClientMetadataStore = 'clientMetadata';\n\n/** Keys are automatically assigned via the clientId properties. */\nexport const DbClientMetadataKeyPath = 'clientId';\n\n/** Object keys in the 'clientMetadata' store are clientId strings. */\nexport type DbClientMetadataKey = string;\n\nexport type DbBundlesKey = string;\n\n/** Name of the IndexedDb object store. */\nexport const DbBundleStore = 'bundles';\n\nexport const DbBundleKeyPath = 'bundleId';\n\nexport type DbNamedQueriesKey = string;\n\n/** Name of the IndexedDb object store. */\nexport const DbNamedQueryStore = 'namedQueries';\n\nexport const DbNamedQueryKeyPath = 'name';\n\n/** The key for each index consisting of just the index id. */\nexport type DbIndexConfigurationKey = number;\n\n/** Name of the IndexedDb object store. */\nexport const DbIndexConfigurationStore = 'indexConfiguration';\n\nexport const DbIndexConfigurationKeyPath = 'indexId';\n\n/**\n * An index that provides access to the index configurations by collection\n * group.\n *\n * PORTING NOTE: iOS and Android maintain this index in-memory, but this is\n * not possible here as the Web client supports concurrent access to\n * persistence via multi-tab.\n */\nexport const DbIndexConfigurationCollectionGroupIndex = 'collectionGroupIndex';\n\nexport const DbIndexConfigurationCollectionGroupIndexPath = 'collectionGroup';\n\n/** The key for each index state consisting of the index id and its user id. */\nexport type DbIndexStateKey = [number, string];\n\n/** Name of the IndexedDb object store. */\nexport const DbIndexStateStore = 'indexState';\n\nexport const DbIndexStateKeyPath = ['indexId', 'uid'];\n\n/**\n * An index that provides access to documents in a collection sorted by last\n * update time. Used by the backfiller.\n *\n * PORTING NOTE: iOS and Android maintain this index in-memory, but this is\n * not possible here as the Web client supports concurrent access to\n * persistence via multi-tab.\n */\nexport const DbIndexStateSequenceNumberIndex = 'sequenceNumberIndex';\n\nexport const DbIndexStateSequenceNumberIndexPath = ['uid', 'sequenceNumber'];\n\n/**\n * The key for each index entry consists of the index id and its user id,\n * the encoded array and directional value for the indexed fields as well as\n * an ordered and an encoded document path for the indexed document.\n */\nexport type DbIndexEntryKey = [\n  number,\n  string,\n  Uint8Array,\n  Uint8Array,\n  Uint8Array,\n  string[]\n];\n\n/** Name of the IndexedDb object store. */\nexport const DbIndexEntryStore = 'indexEntries';\n\nexport const DbIndexEntryKeyPath = [\n  'indexId',\n  'uid',\n  'arrayValue',\n  'directionalValue',\n  'orderedDocumentKey',\n  'documentKey'\n];\n\nexport const DbIndexEntryDocumentKeyIndex = 'documentKeyIndex';\n\nexport const DbIndexEntryDocumentKeyIndexPath = [\n  'indexId',\n  'uid',\n  'orderedDocumentKey'\n];\n\nexport type DbDocumentOverlayKey = [\n  /* userId */ string,\n  /* collectionPath */ string,\n  /* documentId */ string\n];\n\n/** Name of the IndexedDb object store. */\nexport const DbDocumentOverlayStore = 'documentOverlays';\n\nexport const DbDocumentOverlayKeyPath = [\n  'userId',\n  'collectionPath',\n  'documentId'\n];\n\nexport const DbDocumentOverlayCollectionPathOverlayIndex =\n  'collectionPathOverlayIndex';\n\nexport const DbDocumentOverlayCollectionPathOverlayIndexPath = [\n  'userId',\n  'collectionPath',\n  'largestBatchId'\n];\n\nexport const DbDocumentOverlayCollectionGroupOverlayIndex =\n  'collectionGroupOverlayIndex';\n\nexport const DbDocumentOverlayCollectionGroupOverlayIndexPath = [\n  'userId',\n  'collectionGroup',\n  'largestBatchId'\n];\n\n// Visible for testing\nexport const V1_STORES = [\n  DbMutationQueueStore,\n  DbMutationBatchStore,\n  DbDocumentMutationStore,\n  DbRemoteDocumentStoreLegacy,\n  DbTargetStore,\n  DbPrimaryClientStore,\n  DbTargetGlobalStore,\n  DbTargetDocumentStore\n];\n\n// Visible for testing\nexport const V3_STORES = V1_STORES;\n// Note: DbRemoteDocumentChanges is no longer used and dropped with v9.\nexport const V4_STORES = [...V3_STORES, DbClientMetadataStore];\nexport const V6_STORES = [...V4_STORES, DbRemoteDocumentGlobalStore];\nexport const V8_STORES = [...V6_STORES, DbCollectionParentStore];\nexport const V11_STORES = [...V8_STORES, DbBundleStore, DbNamedQueryStore];\nexport const V12_STORES = [...V11_STORES, DbDocumentOverlayStore];\nexport const V13_STORES = [\n  DbMutationQueueStore,\n  DbMutationBatchStore,\n  DbDocumentMutationStore,\n  DbRemoteDocumentStore,\n  DbTargetStore,\n  DbPrimaryClientStore,\n  DbTargetGlobalStore,\n  DbTargetDocumentStore,\n  DbClientMetadataStore,\n  DbRemoteDocumentGlobalStore,\n  DbCollectionParentStore,\n  DbBundleStore,\n  DbNamedQueryStore,\n  DbDocumentOverlayStore\n];\nexport const V14_STORES = V13_STORES;\nexport const V15_STORES = [\n  ...V14_STORES,\n  DbIndexConfigurationStore,\n  DbIndexStateStore,\n  DbIndexEntryStore\n];\nexport const V16_STORES = V15_STORES;\n\n/**\n * The list of all default IndexedDB stores used throughout the SDK. This is\n * used when creating transactions so that access across all stores is done\n * atomically.\n */\nexport const ALL_STORES = V12_STORES;\n\n/** Returns the object stores for the provided schema. */\nexport function getObjectStores(schemaVersion: number): string[] {\n  if (schemaVersion === 16) {\n    return V16_STORES;\n  } else if (schemaVersion === 15) {\n    return V15_STORES;\n  } else if (schemaVersion === 14) {\n    return V14_STORES;\n  } else if (schemaVersion === 13) {\n    return V13_STORES;\n  } else if (schemaVersion === 12) {\n    return V12_STORES;\n  } else if (schemaVersion === 11) {\n    return V11_STORES;\n  } else {\n    fail('Only schema version 11 and 12 and 13 are supported');\n  }\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Document as ProtoDocument } from '../protos/firestore_proto_api';\n\nimport { DbNoDocument, DbUnknownDocument } from './indexeddb_schema';\nimport { DbTimestampKey } from './indexeddb_sentinels';\n\n// This file contains older schema definitions for object stores that were\n// migrated to newer schema versions. These object stores should only be used\n// during schema migrations.\n\nexport interface DbRemoteDocument {\n  unknownDocument?: DbUnknownDocument;\n  noDocument?: DbNoDocument;\n  document?: ProtoDocument;\n  hasCommittedMutations?: boolean;\n  readTime?: DbTimestampKey;\n  parentPath?: string[];\n}\n\nexport type DbRemoteDocumentKey = string[];\nexport const DbRemoteDocumentStore = 'remoteDocuments';\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugAssert } from './assert';\n\nexport interface Dict<V> {\n  [stringKey: string]: V;\n}\n\nexport function objectSize(obj: object): number {\n  let count = 0;\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      count++;\n    }\n  }\n  return count;\n}\n\nexport function forEach<V>(\n  obj: Dict<V> | undefined,\n  fn: (key: string, val: V) => void\n): void {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n\nexport function mapToArray<V, R>(\n  obj: Dict<V>,\n  fn: (element: V, key: string, obj: Dict<V>) => R\n): R[] {\n  const result: R[] = [];\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      result.push(fn(obj[key], key, obj));\n    }\n  }\n  return result;\n}\n\nexport function isEmpty<V>(obj: Dict<V>): boolean {\n  debugAssert(\n    obj != null && typeof obj === 'object',\n    'isEmpty() expects object parameter.'\n  );\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugAssert, fail } from './assert';\n\n/*\n * Implementation of an immutable SortedMap using a Left-leaning\n * Red-Black Tree, adapted from the implementation in Mugs\n * (http://mads379.github.com/mugs/) by Mads Hartmann Jensen\n * (mads379@gmail.com).\n *\n * Original paper on Left-leaning Red-Black Trees:\n *   http://www.cs.princeton.edu/~rs/talks/LLRB/LLRB.pdf\n *\n * Invariant 1: No red node has a red child\n * Invariant 2: Every leaf path has the same number of black nodes\n * Invariant 3: Only the left child can be red (left leaning)\n */\n\nexport type Comparator<K> = (key1: K, key2: K) => number;\n\nexport interface Entry<K, V> {\n  key: K;\n  value: V;\n}\n\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\nexport class SortedMap<K, V> {\n  // visible for testing\n  root: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n\n  constructor(\n    public comparator: Comparator<K>,\n    root?: LLRBNode<K, V> | LLRBEmptyNode<K, V>\n  ) {\n    this.root = root ? root : LLRBNode.EMPTY;\n  }\n\n  // Returns a copy of the map, with the specified key/value added or replaced.\n  insert(key: K, value: V): SortedMap<K, V> {\n    return new SortedMap<K, V>(\n      this.comparator,\n      this.root\n        .insert(key, value, this.comparator)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  // Returns a copy of the map, with the specified key removed.\n  remove(key: K): SortedMap<K, V> {\n    return new SortedMap<K, V>(\n      this.comparator,\n      this.root\n        .remove(key, this.comparator)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  // Returns the value of the node with the given key, or null.\n  get(key: K): V | null {\n    let node = this.root;\n    while (!node.isEmpty()) {\n      const cmp = this.comparator(key, node.key);\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n    return null;\n  }\n\n  // Returns the index of the element in this sorted map, or -1 if it doesn't\n  // exist.\n  indexOf(key: K): number {\n    // Number of nodes that were pruned when descending right\n    let prunedNodes = 0;\n    let node = this.root;\n    while (!node.isEmpty()) {\n      const cmp = this.comparator(key, node.key);\n      if (cmp === 0) {\n        return prunedNodes + node.left.size;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else {\n        // Count all nodes left of the node plus the node itself\n        prunedNodes += node.left.size + 1;\n        node = node.right;\n      }\n    }\n    // Node not found\n    return -1;\n  }\n\n  isEmpty(): boolean {\n    return this.root.isEmpty();\n  }\n\n  // Returns the total number of nodes in the map.\n  get size(): number {\n    return this.root.size;\n  }\n\n  // Returns the minimum key in the map.\n  minKey(): K | null {\n    return this.root.minKey();\n  }\n\n  // Returns the maximum key in the map.\n  maxKey(): K | null {\n    return this.root.maxKey();\n  }\n\n  // Traverses the map in key order and calls the specified action function\n  // for each key/value pair. If action returns true, traversal is aborted.\n  // Returns the first truthy value returned by action, or the last falsey\n  // value returned by action.\n  inorderTraversal<T>(action: (k: K, v: V) => T): T {\n    return (this.root as LLRBNode<K, V>).inorderTraversal(action);\n  }\n\n  forEach(fn: (k: K, v: V) => void): void {\n    this.inorderTraversal((k, v) => {\n      fn(k, v);\n      return false;\n    });\n  }\n\n  toString(): string {\n    const descriptions: string[] = [];\n    this.inorderTraversal((k, v) => {\n      descriptions.push(`${k}:${v}`);\n      return false;\n    });\n    return `{${descriptions.join(', ')}}`;\n  }\n\n  // Traverses the map in reverse key order and calls the specified action\n  // function for each key/value pair. If action returns true, traversal is\n  // aborted.\n  // Returns the first truthy value returned by action, or the last falsey\n  // value returned by action.\n  reverseTraversal<T>(action: (k: K, v: V) => T): T {\n    return (this.root as LLRBNode<K, V>).reverseTraversal(action);\n  }\n\n  // Returns an iterator over the SortedMap.\n  getIterator(): SortedMapIterator<K, V> {\n    return new SortedMapIterator<K, V>(this.root, null, this.comparator, false);\n  }\n\n  getIteratorFrom(key: K): SortedMapIterator<K, V> {\n    return new SortedMapIterator<K, V>(this.root, key, this.comparator, false);\n  }\n\n  getReverseIterator(): SortedMapIterator<K, V> {\n    return new SortedMapIterator<K, V>(this.root, null, this.comparator, true);\n  }\n\n  getReverseIteratorFrom(key: K): SortedMapIterator<K, V> {\n    return new SortedMapIterator<K, V>(this.root, key, this.comparator, true);\n  }\n} // end SortedMap\n\n// An iterator over an LLRBNode.\nexport class SortedMapIterator<K, V> {\n  private isReverse: boolean;\n  private nodeStack: Array<LLRBNode<K, V> | LLRBEmptyNode<K, V>>;\n\n  constructor(\n    node: LLRBNode<K, V> | LLRBEmptyNode<K, V>,\n    startKey: K | null,\n    comparator: Comparator<K>,\n    isReverse: boolean\n  ) {\n    this.isReverse = isReverse;\n    this.nodeStack = [];\n\n    let cmp = 1;\n    while (!node.isEmpty()) {\n      cmp = startKey ? comparator(node.key, startKey) : 1;\n      // flip the comparison if we're going in reverse\n      if (startKey && isReverse) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack,\n        // but stop iterating;\n        this.nodeStack.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move\n        // to the next one\n        this.nodeStack.push(node);\n        if (this.isReverse) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  getNext(): Entry<K, V> {\n    debugAssert(\n      this.nodeStack.length > 0,\n      'getNext() called on iterator when hasNext() is false.'\n    );\n\n    let node = this.nodeStack.pop()!;\n    const result = { key: node.key, value: node.value };\n\n    if (this.isReverse) {\n      node = node.left;\n      while (!node.isEmpty()) {\n        this.nodeStack.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n      while (!node.isEmpty()) {\n        this.nodeStack.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  }\n\n  hasNext(): boolean {\n    return this.nodeStack.length > 0;\n  }\n\n  peek(): Entry<K, V> | null {\n    if (this.nodeStack.length === 0) {\n      return null;\n    }\n\n    const node = this.nodeStack[this.nodeStack.length - 1];\n    return { key: node.key, value: node.value };\n  }\n} // end SortedMapIterator\n\n// Represents a node in a Left-leaning Red-Black tree.\nexport class LLRBNode<K, V> {\n  readonly color: boolean;\n  readonly left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  readonly right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  readonly size: number;\n\n  // Empty node is shared between all LLRB trees.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static EMPTY: LLRBEmptyNode<any, any> = null as any;\n\n  static RED = true;\n  static BLACK = false;\n\n  constructor(\n    public key: K,\n    public value: V,\n    color?: boolean,\n    left?: LLRBNode<K, V> | LLRBEmptyNode<K, V>,\n    right?: LLRBNode<K, V> | LLRBEmptyNode<K, V>\n  ) {\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left = left != null ? left : LLRBNode.EMPTY;\n    this.right = right != null ? right : LLRBNode.EMPTY;\n    this.size = this.left.size + 1 + this.right.size;\n  }\n\n  // Returns a copy of the current node, optionally replacing pieces of it.\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBNode<K, V> {\n    return new LLRBNode<K, V>(\n      key != null ? key : this.key,\n      value != null ? value : this.value,\n      color != null ? color : this.color,\n      left != null ? left : this.left,\n      right != null ? right : this.right\n    );\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n\n  // Traverses the tree in key order and calls the specified action function\n  // for each node. If action returns true, traversal is aborted.\n  // Returns the first truthy value returned by action, or the last falsey\n  // value returned by action.\n  inorderTraversal<T>(action: (k: K, v: V) => T): T {\n    return (\n      (this.left as LLRBNode<K, V>).inorderTraversal(action) ||\n      action(this.key, this.value) ||\n      (this.right as LLRBNode<K, V>).inorderTraversal(action)\n    );\n  }\n\n  // Traverses the tree in reverse key order and calls the specified action\n  // function for each node. If action returns true, traversal is aborted.\n  // Returns the first truthy value returned by action, or the last falsey\n  // value returned by action.\n  reverseTraversal<T>(action: (k: K, v: V) => T): T {\n    return (\n      (this.right as LLRBNode<K, V>).reverseTraversal(action) ||\n      action(this.key, this.value) ||\n      (this.left as LLRBNode<K, V>).reverseTraversal(action)\n    );\n  }\n\n  // Returns the minimum node in the tree.\n  private min(): LLRBNode<K, V> {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return (this.left as LLRBNode<K, V>).min();\n    }\n  }\n\n  // Returns the maximum key in the tree.\n  minKey(): K | null {\n    return this.min().key;\n  }\n\n  // Returns the maximum key in the tree.\n  maxKey(): K | null {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  }\n\n  // Returns new tree, with the key/value added.\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    const cmp = comparator(key, n.key);\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        n.right.insert(key, value, comparator)\n      );\n    }\n    return n.fixUp();\n  }\n\n  private removeMin(): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    if (this.left.isEmpty()) {\n      return LLRBNode.EMPTY;\n    }\n    let n: LLRBNode<K, V> = this;\n    if (!n.left.isRed() && !n.left.left.isRed()) {\n      n = n.moveRedLeft();\n    }\n    n = n.copy(null, null, null, (n.left as LLRBNode<K, V>).removeMin(), null);\n    return n.fixUp();\n  }\n\n  // Returns new tree, with the specified item removed.\n  remove(\n    key: K,\n    comparator: Comparator<K>\n  ): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    let smallest: LLRBNode<K, V>;\n    let n: LLRBNode<K, V> = this;\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed() && !n.left.left.isRed()) {\n        n = n.moveRedLeft();\n      }\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed()) {\n        n = n.rotateRight();\n      }\n      if (!n.right.isEmpty() && !n.right.isRed() && !n.right.left.isRed()) {\n        n = n.moveRedRight();\n      }\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return LLRBNode.EMPTY;\n        } else {\n          smallest = (n.right as LLRBNode<K, V>).min();\n          n = n.copy(\n            smallest.key,\n            smallest.value,\n            null,\n            null,\n            (n.right as LLRBNode<K, V>).removeMin()\n          );\n        }\n      }\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n    return n.fixUp();\n  }\n\n  isRed(): boolean {\n    return this.color;\n  }\n\n  // Returns new tree after performing any needed rotations.\n  private fixUp(): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    if (n.right.isRed() && !n.left.isRed()) {\n      n = n.rotateLeft();\n    }\n    if (n.left.isRed() && n.left.left.isRed()) {\n      n = n.rotateRight();\n    }\n    if (n.left.isRed() && n.right.isRed()) {\n      n = n.colorFlip();\n    }\n    return n;\n  }\n\n  private moveRedLeft(): LLRBNode<K, V> {\n    let n = this.colorFlip();\n    if (n.right.left.isRed()) {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        (n.right as LLRBNode<K, V>).rotateRight()\n      );\n      n = n.rotateLeft();\n      n = n.colorFlip();\n    }\n    return n;\n  }\n\n  private moveRedRight(): LLRBNode<K, V> {\n    let n = this.colorFlip();\n    if (n.left.left.isRed()) {\n      n = n.rotateRight();\n      n = n.colorFlip();\n    }\n    return n;\n  }\n\n  private rotateLeft(): LLRBNode<K, V> {\n    const nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return (this.right as LLRBNode<K, V>).copy(\n      null,\n      null,\n      this.color,\n      nl,\n      null\n    );\n  }\n\n  private rotateRight(): LLRBNode<K, V> {\n    const nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return (this.left as LLRBNode<K, V>).copy(null, null, this.color, null, nr);\n  }\n\n  private colorFlip(): LLRBNode<K, V> {\n    const left = this.left.copy(null, null, !this.left.color, null, null);\n    const right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  }\n\n  // For testing.\n  checkMaxDepth(): boolean {\n    const blackDepth = this.check();\n    if (Math.pow(2.0, blackDepth) <= this.size + 1) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // In a balanced RB tree, the black-depth (number of black nodes) from root to\n  // leaves is equal on both sides.  This function verifies that or asserts.\n  protected check(): number {\n    if (this.isRed() && this.left.isRed()) {\n      throw fail('Red node has red child(' + this.key + ',' + this.value + ')');\n    }\n    if (this.right.isRed()) {\n      throw fail('Right child of (' + this.key + ',' + this.value + ') is red');\n    }\n    const blackDepth = (this.left as LLRBNode<K, V>).check();\n    if (blackDepth !== (this.right as LLRBNode<K, V>).check()) {\n      throw fail('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed() ? 0 : 1);\n    }\n  }\n} // end LLRBNode\n\n// Represents an empty node (a leaf node in the Red-Black Tree).\nexport class LLRBEmptyNode<K, V> {\n  get key(): never {\n    throw fail('LLRBEmptyNode has no key.');\n  }\n  get value(): never {\n    throw fail('LLRBEmptyNode has no value.');\n  }\n  get color(): never {\n    throw fail('LLRBEmptyNode has no color.');\n  }\n  get left(): never {\n    throw fail('LLRBEmptyNode has no left child.');\n  }\n  get right(): never {\n    throw fail('LLRBEmptyNode has no right child.');\n  }\n  size = 0;\n\n  // Returns a copy of the current node.\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  // Returns a copy of the tree, with the specified key/value added.\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    return new LLRBNode<K, V>(key, value);\n  }\n\n  // Returns a copy of the tree, with the specified key removed.\n  remove(key: K, comparator: Comparator<K>): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  isEmpty(): boolean {\n    return true;\n  }\n\n  inorderTraversal(action: (k: K, v: V) => boolean): boolean {\n    return false;\n  }\n\n  reverseTraversal(action: (k: K, v: V) => boolean): boolean {\n    return false;\n  }\n\n  minKey(): K | null {\n    return null;\n  }\n\n  maxKey(): K | null {\n    return null;\n  }\n\n  isRed(): boolean {\n    return false;\n  }\n\n  // For testing.\n  checkMaxDepth(): boolean {\n    return true;\n  }\n\n  protected check(): 0 {\n    return 0;\n  }\n} // end LLRBEmptyNode\n\nLLRBNode.EMPTY = new LLRBEmptyNode<unknown, unknown>();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SortedMap, SortedMapIterator } from './sorted_map';\n\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\nexport class SortedSet<T> {\n  private data: SortedMap<T, boolean>;\n\n  constructor(private comparator: (left: T, right: T) => number) {\n    this.data = new SortedMap<T, boolean>(this.comparator);\n  }\n\n  has(elem: T): boolean {\n    return this.data.get(elem) !== null;\n  }\n\n  first(): T | null {\n    return this.data.minKey();\n  }\n\n  last(): T | null {\n    return this.data.maxKey();\n  }\n\n  get size(): number {\n    return this.data.size;\n  }\n\n  indexOf(elem: T): number {\n    return this.data.indexOf(elem);\n  }\n\n  /** Iterates elements in order defined by \"comparator\" */\n  forEach(cb: (elem: T) => void): void {\n    this.data.inorderTraversal((k: T, v: boolean) => {\n      cb(k);\n      return false;\n    });\n  }\n\n  /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */\n  forEachInRange(range: [T, T], cb: (elem: T) => void): void {\n    const iter = this.data.getIteratorFrom(range[0]);\n    while (iter.hasNext()) {\n      const elem = iter.getNext();\n      if (this.comparator(elem.key, range[1]) >= 0) {\n        return;\n      }\n      cb(elem.key);\n    }\n  }\n\n  /**\n   * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n   */\n  forEachWhile(cb: (elem: T) => boolean, start?: T): void {\n    let iter: SortedMapIterator<T, boolean>;\n    if (start !== undefined) {\n      iter = this.data.getIteratorFrom(start);\n    } else {\n      iter = this.data.getIterator();\n    }\n    while (iter.hasNext()) {\n      const elem = iter.getNext();\n      const result = cb(elem.key);\n      if (!result) {\n        return;\n      }\n    }\n  }\n\n  /** Finds the least element greater than or equal to `elem`. */\n  firstAfterOrEqual(elem: T): T | null {\n    const iter = this.data.getIteratorFrom(elem);\n    return iter.hasNext() ? iter.getNext().key : null;\n  }\n\n  getIterator(): SortedSetIterator<T> {\n    return new SortedSetIterator<T>(this.data.getIterator());\n  }\n\n  getIteratorFrom(key: T): SortedSetIterator<T> {\n    return new SortedSetIterator<T>(this.data.getIteratorFrom(key));\n  }\n\n  /** Inserts or updates an element */\n  add(elem: T): SortedSet<T> {\n    return this.copy(this.data.remove(elem).insert(elem, true));\n  }\n\n  /** Deletes an element */\n  delete(elem: T): SortedSet<T> {\n    if (!this.has(elem)) {\n      return this;\n    }\n    return this.copy(this.data.remove(elem));\n  }\n\n  isEmpty(): boolean {\n    return this.data.isEmpty();\n  }\n\n  unionWith(other: SortedSet<T>): SortedSet<T> {\n    let result: SortedSet<T> = this;\n\n    // Make sure `result` always refers to the larger one of the two sets.\n    if (result.size < other.size) {\n      result = other;\n      other = this;\n    }\n\n    other.forEach(elem => {\n      result = result.add(elem);\n    });\n    return result;\n  }\n\n  isEqual(other: SortedSet<T>): boolean {\n    if (!(other instanceof SortedSet)) {\n      return false;\n    }\n    if (this.size !== other.size) {\n      return false;\n    }\n\n    const thisIt = this.data.getIterator();\n    const otherIt = other.data.getIterator();\n    while (thisIt.hasNext()) {\n      const thisElem = thisIt.getNext().key;\n      const otherElem = otherIt.getNext().key;\n      if (this.comparator(thisElem, otherElem) !== 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  toArray(): T[] {\n    const res: T[] = [];\n    this.forEach(targetId => {\n      res.push(targetId);\n    });\n    return res;\n  }\n\n  toString(): string {\n    const result: T[] = [];\n    this.forEach(elem => result.push(elem));\n    return 'SortedSet(' + result.toString() + ')';\n  }\n\n  private copy(data: SortedMap<T, boolean>): SortedSet<T> {\n    const result = new SortedSet(this.comparator);\n    result.data = data;\n    return result;\n  }\n}\n\nexport class SortedSetIterator<T> {\n  constructor(private iter: SortedMapIterator<T, boolean>) {}\n\n  getNext(): T {\n    return this.iter.getNext().key;\n  }\n\n  hasNext(): boolean {\n    return this.iter.hasNext();\n  }\n}\n\n/**\n * Compares two sorted sets for equality using their natural ordering. The\n * method computes the intersection and invokes `onAdd` for every element that\n * is in `after` but not `before`. `onRemove` is invoked for every element in\n * `before` but missing from `after`.\n *\n * The method creates a copy of both `before` and `after` and runs in O(n log\n * n), where n is the size of the two lists.\n *\n * @param before - The elements that exist in the original set.\n * @param after - The elements to diff against the original set.\n * @param comparator - The comparator for the elements in before and after.\n * @param onAdd - A function to invoke for every element that is part of `\n * after` but not `before`.\n * @param onRemove - A function to invoke for every element that is part of\n * `before` but not `after`.\n */\nexport function diffSortedSets<T>(\n  before: SortedSet<T>,\n  after: SortedSet<T>,\n  comparator: (l: T, r: T) => number,\n  onAdd: (entry: T) => void,\n  onRemove: (entry: T) => void\n): void {\n  const beforeIt = before.getIterator();\n  const afterIt = after.getIterator();\n\n  let beforeValue = advanceIterator(beforeIt);\n  let afterValue = advanceIterator(afterIt);\n\n  // Walk through the two sets at the same time, using the ordering defined by\n  // `comparator`.\n  while (beforeValue || afterValue) {\n    let added = false;\n    let removed = false;\n\n    if (beforeValue && afterValue) {\n      const cmp = comparator(beforeValue, afterValue);\n      if (cmp < 0) {\n        // The element was removed if the next element in our ordered\n        // walkthrough is only in `before`.\n        removed = true;\n      } else if (cmp > 0) {\n        // The element was added if the next element in our ordered walkthrough\n        // is only in `after`.\n        added = true;\n      }\n    } else if (beforeValue != null) {\n      removed = true;\n    } else {\n      added = true;\n    }\n\n    if (added) {\n      onAdd(afterValue!);\n      afterValue = advanceIterator(afterIt);\n    } else if (removed) {\n      onRemove(beforeValue!);\n      beforeValue = advanceIterator(beforeIt);\n    } else {\n      beforeValue = advanceIterator(beforeIt);\n      afterValue = advanceIterator(afterIt);\n    }\n  }\n}\n\n/**\n * Returns the next element from the iterator or `undefined` if none available.\n */\nfunction advanceIterator<T>(it: SortedSetIterator<T>): T | undefined {\n  return it.hasNext() ? it.getNext() : undefined;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugAssert } from '../util/assert';\nimport { arrayEquals } from '../util/misc';\nimport { SortedSet } from '../util/sorted_set';\n\nimport { FieldPath } from './path';\n\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */\nexport class FieldMask {\n  constructor(readonly fields: FieldPath[]) {\n    // TODO(dimond): validation of FieldMask\n    // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n    fields.sort(FieldPath.comparator);\n    debugAssert(\n      !fields.some((v, i) => i !== 0 && v.isEqual(fields[i - 1])),\n      'FieldMask contains field that is not unique: ' +\n        fields.find((v, i) => i !== 0 && v.isEqual(fields[i - 1]))!\n    );\n  }\n\n  static empty(): FieldMask {\n    return new FieldMask([]);\n  }\n\n  /**\n   * Returns a new FieldMask object that is the result of adding all the given\n   * fields paths to this field mask.\n   */\n  unionWith(extraFields: FieldPath[]): FieldMask {\n    let mergedMaskSet = new SortedSet<FieldPath>(FieldPath.comparator);\n    for (const fieldPath of this.fields) {\n      mergedMaskSet = mergedMaskSet.add(fieldPath);\n    }\n    for (const fieldPath of extraFields) {\n      mergedMaskSet = mergedMaskSet.add(fieldPath);\n    }\n    return new FieldMask(mergedMaskSet.toArray());\n  }\n\n  /**\n   * Verifies that `fieldPath` is included by at least one field in this field\n   * mask.\n   *\n   * This is an O(n) operation, where `n` is the size of the field mask.\n   */\n  covers(fieldPath: FieldPath): boolean {\n    for (const fieldMaskPath of this.fields) {\n      if (fieldMaskPath.isPrefixOf(fieldPath)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  isEqual(other: FieldMask): boolean {\n    return arrayEquals(this.fields, other.fields, (l, r) => l.isEqual(r));\n  }\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An error encountered while decoding base64 string.\n */\nexport class Base64DecodeError extends Error {\n  readonly name = 'Base64DecodeError';\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { decodeBase64, encodeBase64 } from '../platform/base64';\n\nimport { primitiveComparator } from './misc';\n\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\nexport class ByteString {\n  static readonly EMPTY_BYTE_STRING = new ByteString('');\n\n  private constructor(private readonly binaryString: string) {}\n\n  static fromBase64String(base64: string): ByteString {\n    const binaryString = decodeBase64(base64);\n    return new ByteString(binaryString);\n  }\n\n  static fromUint8Array(array: Uint8Array): ByteString {\n    // TODO(indexing); Remove the copy of the byte string here as this method\n    // is frequently called during indexing.\n    const binaryString = binaryStringFromUint8Array(array);\n    return new ByteString(binaryString);\n  }\n\n  [Symbol.iterator](): Iterator<number> {\n    let i = 0;\n    return {\n      next: () => {\n        if (i < this.binaryString.length) {\n          return { value: this.binaryString.charCodeAt(i++), done: false };\n        } else {\n          return { value: undefined, done: true };\n        }\n      }\n    };\n  }\n\n  toBase64(): string {\n    return encodeBase64(this.binaryString);\n  }\n\n  toUint8Array(): Uint8Array {\n    return uint8ArrayFromBinaryString(this.binaryString);\n  }\n\n  approximateByteSize(): number {\n    return this.binaryString.length * 2;\n  }\n\n  compareTo(other: ByteString): number {\n    return primitiveComparator(this.binaryString, other.binaryString);\n  }\n\n  isEqual(other: ByteString): boolean {\n    return this.binaryString === other.binaryString;\n  }\n}\n\n/**\n * Helper function to convert an Uint8array to a binary string.\n */\nexport function binaryStringFromUint8Array(array: Uint8Array): string {\n  let binaryString = '';\n  for (let i = 0; i < array.length; ++i) {\n    binaryString += String.fromCharCode(array[i]);\n  }\n  return binaryString;\n}\n\n/**\n * Helper function to convert a binary string to an Uint8Array.\n */\nexport function uint8ArrayFromBinaryString(binaryString: string): Uint8Array {\n  const buffer = new Uint8Array(binaryString.length);\n  for (let i = 0; i < binaryString.length; i++) {\n    buffer[i] = binaryString.charCodeAt(i);\n  }\n  return buffer;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Base64DecodeError } from '../../util/base64_decode_error';\n\n/** Converts a Base64 encoded string to a binary string. */\nexport function decodeBase64(encoded: string): string {\n  try {\n    return atob(encoded);\n  } catch (e) {\n    // Check that `DOMException` is defined before using it to avoid\n    // \"ReferenceError: Property 'DOMException' doesn't exist\" in react-native.\n    // (https://github.com/firebase/firebase-js-sdk/issues/7115)\n    if (typeof DOMException !== 'undefined' && e instanceof DOMException) {\n      throw new Base64DecodeError('Invalid base64 string: ' + e);\n    } else {\n      throw e;\n    }\n  }\n}\n\n/** Converts a binary string to a Base64 encoded string. */\nexport function encodeBase64(raw: string): string {\n  return btoa(raw);\n}\n\n/** True if and only if the Base64 conversion functions are available. */\nexport function isBase64Available(): boolean {\n  return typeof atob !== 'undefined';\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Timestamp } from '../protos/firestore_proto_api';\nimport { hardAssert } from '../util/assert';\nimport { ByteString } from '../util/byte_string';\n\n// A RegExp matching ISO 8601 UTC timestamps with optional fraction.\nconst ISO_TIMESTAMP_REG_EXP = new RegExp(\n  /^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/\n);\n\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */\nexport function normalizeTimestamp(date: Timestamp): {\n  seconds: number;\n  nanos: number;\n} {\n  hardAssert(!!date, 'Cannot normalize null or undefined timestamp.');\n\n  // The json interface (for the browser) will return an iso timestamp string,\n  // while the proto js library (for node) will return a\n  // google.protobuf.Timestamp instance.\n  if (typeof date === 'string') {\n    // The date string can have higher precision (nanos) than the Date class\n    // (millis), so we do some custom parsing here.\n\n    // Parse the nanos right out of the string.\n    let nanos = 0;\n    const fraction = ISO_TIMESTAMP_REG_EXP.exec(date);\n    hardAssert(!!fraction, 'invalid timestamp: ' + date);\n    if (fraction[1]) {\n      // Pad the fraction out to 9 digits (nanos).\n      let nanoStr = fraction[1];\n      nanoStr = (nanoStr + '000000000').substr(0, 9);\n      nanos = Number(nanoStr);\n    }\n\n    // Parse the date to get the seconds.\n    const parsedDate = new Date(date);\n    const seconds = Math.floor(parsedDate.getTime() / 1000);\n\n    return { seconds, nanos };\n  } else {\n    // TODO(b/37282237): Use strings for Proto3 timestamps\n    // assert(!this.options.useProto3Json,\n    //   'The timestamp instance format requires Proto JS.');\n    const seconds = normalizeNumber(date.seconds);\n    const nanos = normalizeNumber(date.nanos);\n    return { seconds, nanos };\n  }\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */\nexport function normalizeNumber(value: number | string | undefined): number {\n  // TODO(bjornick): Handle int64 greater than 53 bits.\n  if (typeof value === 'number') {\n    return value;\n  } else if (typeof value === 'string') {\n    return Number(value);\n  } else {\n    return 0;\n  }\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */\nexport function normalizeByteString(blob: string | Uint8Array): ByteString {\n  if (typeof blob === 'string') {\n    return ByteString.fromBase64String(blob);\n  } else {\n    return ByteString.fromUint8Array(blob);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Timestamp } from '../lite-api/timestamp';\nimport {\n  Value as ProtoValue,\n  MapValue as ProtoMapValue\n} from '../protos/firestore_proto_api';\n\nimport { normalizeTimestamp } from './normalize';\n\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */\n\nconst SERVER_TIMESTAMP_SENTINEL = 'server_timestamp';\nconst TYPE_KEY = '__type__';\nconst PREVIOUS_VALUE_KEY = '__previous_value__';\nconst LOCAL_WRITE_TIME_KEY = '__local_write_time__';\n\nexport function isServerTimestamp(value: ProtoValue | null): boolean {\n  const type = (value?.mapValue?.fields || {})[TYPE_KEY]?.stringValue;\n  return type === SERVER_TIMESTAMP_SENTINEL;\n}\n\n/**\n * Creates a new ServerTimestamp proto value (using the internal format).\n */\nexport function serverTimestamp(\n  localWriteTime: Timestamp,\n  previousValue: ProtoValue | null\n): ProtoValue {\n  const mapValue: ProtoMapValue = {\n    fields: {\n      [TYPE_KEY]: {\n        stringValue: SERVER_TIMESTAMP_SENTINEL\n      },\n      [LOCAL_WRITE_TIME_KEY]: {\n        timestampValue: {\n          seconds: localWriteTime.seconds,\n          nanos: localWriteTime.nanoseconds\n        }\n      }\n    }\n  };\n\n  // We should avoid storing deeply nested server timestamp map values\n  // because we never use the intermediate \"previous values\".\n  // For example:\n  // previous: 42L, add: t1, result: t1 -> 42L\n  // previous: t1,  add: t2, result: t2 -> 42L (NOT t2 -> t1 -> 42L)\n  // previous: t2,  add: t3, result: t3 -> 42L (NOT t3 -> t2 -> t1 -> 42L)\n  // `getPreviousValue` recursively traverses server timestamps to find the\n  // least recent Value.\n  if (previousValue && isServerTimestamp(previousValue)) {\n    previousValue = getPreviousValue(previousValue);\n  }\n  if (previousValue) {\n    mapValue.fields![PREVIOUS_VALUE_KEY] = previousValue;\n  }\n\n  return { mapValue };\n}\n\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */\nexport function getPreviousValue(value: ProtoValue): ProtoValue | null {\n  const previousValue = value.mapValue!.fields![PREVIOUS_VALUE_KEY];\n\n  if (isServerTimestamp(previousValue)) {\n    return getPreviousValue(previousValue);\n  }\n  return previousValue;\n}\n\n/**\n * Returns the local time at which this timestamp was first set.\n */\nexport function getLocalWriteTime(value: ProtoValue): Timestamp {\n  const localWriteTime = normalizeTimestamp(\n    value.mapValue!.fields![LOCAL_WRITE_TIME_KEY].timestampValue!\n  );\n  return new Timestamp(localWriteTime.seconds, localWriteTime.nanos);\n}\n","import { FirebaseApp } from '@firebase/app';\n\nimport { ExperimentalLongPollingOptions } from '../api/long_polling_options';\nimport { Code, FirestoreError } from '../util/error';\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class DatabaseInfo {\n  /**\n   * Constructs a DatabaseInfo using the provided host, databaseId and\n   * persistenceKey.\n   *\n   * @param databaseId - The database to use.\n   * @param appId - The Firebase App Id.\n   * @param persistenceKey - A unique identifier for this Firestore's local\n   * storage (used in conjunction with the databaseId).\n   * @param host - The Firestore backend host to connect to.\n   * @param ssl - Whether to use SSL when connecting.\n   * @param forceLongPolling - Whether to use the forceLongPolling option\n   * when using WebChannel as the network transport.\n   * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n   * option when using WebChannel as the network transport.\n   * @param longPollingOptions Options that configure long-polling.\n   * @param useFetchStreams Whether to use the Fetch API instead of\n   * XMLHTTPRequest\n   */\n  constructor(\n    readonly databaseId: DatabaseId,\n    readonly appId: string,\n    readonly persistenceKey: string,\n    readonly host: string,\n    readonly ssl: boolean,\n    readonly forceLongPolling: boolean,\n    readonly autoDetectLongPolling: boolean,\n    readonly longPollingOptions: ExperimentalLongPollingOptions,\n    readonly useFetchStreams: boolean\n  ) {}\n}\n\n/** The default database name for a project. */\nexport const DEFAULT_DATABASE_NAME = '(default)';\n\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nexport class DatabaseId {\n  readonly database: string;\n  constructor(readonly projectId: string, database?: string) {\n    this.database = database ? database : DEFAULT_DATABASE_NAME;\n  }\n\n  static empty(): DatabaseId {\n    return new DatabaseId('', '');\n  }\n\n  get isDefaultDatabase(): boolean {\n    return this.database === DEFAULT_DATABASE_NAME;\n  }\n\n  isEqual(other: {}): boolean {\n    return (\n      other instanceof DatabaseId &&\n      other.projectId === this.projectId &&\n      other.database === this.database\n    );\n  }\n}\n\nexport function databaseIdFromApp(\n  app: FirebaseApp,\n  database?: string\n): DatabaseId {\n  if (!Object.prototype.hasOwnProperty.apply(app.options, ['projectId'])) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      '\"projectId\" not provided in firebase.initializeApp.'\n    );\n  }\n\n  return new DatabaseId(app.options.projectId!, database);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DatabaseId } from '../core/database_info';\nimport {\n  ArrayValue,\n  LatLng,\n  MapValue,\n  Timestamp,\n  Value\n} from '../protos/firestore_proto_api';\nimport { fail } from '../util/assert';\nimport { arrayEquals, primitiveComparator } from '../util/misc';\nimport { forEach, objectSize } from '../util/obj';\nimport { isNegativeZero } from '../util/types';\n\nimport { DocumentKey } from './document_key';\nimport {\n  normalizeByteString,\n  normalizeNumber,\n  normalizeTimestamp\n} from './normalize';\nimport {\n  getLocalWriteTime,\n  getPreviousValue,\n  isServerTimestamp\n} from './server_timestamps';\nimport { TypeOrder } from './type_order';\n\nconst MAX_VALUE_TYPE = '__max__';\nexport const MAX_VALUE: Value = {\n  mapValue: {\n    fields: {\n      '__type__': { stringValue: MAX_VALUE_TYPE }\n    }\n  }\n};\n\nexport const MIN_VALUE: Value = {\n  nullValue: 'NULL_VALUE'\n};\n\n/** Extracts the backend's type order for the provided value. */\nexport function typeOrder(value: Value): TypeOrder {\n  if ('nullValue' in value) {\n    return TypeOrder.NullValue;\n  } else if ('booleanValue' in value) {\n    return TypeOrder.BooleanValue;\n  } else if ('integerValue' in value || 'doubleValue' in value) {\n    return TypeOrder.NumberValue;\n  } else if ('timestampValue' in value) {\n    return TypeOrder.TimestampValue;\n  } else if ('stringValue' in value) {\n    return TypeOrder.StringValue;\n  } else if ('bytesValue' in value) {\n    return TypeOrder.BlobValue;\n  } else if ('referenceValue' in value) {\n    return TypeOrder.RefValue;\n  } else if ('geoPointValue' in value) {\n    return TypeOrder.GeoPointValue;\n  } else if ('arrayValue' in value) {\n    return TypeOrder.ArrayValue;\n  } else if ('mapValue' in value) {\n    if (isServerTimestamp(value)) {\n      return TypeOrder.ServerTimestampValue;\n    } else if (isMaxValue(value)) {\n      return TypeOrder.MaxValue;\n    }\n    return TypeOrder.ObjectValue;\n  } else {\n    return fail('Invalid value type: ' + JSON.stringify(value));\n  }\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */\nexport function valueEquals(left: Value, right: Value): boolean {\n  if (left === right) {\n    return true;\n  }\n\n  const leftType = typeOrder(left);\n  const rightType = typeOrder(right);\n  if (leftType !== rightType) {\n    return false;\n  }\n\n  switch (leftType) {\n    case TypeOrder.NullValue:\n      return true;\n    case TypeOrder.BooleanValue:\n      return left.booleanValue === right.booleanValue;\n    case TypeOrder.ServerTimestampValue:\n      return getLocalWriteTime(left).isEqual(getLocalWriteTime(right));\n    case TypeOrder.TimestampValue:\n      return timestampEquals(left, right);\n    case TypeOrder.StringValue:\n      return left.stringValue === right.stringValue;\n    case TypeOrder.BlobValue:\n      return blobEquals(left, right);\n    case TypeOrder.RefValue:\n      return left.referenceValue === right.referenceValue;\n    case TypeOrder.GeoPointValue:\n      return geoPointEquals(left, right);\n    case TypeOrder.NumberValue:\n      return numberEquals(left, right);\n    case TypeOrder.ArrayValue:\n      return arrayEquals(\n        left.arrayValue!.values || [],\n        right.arrayValue!.values || [],\n        valueEquals\n      );\n    case TypeOrder.ObjectValue:\n      return objectEquals(left, right);\n    case TypeOrder.MaxValue:\n      return true;\n    default:\n      return fail('Unexpected value type: ' + JSON.stringify(left));\n  }\n}\n\nfunction timestampEquals(left: Value, right: Value): boolean {\n  if (\n    typeof left.timestampValue === 'string' &&\n    typeof right.timestampValue === 'string' &&\n    left.timestampValue.length === right.timestampValue.length\n  ) {\n    // Use string equality for ISO 8601 timestamps\n    return left.timestampValue === right.timestampValue;\n  }\n\n  const leftTimestamp = normalizeTimestamp(left.timestampValue!);\n  const rightTimestamp = normalizeTimestamp(right.timestampValue!);\n  return (\n    leftTimestamp.seconds === rightTimestamp.seconds &&\n    leftTimestamp.nanos === rightTimestamp.nanos\n  );\n}\n\nfunction geoPointEquals(left: Value, right: Value): boolean {\n  return (\n    normalizeNumber(left.geoPointValue!.latitude) ===\n      normalizeNumber(right.geoPointValue!.latitude) &&\n    normalizeNumber(left.geoPointValue!.longitude) ===\n      normalizeNumber(right.geoPointValue!.longitude)\n  );\n}\n\nfunction blobEquals(left: Value, right: Value): boolean {\n  return normalizeByteString(left.bytesValue!).isEqual(\n    normalizeByteString(right.bytesValue!)\n  );\n}\n\nexport function numberEquals(left: Value, right: Value): boolean {\n  if ('integerValue' in left && 'integerValue' in right) {\n    return (\n      normalizeNumber(left.integerValue) === normalizeNumber(right.integerValue)\n    );\n  } else if ('doubleValue' in left && 'doubleValue' in right) {\n    const n1 = normalizeNumber(left.doubleValue!);\n    const n2 = normalizeNumber(right.doubleValue!);\n\n    if (n1 === n2) {\n      return isNegativeZero(n1) === isNegativeZero(n2);\n    } else {\n      return isNaN(n1) && isNaN(n2);\n    }\n  }\n\n  return false;\n}\n\nfunction objectEquals(left: Value, right: Value): boolean {\n  const leftMap = left.mapValue!.fields || {};\n  const rightMap = right.mapValue!.fields || {};\n\n  if (objectSize(leftMap) !== objectSize(rightMap)) {\n    return false;\n  }\n\n  for (const key in leftMap) {\n    if (leftMap.hasOwnProperty(key)) {\n      if (\n        rightMap[key] === undefined ||\n        !valueEquals(leftMap[key], rightMap[key])\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/** Returns true if the ArrayValue contains the specified element. */\nexport function arrayValueContains(\n  haystack: ArrayValue,\n  needle: Value\n): boolean {\n  return (\n    (haystack.values || []).find(v => valueEquals(v, needle)) !== undefined\n  );\n}\n\nexport function valueCompare(left: Value, right: Value): number {\n  if (left === right) {\n    return 0;\n  }\n\n  const leftType = typeOrder(left);\n  const rightType = typeOrder(right);\n\n  if (leftType !== rightType) {\n    return primitiveComparator(leftType, rightType);\n  }\n\n  switch (leftType) {\n    case TypeOrder.NullValue:\n    case TypeOrder.MaxValue:\n      return 0;\n    case TypeOrder.BooleanValue:\n      return primitiveComparator(left.booleanValue!, right.booleanValue!);\n    case TypeOrder.NumberValue:\n      return compareNumbers(left, right);\n    case TypeOrder.TimestampValue:\n      return compareTimestamps(left.timestampValue!, right.timestampValue!);\n    case TypeOrder.ServerTimestampValue:\n      return compareTimestamps(\n        getLocalWriteTime(left),\n        getLocalWriteTime(right)\n      );\n    case TypeOrder.StringValue:\n      return primitiveComparator(left.stringValue!, right.stringValue!);\n    case TypeOrder.BlobValue:\n      return compareBlobs(left.bytesValue!, right.bytesValue!);\n    case TypeOrder.RefValue:\n      return compareReferences(left.referenceValue!, right.referenceValue!);\n    case TypeOrder.GeoPointValue:\n      return compareGeoPoints(left.geoPointValue!, right.geoPointValue!);\n    case TypeOrder.ArrayValue:\n      return compareArrays(left.arrayValue!, right.arrayValue!);\n    case TypeOrder.ObjectValue:\n      return compareMaps(left.mapValue!, right.mapValue!);\n    default:\n      throw fail('Invalid value type: ' + leftType);\n  }\n}\n\nfunction compareNumbers(left: Value, right: Value): number {\n  const leftNumber = normalizeNumber(left.integerValue || left.doubleValue);\n  const rightNumber = normalizeNumber(right.integerValue || right.doubleValue);\n\n  if (leftNumber < rightNumber) {\n    return -1;\n  } else if (leftNumber > rightNumber) {\n    return 1;\n  } else if (leftNumber === rightNumber) {\n    return 0;\n  } else {\n    // one or both are NaN.\n    if (isNaN(leftNumber)) {\n      return isNaN(rightNumber) ? 0 : -1;\n    } else {\n      return 1;\n    }\n  }\n}\n\nfunction compareTimestamps(left: Timestamp, right: Timestamp): number {\n  if (\n    typeof left === 'string' &&\n    typeof right === 'string' &&\n    left.length === right.length\n  ) {\n    return primitiveComparator(left, right);\n  }\n\n  const leftTimestamp = normalizeTimestamp(left);\n  const rightTimestamp = normalizeTimestamp(right);\n\n  const comparison = primitiveComparator(\n    leftTimestamp.seconds,\n    rightTimestamp.seconds\n  );\n  if (comparison !== 0) {\n    return comparison;\n  }\n  return primitiveComparator(leftTimestamp.nanos, rightTimestamp.nanos);\n}\n\nfunction compareReferences(leftPath: string, rightPath: string): number {\n  const leftSegments = leftPath.split('/');\n  const rightSegments = rightPath.split('/');\n  for (let i = 0; i < leftSegments.length && i < rightSegments.length; i++) {\n    const comparison = primitiveComparator(leftSegments[i], rightSegments[i]);\n    if (comparison !== 0) {\n      return comparison;\n    }\n  }\n  return primitiveComparator(leftSegments.length, rightSegments.length);\n}\n\nfunction compareGeoPoints(left: LatLng, right: LatLng): number {\n  const comparison = primitiveComparator(\n    normalizeNumber(left.latitude),\n    normalizeNumber(right.latitude)\n  );\n  if (comparison !== 0) {\n    return comparison;\n  }\n  return primitiveComparator(\n    normalizeNumber(left.longitude),\n    normalizeNumber(right.longitude)\n  );\n}\n\nfunction compareBlobs(\n  left: string | Uint8Array,\n  right: string | Uint8Array\n): number {\n  const leftBytes = normalizeByteString(left);\n  const rightBytes = normalizeByteString(right);\n  return leftBytes.compareTo(rightBytes);\n}\n\nfunction compareArrays(left: ArrayValue, right: ArrayValue): number {\n  const leftArray = left.values || [];\n  const rightArray = right.values || [];\n\n  for (let i = 0; i < leftArray.length && i < rightArray.length; ++i) {\n    const compare = valueCompare(leftArray[i], rightArray[i]);\n    if (compare) {\n      return compare;\n    }\n  }\n  return primitiveComparator(leftArray.length, rightArray.length);\n}\n\nfunction compareMaps(left: MapValue, right: MapValue): number {\n  if (left === MAX_VALUE.mapValue && right === MAX_VALUE.mapValue) {\n    return 0;\n  } else if (left === MAX_VALUE.mapValue) {\n    return 1;\n  } else if (right === MAX_VALUE.mapValue) {\n    return -1;\n  }\n\n  const leftMap = left.fields || {};\n  const leftKeys = Object.keys(leftMap);\n  const rightMap = right.fields || {};\n  const rightKeys = Object.keys(rightMap);\n\n  // Even though MapValues are likely sorted correctly based on their insertion\n  // order (e.g. when received from the backend), local modifications can bring\n  // elements out of order. We need to re-sort the elements to ensure that\n  // canonical IDs are independent of insertion order.\n  leftKeys.sort();\n  rightKeys.sort();\n\n  for (let i = 0; i < leftKeys.length && i < rightKeys.length; ++i) {\n    const keyCompare = primitiveComparator(leftKeys[i], rightKeys[i]);\n    if (keyCompare !== 0) {\n      return keyCompare;\n    }\n    const compare = valueCompare(leftMap[leftKeys[i]], rightMap[rightKeys[i]]);\n    if (compare !== 0) {\n      return compare;\n    }\n  }\n\n  return primitiveComparator(leftKeys.length, rightKeys.length);\n}\n\n/**\n * Generates the canonical ID for the provided field value (as used in Target\n * serialization).\n */\nexport function canonicalId(value: Value): string {\n  return canonifyValue(value);\n}\n\nfunction canonifyValue(value: Value): string {\n  if ('nullValue' in value) {\n    return 'null';\n  } else if ('booleanValue' in value) {\n    return '' + value.booleanValue!;\n  } else if ('integerValue' in value) {\n    return '' + value.integerValue!;\n  } else if ('doubleValue' in value) {\n    return '' + value.doubleValue!;\n  } else if ('timestampValue' in value) {\n    return canonifyTimestamp(value.timestampValue!);\n  } else if ('stringValue' in value) {\n    return value.stringValue!;\n  } else if ('bytesValue' in value) {\n    return canonifyByteString(value.bytesValue!);\n  } else if ('referenceValue' in value) {\n    return canonifyReference(value.referenceValue!);\n  } else if ('geoPointValue' in value) {\n    return canonifyGeoPoint(value.geoPointValue!);\n  } else if ('arrayValue' in value) {\n    return canonifyArray(value.arrayValue!);\n  } else if ('mapValue' in value) {\n    return canonifyMap(value.mapValue!);\n  } else {\n    return fail('Invalid value type: ' + JSON.stringify(value));\n  }\n}\n\nfunction canonifyByteString(byteString: string | Uint8Array): string {\n  return normalizeByteString(byteString).toBase64();\n}\n\nfunction canonifyTimestamp(timestamp: Timestamp): string {\n  const normalizedTimestamp = normalizeTimestamp(timestamp);\n  return `time(${normalizedTimestamp.seconds},${normalizedTimestamp.nanos})`;\n}\n\nfunction canonifyGeoPoint(geoPoint: LatLng): string {\n  return `geo(${geoPoint.latitude},${geoPoint.longitude})`;\n}\n\nfunction canonifyReference(referenceValue: string): string {\n  return DocumentKey.fromName(referenceValue).toString();\n}\n\nfunction canonifyMap(mapValue: MapValue): string {\n  // Iteration order in JavaScript is not guaranteed. To ensure that we generate\n  // matching canonical IDs for identical maps, we need to sort the keys.\n  const sortedKeys = Object.keys(mapValue.fields || {}).sort();\n\n  let result = '{';\n  let first = true;\n  for (const key of sortedKeys) {\n    if (!first) {\n      result += ',';\n    } else {\n      first = false;\n    }\n    result += `${key}:${canonifyValue(mapValue.fields![key])}`;\n  }\n  return result + '}';\n}\n\nfunction canonifyArray(arrayValue: ArrayValue): string {\n  let result = '[';\n  let first = true;\n  for (const value of arrayValue.values || []) {\n    if (!first) {\n      result += ',';\n    } else {\n      first = false;\n    }\n    result += canonifyValue(value);\n  }\n  return result + ']';\n}\n\n/**\n * Returns an approximate (and wildly inaccurate) in-memory size for the field\n * value.\n *\n * The memory size takes into account only the actual user data as it resides\n * in memory and ignores object overhead.\n */\nexport function estimateByteSize(value: Value): number {\n  switch (typeOrder(value)) {\n    case TypeOrder.NullValue:\n      return 4;\n    case TypeOrder.BooleanValue:\n      return 4;\n    case TypeOrder.NumberValue:\n      return 8;\n    case TypeOrder.TimestampValue:\n      // Timestamps are made up of two distinct numbers (seconds + nanoseconds)\n      return 16;\n    case TypeOrder.ServerTimestampValue:\n      const previousValue = getPreviousValue(value);\n      return previousValue ? 16 + estimateByteSize(previousValue) : 16;\n    case TypeOrder.StringValue:\n      // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures:\n      // \"JavaScript's String type is [...] a set of elements of 16-bit unsigned\n      // integer values\"\n      return value.stringValue!.length * 2;\n    case TypeOrder.BlobValue:\n      return normalizeByteString(value.bytesValue!).approximateByteSize();\n    case TypeOrder.RefValue:\n      return value.referenceValue!.length;\n    case TypeOrder.GeoPointValue:\n      // GeoPoints are made up of two distinct numbers (latitude + longitude)\n      return 16;\n    case TypeOrder.ArrayValue:\n      return estimateArrayByteSize(value.arrayValue!);\n    case TypeOrder.ObjectValue:\n      return estimateMapByteSize(value.mapValue!);\n    default:\n      throw fail('Invalid value type: ' + JSON.stringify(value));\n  }\n}\n\nfunction estimateMapByteSize(mapValue: MapValue): number {\n  let size = 0;\n  forEach(mapValue.fields, (key, val) => {\n    size += key.length + estimateByteSize(val);\n  });\n  return size;\n}\n\nfunction estimateArrayByteSize(arrayValue: ArrayValue): number {\n  return (arrayValue.values || []).reduce(\n    (previousSize, value) => previousSize + estimateByteSize(value),\n    0\n  );\n}\n\n/** Returns a reference value for the provided database and key. */\nexport function refValue(databaseId: DatabaseId, key: DocumentKey): Value {\n  return {\n    referenceValue: `projects/${databaseId.projectId}/databases/${\n      databaseId.database\n    }/documents/${key.path.canonicalString()}`\n  };\n}\n\n/** Returns true if `value` is an IntegerValue . */\nexport function isInteger(\n  value?: Value | null\n): value is { integerValue: string | number } {\n  return !!value && 'integerValue' in value;\n}\n\n/** Returns true if `value` is a DoubleValue. */\nexport function isDouble(\n  value?: Value | null\n): value is { doubleValue: string | number } {\n  return !!value && 'doubleValue' in value;\n}\n\n/** Returns true if `value` is either an IntegerValue or a DoubleValue. */\nexport function isNumber(value?: Value | null): boolean {\n  return isInteger(value) || isDouble(value);\n}\n\n/** Returns true if `value` is an ArrayValue. */\nexport function isArray(\n  value?: Value | null\n): value is { arrayValue: ArrayValue } {\n  return !!value && 'arrayValue' in value;\n}\n\n/** Returns true if `value` is a ReferenceValue. */\nexport function isReferenceValue(\n  value?: Value | null\n): value is { referenceValue: string } {\n  return !!value && 'referenceValue' in value;\n}\n\n/** Returns true if `value` is a NullValue. */\nexport function isNullValue(\n  value?: Value | null\n): value is { nullValue: 'NULL_VALUE' } {\n  return !!value && 'nullValue' in value;\n}\n\n/** Returns true if `value` is NaN. */\nexport function isNanValue(\n  value?: Value | null\n): value is { doubleValue: 'NaN' | number } {\n  return !!value && 'doubleValue' in value && isNaN(Number(value.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */\nexport function isMapValue(\n  value?: Value | null\n): value is { mapValue: MapValue } {\n  return !!value && 'mapValue' in value;\n}\n\n/** Creates a deep copy of `source`. */\nexport function deepClone(source: Value): Value {\n  if (source.geoPointValue) {\n    return { geoPointValue: { ...source.geoPointValue } };\n  } else if (\n    source.timestampValue &&\n    typeof source.timestampValue === 'object'\n  ) {\n    return { timestampValue: { ...source.timestampValue } };\n  } else if (source.mapValue) {\n    const target: Value = { mapValue: { fields: {} } };\n    forEach(\n      source.mapValue.fields,\n      (key, val) => (target.mapValue!.fields![key] = deepClone(val))\n    );\n    return target;\n  } else if (source.arrayValue) {\n    const target: Value = { arrayValue: { values: [] } };\n    for (let i = 0; i < (source.arrayValue.values || []).length; ++i) {\n      target.arrayValue!.values![i] = deepClone(source.arrayValue.values![i]);\n    }\n    return target;\n  } else {\n    return { ...source };\n  }\n}\n\n/** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */\nexport function isMaxValue(value: Value): boolean {\n  return (\n    (((value.mapValue || {}).fields || {})['__type__'] || {}).stringValue ===\n    MAX_VALUE_TYPE\n  );\n}\n\n/** Returns the lowest value for the given value type (inclusive). */\nexport function valuesGetLowerBound(value: Value): Value {\n  if ('nullValue' in value) {\n    return MIN_VALUE;\n  } else if ('booleanValue' in value) {\n    return { booleanValue: false };\n  } else if ('integerValue' in value || 'doubleValue' in value) {\n    return { doubleValue: NaN };\n  } else if ('timestampValue' in value) {\n    return { timestampValue: { seconds: Number.MIN_SAFE_INTEGER } };\n  } else if ('stringValue' in value) {\n    return { stringValue: '' };\n  } else if ('bytesValue' in value) {\n    return { bytesValue: '' };\n  } else if ('referenceValue' in value) {\n    return refValue(DatabaseId.empty(), DocumentKey.empty());\n  } else if ('geoPointValue' in value) {\n    return { geoPointValue: { latitude: -90, longitude: -180 } };\n  } else if ('arrayValue' in value) {\n    return { arrayValue: {} };\n  } else if ('mapValue' in value) {\n    return { mapValue: {} };\n  } else {\n    return fail('Invalid value type: ' + JSON.stringify(value));\n  }\n}\n\n/** Returns the largest value for the given value type (exclusive). */\nexport function valuesGetUpperBound(value: Value): Value {\n  if ('nullValue' in value) {\n    return { booleanValue: false };\n  } else if ('booleanValue' in value) {\n    return { doubleValue: NaN };\n  } else if ('integerValue' in value || 'doubleValue' in value) {\n    return { timestampValue: { seconds: Number.MIN_SAFE_INTEGER } };\n  } else if ('timestampValue' in value) {\n    return { stringValue: '' };\n  } else if ('stringValue' in value) {\n    return { bytesValue: '' };\n  } else if ('bytesValue' in value) {\n    return refValue(DatabaseId.empty(), DocumentKey.empty());\n  } else if ('referenceValue' in value) {\n    return { geoPointValue: { latitude: -90, longitude: -180 } };\n  } else if ('geoPointValue' in value) {\n    return { arrayValue: {} };\n  } else if ('arrayValue' in value) {\n    return { mapValue: {} };\n  } else if ('mapValue' in value) {\n    return MAX_VALUE;\n  } else {\n    return fail('Invalid value type: ' + JSON.stringify(value));\n  }\n}\n\nexport function lowerBoundCompare(\n  left: { value: Value; inclusive: boolean },\n  right: { value: Value; inclusive: boolean }\n): number {\n  const cmp = valueCompare(left.value, right.value);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  if (left.inclusive && !right.inclusive) {\n    return -1;\n  } else if (!left.inclusive && right.inclusive) {\n    return 1;\n  }\n\n  return 0;\n}\n\nexport function upperBoundCompare(\n  left: { value: Value; inclusive: boolean },\n  right: { value: Value; inclusive: boolean }\n): number {\n  const cmp = valueCompare(left.value, right.value);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  if (left.inclusive && !right.inclusive) {\n    return 1;\n  } else if (!left.inclusive && right.inclusive) {\n    return -1;\n  }\n\n  return 0;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  MapValue as ProtoMapValue,\n  Value as ProtoValue\n} from '../protos/firestore_proto_api';\nimport { debugAssert } from '../util/assert';\nimport { forEach } from '../util/obj';\n\nimport { FieldMask } from './field_mask';\nimport { FieldPath } from './path';\nimport { isServerTimestamp } from './server_timestamps';\nimport { deepClone, isMapValue, valueEquals } from './values';\n\nexport interface JsonObject<T> {\n  [name: string]: T;\n}\n/**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */\nexport class ObjectValue {\n  constructor(readonly value: { mapValue: ProtoMapValue }) {\n    debugAssert(\n      !isServerTimestamp(value),\n      'ServerTimestamps should be converted to ServerTimestampValue'\n    );\n  }\n\n  static empty(): ObjectValue {\n    return new ObjectValue({ mapValue: {} });\n  }\n\n  /**\n   * Returns the value at the given path or null.\n   *\n   * @param path - the path to search\n   * @returns The value at the path or null if the path is not set.\n   */\n  field(path: FieldPath): ProtoValue | null {\n    if (path.isEmpty()) {\n      return this.value;\n    } else {\n      let currentLevel: ProtoValue = this.value;\n      for (let i = 0; i < path.length - 1; ++i) {\n        currentLevel = (currentLevel.mapValue!.fields || {})[path.get(i)];\n        if (!isMapValue(currentLevel)) {\n          return null;\n        }\n      }\n      currentLevel = (currentLevel.mapValue!.fields! || {})[path.lastSegment()];\n      return currentLevel || null;\n    }\n  }\n\n  /**\n   * Sets the field to the provided value.\n   *\n   * @param path - The field path to set.\n   * @param value - The value to set.\n   */\n  set(path: FieldPath, value: ProtoValue): void {\n    debugAssert(\n      !path.isEmpty(),\n      'Cannot set field for empty path on ObjectValue'\n    );\n    const fieldsMap = this.getFieldsMap(path.popLast());\n    fieldsMap[path.lastSegment()] = deepClone(value);\n  }\n\n  /**\n   * Sets the provided fields to the provided values.\n   *\n   * @param data - A map of fields to values (or null for deletes).\n   */\n  setAll(data: Map<FieldPath, ProtoValue | null>): void {\n    let parent = FieldPath.emptyPath();\n\n    let upserts: { [key: string]: ProtoValue } = {};\n    let deletes: string[] = [];\n\n    data.forEach((value, path) => {\n      if (!parent.isImmediateParentOf(path)) {\n        // Insert the accumulated changes at this parent location\n        const fieldsMap = this.getFieldsMap(parent);\n        this.applyChanges(fieldsMap, upserts, deletes);\n        upserts = {};\n        deletes = [];\n        parent = path.popLast();\n      }\n\n      if (value) {\n        upserts[path.lastSegment()] = deepClone(value);\n      } else {\n        deletes.push(path.lastSegment());\n      }\n    });\n\n    const fieldsMap = this.getFieldsMap(parent);\n    this.applyChanges(fieldsMap, upserts, deletes);\n  }\n\n  /**\n   * Removes the field at the specified path. If there is no field at the\n   * specified path, nothing is changed.\n   *\n   * @param path - The field path to remove.\n   */\n  delete(path: FieldPath): void {\n    debugAssert(\n      !path.isEmpty(),\n      'Cannot delete field for empty path on ObjectValue'\n    );\n    const nestedValue = this.field(path.popLast());\n    if (isMapValue(nestedValue) && nestedValue.mapValue.fields) {\n      delete nestedValue.mapValue.fields[path.lastSegment()];\n    }\n  }\n\n  isEqual(other: ObjectValue): boolean {\n    return valueEquals(this.value, other.value);\n  }\n\n  /**\n   * Returns the map that contains the leaf element of `path`. If the parent\n   * entry does not yet exist, or if it is not a map, a new map will be created.\n   */\n  private getFieldsMap(path: FieldPath): Record<string, ProtoValue> {\n    let current = this.value;\n\n    if (!current.mapValue!.fields) {\n      current.mapValue = { fields: {} };\n    }\n\n    for (let i = 0; i < path.length; ++i) {\n      let next = current.mapValue!.fields![path.get(i)];\n      if (!isMapValue(next) || !next.mapValue.fields) {\n        next = { mapValue: { fields: {} } };\n        current.mapValue!.fields![path.get(i)] = next;\n      }\n      current = next as { mapValue: ProtoMapValue };\n    }\n\n    return current.mapValue!.fields!;\n  }\n\n  /**\n   * Modifies `fieldsMap` by adding, replacing or deleting the specified\n   * entries.\n   */\n  private applyChanges(\n    fieldsMap: Record<string, ProtoValue>,\n    inserts: { [key: string]: ProtoValue },\n    deletes: string[]\n  ): void {\n    forEach(inserts, (key, val) => (fieldsMap[key] = val));\n    for (const field of deletes) {\n      delete fieldsMap[field];\n    }\n  }\n\n  clone(): ObjectValue {\n    return new ObjectValue(\n      deepClone(this.value) as { mapValue: ProtoMapValue }\n    );\n  }\n}\n\n/**\n * Returns a FieldMask built from all fields in a MapValue.\n */\nexport function extractFieldMask(value: ProtoMapValue): FieldMask {\n  const fields: FieldPath[] = [];\n  forEach(value!.fields, (key, value) => {\n    const currentPath = new FieldPath([key]);\n    if (isMapValue(value)) {\n      const nestedMask = extractFieldMask(value.mapValue!);\n      const nestedFields = nestedMask.fields;\n      if (nestedFields.length === 0) {\n        // Preserve the empty map by adding it to the FieldMask.\n        fields.push(currentPath);\n      } else {\n        // For nested and non-empty ObjectValues, add the FieldPath of the\n        // leaf nodes.\n        for (const nestedPath of nestedFields) {\n          fields.push(currentPath.child(nestedPath));\n        }\n      }\n    } else {\n      // For nested and non-empty ObjectValues, add the FieldPath of the leaf\n      // nodes.\n      fields.push(currentPath);\n    }\n  });\n  return new FieldMask(fields);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { debugAssert, fail } from '../util/assert';\n\nimport { DocumentKey } from './document_key';\nimport { ObjectValue } from './object_value';\nimport { FieldPath } from './path';\nimport { valueCompare } from './values';\n\n/**\n * Whether the document represents an existing document, a document that is\n * known to exist or a document whose state or existence is unknown.\n */\nconst enum DocumentType {\n  /**\n   * Represents the initial state of a MutableDocument when only the document\n   * key is known. Invalid documents transition to other states as mutations are\n   * applied. If a document remains invalid after applying mutations, it should\n   * be discarded.\n   *\n   * Invalid documents can have neither local nor committed mutations.\n   */\n  INVALID,\n  /**\n   * Represents a document in Firestore with a key, version, data and whether\n   * the data has local mutations applied to it.\n   *\n   * Found documents can be sycned or have or committed mutations applied.\n   */\n  FOUND_DOCUMENT,\n  /**\n   * Represents that no documents exists for the key at the given version.\n   *\n   * Documents that are deleted based on a local mutation do not raise snapshots\n   * with `hasPendingWrites`. As such, deleted documents never have\n   * `HAS_LOCAL_MUTATIONS` set. Once a delete is committed, we store them with\n   * `HAS_COMMITTED_MUTATIONS` until we received the delete from the Watch\n   * stream.\n   */\n  NO_DOCUMENT,\n  /**\n   * Represents an existing document whose data is unknown (e.g. a document that\n   * was updated without a known base document).\n   *\n   * An unknown document always has `HAS_COMMITTED_MUTATIONS` set, since unknown\n   * documents can only be generated by applying a patch mutation from a write\n   * acknowledgement.\n   */\n  UNKNOWN_DOCUMENT\n}\n\n/** Describes whether a document has latency-compensated edits applied. */\nconst enum DocumentState {\n  /** No mutations applied. Document was sent to us by Watch. */\n  SYNCED,\n  /**\n   * Local mutations applied via the mutation queue. Document is potentially\n   * inconsistent.\n   */\n  HAS_LOCAL_MUTATIONS,\n  /**\n   * Mutations applied based on a write acknowledgment. Document is potentially\n   * inconsistent.\n   */\n  HAS_COMMITTED_MUTATIONS\n}\n\n/**\n * Represents a document in Firestore with a key, version, data and whether the\n * data has local mutations applied to it.\n */\nexport interface Document {\n  /** The key for this document */\n  readonly key: DocumentKey;\n\n  /**\n   * The version of this document if it exists or a version at which this\n   * document was guaranteed to not exist.\n   */\n  readonly version: SnapshotVersion;\n\n  /**\n   * The timestamp at which this document was read from the remote server. Uses\n   * `SnapshotVersion.min()` for documents created by the user.\n   */\n  readonly readTime: SnapshotVersion;\n\n  /**\n   * The timestamp at which the document was created. This value increases\n   * monotonically when a document is deleted then recreated. It can also be\n   * compared to `createTime` of other documents and the `readTime` of a query.\n   */\n  readonly createTime: SnapshotVersion;\n\n  /** The underlying data of this document or an empty value if no data exists. */\n  readonly data: ObjectValue;\n\n  /** Returns whether local mutations were applied via the mutation queue. */\n  readonly hasLocalMutations: boolean;\n\n  /** Returns whether mutations were applied based on a write acknowledgment. */\n  readonly hasCommittedMutations: boolean;\n\n  /**\n   * Whether this document had a local mutation applied that has not yet been\n   * acknowledged by Watch.\n   */\n  readonly hasPendingWrites: boolean;\n\n  /**\n   * Returns whether this document is valid (i.e. it is an entry in the\n   * RemoteDocumentCache, was created by a mutation or read from the backend).\n   */\n  isValidDocument(): boolean;\n\n  /**\n   * Returns whether the document exists and its data is known at the current\n   * version.\n   */\n  isFoundDocument(): boolean;\n\n  /**\n   * Returns whether the document is known to not exist at the current version.\n   */\n  isNoDocument(): boolean;\n\n  /**\n   * Returns whether the document exists and its data is unknown at the current\n   * version.\n   */\n  isUnknownDocument(): boolean;\n\n  isEqual(other: Document | null | undefined): boolean;\n\n  /** Creates a mutable copy of this document. */\n  mutableCopy(): MutableDocument;\n\n  toString(): string;\n}\n\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */\nexport class MutableDocument implements Document {\n  private constructor(\n    readonly key: DocumentKey,\n    private documentType: DocumentType,\n    public version: SnapshotVersion,\n    public readTime: SnapshotVersion,\n    public createTime: SnapshotVersion,\n    public data: ObjectValue,\n    private documentState: DocumentState\n  ) {}\n\n  /**\n   * Creates a document with no known version or data, but which can serve as\n   * base document for mutations.\n   */\n  static newInvalidDocument(documentKey: DocumentKey): MutableDocument {\n    return new MutableDocument(\n      documentKey,\n      DocumentType.INVALID,\n      /* version */ SnapshotVersion.min(),\n      /* readTime */ SnapshotVersion.min(),\n      /* createTime */ SnapshotVersion.min(),\n      ObjectValue.empty(),\n      DocumentState.SYNCED\n    );\n  }\n\n  /**\n   * Creates a new document that is known to exist with the given data at the\n   * given version.\n   */\n  static newFoundDocument(\n    documentKey: DocumentKey,\n    version: SnapshotVersion,\n    createTime: SnapshotVersion,\n    value: ObjectValue\n  ): MutableDocument {\n    return new MutableDocument(\n      documentKey,\n      DocumentType.FOUND_DOCUMENT,\n      /* version */ version,\n      /* readTime */ SnapshotVersion.min(),\n      /* createTime */ createTime,\n      value,\n      DocumentState.SYNCED\n    );\n  }\n\n  /** Creates a new document that is known to not exist at the given version. */\n  static newNoDocument(\n    documentKey: DocumentKey,\n    version: SnapshotVersion\n  ): MutableDocument {\n    return new MutableDocument(\n      documentKey,\n      DocumentType.NO_DOCUMENT,\n      /* version */ version,\n      /* readTime */ SnapshotVersion.min(),\n      /* createTime */ SnapshotVersion.min(),\n      ObjectValue.empty(),\n      DocumentState.SYNCED\n    );\n  }\n\n  /**\n   * Creates a new document that is known to exist at the given version but\n   * whose data is not known (e.g. a document that was updated without a known\n   * base document).\n   */\n  static newUnknownDocument(\n    documentKey: DocumentKey,\n    version: SnapshotVersion\n  ): MutableDocument {\n    return new MutableDocument(\n      documentKey,\n      DocumentType.UNKNOWN_DOCUMENT,\n      /* version */ version,\n      /* readTime */ SnapshotVersion.min(),\n      /* createTime */ SnapshotVersion.min(),\n      ObjectValue.empty(),\n      DocumentState.HAS_COMMITTED_MUTATIONS\n    );\n  }\n\n  /**\n   * Changes the document type to indicate that it exists and that its version\n   * and data are known.\n   */\n  convertToFoundDocument(\n    version: SnapshotVersion,\n    value: ObjectValue\n  ): MutableDocument {\n    // If a document is switching state from being an invalid or deleted\n    // document to a valid (FOUND_DOCUMENT) document, either due to receiving an\n    // update from Watch or due to applying a local set mutation on top\n    // of a deleted document, our best guess about its createTime would be the\n    // version at which the document transitioned to a FOUND_DOCUMENT.\n    if (\n      this.createTime.isEqual(SnapshotVersion.min()) &&\n      (this.documentType === DocumentType.NO_DOCUMENT ||\n        this.documentType === DocumentType.INVALID)\n    ) {\n      this.createTime = version;\n    }\n    this.version = version;\n    this.documentType = DocumentType.FOUND_DOCUMENT;\n    this.data = value;\n    this.documentState = DocumentState.SYNCED;\n    return this;\n  }\n\n  /**\n   * Changes the document type to indicate that it doesn't exist at the given\n   * version.\n   */\n  convertToNoDocument(version: SnapshotVersion): MutableDocument {\n    this.version = version;\n    this.documentType = DocumentType.NO_DOCUMENT;\n    this.data = ObjectValue.empty();\n    this.documentState = DocumentState.SYNCED;\n    return this;\n  }\n\n  /**\n   * Changes the document type to indicate that it exists at a given version but\n   * that its data is not known (e.g. a document that was updated without a known\n   * base document).\n   */\n  convertToUnknownDocument(version: SnapshotVersion): MutableDocument {\n    this.version = version;\n    this.documentType = DocumentType.UNKNOWN_DOCUMENT;\n    this.data = ObjectValue.empty();\n    this.documentState = DocumentState.HAS_COMMITTED_MUTATIONS;\n    return this;\n  }\n\n  setHasCommittedMutations(): MutableDocument {\n    debugAssert(\n      this.isValidDocument(),\n      'Invalid documents cannot have committed mutations'\n    );\n    this.documentState = DocumentState.HAS_COMMITTED_MUTATIONS;\n    return this;\n  }\n\n  setHasLocalMutations(): MutableDocument {\n    this.documentState = DocumentState.HAS_LOCAL_MUTATIONS;\n    this.version = SnapshotVersion.min();\n    return this;\n  }\n\n  setReadTime(readTime: SnapshotVersion): MutableDocument {\n    this.readTime = readTime;\n    return this;\n  }\n\n  get hasLocalMutations(): boolean {\n    return this.documentState === DocumentState.HAS_LOCAL_MUTATIONS;\n  }\n\n  get hasCommittedMutations(): boolean {\n    return this.documentState === DocumentState.HAS_COMMITTED_MUTATIONS;\n  }\n\n  get hasPendingWrites(): boolean {\n    return this.hasLocalMutations || this.hasCommittedMutations;\n  }\n\n  isValidDocument(): boolean {\n    return this.documentType !== DocumentType.INVALID;\n  }\n\n  isFoundDocument(): boolean {\n    return this.documentType === DocumentType.FOUND_DOCUMENT;\n  }\n\n  isNoDocument(): boolean {\n    return this.documentType === DocumentType.NO_DOCUMENT;\n  }\n\n  isUnknownDocument(): boolean {\n    return this.documentType === DocumentType.UNKNOWN_DOCUMENT;\n  }\n\n  isEqual(other: Document | null | undefined): boolean {\n    return (\n      other instanceof MutableDocument &&\n      this.key.isEqual(other.key) &&\n      this.version.isEqual(other.version) &&\n      this.documentType === other.documentType &&\n      this.documentState === other.documentState &&\n      this.data.isEqual(other.data)\n    );\n  }\n\n  mutableCopy(): MutableDocument {\n    return new MutableDocument(\n      this.key,\n      this.documentType,\n      this.version,\n      this.readTime,\n      this.createTime,\n      this.data.clone(),\n      this.documentState\n    );\n  }\n\n  toString(): string {\n    return (\n      `Document(${this.key}, ${this.version}, ${JSON.stringify(\n        this.data.value\n      )}, ` +\n      `{createTime: ${this.createTime}}), ` +\n      `{documentType: ${this.documentType}}), ` +\n      `{documentState: ${this.documentState}})`\n    );\n  }\n}\n\n/**\n * Compares the value for field `field` in the provided documents. Throws if\n * the field does not exist in both documents.\n */\nexport function compareDocumentsByField(\n  field: FieldPath,\n  d1: Document,\n  d2: Document\n): number {\n  const v1 = d1.data.field(field);\n  const v2 = d2.data.field(field);\n  if (v1 !== null && v2 !== null) {\n    return valueCompare(v1, v2);\n  } else {\n    return fail(\"Trying to compare documents on fields that don't exist\");\n  }\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Document } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { isReferenceValue, valueCompare, valueEquals } from '../model/values';\nimport { Value as ProtoValue } from '../protos/firestore_proto_api';\nimport { debugAssert } from '../util/assert';\n\nimport { Direction, OrderBy } from './order_by';\n\n/**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */\nexport class Bound {\n  constructor(readonly position: ProtoValue[], readonly inclusive: boolean) {}\n}\n\nfunction boundCompareToDocument(\n  bound: Bound,\n  orderBy: OrderBy[],\n  doc: Document\n): number {\n  debugAssert(\n    bound.position.length <= orderBy.length,\n    \"Bound has more components than query's orderBy\"\n  );\n  let comparison = 0;\n  for (let i = 0; i < bound.position.length; i++) {\n    const orderByComponent = orderBy[i];\n    const component = bound.position[i];\n    if (orderByComponent.field.isKeyField()) {\n      debugAssert(\n        isReferenceValue(component),\n        'Bound has a non-key value where the key path is being used.'\n      );\n      comparison = DocumentKey.comparator(\n        DocumentKey.fromName(component.referenceValue),\n        doc.key\n      );\n    } else {\n      const docValue = doc.data.field(orderByComponent.field);\n      debugAssert(\n        docValue !== null,\n        'Field should exist since document matched the orderBy already.'\n      );\n      comparison = valueCompare(component, docValue);\n    }\n    if (orderByComponent.dir === Direction.DESCENDING) {\n      comparison = comparison * -1;\n    }\n    if (comparison !== 0) {\n      break;\n    }\n  }\n  return comparison;\n}\n\n/**\n * Returns true if a document sorts after a bound using the provided sort\n * order.\n */\nexport function boundSortsAfterDocument(\n  bound: Bound,\n  orderBy: OrderBy[],\n  doc: Document\n): boolean {\n  const comparison = boundCompareToDocument(bound, orderBy, doc);\n  return bound.inclusive ? comparison >= 0 : comparison > 0;\n}\n\n/**\n * Returns true if a document sorts before a bound using the provided sort\n * order.\n */\nexport function boundSortsBeforeDocument(\n  bound: Bound,\n  orderBy: OrderBy[],\n  doc: Document\n): boolean {\n  const comparison = boundCompareToDocument(bound, orderBy, doc);\n  return bound.inclusive ? comparison <= 0 : comparison < 0;\n}\n\nexport function boundEquals(left: Bound | null, right: Bound | null): boolean {\n  if (left === null) {\n    return right === null;\n  } else if (right === null) {\n    return false;\n  }\n\n  if (\n    left.inclusive !== right.inclusive ||\n    left.position.length !== right.position.length\n  ) {\n    return false;\n  }\n  for (let i = 0; i < left.position.length; i++) {\n    const leftPosition = left.position[i];\n    const rightPosition = right.position[i];\n    if (!valueEquals(leftPosition, rightPosition)) {\n      return false;\n    }\n  }\n  return true;\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FieldPath } from '../model/path';\n\n/**\n * The direction of sorting in an order by.\n */\nexport const enum Direction {\n  ASCENDING = 'asc',\n  DESCENDING = 'desc'\n}\n\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */\nexport class OrderBy {\n  constructor(\n    readonly field: FieldPath,\n    readonly dir: Direction = Direction.ASCENDING\n  ) {}\n}\n\nexport function canonifyOrderBy(orderBy: OrderBy): string {\n  // TODO(b/29183165): Make this collision robust.\n  return orderBy.field.canonicalString() + orderBy.dir;\n}\n\nexport function stringifyOrderBy(orderBy: OrderBy): string {\n  return `${orderBy.field.canonicalString()} (${orderBy.dir})`;\n}\n\nexport function orderByEquals(left: OrderBy, right: OrderBy): boolean {\n  return left.dir === right.dir && left.field.isEqual(right.field);\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Document } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { FieldPath } from '../model/path';\nimport {\n  arrayValueContains,\n  canonicalId,\n  isArray,\n  isReferenceValue,\n  typeOrder,\n  valueCompare,\n  valueEquals\n} from '../model/values';\nimport { Value as ProtoValue } from '../protos/firestore_proto_api';\nimport { debugAssert, fail } from '../util/assert';\n\n// The operator of a FieldFilter\nexport const enum Operator {\n  LESS_THAN = '<',\n  LESS_THAN_OR_EQUAL = '<=',\n  EQUAL = '==',\n  NOT_EQUAL = '!=',\n  GREATER_THAN = '>',\n  GREATER_THAN_OR_EQUAL = '>=',\n  ARRAY_CONTAINS = 'array-contains',\n  IN = 'in',\n  NOT_IN = 'not-in',\n  ARRAY_CONTAINS_ANY = 'array-contains-any'\n}\n\n// The operator of a CompositeFilter\nexport const enum CompositeOperator {\n  OR = 'or',\n  AND = 'and'\n}\n\nexport abstract class Filter {\n  abstract matches(doc: Document): boolean;\n\n  abstract getFlattenedFilters(): readonly FieldFilter[];\n\n  abstract getFilters(): Filter[];\n}\n\nexport class FieldFilter extends Filter {\n  protected constructor(\n    public readonly field: FieldPath,\n    public readonly op: Operator,\n    public readonly value: ProtoValue\n  ) {\n    super();\n  }\n\n  /**\n   * Creates a filter based on the provided arguments.\n   */\n  static create(\n    field: FieldPath,\n    op: Operator,\n    value: ProtoValue\n  ): FieldFilter {\n    if (field.isKeyField()) {\n      if (op === Operator.IN || op === Operator.NOT_IN) {\n        return this.createKeyFieldInFilter(field, op, value);\n      } else {\n        debugAssert(\n          isReferenceValue(value),\n          'Comparing on key, but filter value not a RefValue'\n        );\n        debugAssert(\n          op !== Operator.ARRAY_CONTAINS && op !== Operator.ARRAY_CONTAINS_ANY,\n          `'${op.toString()}' queries don't make sense on document keys.`\n        );\n        return new KeyFieldFilter(field, op, value);\n      }\n    } else if (op === Operator.ARRAY_CONTAINS) {\n      return new ArrayContainsFilter(field, value);\n    } else if (op === Operator.IN) {\n      debugAssert(\n        isArray(value),\n        'IN filter has invalid value: ' + value.toString()\n      );\n      return new InFilter(field, value);\n    } else if (op === Operator.NOT_IN) {\n      debugAssert(\n        isArray(value),\n        'NOT_IN filter has invalid value: ' + value.toString()\n      );\n      return new NotInFilter(field, value);\n    } else if (op === Operator.ARRAY_CONTAINS_ANY) {\n      debugAssert(\n        isArray(value),\n        'ARRAY_CONTAINS_ANY filter has invalid value: ' + value.toString()\n      );\n      return new ArrayContainsAnyFilter(field, value);\n    } else {\n      return new FieldFilter(field, op, value);\n    }\n  }\n\n  private static createKeyFieldInFilter(\n    field: FieldPath,\n    op: Operator.IN | Operator.NOT_IN,\n    value: ProtoValue\n  ): FieldFilter {\n    debugAssert(\n      isArray(value),\n      `Comparing on key with ${op.toString()}` +\n        ', but filter value not an ArrayValue'\n    );\n    debugAssert(\n      (value.arrayValue.values || []).every(elem => isReferenceValue(elem)),\n      `Comparing on key with ${op.toString()}` +\n        ', but an array value was not a RefValue'\n    );\n\n    return op === Operator.IN\n      ? new KeyFieldInFilter(field, value)\n      : new KeyFieldNotInFilter(field, value);\n  }\n\n  matches(doc: Document): boolean {\n    const other = doc.data.field(this.field);\n    // Types do not have to match in NOT_EQUAL filters.\n    if (this.op === Operator.NOT_EQUAL) {\n      return (\n        other !== null &&\n        this.matchesComparison(valueCompare(other!, this.value))\n      );\n    }\n\n    // Only compare types with matching backend order (such as double and int).\n    return (\n      other !== null &&\n      typeOrder(this.value) === typeOrder(other) &&\n      this.matchesComparison(valueCompare(other, this.value))\n    );\n  }\n\n  protected matchesComparison(comparison: number): boolean {\n    switch (this.op) {\n      case Operator.LESS_THAN:\n        return comparison < 0;\n      case Operator.LESS_THAN_OR_EQUAL:\n        return comparison <= 0;\n      case Operator.EQUAL:\n        return comparison === 0;\n      case Operator.NOT_EQUAL:\n        return comparison !== 0;\n      case Operator.GREATER_THAN:\n        return comparison > 0;\n      case Operator.GREATER_THAN_OR_EQUAL:\n        return comparison >= 0;\n      default:\n        return fail('Unknown FieldFilter operator: ' + this.op);\n    }\n  }\n\n  isInequality(): boolean {\n    return (\n      [\n        Operator.LESS_THAN,\n        Operator.LESS_THAN_OR_EQUAL,\n        Operator.GREATER_THAN,\n        Operator.GREATER_THAN_OR_EQUAL,\n        Operator.NOT_EQUAL,\n        Operator.NOT_IN\n      ].indexOf(this.op) >= 0\n    );\n  }\n\n  getFlattenedFilters(): readonly FieldFilter[] {\n    return [this];\n  }\n\n  getFilters(): Filter[] {\n    return [this];\n  }\n}\n\nexport class CompositeFilter extends Filter {\n  private memoizedFlattenedFilters: FieldFilter[] | null = null;\n\n  protected constructor(\n    public readonly filters: readonly Filter[],\n    public readonly op: CompositeOperator\n  ) {\n    super();\n  }\n\n  /**\n   * Creates a filter based on the provided arguments.\n   */\n  static create(filters: Filter[], op: CompositeOperator): CompositeFilter {\n    return new CompositeFilter(filters, op);\n  }\n\n  matches(doc: Document): boolean {\n    if (compositeFilterIsConjunction(this)) {\n      // For conjunctions, all filters must match, so return false if any filter doesn't match.\n      return this.filters.find(filter => !filter.matches(doc)) === undefined;\n    } else {\n      // For disjunctions, at least one filter should match.\n      return this.filters.find(filter => filter.matches(doc)) !== undefined;\n    }\n  }\n\n  getFlattenedFilters(): readonly FieldFilter[] {\n    if (this.memoizedFlattenedFilters !== null) {\n      return this.memoizedFlattenedFilters;\n    }\n\n    this.memoizedFlattenedFilters = this.filters.reduce((result, subfilter) => {\n      return result.concat(subfilter.getFlattenedFilters());\n    }, [] as FieldFilter[]);\n\n    return this.memoizedFlattenedFilters;\n  }\n\n  // Returns a mutable copy of `this.filters`\n  getFilters(): Filter[] {\n    return Object.assign([], this.filters);\n  }\n}\n\nexport function compositeFilterIsConjunction(\n  compositeFilter: CompositeFilter\n): boolean {\n  return compositeFilter.op === CompositeOperator.AND;\n}\n\nexport function compositeFilterIsDisjunction(\n  compositeFilter: CompositeFilter\n): boolean {\n  return compositeFilter.op === CompositeOperator.OR;\n}\n\n/**\n * Returns true if this filter is a conjunction of field filters only. Returns false otherwise.\n */\nexport function compositeFilterIsFlatConjunction(\n  compositeFilter: CompositeFilter\n): boolean {\n  return (\n    compositeFilterIsFlat(compositeFilter) &&\n    compositeFilterIsConjunction(compositeFilter)\n  );\n}\n\n/**\n * Returns true if this filter does not contain any composite filters. Returns false otherwise.\n */\nexport function compositeFilterIsFlat(\n  compositeFilter: CompositeFilter\n): boolean {\n  for (const filter of compositeFilter.filters) {\n    if (filter instanceof CompositeFilter) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function canonifyFilter(filter: Filter): string {\n  debugAssert(\n    filter instanceof FieldFilter || filter instanceof CompositeFilter,\n    'canonifyFilter() only supports FieldFilters and CompositeFilters'\n  );\n\n  if (filter instanceof FieldFilter) {\n    // TODO(b/29183165): Technically, this won't be unique if two values have\n    // the same description, such as the int 3 and the string \"3\". So we should\n    // add the types in here somehow, too.\n    return (\n      filter.field.canonicalString() +\n      filter.op.toString() +\n      canonicalId(filter.value)\n    );\n  } else if (compositeFilterIsFlatConjunction(filter)) {\n    // Older SDK versions use an implicit AND operation between their filters.\n    // In the new SDK versions, the developer may use an explicit AND filter.\n    // To stay consistent with the old usages, we add a special case to ensure\n    // the canonical ID for these two are the same. For example:\n    // `col.whereEquals(\"a\", 1).whereEquals(\"b\", 2)` should have the same\n    // canonical ID as `col.where(and(equals(\"a\",1), equals(\"b\",2)))`.\n    return filter.filters.map(filter => canonifyFilter(filter)).join(',');\n  } else {\n    // filter instanceof CompositeFilter\n    const canonicalIdsString = filter.filters\n      .map(filter => canonifyFilter(filter))\n      .join(',');\n    return `${filter.op}(${canonicalIdsString})`;\n  }\n}\n\nexport function filterEquals(f1: Filter, f2: Filter): boolean {\n  if (f1 instanceof FieldFilter) {\n    return fieldFilterEquals(f1, f2);\n  } else if (f1 instanceof CompositeFilter) {\n    return compositeFilterEquals(f1, f2);\n  } else {\n    fail('Only FieldFilters and CompositeFilters can be compared');\n  }\n}\n\nexport function fieldFilterEquals(f1: FieldFilter, f2: Filter): boolean {\n  return (\n    f2 instanceof FieldFilter &&\n    f1.op === f2.op &&\n    f1.field.isEqual(f2.field) &&\n    valueEquals(f1.value, f2.value)\n  );\n}\n\nexport function compositeFilterEquals(\n  f1: CompositeFilter,\n  f2: Filter\n): boolean {\n  if (\n    f2 instanceof CompositeFilter &&\n    f1.op === f2.op &&\n    f1.filters.length === f2.filters.length\n  ) {\n    const subFiltersMatch: boolean = f1.filters.reduce(\n      (result: boolean, f1Filter: Filter, index: number): boolean =>\n        result && filterEquals(f1Filter, f2.filters[index]),\n      true\n    );\n\n    return subFiltersMatch;\n  }\n\n  return false;\n}\n\n/**\n * Returns a new composite filter that contains all filter from\n * `compositeFilter` plus all the given filters in `otherFilters`.\n */\nexport function compositeFilterWithAddedFilters(\n  compositeFilter: CompositeFilter,\n  otherFilters: Filter[]\n): CompositeFilter {\n  const mergedFilters = compositeFilter.filters.concat(otherFilters);\n  return CompositeFilter.create(mergedFilters, compositeFilter.op);\n}\n\n/** Returns a debug description for `filter`. */\nexport function stringifyFilter(filter: Filter): string {\n  debugAssert(\n    filter instanceof FieldFilter || filter instanceof CompositeFilter,\n    'stringifyFilter() only supports FieldFilters and CompositeFilters'\n  );\n  if (filter instanceof FieldFilter) {\n    return stringifyFieldFilter(filter);\n  } else if (filter instanceof CompositeFilter) {\n    return stringifyCompositeFilter(filter);\n  } else {\n    return 'Filter';\n  }\n}\n\nexport function stringifyCompositeFilter(filter: CompositeFilter): string {\n  return (\n    filter.op.toString() +\n    ` {` +\n    filter.getFilters().map(stringifyFilter).join(' ,') +\n    '}'\n  );\n}\n\nexport function stringifyFieldFilter(filter: FieldFilter): string {\n  return `${filter.field.canonicalString()} ${filter.op} ${canonicalId(\n    filter.value\n  )}`;\n}\n\n/** Filter that matches on key fields (i.e. '__name__'). */\nexport class KeyFieldFilter extends FieldFilter {\n  private readonly key: DocumentKey;\n\n  constructor(field: FieldPath, op: Operator, value: ProtoValue) {\n    super(field, op, value);\n    debugAssert(\n      isReferenceValue(value),\n      'KeyFieldFilter expects a ReferenceValue'\n    );\n    this.key = DocumentKey.fromName(value.referenceValue);\n  }\n\n  matches(doc: Document): boolean {\n    const comparison = DocumentKey.comparator(doc.key, this.key);\n    return this.matchesComparison(comparison);\n  }\n}\n\n/** Filter that matches on key fields within an array. */\nexport class KeyFieldInFilter extends FieldFilter {\n  private readonly keys: DocumentKey[];\n\n  constructor(field: FieldPath, value: ProtoValue) {\n    super(field, Operator.IN, value);\n    this.keys = extractDocumentKeysFromArrayValue(Operator.IN, value);\n  }\n\n  matches(doc: Document): boolean {\n    return this.keys.some(key => key.isEqual(doc.key));\n  }\n}\n\n/** Filter that matches on key fields not present within an array. */\nexport class KeyFieldNotInFilter extends FieldFilter {\n  private readonly keys: DocumentKey[];\n\n  constructor(field: FieldPath, value: ProtoValue) {\n    super(field, Operator.NOT_IN, value);\n    this.keys = extractDocumentKeysFromArrayValue(Operator.NOT_IN, value);\n  }\n\n  matches(doc: Document): boolean {\n    return !this.keys.some(key => key.isEqual(doc.key));\n  }\n}\n\nfunction extractDocumentKeysFromArrayValue(\n  op: Operator.IN | Operator.NOT_IN,\n  value: ProtoValue\n): DocumentKey[] {\n  debugAssert(\n    isArray(value),\n    'KeyFieldInFilter/KeyFieldNotInFilter expects an ArrayValue'\n  );\n  return (value.arrayValue?.values || []).map(v => {\n    debugAssert(\n      isReferenceValue(v),\n      `Comparing on key with ${op.toString()}, but an array value was not ` +\n        `a ReferenceValue`\n    );\n    return DocumentKey.fromName(v.referenceValue);\n  });\n}\n\n/** A Filter that implements the array-contains operator. */\nexport class ArrayContainsFilter extends FieldFilter {\n  constructor(field: FieldPath, value: ProtoValue) {\n    super(field, Operator.ARRAY_CONTAINS, value);\n  }\n\n  matches(doc: Document): boolean {\n    const other = doc.data.field(this.field);\n    return isArray(other) && arrayValueContains(other.arrayValue, this.value);\n  }\n}\n\n/** A Filter that implements the IN operator. */\nexport class InFilter extends FieldFilter {\n  constructor(field: FieldPath, value: ProtoValue) {\n    super(field, Operator.IN, value);\n    debugAssert(isArray(value), 'InFilter expects an ArrayValue');\n  }\n\n  matches(doc: Document): boolean {\n    const other = doc.data.field(this.field);\n    return other !== null && arrayValueContains(this.value.arrayValue!, other);\n  }\n}\n\n/** A Filter that implements the not-in operator. */\nexport class NotInFilter extends FieldFilter {\n  constructor(field: FieldPath, value: ProtoValue) {\n    super(field, Operator.NOT_IN, value);\n    debugAssert(isArray(value), 'NotInFilter expects an ArrayValue');\n  }\n\n  matches(doc: Document): boolean {\n    if (\n      arrayValueContains(this.value.arrayValue!, { nullValue: 'NULL_VALUE' })\n    ) {\n      return false;\n    }\n    const other = doc.data.field(this.field);\n    return other !== null && !arrayValueContains(this.value.arrayValue!, other);\n  }\n}\n\n/** A Filter that implements the array-contains-any operator. */\nexport class ArrayContainsAnyFilter extends FieldFilter {\n  constructor(field: FieldPath, value: ProtoValue) {\n    super(field, Operator.ARRAY_CONTAINS_ANY, value);\n    debugAssert(isArray(value), 'ArrayContainsAnyFilter expects an ArrayValue');\n  }\n\n  matches(doc: Document): boolean {\n    const other = doc.data.field(this.field);\n    if (!isArray(other) || !other.arrayValue.values) {\n      return false;\n    }\n    return other.arrayValue.values.some(val =>\n      arrayValueContains(this.value.arrayValue!, val)\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DocumentKey } from '../model/document_key';\nimport {\n  FieldIndex,\n  fieldIndexGetArraySegment,\n  fieldIndexGetDirectionalSegments,\n  IndexKind\n} from '../model/field_index';\nimport { FieldPath, ResourcePath } from '../model/path';\nimport {\n  canonicalId,\n  MAX_VALUE,\n  MIN_VALUE,\n  lowerBoundCompare,\n  upperBoundCompare,\n  valuesGetLowerBound,\n  valuesGetUpperBound\n} from '../model/values';\nimport { Value as ProtoValue } from '../protos/firestore_proto_api';\nimport { debugCast } from '../util/assert';\nimport { SortedSet } from '../util/sorted_set';\nimport { isNullOrUndefined } from '../util/types';\n\nimport { Bound, boundEquals } from './bound';\nimport {\n  Filter,\n  FieldFilter,\n  canonifyFilter,\n  stringifyFilter,\n  filterEquals,\n  Operator\n} from './filter';\nimport {\n  canonifyOrderBy,\n  OrderBy,\n  orderByEquals,\n  stringifyOrderBy\n} from './order_by';\n\n/**\n * A Target represents the WatchTarget representation of a Query, which is used\n * by the LocalStore and the RemoteStore to keep track of and to execute\n * backend queries. While a Query can represent multiple Targets, each Targets\n * maps to a single WatchTarget in RemoteStore and a single TargetData entry\n * in persistence.\n */\nexport interface Target {\n  readonly path: ResourcePath;\n  readonly collectionGroup: string | null;\n  readonly orderBy: OrderBy[];\n  readonly filters: Filter[];\n  readonly limit: number | null;\n  readonly startAt: Bound | null;\n  readonly endAt: Bound | null;\n}\n\n// Visible for testing\nexport class TargetImpl implements Target {\n  memoizedCanonicalId: string | null = null;\n  constructor(\n    readonly path: ResourcePath,\n    readonly collectionGroup: string | null = null,\n    readonly orderBy: OrderBy[] = [],\n    readonly filters: Filter[] = [],\n    readonly limit: number | null = null,\n    readonly startAt: Bound | null = null,\n    readonly endAt: Bound | null = null\n  ) {}\n}\n\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */\nexport function newTarget(\n  path: ResourcePath,\n  collectionGroup: string | null = null,\n  orderBy: OrderBy[] = [],\n  filters: Filter[] = [],\n  limit: number | null = null,\n  startAt: Bound | null = null,\n  endAt: Bound | null = null\n): Target {\n  return new TargetImpl(\n    path,\n    collectionGroup,\n    orderBy,\n    filters,\n    limit,\n    startAt,\n    endAt\n  );\n}\n\nexport function canonifyTarget(target: Target): string {\n  const targetImpl = debugCast(target, TargetImpl);\n\n  if (targetImpl.memoizedCanonicalId === null) {\n    let str = targetImpl.path.canonicalString();\n    if (targetImpl.collectionGroup !== null) {\n      str += '|cg:' + targetImpl.collectionGroup;\n    }\n    str += '|f:';\n    str += targetImpl.filters.map(f => canonifyFilter(f)).join(',');\n    str += '|ob:';\n    str += targetImpl.orderBy.map(o => canonifyOrderBy(o)).join(',');\n\n    if (!isNullOrUndefined(targetImpl.limit)) {\n      str += '|l:';\n      str += targetImpl.limit!;\n    }\n    if (targetImpl.startAt) {\n      str += '|lb:';\n      str += targetImpl.startAt.inclusive ? 'b:' : 'a:';\n      str += targetImpl.startAt.position.map(p => canonicalId(p)).join(',');\n    }\n    if (targetImpl.endAt) {\n      str += '|ub:';\n      str += targetImpl.endAt.inclusive ? 'a:' : 'b:';\n      str += targetImpl.endAt.position.map(p => canonicalId(p)).join(',');\n    }\n    targetImpl.memoizedCanonicalId = str;\n  }\n  return targetImpl.memoizedCanonicalId;\n}\n\nexport function stringifyTarget(target: Target): string {\n  let str = target.path.canonicalString();\n  if (target.collectionGroup !== null) {\n    str += ' collectionGroup=' + target.collectionGroup;\n  }\n  if (target.filters.length > 0) {\n    str += `, filters: [${target.filters\n      .map(f => stringifyFilter(f))\n      .join(', ')}]`;\n  }\n  if (!isNullOrUndefined(target.limit)) {\n    str += ', limit: ' + target.limit;\n  }\n  if (target.orderBy.length > 0) {\n    str += `, orderBy: [${target.orderBy\n      .map(o => stringifyOrderBy(o))\n      .join(', ')}]`;\n  }\n  if (target.startAt) {\n    str += ', startAt: ';\n    str += target.startAt.inclusive ? 'b:' : 'a:';\n    str += target.startAt.position.map(p => canonicalId(p)).join(',');\n  }\n  if (target.endAt) {\n    str += ', endAt: ';\n    str += target.endAt.inclusive ? 'a:' : 'b:';\n    str += target.endAt.position.map(p => canonicalId(p)).join(',');\n  }\n  return `Target(${str})`;\n}\n\nexport function targetEquals(left: Target, right: Target): boolean {\n  if (left.limit !== right.limit) {\n    return false;\n  }\n\n  if (left.orderBy.length !== right.orderBy.length) {\n    return false;\n  }\n\n  for (let i = 0; i < left.orderBy.length; i++) {\n    if (!orderByEquals(left.orderBy[i], right.orderBy[i])) {\n      return false;\n    }\n  }\n\n  if (left.filters.length !== right.filters.length) {\n    return false;\n  }\n\n  for (let i = 0; i < left.filters.length; i++) {\n    if (!filterEquals(left.filters[i], right.filters[i])) {\n      return false;\n    }\n  }\n\n  if (left.collectionGroup !== right.collectionGroup) {\n    return false;\n  }\n\n  if (!left.path.isEqual(right.path)) {\n    return false;\n  }\n\n  if (!boundEquals(left.startAt, right.startAt)) {\n    return false;\n  }\n\n  return boundEquals(left.endAt, right.endAt);\n}\n\nexport function targetIsDocumentTarget(target: Target): boolean {\n  return (\n    DocumentKey.isDocumentKey(target.path) &&\n    target.collectionGroup === null &&\n    target.filters.length === 0\n  );\n}\n\n/** Returns the field filters that target the given field path. */\nexport function targetGetFieldFiltersForPath(\n  target: Target,\n  path: FieldPath\n): FieldFilter[] {\n  return target.filters.filter(\n    f => f instanceof FieldFilter && f.field.isEqual(path)\n  ) as FieldFilter[];\n}\n\n/**\n * Returns the values that are used in ARRAY_CONTAINS or ARRAY_CONTAINS_ANY\n * filters. Returns `null` if there are no such filters.\n */\nexport function targetGetArrayValues(\n  target: Target,\n  fieldIndex: FieldIndex\n): ProtoValue[] | null {\n  const segment = fieldIndexGetArraySegment(fieldIndex);\n  if (segment === undefined) {\n    return null;\n  }\n\n  for (const fieldFilter of targetGetFieldFiltersForPath(\n    target,\n    segment.fieldPath\n  )) {\n    switch (fieldFilter.op) {\n      case Operator.ARRAY_CONTAINS_ANY:\n        return fieldFilter.value.arrayValue!.values || [];\n      case Operator.ARRAY_CONTAINS:\n        return [fieldFilter.value];\n      default:\n      // Remaining filters are not array filters.\n    }\n  }\n  return null;\n}\n\n/**\n * Returns the list of values that are used in != or NOT_IN filters. Returns\n * `null` if there are no such filters.\n */\nexport function targetGetNotInValues(\n  target: Target,\n  fieldIndex: FieldIndex\n): ProtoValue[] | null {\n  const values = new Map</* fieldPath = */ string, ProtoValue>();\n\n  for (const segment of fieldIndexGetDirectionalSegments(fieldIndex)) {\n    for (const fieldFilter of targetGetFieldFiltersForPath(\n      target,\n      segment.fieldPath\n    )) {\n      switch (fieldFilter.op) {\n        case Operator.EQUAL:\n        case Operator.IN:\n          // Encode equality prefix, which is encoded in the index value before\n          // the inequality (e.g. `a == 'a' && b != 'b'` is encoded to\n          // `value != 'ab'`).\n          values.set(segment.fieldPath.canonicalString(), fieldFilter.value);\n          break;\n        case Operator.NOT_IN:\n        case Operator.NOT_EQUAL:\n          // NotIn/NotEqual is always a suffix. There cannot be any remaining\n          // segments and hence we can return early here.\n          values.set(segment.fieldPath.canonicalString(), fieldFilter.value);\n          return Array.from(values.values());\n        default:\n        // Remaining filters cannot be used as notIn bounds.\n      }\n    }\n  }\n\n  return null;\n}\n\n/**\n * Returns a lower bound of field values that can be used as a starting point to\n * scan the index defined by `fieldIndex`. Returns `MIN_VALUE` if no lower bound\n * exists.\n */\nexport function targetGetLowerBound(\n  target: Target,\n  fieldIndex: FieldIndex\n): Bound {\n  const values: ProtoValue[] = [];\n  let inclusive = true;\n\n  // For each segment, retrieve a lower bound if there is a suitable filter or\n  // startAt.\n  for (const segment of fieldIndexGetDirectionalSegments(fieldIndex)) {\n    const segmentBound =\n      segment.kind === IndexKind.ASCENDING\n        ? targetGetAscendingBound(target, segment.fieldPath, target.startAt)\n        : targetGetDescendingBound(target, segment.fieldPath, target.startAt);\n\n    values.push(segmentBound.value);\n    inclusive &&= segmentBound.inclusive;\n  }\n  return new Bound(values, inclusive);\n}\n\n/**\n * Returns an upper bound of field values that can be used as an ending point\n * when scanning the index defined by `fieldIndex`. Returns `MAX_VALUE` if no\n * upper bound exists.\n */\nexport function targetGetUpperBound(\n  target: Target,\n  fieldIndex: FieldIndex\n): Bound {\n  const values: ProtoValue[] = [];\n  let inclusive = true;\n\n  // For each segment, retrieve an upper bound if there is a suitable filter or\n  // endAt.\n  for (const segment of fieldIndexGetDirectionalSegments(fieldIndex)) {\n    const segmentBound =\n      segment.kind === IndexKind.ASCENDING\n        ? targetGetDescendingBound(target, segment.fieldPath, target.endAt)\n        : targetGetAscendingBound(target, segment.fieldPath, target.endAt);\n\n    values.push(segmentBound.value);\n    inclusive &&= segmentBound.inclusive;\n  }\n\n  return new Bound(values, inclusive);\n}\n\n/**\n * Returns the value to use as the lower bound for ascending index segment at\n * the provided `fieldPath` (or the upper bound for an descending segment).\n */\nfunction targetGetAscendingBound(\n  target: Target,\n  fieldPath: FieldPath,\n  bound: Bound | null\n): { value: ProtoValue; inclusive: boolean } {\n  let value: ProtoValue = MIN_VALUE;\n\n  let inclusive = true;\n\n  // Process all filters to find a value for the current field segment\n  for (const fieldFilter of targetGetFieldFiltersForPath(target, fieldPath)) {\n    let filterValue: ProtoValue = MIN_VALUE;\n    let filterInclusive = true;\n\n    switch (fieldFilter.op) {\n      case Operator.LESS_THAN:\n      case Operator.LESS_THAN_OR_EQUAL:\n        filterValue = valuesGetLowerBound(fieldFilter.value);\n        break;\n      case Operator.EQUAL:\n      case Operator.IN:\n      case Operator.GREATER_THAN_OR_EQUAL:\n        filterValue = fieldFilter.value;\n        break;\n      case Operator.GREATER_THAN:\n        filterValue = fieldFilter.value;\n        filterInclusive = false;\n        break;\n      case Operator.NOT_EQUAL:\n      case Operator.NOT_IN:\n        filterValue = MIN_VALUE;\n        break;\n      default:\n      // Remaining filters cannot be used as lower bounds.\n    }\n\n    if (\n      lowerBoundCompare(\n        { value, inclusive },\n        { value: filterValue, inclusive: filterInclusive }\n      ) < 0\n    ) {\n      value = filterValue;\n      inclusive = filterInclusive;\n    }\n  }\n\n  // If there is an additional bound, compare the values against the existing\n  // range to see if we can narrow the scope.\n  if (bound !== null) {\n    for (let i = 0; i < target.orderBy.length; ++i) {\n      const orderBy = target.orderBy[i];\n      if (orderBy.field.isEqual(fieldPath)) {\n        const cursorValue = bound.position[i];\n        if (\n          lowerBoundCompare(\n            { value, inclusive },\n            { value: cursorValue, inclusive: bound.inclusive }\n          ) < 0\n        ) {\n          value = cursorValue;\n          inclusive = bound.inclusive;\n        }\n        break;\n      }\n    }\n  }\n\n  return { value, inclusive };\n}\n\n/**\n * Returns the value to use as the upper bound for ascending index segment at\n * the provided `fieldPath` (or the lower bound for a descending segment).\n */\nfunction targetGetDescendingBound(\n  target: Target,\n  fieldPath: FieldPath,\n  bound: Bound | null\n): { value: ProtoValue; inclusive: boolean } {\n  let value: ProtoValue = MAX_VALUE;\n  let inclusive = true;\n\n  // Process all filters to find a value for the current field segment\n  for (const fieldFilter of targetGetFieldFiltersForPath(target, fieldPath)) {\n    let filterValue: ProtoValue = MAX_VALUE;\n    let filterInclusive = true;\n\n    switch (fieldFilter.op) {\n      case Operator.GREATER_THAN_OR_EQUAL:\n      case Operator.GREATER_THAN:\n        filterValue = valuesGetUpperBound(fieldFilter.value);\n        filterInclusive = false;\n        break;\n      case Operator.EQUAL:\n      case Operator.IN:\n      case Operator.LESS_THAN_OR_EQUAL:\n        filterValue = fieldFilter.value;\n        break;\n      case Operator.LESS_THAN:\n        filterValue = fieldFilter.value;\n        filterInclusive = false;\n        break;\n      case Operator.NOT_EQUAL:\n      case Operator.NOT_IN:\n        filterValue = MAX_VALUE;\n        break;\n      default:\n      // Remaining filters cannot be used as upper bounds.\n    }\n\n    if (\n      upperBoundCompare(\n        { value, inclusive },\n        { value: filterValue, inclusive: filterInclusive }\n      ) > 0\n    ) {\n      value = filterValue;\n      inclusive = filterInclusive;\n    }\n  }\n\n  // If there is an additional bound, compare the values against the existing\n  // range to see if we can narrow the scope.\n  if (bound !== null) {\n    for (let i = 0; i < target.orderBy.length; ++i) {\n      const orderBy = target.orderBy[i];\n      if (orderBy.field.isEqual(fieldPath)) {\n        const cursorValue = bound.position[i];\n        if (\n          upperBoundCompare(\n            { value, inclusive },\n            { value: cursorValue, inclusive: bound.inclusive }\n          ) > 0\n        ) {\n          value = cursorValue;\n          inclusive = bound.inclusive;\n        }\n        break;\n      }\n    }\n  }\n\n  return { value, inclusive };\n}\n\n/** Returns the number of segments of a perfect index for this target. */\nexport function targetGetSegmentCount(target: Target): number {\n  let fields = new SortedSet<FieldPath>(FieldPath.comparator);\n  let hasArraySegment = false;\n\n  for (const filter of target.filters) {\n    for (const subFilter of filter.getFlattenedFilters()) {\n      // __name__ is not an explicit segment of any index, so we don't need to\n      // count it.\n      if (subFilter.field.isKeyField()) {\n        continue;\n      }\n\n      // ARRAY_CONTAINS or ARRAY_CONTAINS_ANY filters must be counted separately.\n      // For instance, it is possible to have an index for \"a ARRAY a ASC\". Even\n      // though these are on the same field, they should be counted as two\n      // separate segments in an index.\n      if (\n        subFilter.op === Operator.ARRAY_CONTAINS ||\n        subFilter.op === Operator.ARRAY_CONTAINS_ANY\n      ) {\n        hasArraySegment = true;\n      } else {\n        fields = fields.add(subFilter.field);\n      }\n    }\n  }\n\n  for (const orderBy of target.orderBy) {\n    // __name__ is not an explicit segment of any index, so we don't need to\n    // count it.\n    if (!orderBy.field.isKeyField()) {\n      fields = fields.add(orderBy.field);\n    }\n  }\n\n  return fields.size + (hasArraySegment ? 1 : 0);\n}\n\nexport function targetHasLimit(target: Target): boolean {\n  return target.limit !== null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { compareDocumentsByField, Document } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { FieldPath, ResourcePath } from '../model/path';\nimport { debugAssert, debugCast, fail } from '../util/assert';\nimport { SortedSet } from '../util/sorted_set';\n\nimport {\n  Bound,\n  boundSortsAfterDocument,\n  boundSortsBeforeDocument\n} from './bound';\nimport { FieldFilter, Filter } from './filter';\nimport { Direction, OrderBy } from './order_by';\nimport {\n  canonifyTarget,\n  newTarget,\n  stringifyTarget,\n  Target,\n  targetEquals\n} from './target';\n\nexport const enum LimitType {\n  First = 'F',\n  Last = 'L'\n}\n\n/**\n * The Query interface defines all external properties of a query.\n *\n * QueryImpl implements this interface to provide memoization for `queryNormalizedOrderBy`\n * and `queryToTarget`.\n */\nexport interface Query {\n  readonly path: ResourcePath;\n  readonly collectionGroup: string | null;\n  readonly explicitOrderBy: OrderBy[];\n  readonly filters: Filter[];\n  readonly limit: number | null;\n  readonly limitType: LimitType;\n  readonly startAt: Bound | null;\n  readonly endAt: Bound | null;\n}\n\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */\nexport class QueryImpl implements Query {\n  memoizedNormalizedOrderBy: OrderBy[] | null = null;\n\n  // The corresponding `Target` of this `Query` instance, for use with\n  // non-aggregate queries.\n  memoizedTarget: Target | null = null;\n\n  // The corresponding `Target` of this `Query` instance, for use with\n  // aggregate queries. Unlike targets for non-aggregate queries,\n  // aggregate query targets do not contain normalized order-bys, they only\n  // contain explicit order-bys.\n  memoizedAggregateTarget: Target | null = null;\n\n  /**\n   * Initializes a Query with a path and optional additional query constraints.\n   * Path must currently be empty if this is a collection group query.\n   */\n  constructor(\n    readonly path: ResourcePath,\n    readonly collectionGroup: string | null = null,\n    readonly explicitOrderBy: OrderBy[] = [],\n    readonly filters: Filter[] = [],\n    readonly limit: number | null = null,\n    readonly limitType: LimitType = LimitType.First,\n    readonly startAt: Bound | null = null,\n    readonly endAt: Bound | null = null\n  ) {\n    if (this.startAt) {\n      debugAssert(\n        this.startAt.position.length <= queryNormalizedOrderBy(this).length,\n        'Bound is longer than orderBy'\n      );\n    }\n    if (this.endAt) {\n      debugAssert(\n        this.endAt.position.length <= queryNormalizedOrderBy(this).length,\n        'Bound is longer than orderBy'\n      );\n    }\n  }\n}\n\n/** Creates a new Query instance with the options provided. */\nexport function newQuery(\n  path: ResourcePath,\n  collectionGroup: string | null,\n  explicitOrderBy: OrderBy[],\n  filters: Filter[],\n  limit: number | null,\n  limitType: LimitType,\n  startAt: Bound | null,\n  endAt: Bound | null\n): Query {\n  return new QueryImpl(\n    path,\n    collectionGroup,\n    explicitOrderBy,\n    filters,\n    limit,\n    limitType,\n    startAt,\n    endAt\n  );\n}\n\n/** Creates a new Query for a query that matches all documents at `path` */\nexport function newQueryForPath(path: ResourcePath): Query {\n  return new QueryImpl(path);\n}\n\n/**\n * Helper to convert a collection group query into a collection query at a\n * specific path. This is used when executing collection group queries, since\n * we have to split the query into a set of collection queries at multiple\n * paths.\n */\nexport function asCollectionQueryAtPath(\n  query: Query,\n  path: ResourcePath\n): Query {\n  return new QueryImpl(\n    path,\n    /*collectionGroup=*/ null,\n    query.explicitOrderBy.slice(),\n    query.filters.slice(),\n    query.limit,\n    query.limitType,\n    query.startAt,\n    query.endAt\n  );\n}\n\n/**\n * Returns true if this query does not specify any query constraints that\n * could remove results.\n */\nexport function queryMatchesAllDocuments(query: Query): boolean {\n  return (\n    query.filters.length === 0 &&\n    query.limit === null &&\n    query.startAt == null &&\n    query.endAt == null &&\n    (query.explicitOrderBy.length === 0 ||\n      (query.explicitOrderBy.length === 1 &&\n        query.explicitOrderBy[0].field.isKeyField()))\n  );\n}\n\n// Returns the sorted set of inequality filter fields used in this query.\nexport function getInequalityFilterFields(query: Query): SortedSet<FieldPath> {\n  let result = new SortedSet<FieldPath>(FieldPath.comparator);\n  query.filters.forEach((filter: Filter) => {\n    const subFilters = filter.getFlattenedFilters();\n    subFilters.forEach((filter: FieldFilter) => {\n      if (filter.isInequality()) {\n        result = result.add(filter.field);\n      }\n    });\n  });\n  return result;\n}\n\n/**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\nexport function newQueryForCollectionGroup(collectionId: string): Query {\n  return new QueryImpl(ResourcePath.emptyPath(), collectionId);\n}\n\n/**\n * Returns whether the query matches a single document by path (rather than a\n * collection).\n */\nexport function isDocumentQuery(query: Query): boolean {\n  return (\n    DocumentKey.isDocumentKey(query.path) &&\n    query.collectionGroup === null &&\n    query.filters.length === 0\n  );\n}\n\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\nexport function isCollectionGroupQuery(query: Query): boolean {\n  return query.collectionGroup !== null;\n}\n\n/**\n * Returns the normalized order-by constraint that is used to execute the Query,\n * which can be different from the order-by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`). The normalized order-by\n * includes implicit order-bys in addition to the explicit user provided\n * order-bys.\n */\nexport function queryNormalizedOrderBy(query: Query): OrderBy[] {\n  const queryImpl = debugCast(query, QueryImpl);\n  if (queryImpl.memoizedNormalizedOrderBy === null) {\n    queryImpl.memoizedNormalizedOrderBy = [];\n    const fieldsNormalized = new Set<string>();\n\n    // Any explicit order by fields should be added as is.\n    for (const orderBy of queryImpl.explicitOrderBy) {\n      queryImpl.memoizedNormalizedOrderBy.push(orderBy);\n      fieldsNormalized.add(orderBy.field.canonicalString());\n    }\n\n    // The order of the implicit ordering always matches the last explicit order by.\n    const lastDirection =\n      queryImpl.explicitOrderBy.length > 0\n        ? queryImpl.explicitOrderBy[queryImpl.explicitOrderBy.length - 1].dir\n        : Direction.ASCENDING;\n\n    // Any inequality fields not explicitly ordered should be implicitly ordered in a lexicographical\n    // order. When there are multiple inequality filters on the same field, the field should be added\n    // only once.\n    // Note: `SortedSet<FieldPath>` sorts the key field before other fields. However, we want the key\n    // field to be sorted last.\n    const inequalityFields: SortedSet<FieldPath> =\n      getInequalityFilterFields(queryImpl);\n    inequalityFields.forEach(field => {\n      if (\n        !fieldsNormalized.has(field.canonicalString()) &&\n        !field.isKeyField()\n      ) {\n        queryImpl.memoizedNormalizedOrderBy!.push(\n          new OrderBy(field, lastDirection)\n        );\n      }\n    });\n\n    // Add the document key field to the last if it is not explicitly ordered.\n    if (!fieldsNormalized.has(FieldPath.keyField().canonicalString())) {\n      queryImpl.memoizedNormalizedOrderBy.push(\n        new OrderBy(FieldPath.keyField(), lastDirection)\n      );\n    }\n  }\n  return queryImpl.memoizedNormalizedOrderBy;\n}\n\n/**\n * Converts this `Query` instance to its corresponding `Target` representation.\n */\nexport function queryToTarget(query: Query): Target {\n  const queryImpl = debugCast(query, QueryImpl);\n  if (!queryImpl.memoizedTarget) {\n    queryImpl.memoizedTarget = _queryToTarget(\n      queryImpl,\n      queryNormalizedOrderBy(query)\n    );\n  }\n\n  return queryImpl.memoizedTarget;\n}\n\n/**\n * Converts this `Query` instance to its corresponding `Target` representation,\n * for use within an aggregate query. Unlike targets for non-aggregate queries,\n * aggregate query targets do not contain normalized order-bys, they only\n * contain explicit order-bys.\n */\nexport function queryToAggregateTarget(query: Query): Target {\n  const queryImpl = debugCast(query, QueryImpl);\n\n  if (!queryImpl.memoizedAggregateTarget) {\n    // Do not include implicit order-bys for aggregate queries.\n    queryImpl.memoizedAggregateTarget = _queryToTarget(\n      queryImpl,\n      query.explicitOrderBy\n    );\n  }\n\n  return queryImpl.memoizedAggregateTarget;\n}\n\nfunction _queryToTarget(queryImpl: QueryImpl, orderBys: OrderBy[]): Target {\n  if (queryImpl.limitType === LimitType.First) {\n    return newTarget(\n      queryImpl.path,\n      queryImpl.collectionGroup,\n      orderBys,\n      queryImpl.filters,\n      queryImpl.limit,\n      queryImpl.startAt,\n      queryImpl.endAt\n    );\n  } else {\n    // Flip the orderBy directions since we want the last results\n    orderBys = orderBys.map(orderBy => {\n      const dir =\n        orderBy.dir === Direction.DESCENDING\n          ? Direction.ASCENDING\n          : Direction.DESCENDING;\n      return new OrderBy(orderBy.field, dir);\n    });\n\n    // We need to swap the cursors to match the now-flipped query ordering.\n    const startAt = queryImpl.endAt\n      ? new Bound(queryImpl.endAt.position, queryImpl.endAt.inclusive)\n      : null;\n    const endAt = queryImpl.startAt\n      ? new Bound(queryImpl.startAt.position, queryImpl.startAt.inclusive)\n      : null;\n\n    // Now return as a LimitType.First query.\n    return newTarget(\n      queryImpl.path,\n      queryImpl.collectionGroup,\n      orderBys,\n      queryImpl.filters,\n      queryImpl.limit,\n      startAt,\n      endAt\n    );\n  }\n}\n\nexport function queryWithAddedFilter(query: Query, filter: Filter): Query {\n  debugAssert(\n    !isDocumentQuery(query),\n    'No filtering allowed for document query'\n  );\n\n  const newFilters = query.filters.concat([filter]);\n  return new QueryImpl(\n    query.path,\n    query.collectionGroup,\n    query.explicitOrderBy.slice(),\n    newFilters,\n    query.limit,\n    query.limitType,\n    query.startAt,\n    query.endAt\n  );\n}\n\nexport function queryWithAddedOrderBy(query: Query, orderBy: OrderBy): Query {\n  debugAssert(\n    !query.startAt && !query.endAt,\n    'Bounds must be set after orderBy'\n  );\n  // TODO(dimond): validate that orderBy does not list the same key twice.\n  const newOrderBy = query.explicitOrderBy.concat([orderBy]);\n  return new QueryImpl(\n    query.path,\n    query.collectionGroup,\n    newOrderBy,\n    query.filters.slice(),\n    query.limit,\n    query.limitType,\n    query.startAt,\n    query.endAt\n  );\n}\n\nexport function queryWithLimit(\n  query: Query,\n  limit: number | null,\n  limitType: LimitType\n): Query {\n  return new QueryImpl(\n    query.path,\n    query.collectionGroup,\n    query.explicitOrderBy.slice(),\n    query.filters.slice(),\n    limit,\n    limitType,\n    query.startAt,\n    query.endAt\n  );\n}\n\nexport function queryWithStartAt(query: Query, bound: Bound): Query {\n  return new QueryImpl(\n    query.path,\n    query.collectionGroup,\n    query.explicitOrderBy.slice(),\n    query.filters.slice(),\n    query.limit,\n    query.limitType,\n    bound,\n    query.endAt\n  );\n}\n\nexport function queryWithEndAt(query: Query, bound: Bound): Query {\n  return new QueryImpl(\n    query.path,\n    query.collectionGroup,\n    query.explicitOrderBy.slice(),\n    query.filters.slice(),\n    query.limit,\n    query.limitType,\n    query.startAt,\n    bound\n  );\n}\n\nexport function queryEquals(left: Query, right: Query): boolean {\n  return (\n    targetEquals(queryToTarget(left), queryToTarget(right)) &&\n    left.limitType === right.limitType\n  );\n}\n\n// TODO(b/29183165): This is used to get a unique string from a query to, for\n// example, use as a dictionary key, but the implementation is subject to\n// collisions. Make it collision-free.\nexport function canonifyQuery(query: Query): string {\n  return `${canonifyTarget(queryToTarget(query))}|lt:${query.limitType}`;\n}\n\nexport function stringifyQuery(query: Query): string {\n  return `Query(target=${stringifyTarget(queryToTarget(query))}; limitType=${\n    query.limitType\n  })`;\n}\n\n/** Returns whether `doc` matches the constraints of `query`. */\nexport function queryMatches(query: Query, doc: Document): boolean {\n  return (\n    doc.isFoundDocument() &&\n    queryMatchesPathAndCollectionGroup(query, doc) &&\n    queryMatchesOrderBy(query, doc) &&\n    queryMatchesFilters(query, doc) &&\n    queryMatchesBounds(query, doc)\n  );\n}\n\nfunction queryMatchesPathAndCollectionGroup(\n  query: Query,\n  doc: Document\n): boolean {\n  const docPath = doc.key.path;\n  if (query.collectionGroup !== null) {\n    // NOTE: this.path is currently always empty since we don't expose Collection\n    // Group queries rooted at a document path yet.\n    return (\n      doc.key.hasCollectionId(query.collectionGroup) &&\n      query.path.isPrefixOf(docPath)\n    );\n  } else if (DocumentKey.isDocumentKey(query.path)) {\n    // exact match for document queries\n    return query.path.isEqual(docPath);\n  } else {\n    // shallow ancestor queries by default\n    return query.path.isImmediateParentOf(docPath);\n  }\n}\n\n/**\n * A document must have a value for every ordering clause in order to show up\n * in the results.\n */\nfunction queryMatchesOrderBy(query: Query, doc: Document): boolean {\n  // We must use `queryNormalizedOrderBy()` to get the list of all orderBys (both implicit and explicit).\n  // Note that for OR queries, orderBy applies to all disjunction terms and implicit orderBys must\n  // be taken into account. For example, the query \"a > 1 || b==1\" has an implicit \"orderBy a\" due\n  // to the inequality, and is evaluated as \"a > 1 orderBy a || b==1 orderBy a\".\n  // A document with content of {b:1} matches the filters, but does not match the orderBy because\n  // it's missing the field 'a'.\n  for (const orderBy of queryNormalizedOrderBy(query)) {\n    // order-by key always matches\n    if (!orderBy.field.isKeyField() && doc.data.field(orderBy.field) === null) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction queryMatchesFilters(query: Query, doc: Document): boolean {\n  for (const filter of query.filters) {\n    if (!filter.matches(doc)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/** Makes sure a document is within the bounds, if provided. */\nfunction queryMatchesBounds(query: Query, doc: Document): boolean {\n  if (\n    query.startAt &&\n    !boundSortsBeforeDocument(query.startAt, queryNormalizedOrderBy(query), doc)\n  ) {\n    return false;\n  }\n  if (\n    query.endAt &&\n    !boundSortsAfterDocument(query.endAt, queryNormalizedOrderBy(query), doc)\n  ) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Returns the collection group that this query targets.\n *\n * PORTING NOTE: This is only used in the Web SDK to facilitate multi-tab\n * synchronization for query results.\n */\nexport function queryCollectionGroup(query: Query): string {\n  return (\n    query.collectionGroup ||\n    (query.path.length % 2 === 1\n      ? query.path.lastSegment()\n      : query.path.get(query.path.length - 2))\n  );\n}\n\n/**\n * Returns a new comparator function that can be used to compare two documents\n * based on the Query's ordering constraint.\n */\nexport function newQueryComparator(\n  query: Query\n): (d1: Document, d2: Document) => number {\n  return (d1: Document, d2: Document): number => {\n    let comparedOnKeyField = false;\n    for (const orderBy of queryNormalizedOrderBy(query)) {\n      const comp = compareDocs(orderBy, d1, d2);\n      if (comp !== 0) {\n        return comp;\n      }\n      comparedOnKeyField = comparedOnKeyField || orderBy.field.isKeyField();\n    }\n    // Assert that we actually compared by key\n    debugAssert(\n      comparedOnKeyField,\n      \"orderBy used that doesn't compare on key field\"\n    );\n    return 0;\n  };\n}\n\nexport function compareDocs(\n  orderBy: OrderBy,\n  d1: Document,\n  d2: Document\n): number {\n  const comparison = orderBy.field.isKeyField()\n    ? DocumentKey.comparator(d1.key, d2.key)\n    : compareDocumentsByField(orderBy.field, d1, d2);\n  switch (orderBy.dir) {\n    case Direction.ASCENDING:\n      return comparison;\n    case Direction.DESCENDING:\n      return -1 * comparison;\n    default:\n      return fail('Unknown direction: ' + orderBy.dir);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { forEach, isEmpty } from './obj';\n\ntype Entry<K, V> = [K, V];\n\n/**\n * A map implementation that uses objects as keys. Objects must have an\n * associated equals function and must be immutable. Entries in the map are\n * stored together with the key being produced from the mapKeyFn. This map\n * automatically handles collisions of keys.\n */\nexport class ObjectMap<KeyType, ValueType> {\n  /**\n   * The inner map for a key/value pair. Due to the possibility of collisions we\n   * keep a list of entries that we do a linear search through to find an actual\n   * match. Note that collisions should be rare, so we still expect near\n   * constant time lookups in practice.\n   */\n  private inner: {\n    [canonicalId: string]: Array<Entry<KeyType, ValueType>>;\n  } = {};\n\n  /** The number of entries stored in the map */\n  private innerSize = 0;\n\n  constructor(\n    private mapKeyFn: (key: KeyType) => string,\n    private equalsFn: (l: KeyType, r: KeyType) => boolean\n  ) {}\n\n  /** Get a value for this key, or undefined if it does not exist. */\n  get(key: KeyType): ValueType | undefined {\n    const id = this.mapKeyFn(key);\n    const matches = this.inner[id];\n    if (matches === undefined) {\n      return undefined;\n    }\n    for (const [otherKey, value] of matches) {\n      if (this.equalsFn(otherKey, key)) {\n        return value;\n      }\n    }\n    return undefined;\n  }\n\n  has(key: KeyType): boolean {\n    return this.get(key) !== undefined;\n  }\n\n  /** Put this key and value in the map. */\n  set(key: KeyType, value: ValueType): void {\n    const id = this.mapKeyFn(key);\n    const matches = this.inner[id];\n    if (matches === undefined) {\n      this.inner[id] = [[key, value]];\n      this.innerSize++;\n      return;\n    }\n    for (let i = 0; i < matches.length; i++) {\n      if (this.equalsFn(matches[i][0], key)) {\n        // This is updating an existing entry and does not increase `innerSize`.\n        matches[i] = [key, value];\n        return;\n      }\n    }\n    matches.push([key, value]);\n    this.innerSize++;\n  }\n\n  /**\n   * Remove this key from the map. Returns a boolean if anything was deleted.\n   */\n  delete(key: KeyType): boolean {\n    const id = this.mapKeyFn(key);\n    const matches = this.inner[id];\n    if (matches === undefined) {\n      return false;\n    }\n    for (let i = 0; i < matches.length; i++) {\n      if (this.equalsFn(matches[i][0], key)) {\n        if (matches.length === 1) {\n          delete this.inner[id];\n        } else {\n          matches.splice(i, 1);\n        }\n        this.innerSize--;\n        return true;\n      }\n    }\n    return false;\n  }\n\n  forEach(fn: (key: KeyType, val: ValueType) => void): void {\n    forEach(this.inner, (_, entries) => {\n      for (const [k, v] of entries) {\n        fn(k, v);\n      }\n    });\n  }\n\n  isEmpty(): boolean {\n    return isEmpty(this.inner);\n  }\n\n  size(): number {\n    return this.innerSize;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { TargetId } from '../core/types';\nimport { OverlayedDocument } from '../local/overlayed_document';\nimport { primitiveComparator } from '../util/misc';\nimport { ObjectMap } from '../util/obj_map';\nimport { SortedMap } from '../util/sorted_map';\nimport { SortedSet } from '../util/sorted_set';\n\nimport { Document, MutableDocument } from './document';\nimport { DocumentKey } from './document_key';\nimport { Mutation } from './mutation';\nimport { Overlay } from './overlay';\n\n/** Miscellaneous collection types / constants. */\n\nexport type MutableDocumentMap = SortedMap<DocumentKey, MutableDocument>;\nconst EMPTY_MUTABLE_DOCUMENT_MAP = new SortedMap<DocumentKey, MutableDocument>(\n  DocumentKey.comparator\n);\nexport function mutableDocumentMap(): MutableDocumentMap {\n  return EMPTY_MUTABLE_DOCUMENT_MAP;\n}\n\nexport interface DocumentSizeEntries {\n  documents: MutableDocumentMap;\n  sizeMap: SortedMap<DocumentKey, number>;\n}\n\nexport type DocumentMap = SortedMap<DocumentKey, Document>;\nconst EMPTY_DOCUMENT_MAP = new SortedMap<DocumentKey, Document>(\n  DocumentKey.comparator\n);\nexport function documentMap(...docs: Document[]): DocumentMap {\n  let map = EMPTY_DOCUMENT_MAP;\n  for (const doc of docs) {\n    map = map.insert(doc.key, doc);\n  }\n  return map;\n}\n\nexport type OverlayedDocumentMap = DocumentKeyMap<OverlayedDocument>;\nexport function newOverlayedDocumentMap(): OverlayedDocumentMap {\n  return newDocumentKeyMap<OverlayedDocument>();\n}\n\nexport function convertOverlayedDocumentMapToDocumentMap(\n  collection: OverlayedDocumentMap\n): DocumentMap {\n  let documents = EMPTY_DOCUMENT_MAP;\n  collection.forEach(\n    (k, v) => (documents = documents.insert(k, v.overlayedDocument))\n  );\n  return documents;\n}\n\nexport type OverlayMap = DocumentKeyMap<Overlay>;\nexport function newOverlayMap(): OverlayMap {\n  return newDocumentKeyMap<Overlay>();\n}\n\nexport type MutationMap = DocumentKeyMap<Mutation>;\nexport function newMutationMap(): MutationMap {\n  return newDocumentKeyMap<Mutation>();\n}\n\nexport type DocumentKeyMap<T> = ObjectMap<DocumentKey, T>;\nexport function newDocumentKeyMap<T>(): DocumentKeyMap<T> {\n  return new ObjectMap<DocumentKey, T>(\n    key => key.toString(),\n    (l, r) => l.isEqual(r)\n  );\n}\n\nexport type DocumentVersionMap = SortedMap<DocumentKey, SnapshotVersion>;\nconst EMPTY_DOCUMENT_VERSION_MAP = new SortedMap<DocumentKey, SnapshotVersion>(\n  DocumentKey.comparator\n);\nexport function documentVersionMap(): DocumentVersionMap {\n  return EMPTY_DOCUMENT_VERSION_MAP;\n}\n\nexport type DocumentKeySet = SortedSet<DocumentKey>;\nconst EMPTY_DOCUMENT_KEY_SET = new SortedSet(DocumentKey.comparator);\nexport function documentKeySet(...keys: DocumentKey[]): DocumentKeySet {\n  let set = EMPTY_DOCUMENT_KEY_SET;\n  for (const key of keys) {\n    set = set.add(key);\n  }\n  return set;\n}\n\nexport type TargetIdSet = SortedSet<TargetId>;\nconst EMPTY_TARGET_ID_SET = new SortedSet<TargetId>(primitiveComparator);\nexport function targetIdSet(): SortedSet<TargetId> {\n  return EMPTY_TARGET_ID_SET;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Value as ProtoValue } from '../protos/firestore_proto_api';\nimport { isNegativeZero, isSafeInteger } from '../util/types';\n\n/** Base interface for the Serializer implementation. */\nexport interface Serializer {\n  readonly useProto3Json: boolean;\n}\n\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\nexport function toDouble(serializer: Serializer, value: number): ProtoValue {\n  if (serializer.useProto3Json) {\n    if (isNaN(value)) {\n      return { doubleValue: 'NaN' };\n    } else if (value === Infinity) {\n      return { doubleValue: 'Infinity' };\n    } else if (value === -Infinity) {\n      return { doubleValue: '-Infinity' };\n    }\n  }\n  return { doubleValue: isNegativeZero(value) ? '-0' : value };\n}\n\n/**\n * Returns an IntegerValue for `value`.\n */\nexport function toInteger(value: number): ProtoValue {\n  return { integerValue: '' + value };\n}\n\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\nexport function toNumber(serializer: Serializer, value: number): ProtoValue {\n  return isSafeInteger(value) ? toInteger(value) : toDouble(serializer, value);\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Timestamp } from '../lite-api/timestamp';\nimport { Value as ProtoValue } from '../protos/firestore_proto_api';\nimport { Serializer, toDouble, toInteger } from '../remote/number_serializer';\nimport { debugAssert } from '../util/assert';\nimport { arrayEquals } from '../util/misc';\n\nimport { normalizeNumber } from './normalize';\nimport { serverTimestamp } from './server_timestamps';\nimport { isArray, isInteger, isNumber, valueEquals } from './values';\n\n/** Used to represent a field transform on a mutation. */\nexport class TransformOperation {\n  // Make sure that the structural type of `TransformOperation` is unique.\n  // See https://github.com/microsoft/TypeScript/issues/5451\n  private _ = undefined;\n}\n\n/**\n * Computes the local transform result against the provided `previousValue`,\n * optionally using the provided localWriteTime.\n */\nexport function applyTransformOperationToLocalView(\n  transform: TransformOperation,\n  previousValue: ProtoValue | null,\n  localWriteTime: Timestamp\n): ProtoValue {\n  if (transform instanceof ServerTimestampTransform) {\n    return serverTimestamp(localWriteTime, previousValue);\n  } else if (transform instanceof ArrayUnionTransformOperation) {\n    return applyArrayUnionTransformOperation(transform, previousValue);\n  } else if (transform instanceof ArrayRemoveTransformOperation) {\n    return applyArrayRemoveTransformOperation(transform, previousValue);\n  } else {\n    debugAssert(\n      transform instanceof NumericIncrementTransformOperation,\n      'Expected NumericIncrementTransformOperation but was: ' + transform\n    );\n    return applyNumericIncrementTransformOperationToLocalView(\n      transform,\n      previousValue\n    );\n  }\n}\n\n/**\n * Computes a final transform result after the transform has been acknowledged\n * by the server, potentially using the server-provided transformResult.\n */\nexport function applyTransformOperationToRemoteDocument(\n  transform: TransformOperation,\n  previousValue: ProtoValue | null,\n  transformResult: ProtoValue | null\n): ProtoValue {\n  // The server just sends null as the transform result for array operations,\n  // so we have to calculate a result the same as we do for local\n  // applications.\n  if (transform instanceof ArrayUnionTransformOperation) {\n    return applyArrayUnionTransformOperation(transform, previousValue);\n  } else if (transform instanceof ArrayRemoveTransformOperation) {\n    return applyArrayRemoveTransformOperation(transform, previousValue);\n  }\n\n  debugAssert(\n    transformResult !== null,\n    \"Didn't receive transformResult for non-array transform\"\n  );\n  return transformResult;\n}\n\n/**\n * If this transform operation is not idempotent, returns the base value to\n * persist for this transform. If a base value is returned, the transform\n * operation is always applied to this base value, even if document has\n * already been updated.\n *\n * Base values provide consistent behavior for non-idempotent transforms and\n * allow us to return the same latency-compensated value even if the backend\n * has already applied the transform operation. The base value is null for\n * idempotent transforms, as they can be re-played even if the backend has\n * already applied them.\n *\n * @returns a base value to store along with the mutation, or null for\n * idempotent transforms.\n */\nexport function computeTransformOperationBaseValue(\n  transform: TransformOperation,\n  previousValue: ProtoValue | null\n): ProtoValue | null {\n  if (transform instanceof NumericIncrementTransformOperation) {\n    return isNumber(previousValue) ? previousValue! : { integerValue: 0 };\n  }\n  return null;\n}\n\nexport function transformOperationEquals(\n  left: TransformOperation,\n  right: TransformOperation\n): boolean {\n  if (\n    left instanceof ArrayUnionTransformOperation &&\n    right instanceof ArrayUnionTransformOperation\n  ) {\n    return arrayEquals(left.elements, right.elements, valueEquals);\n  } else if (\n    left instanceof ArrayRemoveTransformOperation &&\n    right instanceof ArrayRemoveTransformOperation\n  ) {\n    return arrayEquals(left.elements, right.elements, valueEquals);\n  } else if (\n    left instanceof NumericIncrementTransformOperation &&\n    right instanceof NumericIncrementTransformOperation\n  ) {\n    return valueEquals(left.operand, right.operand);\n  }\n\n  return (\n    left instanceof ServerTimestampTransform &&\n    right instanceof ServerTimestampTransform\n  );\n}\n\n/** Transforms a value into a server-generated timestamp. */\nexport class ServerTimestampTransform extends TransformOperation {}\n\n/** Transforms an array value via a union operation. */\nexport class ArrayUnionTransformOperation extends TransformOperation {\n  constructor(readonly elements: ProtoValue[]) {\n    super();\n  }\n}\n\nfunction applyArrayUnionTransformOperation(\n  transform: ArrayUnionTransformOperation,\n  previousValue: ProtoValue | null\n): ProtoValue {\n  const values = coercedFieldValuesArray(previousValue);\n  for (const toUnion of transform.elements) {\n    if (!values.some(element => valueEquals(element, toUnion))) {\n      values.push(toUnion);\n    }\n  }\n  return { arrayValue: { values } };\n}\n\n/** Transforms an array value via a remove operation. */\nexport class ArrayRemoveTransformOperation extends TransformOperation {\n  constructor(readonly elements: ProtoValue[]) {\n    super();\n  }\n}\n\nfunction applyArrayRemoveTransformOperation(\n  transform: ArrayRemoveTransformOperation,\n  previousValue: ProtoValue | null\n): ProtoValue {\n  let values = coercedFieldValuesArray(previousValue);\n  for (const toRemove of transform.elements) {\n    values = values.filter(element => !valueEquals(element, toRemove));\n  }\n  return { arrayValue: { values } };\n}\n\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */\nexport class NumericIncrementTransformOperation extends TransformOperation {\n  constructor(readonly serializer: Serializer, readonly operand: ProtoValue) {\n    super();\n    debugAssert(\n      isNumber(operand),\n      'NumericIncrementTransform transform requires a NumberValue'\n    );\n  }\n}\n\nexport function applyNumericIncrementTransformOperationToLocalView(\n  transform: NumericIncrementTransformOperation,\n  previousValue: ProtoValue | null\n): ProtoValue {\n  // PORTING NOTE: Since JavaScript's integer arithmetic is limited to 53 bit\n  // precision and resolves overflows by reducing precision, we do not\n  // manually cap overflows at 2^63.\n  const baseValue = computeTransformOperationBaseValue(\n    transform,\n    previousValue\n  )!;\n  const sum = asNumber(baseValue) + asNumber(transform.operand);\n  if (isInteger(baseValue) && isInteger(transform.operand)) {\n    return toInteger(sum);\n  } else {\n    return toDouble(transform.serializer, sum);\n  }\n}\n\nfunction asNumber(value: ProtoValue): number {\n  return normalizeNumber(value.integerValue || value.doubleValue);\n}\n\nfunction coercedFieldValuesArray(value: ProtoValue | null): ProtoValue[] {\n  return isArray(value) && value.arrayValue.values\n    ? value.arrayValue.values.slice()\n    : [];\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { Timestamp } from '../lite-api/timestamp';\nimport { Value as ProtoValue } from '../protos/firestore_proto_api';\nimport { debugAssert, hardAssert } from '../util/assert';\nimport { arrayEquals } from '../util/misc';\nimport { SortedSet } from '../util/sorted_set';\n\nimport { Document, MutableDocument } from './document';\nimport { DocumentKey } from './document_key';\nimport { FieldMask } from './field_mask';\nimport { ObjectValue } from './object_value';\nimport { FieldPath } from './path';\nimport {\n  applyTransformOperationToLocalView,\n  applyTransformOperationToRemoteDocument,\n  computeTransformOperationBaseValue,\n  TransformOperation,\n  transformOperationEquals\n} from './transform_operation';\n\n/** A field path and the TransformOperation to perform upon it. */\nexport class FieldTransform {\n  constructor(\n    readonly field: FieldPath,\n    readonly transform: TransformOperation\n  ) {}\n}\n\nexport function fieldTransformEquals(\n  left: FieldTransform,\n  right: FieldTransform\n): boolean {\n  return (\n    left.field.isEqual(right.field) &&\n    transformOperationEquals(left.transform, right.transform)\n  );\n}\n\nexport function fieldTransformsAreEqual(\n  left?: FieldTransform[],\n  right?: FieldTransform[]\n): boolean {\n  if (left === undefined && right === undefined) {\n    return true;\n  }\n\n  if (left && right) {\n    return arrayEquals(left, right, (l, r) => fieldTransformEquals(l, r));\n  }\n\n  return false;\n}\n\n/** The result of successfully applying a mutation to the backend. */\nexport class MutationResult {\n  constructor(\n    /**\n     * The version at which the mutation was committed:\n     *\n     * - For most operations, this is the updateTime in the WriteResult.\n     * - For deletes, the commitTime of the WriteResponse (because deletes are\n     *   not stored and have no updateTime).\n     *\n     * Note that these versions can be different: No-op writes will not change\n     * the updateTime even though the commitTime advances.\n     */\n    readonly version: SnapshotVersion,\n    /**\n     * The resulting fields returned from the backend after a mutation\n     * containing field transforms has been committed. Contains one FieldValue\n     * for each FieldTransform that was in the mutation.\n     *\n     * Will be empty if the mutation did not contain any field transforms.\n     */\n    readonly transformResults: Array<ProtoValue | null>\n  ) {}\n}\n\nexport const enum MutationType {\n  Set,\n  Patch,\n  Delete,\n  Verify\n}\n\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */\nexport class Precondition {\n  private constructor(\n    readonly updateTime?: SnapshotVersion,\n    readonly exists?: boolean\n  ) {\n    debugAssert(\n      updateTime === undefined || exists === undefined,\n      'Precondition can specify \"exists\" or \"updateTime\" but not both'\n    );\n  }\n\n  /** Creates a new empty Precondition. */\n  static none(): Precondition {\n    return new Precondition();\n  }\n\n  /** Creates a new Precondition with an exists flag. */\n  static exists(exists: boolean): Precondition {\n    return new Precondition(undefined, exists);\n  }\n\n  /** Creates a new Precondition based on a version a document exists at. */\n  static updateTime(version: SnapshotVersion): Precondition {\n    return new Precondition(version);\n  }\n\n  /** Returns whether this Precondition is empty. */\n  get isNone(): boolean {\n    return this.updateTime === undefined && this.exists === undefined;\n  }\n\n  isEqual(other: Precondition): boolean {\n    return (\n      this.exists === other.exists &&\n      (this.updateTime\n        ? !!other.updateTime && this.updateTime.isEqual(other.updateTime)\n        : !other.updateTime)\n    );\n  }\n}\n\n/** Returns true if the preconditions is valid for the given document. */\nexport function preconditionIsValidForDocument(\n  precondition: Precondition,\n  document: MutableDocument\n): boolean {\n  if (precondition.updateTime !== undefined) {\n    return (\n      document.isFoundDocument() &&\n      document.version.isEqual(precondition.updateTime)\n    );\n  } else if (precondition.exists !== undefined) {\n    return precondition.exists === document.isFoundDocument();\n  } else {\n    debugAssert(precondition.isNone, 'Precondition should be empty');\n    return true;\n  }\n}\n\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */\nexport abstract class Mutation {\n  abstract readonly type: MutationType;\n  abstract readonly key: DocumentKey;\n  abstract readonly precondition: Precondition;\n  abstract readonly fieldTransforms: FieldTransform[];\n  /**\n   * Returns a `FieldMask` representing the fields that will be changed by\n   * applying this mutation. Returns `null` if the mutation will overwrite the\n   * entire document.\n   */\n  abstract getFieldMask(): FieldMask | null;\n}\n\n/**\n * A utility method to calculate a `Mutation` representing the overlay from the\n * final state of the document, and a `FieldMask` representing the fields that\n * are mutated by the local mutations.\n */\nexport function calculateOverlayMutation(\n  doc: MutableDocument,\n  mask: FieldMask | null\n): Mutation | null {\n  if (!doc.hasLocalMutations || (mask && mask!.fields.length === 0)) {\n    return null;\n  }\n\n  // mask is null when sets or deletes are applied to the current document.\n  if (mask === null) {\n    if (doc.isNoDocument()) {\n      return new DeleteMutation(doc.key, Precondition.none());\n    } else {\n      return new SetMutation(doc.key, doc.data, Precondition.none());\n    }\n  } else {\n    const docValue = doc.data;\n    const patchValue = ObjectValue.empty();\n    let maskSet = new SortedSet<FieldPath>(FieldPath.comparator);\n    for (let path of mask.fields) {\n      if (!maskSet.has(path)) {\n        let value = docValue.field(path);\n        // If we are deleting a nested field, we take the immediate parent as\n        // the mask used to construct the resulting mutation.\n        // Justification: Nested fields can create parent fields implicitly. If\n        // only a leaf entry is deleted in later mutations, the parent field\n        // should still remain, but we may have lost this information.\n        // Consider mutation (foo.bar 1), then mutation (foo.bar delete()).\n        // This leaves the final result (foo, {}). Despite the fact that `doc`\n        // has the correct result, `foo` is not in `mask`, and the resulting\n        // mutation would miss `foo`.\n        if (value === null && path.length > 1) {\n          path = path.popLast();\n          value = docValue.field(path);\n        }\n        if (value === null) {\n          patchValue.delete(path);\n        } else {\n          patchValue.set(path, value);\n        }\n        maskSet = maskSet.add(path);\n      }\n    }\n    return new PatchMutation(\n      doc.key,\n      patchValue,\n      new FieldMask(maskSet.toArray()),\n      Precondition.none()\n    );\n  }\n}\n\n/**\n * Applies this mutation to the given document for the purposes of computing a\n * new remote document. If the input document doesn't match the expected state\n * (e.g. it is invalid or outdated), the document type may transition to\n * unknown.\n *\n * @param mutation - The mutation to apply.\n * @param document - The document to mutate. The input document can be an\n *     invalid document if the client has no knowledge of the pre-mutation state\n *     of the document.\n * @param mutationResult - The result of applying the mutation from the backend.\n */\nexport function mutationApplyToRemoteDocument(\n  mutation: Mutation,\n  document: MutableDocument,\n  mutationResult: MutationResult\n): void {\n  mutationVerifyKeyMatches(mutation, document);\n  if (mutation instanceof SetMutation) {\n    setMutationApplyToRemoteDocument(mutation, document, mutationResult);\n  } else if (mutation instanceof PatchMutation) {\n    patchMutationApplyToRemoteDocument(mutation, document, mutationResult);\n  } else {\n    debugAssert(\n      mutation instanceof DeleteMutation,\n      'Unexpected mutation type: ' + mutation\n    );\n    deleteMutationApplyToRemoteDocument(mutation, document, mutationResult);\n  }\n}\n\n/**\n * Applies this mutation to the given document for the purposes of computing\n * the new local view of a document. If the input document doesn't match the\n * expected state, the document is not modified.\n *\n * @param mutation - The mutation to apply.\n * @param document - The document to mutate. The input document can be an\n *     invalid document if the client has no knowledge of the pre-mutation state\n *     of the document.\n * @param previousMask - The fields that have been updated before applying this mutation.\n * @param localWriteTime - A timestamp indicating the local write time of the\n *     batch this mutation is a part of.\n * @returns A `FieldMask` representing the fields that are changed by applying this mutation.\n */\nexport function mutationApplyToLocalView(\n  mutation: Mutation,\n  document: MutableDocument,\n  previousMask: FieldMask | null,\n  localWriteTime: Timestamp\n): FieldMask | null {\n  mutationVerifyKeyMatches(mutation, document);\n\n  if (mutation instanceof SetMutation) {\n    return setMutationApplyToLocalView(\n      mutation,\n      document,\n      previousMask,\n      localWriteTime\n    );\n  } else if (mutation instanceof PatchMutation) {\n    return patchMutationApplyToLocalView(\n      mutation,\n      document,\n      previousMask,\n      localWriteTime\n    );\n  } else {\n    debugAssert(\n      mutation instanceof DeleteMutation,\n      'Unexpected mutation type: ' + mutation\n    );\n    return deleteMutationApplyToLocalView(mutation, document, previousMask);\n  }\n}\n\n/**\n * If this mutation is not idempotent, returns the base value to persist with\n * this mutation. If a base value is returned, the mutation is always applied\n * to this base value, even if document has already been updated.\n *\n * The base value is a sparse object that consists of only the document\n * fields for which this mutation contains a non-idempotent transformation\n * (e.g. a numeric increment). The provided value guarantees consistent\n * behavior for non-idempotent transforms and allow us to return the same\n * latency-compensated value even if the backend has already applied the\n * mutation. The base value is null for idempotent mutations, as they can be\n * re-played even if the backend has already applied them.\n *\n * @returns a base value to store along with the mutation, or null for\n * idempotent mutations.\n */\nexport function mutationExtractBaseValue(\n  mutation: Mutation,\n  document: Document\n): ObjectValue | null {\n  let baseObject: ObjectValue | null = null;\n  for (const fieldTransform of mutation.fieldTransforms) {\n    const existingValue = document.data.field(fieldTransform.field);\n    const coercedValue = computeTransformOperationBaseValue(\n      fieldTransform.transform,\n      existingValue || null\n    );\n\n    if (coercedValue != null) {\n      if (baseObject === null) {\n        baseObject = ObjectValue.empty();\n      }\n      baseObject.set(fieldTransform.field, coercedValue);\n    }\n  }\n  return baseObject ? baseObject : null;\n}\n\nexport function mutationEquals(left: Mutation, right: Mutation): boolean {\n  if (left.type !== right.type) {\n    return false;\n  }\n\n  if (!left.key.isEqual(right.key)) {\n    return false;\n  }\n\n  if (!left.precondition.isEqual(right.precondition)) {\n    return false;\n  }\n\n  if (!fieldTransformsAreEqual(left.fieldTransforms, right.fieldTransforms)) {\n    return false;\n  }\n\n  if (left.type === MutationType.Set) {\n    return (left as SetMutation).value.isEqual((right as SetMutation).value);\n  }\n\n  if (left.type === MutationType.Patch) {\n    return (\n      (left as PatchMutation).data.isEqual((right as PatchMutation).data) &&\n      (left as PatchMutation).fieldMask.isEqual(\n        (right as PatchMutation).fieldMask\n      )\n    );\n  }\n\n  return true;\n}\n\nfunction mutationVerifyKeyMatches(\n  mutation: Mutation,\n  document: MutableDocument\n): void {\n  debugAssert(\n    document.key.isEqual(mutation.key),\n    'Can only apply a mutation to a document with the same key'\n  );\n}\n\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */\nexport class SetMutation extends Mutation {\n  constructor(\n    readonly key: DocumentKey,\n    readonly value: ObjectValue,\n    readonly precondition: Precondition,\n    readonly fieldTransforms: FieldTransform[] = []\n  ) {\n    super();\n  }\n\n  readonly type: MutationType = MutationType.Set;\n\n  getFieldMask(): FieldMask | null {\n    return null;\n  }\n}\n\nfunction setMutationApplyToRemoteDocument(\n  mutation: SetMutation,\n  document: MutableDocument,\n  mutationResult: MutationResult\n): void {\n  // Unlike setMutationApplyToLocalView, if we're applying a mutation to a\n  // remote document the server has accepted the mutation so the precondition\n  // must have held.\n  const newData = mutation.value.clone();\n  const transformResults = serverTransformResults(\n    mutation.fieldTransforms,\n    document,\n    mutationResult.transformResults\n  );\n  newData.setAll(transformResults);\n  document\n    .convertToFoundDocument(mutationResult.version, newData)\n    .setHasCommittedMutations();\n}\n\nfunction setMutationApplyToLocalView(\n  mutation: SetMutation,\n  document: MutableDocument,\n  previousMask: FieldMask | null,\n  localWriteTime: Timestamp\n): FieldMask | null {\n  if (!preconditionIsValidForDocument(mutation.precondition, document)) {\n    // The mutation failed to apply (e.g. a document ID created with add()\n    // caused a name collision).\n    return previousMask;\n  }\n\n  const newData = mutation.value.clone();\n  const transformResults = localTransformResults(\n    mutation.fieldTransforms,\n    localWriteTime,\n    document\n  );\n  newData.setAll(transformResults);\n  document\n    .convertToFoundDocument(document.version, newData)\n    .setHasLocalMutations();\n  return null; // SetMutation overwrites all fields.\n}\n\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */\nexport class PatchMutation extends Mutation {\n  constructor(\n    readonly key: DocumentKey,\n    readonly data: ObjectValue,\n    readonly fieldMask: FieldMask,\n    readonly precondition: Precondition,\n    readonly fieldTransforms: FieldTransform[] = []\n  ) {\n    super();\n  }\n\n  readonly type: MutationType = MutationType.Patch;\n\n  getFieldMask(): FieldMask | null {\n    return this.fieldMask;\n  }\n}\n\nfunction patchMutationApplyToRemoteDocument(\n  mutation: PatchMutation,\n  document: MutableDocument,\n  mutationResult: MutationResult\n): void {\n  if (!preconditionIsValidForDocument(mutation.precondition, document)) {\n    // Since the mutation was not rejected, we know that the precondition\n    // matched on the backend. We therefore must not have the expected version\n    // of the document in our cache and convert to an UnknownDocument with a\n    // known updateTime.\n    document.convertToUnknownDocument(mutationResult.version);\n    return;\n  }\n\n  const transformResults = serverTransformResults(\n    mutation.fieldTransforms,\n    document,\n    mutationResult.transformResults\n  );\n  const newData = document.data;\n  newData.setAll(getPatch(mutation));\n  newData.setAll(transformResults);\n  document\n    .convertToFoundDocument(mutationResult.version, newData)\n    .setHasCommittedMutations();\n}\n\nfunction patchMutationApplyToLocalView(\n  mutation: PatchMutation,\n  document: MutableDocument,\n  previousMask: FieldMask | null,\n  localWriteTime: Timestamp\n): FieldMask | null {\n  if (!preconditionIsValidForDocument(mutation.precondition, document)) {\n    return previousMask;\n  }\n\n  const transformResults = localTransformResults(\n    mutation.fieldTransforms,\n    localWriteTime,\n    document\n  );\n  const newData = document.data;\n  newData.setAll(getPatch(mutation));\n  newData.setAll(transformResults);\n  document\n    .convertToFoundDocument(document.version, newData)\n    .setHasLocalMutations();\n\n  if (previousMask === null) {\n    return null;\n  }\n\n  return previousMask\n    .unionWith(mutation.fieldMask.fields)\n    .unionWith(mutation.fieldTransforms.map(transform => transform.field));\n}\n\n/**\n * Returns a FieldPath/Value map with the content of the PatchMutation.\n */\nfunction getPatch(mutation: PatchMutation): Map<FieldPath, ProtoValue | null> {\n  const result = new Map<FieldPath, ProtoValue | null>();\n  mutation.fieldMask.fields.forEach(fieldPath => {\n    if (!fieldPath.isEmpty()) {\n      const newValue = mutation.data.field(fieldPath);\n      result.set(fieldPath, newValue);\n    }\n  });\n  return result;\n}\n\n/**\n * Creates a list of \"transform results\" (a transform result is a field value\n * representing the result of applying a transform) for use after a mutation\n * containing transforms has been acknowledged by the server.\n *\n * @param fieldTransforms - The field transforms to apply the result to.\n * @param mutableDocument - The current state of the document after applying all\n * previous mutations.\n * @param serverTransformResults - The transform results received by the server.\n * @returns The transform results list.\n */\nfunction serverTransformResults(\n  fieldTransforms: FieldTransform[],\n  mutableDocument: MutableDocument,\n  serverTransformResults: Array<ProtoValue | null>\n): Map<FieldPath, ProtoValue> {\n  const transformResults = new Map<FieldPath, ProtoValue>();\n  hardAssert(\n    fieldTransforms.length === serverTransformResults.length,\n    `server transform result count (${serverTransformResults.length}) ` +\n      `should match field transform count (${fieldTransforms.length})`\n  );\n\n  for (let i = 0; i < serverTransformResults.length; i++) {\n    const fieldTransform = fieldTransforms[i];\n    const transform = fieldTransform.transform;\n    const previousValue = mutableDocument.data.field(fieldTransform.field);\n    transformResults.set(\n      fieldTransform.field,\n      applyTransformOperationToRemoteDocument(\n        transform,\n        previousValue,\n        serverTransformResults[i]\n      )\n    );\n  }\n  return transformResults;\n}\n\n/**\n * Creates a list of \"transform results\" (a transform result is a field value\n * representing the result of applying a transform) for use when applying a\n * transform locally.\n *\n * @param fieldTransforms - The field transforms to apply the result to.\n * @param localWriteTime - The local time of the mutation (used to\n *     generate ServerTimestampValues).\n * @param mutableDocument - The document to apply transforms on.\n * @returns The transform results list.\n */\nfunction localTransformResults(\n  fieldTransforms: FieldTransform[],\n  localWriteTime: Timestamp,\n  mutableDocument: MutableDocument\n): Map<FieldPath, ProtoValue> {\n  const transformResults = new Map<FieldPath, ProtoValue>();\n  for (const fieldTransform of fieldTransforms) {\n    const transform = fieldTransform.transform;\n\n    const previousValue = mutableDocument.data.field(fieldTransform.field);\n    transformResults.set(\n      fieldTransform.field,\n      applyTransformOperationToLocalView(\n        transform,\n        previousValue,\n        localWriteTime\n      )\n    );\n  }\n  return transformResults;\n}\n\n/** A mutation that deletes the document at the given key. */\nexport class DeleteMutation extends Mutation {\n  constructor(readonly key: DocumentKey, readonly precondition: Precondition) {\n    super();\n  }\n\n  readonly type: MutationType = MutationType.Delete;\n  readonly fieldTransforms: FieldTransform[] = [];\n\n  getFieldMask(): FieldMask | null {\n    return null;\n  }\n}\n\nfunction deleteMutationApplyToRemoteDocument(\n  mutation: DeleteMutation,\n  document: MutableDocument,\n  mutationResult: MutationResult\n): void {\n  debugAssert(\n    mutationResult.transformResults.length === 0,\n    'Transform results received by DeleteMutation.'\n  );\n\n  // Unlike applyToLocalView, if we're applying a mutation to a remote\n  // document the server has accepted the mutation so the precondition must\n  // have held.\n  document\n    .convertToNoDocument(mutationResult.version)\n    .setHasCommittedMutations();\n}\n\nfunction deleteMutationApplyToLocalView(\n  mutation: DeleteMutation,\n  document: MutableDocument,\n  previousMask: FieldMask | null\n): FieldMask | null {\n  debugAssert(\n    document.key.isEqual(mutation.key),\n    'Can only apply mutation to document with same key'\n  );\n  if (preconditionIsValidForDocument(mutation.precondition, document)) {\n    document.convertToNoDocument(document.version).setHasLocalMutations();\n    return null;\n  }\n  return previousMask;\n}\n\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */\nexport class VerifyMutation extends Mutation {\n  constructor(readonly key: DocumentKey, readonly precondition: Precondition) {\n    super();\n  }\n\n  readonly type: MutationType = MutationType.Verify;\n  readonly fieldTransforms: FieldTransform[] = [];\n\n  getFieldMask(): FieldMask | null {\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { fail } from '../util/assert';\nimport { Code } from '../util/error';\nimport { logError } from '../util/log';\n\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\nenum RpcCode {\n  OK = 0,\n  CANCELLED = 1,\n  UNKNOWN = 2,\n  INVALID_ARGUMENT = 3,\n  DEADLINE_EXCEEDED = 4,\n  NOT_FOUND = 5,\n  ALREADY_EXISTS = 6,\n  PERMISSION_DENIED = 7,\n  UNAUTHENTICATED = 16,\n  RESOURCE_EXHAUSTED = 8,\n  FAILED_PRECONDITION = 9,\n  ABORTED = 10,\n  OUT_OF_RANGE = 11,\n  UNIMPLEMENTED = 12,\n  INTERNAL = 13,\n  UNAVAILABLE = 14,\n  DATA_LOSS = 15\n}\n\n/**\n * Determines whether an error code represents a permanent error when received\n * in response to a non-write operation.\n *\n * See isPermanentWriteError for classifying write errors.\n */\nexport function isPermanentError(code: Code): boolean {\n  switch (code) {\n    case Code.OK:\n      return fail('Treated status OK as error');\n    case Code.CANCELLED:\n    case Code.UNKNOWN:\n    case Code.DEADLINE_EXCEEDED:\n    case Code.RESOURCE_EXHAUSTED:\n    case Code.INTERNAL:\n    case Code.UNAVAILABLE:\n    // Unauthenticated means something went wrong with our token and we need\n    // to retry with new credentials which will happen automatically.\n    case Code.UNAUTHENTICATED:\n      return false;\n    case Code.INVALID_ARGUMENT:\n    case Code.NOT_FOUND:\n    case Code.ALREADY_EXISTS:\n    case Code.PERMISSION_DENIED:\n    case Code.FAILED_PRECONDITION:\n    // Aborted might be retried in some scenarios, but that is dependant on\n    // the context and should handled individually by the calling code.\n    // See https://cloud.google.com/apis/design/errors.\n    case Code.ABORTED:\n    case Code.OUT_OF_RANGE:\n    case Code.UNIMPLEMENTED:\n    case Code.DATA_LOSS:\n      return true;\n    default:\n      return fail('Unknown status code: ' + code);\n  }\n}\n\n/**\n * Determines whether an error code represents a permanent error when received\n * in response to a write operation.\n *\n * Write operations must be handled specially because as of b/119437764, ABORTED\n * errors on the write stream should be retried too (even though ABORTED errors\n * are not generally retryable).\n *\n * Note that during the initial handshake on the write stream an ABORTED error\n * signals that we should discard our stream token (i.e. it is permanent). This\n * means a handshake error should be classified with isPermanentError, above.\n */\nexport function isPermanentWriteError(code: Code): boolean {\n  return isPermanentError(code) && code !== Code.ABORTED;\n}\n\n/**\n * Maps an error Code from a GRPC status identifier like 'NOT_FOUND'.\n *\n * @returns The Code equivalent to the given status string or undefined if\n *     there is no match.\n */\nexport function mapCodeFromRpcStatus(status: string): Code | undefined {\n  // lookup by string\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const code: RpcCode = RpcCode[status as any] as any;\n  if (code === undefined) {\n    return undefined;\n  }\n\n  return mapCodeFromRpcCode(code);\n}\n\n/**\n * Maps an error Code from GRPC status code number, like 0, 1, or 14. These\n * are not the same as HTTP status codes.\n *\n * @returns The Code equivalent to the given GRPC status code. Fails if there\n *     is no match.\n */\nexport function mapCodeFromRpcCode(code: number | undefined): Code {\n  if (code === undefined) {\n    // This shouldn't normally happen, but in certain error cases (like trying\n    // to send invalid proto messages) we may get an error with no GRPC code.\n    logError('GRPC error has no .code');\n    return Code.UNKNOWN;\n  }\n\n  switch (code) {\n    case RpcCode.OK:\n      return Code.OK;\n    case RpcCode.CANCELLED:\n      return Code.CANCELLED;\n    case RpcCode.UNKNOWN:\n      return Code.UNKNOWN;\n    case RpcCode.DEADLINE_EXCEEDED:\n      return Code.DEADLINE_EXCEEDED;\n    case RpcCode.RESOURCE_EXHAUSTED:\n      return Code.RESOURCE_EXHAUSTED;\n    case RpcCode.INTERNAL:\n      return Code.INTERNAL;\n    case RpcCode.UNAVAILABLE:\n      return Code.UNAVAILABLE;\n    case RpcCode.UNAUTHENTICATED:\n      return Code.UNAUTHENTICATED;\n    case RpcCode.INVALID_ARGUMENT:\n      return Code.INVALID_ARGUMENT;\n    case RpcCode.NOT_FOUND:\n      return Code.NOT_FOUND;\n    case RpcCode.ALREADY_EXISTS:\n      return Code.ALREADY_EXISTS;\n    case RpcCode.PERMISSION_DENIED:\n      return Code.PERMISSION_DENIED;\n    case RpcCode.FAILED_PRECONDITION:\n      return Code.FAILED_PRECONDITION;\n    case RpcCode.ABORTED:\n      return Code.ABORTED;\n    case RpcCode.OUT_OF_RANGE:\n      return Code.OUT_OF_RANGE;\n    case RpcCode.UNIMPLEMENTED:\n      return Code.UNIMPLEMENTED;\n    case RpcCode.DATA_LOSS:\n      return Code.DATA_LOSS;\n    default:\n      return fail('Unknown status code: ' + code);\n  }\n}\n\n/**\n * Maps an RPC code from a Code. This is the reverse operation from\n * mapCodeFromRpcCode and should really only be used in tests.\n */\nexport function mapRpcCodeFromCode(code: Code | undefined): number {\n  if (code === undefined) {\n    return RpcCode.OK;\n  }\n\n  switch (code) {\n    case Code.OK:\n      return RpcCode.OK;\n    case Code.CANCELLED:\n      return RpcCode.CANCELLED;\n    case Code.UNKNOWN:\n      return RpcCode.UNKNOWN;\n    case Code.DEADLINE_EXCEEDED:\n      return RpcCode.DEADLINE_EXCEEDED;\n    case Code.RESOURCE_EXHAUSTED:\n      return RpcCode.RESOURCE_EXHAUSTED;\n    case Code.INTERNAL:\n      return RpcCode.INTERNAL;\n    case Code.UNAVAILABLE:\n      return RpcCode.UNAVAILABLE;\n    case Code.UNAUTHENTICATED:\n      return RpcCode.UNAUTHENTICATED;\n    case Code.INVALID_ARGUMENT:\n      return RpcCode.INVALID_ARGUMENT;\n    case Code.NOT_FOUND:\n      return RpcCode.NOT_FOUND;\n    case Code.ALREADY_EXISTS:\n      return RpcCode.ALREADY_EXISTS;\n    case Code.PERMISSION_DENIED:\n      return RpcCode.PERMISSION_DENIED;\n    case Code.FAILED_PRECONDITION:\n      return RpcCode.FAILED_PRECONDITION;\n    case Code.ABORTED:\n      return RpcCode.ABORTED;\n    case Code.OUT_OF_RANGE:\n      return RpcCode.OUT_OF_RANGE;\n    case Code.UNIMPLEMENTED:\n      return RpcCode.UNIMPLEMENTED;\n    case Code.DATA_LOSS:\n      return RpcCode.DATA_LOSS;\n    default:\n      return fail('Unknown status code: ' + code);\n  }\n}\n\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\nexport function mapCodeFromHttpStatus(status?: number): Code {\n  if (status === undefined) {\n    logError('RPC_ERROR', 'HTTP error has no status');\n    return Code.UNKNOWN;\n  }\n\n  // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n  // status codes but the mapping is not bijective. In each case of ambiguity\n  // this function chooses a primary error.\n  //\n  // [1]\n  // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n  switch (status) {\n    case 200: // OK\n      return Code.OK;\n\n    case 400: // Bad Request\n      return Code.FAILED_PRECONDITION;\n    // Other possibilities based on the forward mapping\n    // return Code.INVALID_ARGUMENT;\n    // return Code.OUT_OF_RANGE;\n\n    case 401: // Unauthorized\n      return Code.UNAUTHENTICATED;\n\n    case 403: // Forbidden\n      return Code.PERMISSION_DENIED;\n\n    case 404: // Not Found\n      return Code.NOT_FOUND;\n\n    case 409: // Conflict\n      return Code.ABORTED;\n    // Other possibilities:\n    // return Code.ALREADY_EXISTS;\n\n    case 416: // Range Not Satisfiable\n      return Code.OUT_OF_RANGE;\n\n    case 429: // Too Many Requests\n      return Code.RESOURCE_EXHAUSTED;\n\n    case 499: // Client Closed Request\n      return Code.CANCELLED;\n\n    case 500: // Internal Server Error\n      return Code.UNKNOWN;\n    // Other possibilities:\n    // return Code.INTERNAL;\n    // return Code.DATA_LOSS;\n\n    case 501: // Unimplemented\n      return Code.UNIMPLEMENTED;\n\n    case 503: // Service Unavailable\n      return Code.UNAVAILABLE;\n\n    case 504: // Gateway Timeout\n      return Code.DEADLINE_EXCEEDED;\n\n    default:\n      if (status >= 200 && status < 300) {\n        return Code.OK;\n      }\n      if (status >= 400 && status < 500) {\n        return Code.FAILED_PRECONDITION;\n      }\n      if (status >= 500 && status < 600) {\n        return Code.INTERNAL;\n      }\n      return Code.UNKNOWN;\n  }\n}\n\n/**\n * Converts an HTTP response's error status to the equivalent error code.\n *\n * @param status - An HTTP error response status (\"FAILED_PRECONDITION\",\n * \"UNKNOWN\", etc.)\n * @returns The equivalent Code. Non-matching responses are mapped to\n *     Code.UNKNOWN.\n */\nexport function mapCodeFromHttpResponseErrorStatus(status: string): Code {\n  const serverError = status.toLowerCase().replace(/_/g, '-');\n  return Object.values(Code).indexOf(serverError as Code) >= 0\n    ? (serverError as Code)\n    : Code.UNKNOWN;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { BatchId } from '../core/types';\nimport { Timestamp } from '../lite-api/timestamp';\nimport { debugAssert, hardAssert } from '../util/assert';\nimport { arrayEquals } from '../util/misc';\n\nimport {\n  documentKeySet,\n  DocumentKeySet,\n  MutationMap,\n  DocumentVersionMap,\n  documentVersionMap,\n  newMutationMap,\n  OverlayedDocumentMap\n} from './collections';\nimport { MutableDocument } from './document';\nimport { FieldMask } from './field_mask';\nimport {\n  calculateOverlayMutation,\n  Mutation,\n  mutationApplyToLocalView,\n  mutationApplyToRemoteDocument,\n  mutationEquals,\n  MutationResult\n} from './mutation';\n\n/**\n * A batch of mutations that will be sent as one unit to the backend.\n */\nexport class MutationBatch {\n  /**\n   * @param batchId - The unique ID of this mutation batch.\n   * @param localWriteTime - The original write time of this mutation.\n   * @param baseMutations - Mutations that are used to populate the base\n   * values when this mutation is applied locally. This can be used to locally\n   * overwrite values that are persisted in the remote document cache. Base\n   * mutations are never sent to the backend.\n   * @param mutations - The user-provided mutations in this mutation batch.\n   * User-provided mutations are applied both locally and remotely on the\n   * backend.\n   */\n  constructor(\n    public batchId: BatchId,\n    public localWriteTime: Timestamp,\n    public baseMutations: Mutation[],\n    public mutations: Mutation[]\n  ) {\n    debugAssert(mutations.length > 0, 'Cannot create an empty mutation batch');\n  }\n\n  /**\n   * Applies all the mutations in this MutationBatch to the specified document\n   * to compute the state of the remote document\n   *\n   * @param document - The document to apply mutations to.\n   * @param batchResult - The result of applying the MutationBatch to the\n   * backend.\n   */\n  applyToRemoteDocument(\n    document: MutableDocument,\n    batchResult: MutationBatchResult\n  ): void {\n    const mutationResults = batchResult.mutationResults;\n    debugAssert(\n      mutationResults.length === this.mutations.length,\n      `Mismatch between mutations length\n      (${this.mutations.length}) and mutation results length\n      (${mutationResults.length}).`\n    );\n\n    for (let i = 0; i < this.mutations.length; i++) {\n      const mutation = this.mutations[i];\n      if (mutation.key.isEqual(document.key)) {\n        const mutationResult = mutationResults[i];\n        mutationApplyToRemoteDocument(mutation, document, mutationResult);\n      }\n    }\n  }\n\n  /**\n   * Computes the local view of a document given all the mutations in this\n   * batch.\n   *\n   * @param document - The document to apply mutations to.\n   * @param mutatedFields - Fields that have been updated before applying this mutation batch.\n   * @returns A `FieldMask` representing all the fields that are mutated.\n   */\n  applyToLocalView(\n    document: MutableDocument,\n    mutatedFields: FieldMask | null\n  ): FieldMask | null {\n    // First, apply the base state. This allows us to apply non-idempotent\n    // transform against a consistent set of values.\n    for (const mutation of this.baseMutations) {\n      if (mutation.key.isEqual(document.key)) {\n        mutatedFields = mutationApplyToLocalView(\n          mutation,\n          document,\n          mutatedFields,\n          this.localWriteTime\n        );\n      }\n    }\n\n    // Second, apply all user-provided mutations.\n    for (const mutation of this.mutations) {\n      if (mutation.key.isEqual(document.key)) {\n        mutatedFields = mutationApplyToLocalView(\n          mutation,\n          document,\n          mutatedFields,\n          this.localWriteTime\n        );\n      }\n    }\n    return mutatedFields;\n  }\n\n  /**\n   * Computes the local view for all provided documents given the mutations in\n   * this batch. Returns a `DocumentKey` to `Mutation` map which can be used to\n   * replace all the mutation applications.\n   */\n  applyToLocalDocumentSet(\n    documentMap: OverlayedDocumentMap,\n    documentsWithoutRemoteVersion: DocumentKeySet\n  ): MutationMap {\n    // TODO(mrschmidt): This implementation is O(n^2). If we apply the mutations\n    // directly (as done in `applyToLocalView()`), we can reduce the complexity\n    // to O(n).\n    const overlays = newMutationMap();\n    this.mutations.forEach(m => {\n      const overlayedDocument = documentMap.get(m.key)!;\n      // TODO(mutabledocuments): This method should take a MutableDocumentMap\n      // and we should remove this cast.\n      const mutableDocument =\n        overlayedDocument.overlayedDocument as MutableDocument;\n      let mutatedFields = this.applyToLocalView(\n        mutableDocument,\n        overlayedDocument.mutatedFields\n      );\n      // Set mutatedFields to null if the document is only from local mutations.\n      // This creates a Set or Delete mutation, instead of trying to create a\n      // patch mutation as the overlay.\n      mutatedFields = documentsWithoutRemoteVersion.has(m.key)\n        ? null\n        : mutatedFields;\n      const overlay = calculateOverlayMutation(mutableDocument, mutatedFields);\n      if (overlay !== null) {\n        overlays.set(m.key, overlay);\n      }\n\n      if (!mutableDocument.isValidDocument()) {\n        mutableDocument.convertToNoDocument(SnapshotVersion.min());\n      }\n    });\n    return overlays;\n  }\n\n  keys(): DocumentKeySet {\n    return this.mutations.reduce(\n      (keys, m) => keys.add(m.key),\n      documentKeySet()\n    );\n  }\n\n  isEqual(other: MutationBatch): boolean {\n    return (\n      this.batchId === other.batchId &&\n      arrayEquals(this.mutations, other.mutations, (l, r) =>\n        mutationEquals(l, r)\n      ) &&\n      arrayEquals(this.baseMutations, other.baseMutations, (l, r) =>\n        mutationEquals(l, r)\n      )\n    );\n  }\n}\n\n/** The result of applying a mutation batch to the backend. */\nexport class MutationBatchResult {\n  private constructor(\n    readonly batch: MutationBatch,\n    readonly commitVersion: SnapshotVersion,\n    readonly mutationResults: MutationResult[],\n    /**\n     * A pre-computed mapping from each mutated document to the resulting\n     * version.\n     */\n    readonly docVersions: DocumentVersionMap\n  ) {}\n\n  /**\n   * Creates a new MutationBatchResult for the given batch and results. There\n   * must be one result for each mutation in the batch. This static factory\n   * caches a document=&gt;version mapping (docVersions).\n   */\n  static from(\n    batch: MutationBatch,\n    commitVersion: SnapshotVersion,\n    results: MutationResult[]\n  ): MutationBatchResult {\n    hardAssert(\n      batch.mutations.length === results.length,\n      'Mutations sent ' +\n        batch.mutations.length +\n        ' must equal results received ' +\n        results.length\n    );\n\n    let versionMap = documentVersionMap();\n    const mutations = batch.mutations;\n    for (let i = 0; i < mutations.length; i++) {\n      versionMap = versionMap.insert(mutations[i].key, results[i].version);\n    }\n\n    return new MutationBatchResult(batch, commitVersion, results, versionMap);\n  }\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DocumentKey } from './document_key';\nimport { Mutation } from './mutation';\n\n/**\n * Representation of an overlay computed by Firestore.\n *\n * Holds information about a mutation and the largest batch id in Firestore when\n * the mutation was created.\n */\nexport class Overlay {\n  constructor(readonly largestBatchId: number, readonly mutation: Mutation) {}\n\n  getKey(): DocumentKey {\n    return this.mutation.key;\n  }\n\n  isEqual(other: Overlay | null): boolean {\n    return other !== null && this.mutation === other.mutation;\n  }\n\n  toString(): string {\n    return `Overlay{\n      largestBatchId: ${this.largestBatchId},\n      mutation: ${this.mutation.toString()}\n    }`;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BloomFilter as ProtoBloomFilter } from '../protos/firestore_proto_api';\n\nexport class ExistenceFilter {\n  constructor(public count: number, public unchangedNames?: ProtoBloomFilter) {}\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The global, singleton instance of TestingHooksSpi.\n *\n * This variable will be `null` in all cases _except_ when running from\n * integration tests that have registered callbacks to be notified of events\n * that happen during the test execution.\n */\nexport let testingHooksSpi: TestingHooksSpi | null = null;\n\n/**\n * Sets the value of the `testingHooksSpi` object.\n * @param instance the instance to set.\n */\nexport function setTestingHooksSpi(instance: TestingHooksSpi): void {\n  if (testingHooksSpi) {\n    throw new Error('a TestingHooksSpi instance is already set');\n  }\n  testingHooksSpi = instance;\n}\n\n/**\n * The \"service provider interface\" for the testing hooks.\n *\n * The implementation of this object will handle the callbacks made by the SDK\n * to be handled by the integration tests.\n *\n * This \"SPI\" is separated from the implementation to avoid import cycles and\n * to enable production builds to fully tree-shake away the testing hooks logic.\n */\nexport interface TestingHooksSpi {\n  /**\n   * Invokes all callbacks registered with\n   * `TestingHooks.onExistenceFilterMismatch()` with the given info.\n   */\n  notifyOnExistenceFilterMismatch(info: ExistenceFilterMismatchInfo): void;\n}\n\n/**\n * Information about an existence filter mismatch.\n * @internal\n */\nexport interface ExistenceFilterMismatchInfo {\n  /** The number of documents that matched the query in the local cache. */\n  localCacheCount: number;\n\n  /**\n   * The number of documents that matched the query on the server, as specified\n   * in the ExistenceFilter message's `count` field.\n   */\n  existenceFilterCount: number;\n\n  /**\n   * The projectId used when checking documents for membership in the bloom\n   * filter.\n   */\n  projectId: string;\n\n  /**\n   * The databaseId used when checking documents for membership in the bloom\n   * filter.\n   */\n  databaseId: string;\n\n  /**\n   * Information about the bloom filter provided by Watch in the ExistenceFilter\n   * message's `unchangedNames` field. If this property is omitted or undefined\n   * then that means that Watch did _not_ provide a bloom filter.\n   */\n  bloomFilter?: {\n    /**\n     * Whether a full requery was averted by using the bloom filter. If false,\n     * then something happened, such as a false positive, to prevent using the\n     * bloom filter to avoid a full requery.\n     */\n    applied: boolean;\n\n    /** The number of hash functions used in the bloom filter. */\n    hashCount: number;\n\n    /** The number of bytes in the bloom filter's bitmask. */\n    bitmapLength: number;\n\n    /** The number of bits of padding in the last byte of the bloom filter. */\n    padding: number;\n\n    /**\n     * Tests the given string for membership in the bloom filter created from\n     * the existence filter; will be undefined if creating the bloom filter\n     * failed.\n     */\n    mightContain?: (value: string) => boolean;\n  };\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An instance of the Platform's 'TextEncoder' implementation.\n */\nexport function newTextEncoder(): TextEncoder {\n  return new TextEncoder();\n}\n\n/**\n * An instance of the Platform's 'TextDecoder' implementation.\n */\nexport function newTextDecoder(): TextDecoder {\n  return new TextDecoder('utf-8');\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Md5, Integer } from '@firebase/webchannel-wrapper/bloom-blob';\n\nimport { newTextEncoder } from '../platform/text_serializer';\n\nconst MAX_64_BIT_UNSIGNED_INTEGER = new Integer([0xffffffff, 0xffffffff], 0);\n\n// Hash a string using md5 hashing algorithm.\nfunction getMd5HashValue(value: string): Uint8Array {\n  const encodedValue = newTextEncoder().encode(value);\n  const md5 = new Md5();\n  md5.update(encodedValue);\n  return new Uint8Array(md5.digest());\n}\n\n// Interpret the 16 bytes array as two 64-bit unsigned integers, encoded using\n// 2’s complement using little endian.\nfunction get64BitUints(Bytes: Uint8Array): [Integer, Integer] {\n  const dataView = new DataView(Bytes.buffer);\n  const chunk1 = dataView.getUint32(0, /* littleEndian= */ true);\n  const chunk2 = dataView.getUint32(4, /* littleEndian= */ true);\n  const chunk3 = dataView.getUint32(8, /* littleEndian= */ true);\n  const chunk4 = dataView.getUint32(12, /* littleEndian= */ true);\n  const integer1 = new Integer([chunk1, chunk2], 0);\n  const integer2 = new Integer([chunk3, chunk4], 0);\n  return [integer1, integer2];\n}\n\nexport class BloomFilter {\n  readonly bitCount: number;\n  private readonly bitCountInInteger: Integer;\n\n  constructor(\n    readonly bitmap: Uint8Array,\n    readonly padding: number,\n    readonly hashCount: number\n  ) {\n    if (padding < 0 || padding >= 8) {\n      throw new BloomFilterError(`Invalid padding: ${padding}`);\n    }\n\n    if (hashCount < 0) {\n      throw new BloomFilterError(`Invalid hash count: ${hashCount}`);\n    }\n\n    if (bitmap.length > 0 && this.hashCount === 0) {\n      // Only empty bloom filter can have 0 hash count.\n      throw new BloomFilterError(`Invalid hash count: ${hashCount}`);\n    }\n\n    if (bitmap.length === 0 && padding !== 0) {\n      // Empty bloom filter should have 0 padding.\n      throw new BloomFilterError(\n        `Invalid padding when bitmap length is 0: ${padding}`\n      );\n    }\n\n    this.bitCount = bitmap.length * 8 - padding;\n    // Set the bit count in Integer to avoid repetition in mightContain().\n    this.bitCountInInteger = Integer.fromNumber(this.bitCount);\n  }\n\n  // Calculate the ith hash value based on the hashed 64bit integers,\n  // and calculate its corresponding bit index in the bitmap to be checked.\n  private getBitIndex(num1: Integer, num2: Integer, hashIndex: number): number {\n    // Calculate hashed value h(i) = h1 + (i * h2).\n    let hashValue = num1.add(num2.multiply(Integer.fromNumber(hashIndex)));\n    // Wrap if hash value overflow 64bit.\n    if (hashValue.compare(MAX_64_BIT_UNSIGNED_INTEGER) === 1) {\n      hashValue = new Integer([hashValue.getBits(0), hashValue.getBits(1)], 0);\n    }\n    return hashValue.modulo(this.bitCountInInteger).toNumber();\n  }\n\n  // Return whether the bit on the given index in the bitmap is set to 1.\n  private isBitSet(index: number): boolean {\n    // To retrieve bit n, calculate: (bitmap[n / 8] & (0x01 << (n % 8))).\n    const byte = this.bitmap[Math.floor(index / 8)];\n    const offset = index % 8;\n    return (byte & (0x01 << offset)) !== 0;\n  }\n\n  mightContain(value: string): boolean {\n    // Empty bitmap should always return false on membership check.\n    if (this.bitCount === 0) {\n      return false;\n    }\n    const md5HashedValue = getMd5HashValue(value);\n    const [hash1, hash2] = get64BitUints(md5HashedValue);\n    for (let i = 0; i < this.hashCount; i++) {\n      const index = this.getBitIndex(hash1, hash2, i);\n      if (!this.isBitSet(index)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /** Create bloom filter for testing purposes only. */\n  static create(\n    bitCount: number,\n    hashCount: number,\n    contains: string[]\n  ): BloomFilter {\n    const padding = bitCount % 8 === 0 ? 0 : 8 - (bitCount % 8);\n    const bitmap = new Uint8Array(Math.ceil(bitCount / 8));\n    const bloomFilter = new BloomFilter(bitmap, padding, hashCount);\n    contains.forEach(item => bloomFilter.insert(item));\n    return bloomFilter;\n  }\n\n  private insert(value: string): void {\n    if (this.bitCount === 0) {\n      return;\n    }\n\n    const md5HashedValue = getMd5HashValue(value);\n    const [hash1, hash2] = get64BitUints(md5HashedValue);\n    for (let i = 0; i < this.hashCount; i++) {\n      const index = this.getBitIndex(hash1, hash2, i);\n      this.setBit(index);\n    }\n  }\n\n  private setBit(index: number): void {\n    const indexOfByte = Math.floor(index / 8);\n    const offset = index % 8;\n    this.bitmap[indexOfByte] |= 0x01 << offset;\n  }\n}\n\nexport class BloomFilterError extends Error {\n  readonly name = 'BloomFilterError';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { TargetId } from '../core/types';\nimport { TargetPurpose } from '../local/target_data';\nimport {\n  documentKeySet,\n  DocumentKeySet,\n  mutableDocumentMap,\n  MutableDocumentMap\n} from '../model/collections';\nimport { ByteString } from '../util/byte_string';\nimport { primitiveComparator } from '../util/misc';\nimport { SortedMap } from '../util/sorted_map';\n\n/**\n * An event from the RemoteStore. It is split into targetChanges (changes to the\n * state or the set of documents in our watched targets) and documentUpdates\n * (changes to the actual documents).\n */\nexport class RemoteEvent {\n  constructor(\n    /**\n     * The snapshot version this event brings us up to, or MIN if not set.\n     */\n    readonly snapshotVersion: SnapshotVersion,\n    /**\n     * A map from target to changes to the target. See TargetChange.\n     */\n    readonly targetChanges: Map<TargetId, TargetChange>,\n    /**\n     * A map of targets that is known to be inconsistent, and the purpose for\n     * re-listening. Listens for these targets should be re-established without\n     * resume tokens.\n     */\n    readonly targetMismatches: SortedMap<TargetId, TargetPurpose>,\n    /**\n     * A set of which documents have changed or been deleted, along with the\n     * doc's new values (if not deleted).\n     */\n    readonly documentUpdates: MutableDocumentMap,\n    /**\n     * A set of which document updates are due only to limbo resolution targets.\n     */\n    readonly resolvedLimboDocuments: DocumentKeySet\n  ) {}\n\n  /**\n   * HACK: Views require RemoteEvents in order to determine whether the view is\n   * CURRENT, but secondary tabs don't receive remote events. So this method is\n   * used to create a synthesized RemoteEvent that can be used to apply a\n   * CURRENT status change to a View, for queries executed in a different tab.\n   */\n  // PORTING NOTE: Multi-tab only\n  static createSynthesizedRemoteEventForCurrentChange(\n    targetId: TargetId,\n    current: boolean,\n    resumeToken: ByteString\n  ): RemoteEvent {\n    const targetChanges = new Map<TargetId, TargetChange>();\n    targetChanges.set(\n      targetId,\n      TargetChange.createSynthesizedTargetChangeForCurrentChange(\n        targetId,\n        current,\n        resumeToken\n      )\n    );\n    return new RemoteEvent(\n      SnapshotVersion.min(),\n      targetChanges,\n      new SortedMap<TargetId, TargetPurpose>(primitiveComparator),\n      mutableDocumentMap(),\n      documentKeySet()\n    );\n  }\n}\n\n/**\n * A TargetChange specifies the set of changes for a specific target as part of\n * a RemoteEvent. These changes track which documents are added, modified or\n * removed, as well as the target's resume token and whether the target is\n * marked CURRENT.\n * The actual changes *to* documents are not part of the TargetChange since\n * documents may be part of multiple targets.\n */\nexport class TargetChange {\n  constructor(\n    /**\n     * An opaque, server-assigned token that allows watching a query to be resumed\n     * after disconnecting without retransmitting all the data that matches the\n     * query. The resume token essentially identifies a point in time from which\n     * the server should resume sending results.\n     */\n    readonly resumeToken: ByteString,\n    /**\n     * The \"current\" (synced) status of this target. Note that \"current\"\n     * has special meaning in the RPC protocol that implies that a target is\n     * both up-to-date and consistent with the rest of the watch stream.\n     */\n    readonly current: boolean,\n    /**\n     * The set of documents that were newly assigned to this target as part of\n     * this remote event.\n     */\n    readonly addedDocuments: DocumentKeySet,\n    /**\n     * The set of documents that were already assigned to this target but received\n     * an update during this remote event.\n     */\n    readonly modifiedDocuments: DocumentKeySet,\n    /**\n     * The set of documents that were removed from this target as part of this\n     * remote event.\n     */\n    readonly removedDocuments: DocumentKeySet\n  ) {}\n\n  /**\n   * This method is used to create a synthesized TargetChanges that can be used to\n   * apply a CURRENT status change to a View (for queries executed in a different\n   * tab) or for new queries (to raise snapshots with correct CURRENT status).\n   */\n  static createSynthesizedTargetChangeForCurrentChange(\n    targetId: TargetId,\n    current: boolean,\n    resumeToken: ByteString\n  ): TargetChange {\n    return new TargetChange(\n      resumeToken,\n      current,\n      documentKeySet(),\n      documentKeySet(),\n      documentKeySet()\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DatabaseId } from '../core/database_info';\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { targetIsDocumentTarget } from '../core/target';\nimport { TargetId } from '../core/types';\nimport { ChangeType } from '../core/view_snapshot';\nimport { TargetData, TargetPurpose } from '../local/target_data';\nimport {\n  documentKeySet,\n  DocumentKeySet,\n  mutableDocumentMap\n} from '../model/collections';\nimport { MutableDocument } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { normalizeByteString } from '../model/normalize';\nimport { debugAssert, fail, hardAssert } from '../util/assert';\nimport { Base64DecodeError } from '../util/base64_decode_error';\nimport { ByteString } from '../util/byte_string';\nimport { FirestoreError } from '../util/error';\nimport { logDebug, logWarn } from '../util/log';\nimport { primitiveComparator } from '../util/misc';\nimport { SortedMap } from '../util/sorted_map';\nimport { SortedSet } from '../util/sorted_set';\nimport {\n  testingHooksSpi,\n  ExistenceFilterMismatchInfo as TestingHooksExistenceFilterMismatchInfo\n} from '../util/testing_hooks_spi';\n\nimport { BloomFilter, BloomFilterError } from './bloom_filter';\nimport { ExistenceFilter } from './existence_filter';\nimport { RemoteEvent, TargetChange } from './remote_event';\n\n/**\n * Internal representation of the watcher API protocol buffers.\n */\nexport type WatchChange =\n  | DocumentWatchChange\n  | WatchTargetChange\n  | ExistenceFilterChange;\n\n/**\n * Represents a changed document and a list of target ids to which this change\n * applies.\n *\n * If document has been deleted NoDocument will be provided.\n */\nexport class DocumentWatchChange {\n  constructor(\n    /** The new document applies to all of these targets. */\n    public updatedTargetIds: TargetId[],\n    /** The new document is removed from all of these targets. */\n    public removedTargetIds: TargetId[],\n    /** The key of the document for this change. */\n    public key: DocumentKey,\n    /**\n     * The new document or NoDocument if it was deleted. Is null if the\n     * document went out of view without the server sending a new document.\n     */\n    public newDoc: MutableDocument | null\n  ) {}\n}\n\nexport class ExistenceFilterChange {\n  constructor(\n    public targetId: TargetId,\n    public existenceFilter: ExistenceFilter\n  ) {}\n}\n\nexport const enum WatchTargetChangeState {\n  NoChange,\n  Added,\n  Removed,\n  Current,\n  Reset\n}\n\nconst enum BloomFilterApplicationStatus {\n  Success,\n  Skipped,\n  FalsePositive\n}\nexport class WatchTargetChange {\n  constructor(\n    /** What kind of change occurred to the watch target. */\n    public state: WatchTargetChangeState,\n    /** The target IDs that were added/removed/set. */\n    public targetIds: TargetId[],\n    /**\n     * An opaque, server-assigned token that allows watching a target to be\n     * resumed after disconnecting without retransmitting all the data that\n     * matches the target. The resume token essentially identifies a point in\n     * time from which the server should resume sending results.\n     */\n    public resumeToken: ByteString = ByteString.EMPTY_BYTE_STRING,\n    /** An RPC error indicating why the watch failed. */\n    public cause: FirestoreError | null = null\n  ) {}\n}\n\n/** Tracks the internal state of a Watch target. */\nclass TargetState {\n  /**\n   * The number of pending responses (adds or removes) that we are waiting on.\n   * We only consider targets active that have no pending responses.\n   */\n  private pendingResponses = 0;\n\n  /**\n   * Keeps track of the document changes since the last raised snapshot.\n   *\n   * These changes are continuously updated as we receive document updates and\n   * always reflect the current set of changes against the last issued snapshot.\n   */\n  private documentChanges: SortedMap<DocumentKey, ChangeType> =\n    snapshotChangesMap();\n\n  /** See public getters for explanations of these fields. */\n  private _resumeToken: ByteString = ByteString.EMPTY_BYTE_STRING;\n  private _current = false;\n\n  /**\n   * Whether this target state should be included in the next snapshot. We\n   * initialize to true so that newly-added targets are included in the next\n   * RemoteEvent.\n   */\n  private _hasPendingChanges = true;\n\n  /**\n   * Whether this target has been marked 'current'.\n   *\n   * 'Current' has special meaning in the RPC protocol: It implies that the\n   * Watch backend has sent us all changes up to the point at which the target\n   * was added and that the target is consistent with the rest of the watch\n   * stream.\n   */\n  get current(): boolean {\n    return this._current;\n  }\n\n  /** The last resume token sent to us for this target. */\n  get resumeToken(): ByteString {\n    return this._resumeToken;\n  }\n\n  /** Whether this target has pending target adds or target removes. */\n  get isPending(): boolean {\n    return this.pendingResponses !== 0;\n  }\n\n  /** Whether we have modified any state that should trigger a snapshot. */\n  get hasPendingChanges(): boolean {\n    return this._hasPendingChanges;\n  }\n\n  /**\n   * Applies the resume token to the TargetChange, but only when it has a new\n   * value. Empty resumeTokens are discarded.\n   */\n  updateResumeToken(resumeToken: ByteString): void {\n    if (resumeToken.approximateByteSize() > 0) {\n      this._hasPendingChanges = true;\n      this._resumeToken = resumeToken;\n    }\n  }\n\n  /**\n   * Creates a target change from the current set of changes.\n   *\n   * To reset the document changes after raising this snapshot, call\n   * `clearPendingChanges()`.\n   */\n  toTargetChange(): TargetChange {\n    let addedDocuments = documentKeySet();\n    let modifiedDocuments = documentKeySet();\n    let removedDocuments = documentKeySet();\n\n    this.documentChanges.forEach((key, changeType) => {\n      switch (changeType) {\n        case ChangeType.Added:\n          addedDocuments = addedDocuments.add(key);\n          break;\n        case ChangeType.Modified:\n          modifiedDocuments = modifiedDocuments.add(key);\n          break;\n        case ChangeType.Removed:\n          removedDocuments = removedDocuments.add(key);\n          break;\n        default:\n          fail('Encountered invalid change type: ' + changeType);\n      }\n    });\n\n    return new TargetChange(\n      this._resumeToken,\n      this._current,\n      addedDocuments,\n      modifiedDocuments,\n      removedDocuments\n    );\n  }\n\n  /**\n   * Resets the document changes and sets `hasPendingChanges` to false.\n   */\n  clearPendingChanges(): void {\n    this._hasPendingChanges = false;\n    this.documentChanges = snapshotChangesMap();\n  }\n\n  addDocumentChange(key: DocumentKey, changeType: ChangeType): void {\n    this._hasPendingChanges = true;\n    this.documentChanges = this.documentChanges.insert(key, changeType);\n  }\n\n  removeDocumentChange(key: DocumentKey): void {\n    this._hasPendingChanges = true;\n    this.documentChanges = this.documentChanges.remove(key);\n  }\n\n  recordPendingTargetRequest(): void {\n    this.pendingResponses += 1;\n  }\n\n  recordTargetResponse(): void {\n    this.pendingResponses -= 1;\n    hardAssert(\n      this.pendingResponses >= 0,\n      '`pendingResponses` is less than 0. Actual value: ' +\n        this.pendingResponses +\n        '. This indicates that the SDK received more target acks from the ' +\n        'server than expected. The SDK should not continue to operate.'\n    );\n  }\n\n  markCurrent(): void {\n    this._hasPendingChanges = true;\n    this._current = true;\n  }\n}\n\n/**\n * Interface implemented by RemoteStore to expose target metadata to the\n * WatchChangeAggregator.\n */\nexport interface TargetMetadataProvider {\n  /**\n   * Returns the set of remote document keys for the given target ID as of the\n   * last raised snapshot.\n   */\n  getRemoteKeysForTarget(targetId: TargetId): DocumentKeySet;\n\n  /**\n   * Returns the TargetData for an active target ID or 'null' if this target\n   * has become inactive\n   */\n  getTargetDataForTarget(targetId: TargetId): TargetData | null;\n\n  /**\n   * Returns the database ID of the Firestore instance.\n   */\n  getDatabaseId(): DatabaseId;\n}\n\nconst LOG_TAG = 'WatchChangeAggregator';\n\n/**\n * A helper class to accumulate watch changes into a RemoteEvent.\n */\nexport class WatchChangeAggregator {\n  constructor(private metadataProvider: TargetMetadataProvider) {}\n\n  /** The internal state of all tracked targets. */\n  private targetStates = new Map<TargetId, TargetState>();\n\n  /** Keeps track of the documents to update since the last raised snapshot. */\n  private pendingDocumentUpdates = mutableDocumentMap();\n\n  /** A mapping of document keys to their set of target IDs. */\n  private pendingDocumentTargetMapping = documentTargetMap();\n\n  /**\n   * A map of targets with existence filter mismatches. These targets are\n   * known to be inconsistent and their listens needs to be re-established by\n   * RemoteStore.\n   */\n  private pendingTargetResets = new SortedMap<TargetId, TargetPurpose>(\n    primitiveComparator\n  );\n\n  /**\n   * Processes and adds the DocumentWatchChange to the current set of changes.\n   */\n  handleDocumentChange(docChange: DocumentWatchChange): void {\n    for (const targetId of docChange.updatedTargetIds) {\n      if (docChange.newDoc && docChange.newDoc.isFoundDocument()) {\n        this.addDocumentToTarget(targetId, docChange.newDoc);\n      } else {\n        this.removeDocumentFromTarget(\n          targetId,\n          docChange.key,\n          docChange.newDoc\n        );\n      }\n    }\n\n    for (const targetId of docChange.removedTargetIds) {\n      this.removeDocumentFromTarget(targetId, docChange.key, docChange.newDoc);\n    }\n  }\n\n  /** Processes and adds the WatchTargetChange to the current set of changes. */\n  handleTargetChange(targetChange: WatchTargetChange): void {\n    this.forEachTarget(targetChange, targetId => {\n      const targetState = this.ensureTargetState(targetId);\n      switch (targetChange.state) {\n        case WatchTargetChangeState.NoChange:\n          if (this.isActiveTarget(targetId)) {\n            targetState.updateResumeToken(targetChange.resumeToken);\n          }\n          break;\n        case WatchTargetChangeState.Added:\n          // We need to decrement the number of pending acks needed from watch\n          // for this targetId.\n          targetState.recordTargetResponse();\n          if (!targetState.isPending) {\n            // We have a freshly added target, so we need to reset any state\n            // that we had previously. This can happen e.g. when remove and add\n            // back a target for existence filter mismatches.\n            targetState.clearPendingChanges();\n          }\n          targetState.updateResumeToken(targetChange.resumeToken);\n          break;\n        case WatchTargetChangeState.Removed:\n          // We need to keep track of removed targets to we can post-filter and\n          // remove any target changes.\n          // We need to decrement the number of pending acks needed from watch\n          // for this targetId.\n          targetState.recordTargetResponse();\n          if (!targetState.isPending) {\n            this.removeTarget(targetId);\n          }\n          debugAssert(\n            !targetChange.cause,\n            'WatchChangeAggregator does not handle errored targets'\n          );\n          break;\n        case WatchTargetChangeState.Current:\n          if (this.isActiveTarget(targetId)) {\n            targetState.markCurrent();\n            targetState.updateResumeToken(targetChange.resumeToken);\n          }\n          break;\n        case WatchTargetChangeState.Reset:\n          if (this.isActiveTarget(targetId)) {\n            // Reset the target and synthesizes removes for all existing\n            // documents. The backend will re-add any documents that still\n            // match the target before it sends the next global snapshot.\n            this.resetTarget(targetId);\n            targetState.updateResumeToken(targetChange.resumeToken);\n          }\n          break;\n        default:\n          fail('Unknown target watch change state: ' + targetChange.state);\n      }\n    });\n  }\n\n  /**\n   * Iterates over all targetIds that the watch change applies to: either the\n   * targetIds explicitly listed in the change or the targetIds of all currently\n   * active targets.\n   */\n  forEachTarget(\n    targetChange: WatchTargetChange,\n    fn: (targetId: TargetId) => void\n  ): void {\n    if (targetChange.targetIds.length > 0) {\n      targetChange.targetIds.forEach(fn);\n    } else {\n      this.targetStates.forEach((_, targetId) => {\n        if (this.isActiveTarget(targetId)) {\n          fn(targetId);\n        }\n      });\n    }\n  }\n\n  /**\n   * Handles existence filters and synthesizes deletes for filter mismatches.\n   * Targets that are invalidated by filter mismatches are added to\n   * `pendingTargetResets`.\n   */\n  handleExistenceFilter(watchChange: ExistenceFilterChange): void {\n    const targetId = watchChange.targetId;\n    const expectedCount = watchChange.existenceFilter.count;\n\n    const targetData = this.targetDataForActiveTarget(targetId);\n    if (targetData) {\n      const target = targetData.target;\n      if (targetIsDocumentTarget(target)) {\n        if (expectedCount === 0) {\n          // The existence filter told us the document does not exist. We deduce\n          // that this document does not exist and apply a deleted document to\n          // our updates. Without applying this deleted document there might be\n          // another query that will raise this document as part of a snapshot\n          // until it is resolved, essentially exposing inconsistency between\n          // queries.\n          const key = new DocumentKey(target.path);\n          this.removeDocumentFromTarget(\n            targetId,\n            key,\n            MutableDocument.newNoDocument(key, SnapshotVersion.min())\n          );\n        } else {\n          hardAssert(\n            expectedCount === 1,\n            'Single document existence filter with count: ' + expectedCount\n          );\n        }\n      } else {\n        const currentSize = this.getCurrentDocumentCountForTarget(targetId);\n        // Existence filter mismatch. Mark the documents as being in limbo, and\n        // raise a snapshot with `isFromCache:true`.\n        if (currentSize !== expectedCount) {\n          // Apply bloom filter to identify and mark removed documents.\n          const bloomFilter = this.parseBloomFilter(watchChange);\n          const status = bloomFilter\n            ? this.applyBloomFilter(bloomFilter, watchChange, currentSize)\n            : BloomFilterApplicationStatus.Skipped;\n\n          if (status !== BloomFilterApplicationStatus.Success) {\n            // If bloom filter application fails, we reset the mapping and\n            // trigger re-run of the query.\n            this.resetTarget(targetId);\n\n            const purpose: TargetPurpose =\n              status === BloomFilterApplicationStatus.FalsePositive\n                ? TargetPurpose.ExistenceFilterMismatchBloom\n                : TargetPurpose.ExistenceFilterMismatch;\n            this.pendingTargetResets = this.pendingTargetResets.insert(\n              targetId,\n              purpose\n            );\n          }\n          testingHooksSpi?.notifyOnExistenceFilterMismatch(\n            createExistenceFilterMismatchInfoForTestingHooks(\n              currentSize,\n              watchChange.existenceFilter,\n              this.metadataProvider.getDatabaseId(),\n              bloomFilter,\n              status\n            )\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Parse the bloom filter from the \"unchanged_names\" field of an existence\n   * filter.\n   */\n  private parseBloomFilter(\n    watchChange: ExistenceFilterChange\n  ): BloomFilter | null {\n    const unchangedNames = watchChange.existenceFilter.unchangedNames;\n    if (!unchangedNames || !unchangedNames.bits) {\n      return null;\n    }\n\n    const {\n      bits: { bitmap = '', padding = 0 },\n      hashCount = 0\n    } = unchangedNames;\n\n    let normalizedBitmap: Uint8Array;\n    try {\n      normalizedBitmap = normalizeByteString(bitmap).toUint8Array();\n    } catch (err) {\n      if (err instanceof Base64DecodeError) {\n        logWarn(\n          'Decoding the base64 bloom filter in existence filter failed (' +\n            err.message +\n            '); ignoring the bloom filter and falling back to full re-query.'\n        );\n        return null;\n      } else {\n        throw err;\n      }\n    }\n\n    let bloomFilter: BloomFilter;\n    try {\n      // BloomFilter throws error if the inputs are invalid.\n      bloomFilter = new BloomFilter(normalizedBitmap, padding, hashCount);\n    } catch (err) {\n      if (err instanceof BloomFilterError) {\n        logWarn('BloomFilter error: ', err);\n      } else {\n        logWarn('Applying bloom filter failed: ', err);\n      }\n      return null;\n    }\n\n    if (bloomFilter.bitCount === 0) {\n      return null;\n    }\n\n    return bloomFilter;\n  }\n\n  /**\n   * Apply bloom filter to remove the deleted documents, and return the\n   * application status.\n   */\n  private applyBloomFilter(\n    bloomFilter: BloomFilter,\n    watchChange: ExistenceFilterChange,\n    currentCount: number\n  ): BloomFilterApplicationStatus {\n    const expectedCount = watchChange.existenceFilter.count;\n\n    const removedDocumentCount = this.filterRemovedDocuments(\n      bloomFilter,\n      watchChange.targetId\n    );\n\n    return expectedCount === currentCount - removedDocumentCount\n      ? BloomFilterApplicationStatus.Success\n      : BloomFilterApplicationStatus.FalsePositive;\n  }\n\n  /**\n   * Filter out removed documents based on bloom filter membership result and\n   * return number of documents removed.\n   */\n  private filterRemovedDocuments(\n    bloomFilter: BloomFilter,\n    targetId: number\n  ): number {\n    const existingKeys = this.metadataProvider.getRemoteKeysForTarget(targetId);\n    let removalCount = 0;\n\n    existingKeys.forEach(key => {\n      const databaseId = this.metadataProvider.getDatabaseId();\n      const documentPath =\n        `projects/${databaseId.projectId}` +\n        `/databases/${databaseId.database}` +\n        `/documents/${key.path.canonicalString()}`;\n\n      if (!bloomFilter.mightContain(documentPath)) {\n        this.removeDocumentFromTarget(targetId, key, /*updatedDocument=*/ null);\n        removalCount++;\n      }\n    });\n\n    return removalCount;\n  }\n\n  /**\n   * Converts the currently accumulated state into a remote event at the\n   * provided snapshot version. Resets the accumulated changes before returning.\n   */\n  createRemoteEvent(snapshotVersion: SnapshotVersion): RemoteEvent {\n    const targetChanges = new Map<TargetId, TargetChange>();\n\n    this.targetStates.forEach((targetState, targetId) => {\n      const targetData = this.targetDataForActiveTarget(targetId);\n      if (targetData) {\n        if (targetState.current && targetIsDocumentTarget(targetData.target)) {\n          // Document queries for document that don't exist can produce an empty\n          // result set. To update our local cache, we synthesize a document\n          // delete if we have not previously received the document. This\n          // resolves the limbo state of the document, removing it from\n          // limboDocumentRefs.\n          //\n          // TODO(dimond): Ideally we would have an explicit lookup target\n          // instead resulting in an explicit delete message and we could\n          // remove this special logic.\n          const key = new DocumentKey(targetData.target.path);\n          if (\n            this.pendingDocumentUpdates.get(key) === null &&\n            !this.targetContainsDocument(targetId, key)\n          ) {\n            this.removeDocumentFromTarget(\n              targetId,\n              key,\n              MutableDocument.newNoDocument(key, snapshotVersion)\n            );\n          }\n        }\n\n        if (targetState.hasPendingChanges) {\n          targetChanges.set(targetId, targetState.toTargetChange());\n          targetState.clearPendingChanges();\n        }\n      }\n    });\n\n    let resolvedLimboDocuments = documentKeySet();\n\n    // We extract the set of limbo-only document updates as the GC logic\n    // special-cases documents that do not appear in the target cache.\n    //\n    // TODO(gsoltis): Expand on this comment once GC is available in the JS\n    // client.\n    this.pendingDocumentTargetMapping.forEach((key, targets) => {\n      let isOnlyLimboTarget = true;\n\n      targets.forEachWhile(targetId => {\n        const targetData = this.targetDataForActiveTarget(targetId);\n        if (\n          targetData &&\n          targetData.purpose !== TargetPurpose.LimboResolution\n        ) {\n          isOnlyLimboTarget = false;\n          return false;\n        }\n\n        return true;\n      });\n\n      if (isOnlyLimboTarget) {\n        resolvedLimboDocuments = resolvedLimboDocuments.add(key);\n      }\n    });\n\n    this.pendingDocumentUpdates.forEach((_, doc) =>\n      doc.setReadTime(snapshotVersion)\n    );\n\n    const remoteEvent = new RemoteEvent(\n      snapshotVersion,\n      targetChanges,\n      this.pendingTargetResets,\n      this.pendingDocumentUpdates,\n      resolvedLimboDocuments\n    );\n\n    this.pendingDocumentUpdates = mutableDocumentMap();\n    this.pendingDocumentTargetMapping = documentTargetMap();\n    this.pendingTargetResets = new SortedMap<TargetId, TargetPurpose>(\n      primitiveComparator\n    );\n\n    return remoteEvent;\n  }\n\n  /**\n   * Adds the provided document to the internal list of document updates and\n   * its document key to the given target's mapping.\n   */\n  // Visible for testing.\n  addDocumentToTarget(targetId: TargetId, document: MutableDocument): void {\n    if (!this.isActiveTarget(targetId)) {\n      return;\n    }\n\n    const changeType = this.targetContainsDocument(targetId, document.key)\n      ? ChangeType.Modified\n      : ChangeType.Added;\n\n    const targetState = this.ensureTargetState(targetId);\n    targetState.addDocumentChange(document.key, changeType);\n\n    this.pendingDocumentUpdates = this.pendingDocumentUpdates.insert(\n      document.key,\n      document\n    );\n\n    this.pendingDocumentTargetMapping =\n      this.pendingDocumentTargetMapping.insert(\n        document.key,\n        this.ensureDocumentTargetMapping(document.key).add(targetId)\n      );\n  }\n\n  /**\n   * Removes the provided document from the target mapping. If the\n   * document no longer matches the target, but the document's state is still\n   * known (e.g. we know that the document was deleted or we received the change\n   * that caused the filter mismatch), the new document can be provided\n   * to update the remote document cache.\n   */\n  // Visible for testing.\n  removeDocumentFromTarget(\n    targetId: TargetId,\n    key: DocumentKey,\n    updatedDocument: MutableDocument | null\n  ): void {\n    if (!this.isActiveTarget(targetId)) {\n      return;\n    }\n\n    const targetState = this.ensureTargetState(targetId);\n    if (this.targetContainsDocument(targetId, key)) {\n      targetState.addDocumentChange(key, ChangeType.Removed);\n    } else {\n      // The document may have entered and left the target before we raised a\n      // snapshot, so we can just ignore the change.\n      targetState.removeDocumentChange(key);\n    }\n\n    this.pendingDocumentTargetMapping =\n      this.pendingDocumentTargetMapping.insert(\n        key,\n        this.ensureDocumentTargetMapping(key).delete(targetId)\n      );\n\n    if (updatedDocument) {\n      this.pendingDocumentUpdates = this.pendingDocumentUpdates.insert(\n        key,\n        updatedDocument\n      );\n    }\n  }\n\n  removeTarget(targetId: TargetId): void {\n    this.targetStates.delete(targetId);\n  }\n\n  /**\n   * Returns the current count of documents in the target. This includes both\n   * the number of documents that the LocalStore considers to be part of the\n   * target as well as any accumulated changes.\n   */\n  private getCurrentDocumentCountForTarget(targetId: TargetId): number {\n    const targetState = this.ensureTargetState(targetId);\n    const targetChange = targetState.toTargetChange();\n    return (\n      this.metadataProvider.getRemoteKeysForTarget(targetId).size +\n      targetChange.addedDocuments.size -\n      targetChange.removedDocuments.size\n    );\n  }\n\n  /**\n   * Increment the number of acks needed from watch before we can consider the\n   * server to be 'in-sync' with the client's active targets.\n   */\n  recordPendingTargetRequest(targetId: TargetId): void {\n    // For each request we get we need to record we need a response for it.\n    const targetState = this.ensureTargetState(targetId);\n    targetState.recordPendingTargetRequest();\n  }\n\n  private ensureTargetState(targetId: TargetId): TargetState {\n    let result = this.targetStates.get(targetId);\n    if (!result) {\n      result = new TargetState();\n      this.targetStates.set(targetId, result);\n    }\n    return result;\n  }\n\n  private ensureDocumentTargetMapping(key: DocumentKey): SortedSet<TargetId> {\n    let targetMapping = this.pendingDocumentTargetMapping.get(key);\n\n    if (!targetMapping) {\n      targetMapping = new SortedSet<TargetId>(primitiveComparator);\n      this.pendingDocumentTargetMapping =\n        this.pendingDocumentTargetMapping.insert(key, targetMapping);\n    }\n\n    return targetMapping;\n  }\n\n  /**\n   * Verifies that the user is still interested in this target (by calling\n   * `getTargetDataForTarget()`) and that we are not waiting for pending ADDs\n   * from watch.\n   */\n  protected isActiveTarget(targetId: TargetId): boolean {\n    const targetActive = this.targetDataForActiveTarget(targetId) !== null;\n    if (!targetActive) {\n      logDebug(LOG_TAG, 'Detected inactive target', targetId);\n    }\n    return targetActive;\n  }\n\n  /**\n   * Returns the TargetData for an active target (i.e. a target that the user\n   * is still interested in that has no outstanding target change requests).\n   */\n  protected targetDataForActiveTarget(targetId: TargetId): TargetData | null {\n    const targetState = this.targetStates.get(targetId);\n    return targetState && targetState.isPending\n      ? null\n      : this.metadataProvider.getTargetDataForTarget(targetId);\n  }\n\n  /**\n   * Resets the state of a Watch target to its initial state (e.g. sets\n   * 'current' to false, clears the resume token and removes its target mapping\n   * from all documents).\n   */\n  private resetTarget(targetId: TargetId): void {\n    debugAssert(\n      !this.targetStates.get(targetId)!.isPending,\n      'Should only reset active targets'\n    );\n    this.targetStates.set(targetId, new TargetState());\n\n    // Trigger removal for any documents currently mapped to this target.\n    // These removals will be part of the initial snapshot if Watch does not\n    // resend these documents.\n    const existingKeys = this.metadataProvider.getRemoteKeysForTarget(targetId);\n    existingKeys.forEach(key => {\n      this.removeDocumentFromTarget(targetId, key, /*updatedDocument=*/ null);\n    });\n  }\n  /**\n   * Returns whether the LocalStore considers the document to be part of the\n   * specified target.\n   */\n  private targetContainsDocument(\n    targetId: TargetId,\n    key: DocumentKey\n  ): boolean {\n    const existingKeys = this.metadataProvider.getRemoteKeysForTarget(targetId);\n    return existingKeys.has(key);\n  }\n}\n\nfunction documentTargetMap(): SortedMap<DocumentKey, SortedSet<TargetId>> {\n  return new SortedMap<DocumentKey, SortedSet<TargetId>>(\n    DocumentKey.comparator\n  );\n}\n\nfunction snapshotChangesMap(): SortedMap<DocumentKey, ChangeType> {\n  return new SortedMap<DocumentKey, ChangeType>(DocumentKey.comparator);\n}\n\nfunction createExistenceFilterMismatchInfoForTestingHooks(\n  localCacheCount: number,\n  existenceFilter: ExistenceFilter,\n  databaseId: DatabaseId,\n  bloomFilter: BloomFilter | null,\n  bloomFilterStatus: BloomFilterApplicationStatus\n): TestingHooksExistenceFilterMismatchInfo {\n  const result: TestingHooksExistenceFilterMismatchInfo = {\n    localCacheCount,\n    existenceFilterCount: existenceFilter.count,\n    databaseId: databaseId.database,\n    projectId: databaseId.projectId\n  };\n\n  const unchangedNames = existenceFilter.unchangedNames;\n  if (unchangedNames) {\n    result.bloomFilter = {\n      applied: bloomFilterStatus === BloomFilterApplicationStatus.Success,\n      hashCount: unchangedNames?.hashCount ?? 0,\n      bitmapLength: unchangedNames?.bits?.bitmap?.length ?? 0,\n      padding: unchangedNames?.bits?.padding ?? 0,\n      mightContain: (value: string): boolean =>\n        bloomFilter?.mightContain(value) ?? false\n    };\n  }\n\n  return result;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Aggregate } from '../core/aggregate';\nimport { Bound } from '../core/bound';\nimport { DatabaseId } from '../core/database_info';\nimport {\n  CompositeFilter,\n  compositeFilterIsFlatConjunction,\n  CompositeOperator,\n  FieldFilter,\n  Filter,\n  Operator\n} from '../core/filter';\nimport { Direction, OrderBy } from '../core/order_by';\nimport {\n  LimitType,\n  newQuery,\n  newQueryForPath,\n  Query,\n  queryToTarget\n} from '../core/query';\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { targetIsDocumentTarget, Target } from '../core/target';\nimport { TargetId } from '../core/types';\nimport { Timestamp } from '../lite-api/timestamp';\nimport { TargetData, TargetPurpose } from '../local/target_data';\nimport { MutableDocument } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { FieldMask } from '../model/field_mask';\nimport {\n  DeleteMutation,\n  FieldTransform,\n  Mutation,\n  MutationResult,\n  PatchMutation,\n  Precondition,\n  SetMutation,\n  VerifyMutation\n} from '../model/mutation';\nimport { normalizeTimestamp } from '../model/normalize';\nimport { ObjectValue } from '../model/object_value';\nimport { FieldPath, ResourcePath } from '../model/path';\nimport {\n  ArrayRemoveTransformOperation,\n  ArrayUnionTransformOperation,\n  NumericIncrementTransformOperation,\n  ServerTimestampTransform,\n  TransformOperation\n} from '../model/transform_operation';\nimport { isNanValue, isNullValue } from '../model/values';\nimport {\n  ApiClientObjectMap as ProtoApiClientObjectMap,\n  BatchGetDocumentsResponse as ProtoBatchGetDocumentsResponse,\n  CompositeFilterOp as ProtoCompositeFilterOp,\n  Cursor as ProtoCursor,\n  Document as ProtoDocument,\n  DocumentMask as ProtoDocumentMask,\n  DocumentsTarget as ProtoDocumentsTarget,\n  FieldFilterOp as ProtoFieldFilterOp,\n  FieldReference as ProtoFieldReference,\n  FieldTransform as ProtoFieldTransform,\n  Filter as ProtoFilter,\n  ListenResponse as ProtoListenResponse,\n  Order as ProtoOrder,\n  OrderDirection as ProtoOrderDirection,\n  Precondition as ProtoPrecondition,\n  QueryTarget as ProtoQueryTarget,\n  RunAggregationQueryRequest as ProtoRunAggregationQueryRequest,\n  Aggregation as ProtoAggregation,\n  Status as ProtoStatus,\n  Target as ProtoTarget,\n  TargetChangeTargetChangeType as ProtoTargetChangeTargetChangeType,\n  Timestamp as ProtoTimestamp,\n  Write as ProtoWrite,\n  WriteResult as ProtoWriteResult\n} from '../protos/firestore_proto_api';\nimport { debugAssert, fail, hardAssert } from '../util/assert';\nimport { ByteString } from '../util/byte_string';\nimport { Code, FirestoreError } from '../util/error';\nimport { isNullOrUndefined } from '../util/types';\n\nimport { ExistenceFilter } from './existence_filter';\nimport { Serializer } from './number_serializer';\nimport { mapCodeFromRpcCode } from './rpc_error';\nimport {\n  DocumentWatchChange,\n  ExistenceFilterChange,\n  WatchChange,\n  WatchTargetChange,\n  WatchTargetChangeState\n} from './watch_change';\n\nconst DIRECTIONS = (() => {\n  const dirs: { [dir: string]: ProtoOrderDirection } = {};\n  dirs[Direction.ASCENDING] = 'ASCENDING';\n  dirs[Direction.DESCENDING] = 'DESCENDING';\n  return dirs;\n})();\n\nconst OPERATORS = (() => {\n  const ops: { [op: string]: ProtoFieldFilterOp } = {};\n  ops[Operator.LESS_THAN] = 'LESS_THAN';\n  ops[Operator.LESS_THAN_OR_EQUAL] = 'LESS_THAN_OR_EQUAL';\n  ops[Operator.GREATER_THAN] = 'GREATER_THAN';\n  ops[Operator.GREATER_THAN_OR_EQUAL] = 'GREATER_THAN_OR_EQUAL';\n  ops[Operator.EQUAL] = 'EQUAL';\n  ops[Operator.NOT_EQUAL] = 'NOT_EQUAL';\n  ops[Operator.ARRAY_CONTAINS] = 'ARRAY_CONTAINS';\n  ops[Operator.IN] = 'IN';\n  ops[Operator.NOT_IN] = 'NOT_IN';\n  ops[Operator.ARRAY_CONTAINS_ANY] = 'ARRAY_CONTAINS_ANY';\n  return ops;\n})();\n\nconst COMPOSITE_OPERATORS = (() => {\n  const ops: { [op: string]: ProtoCompositeFilterOp } = {};\n  ops[CompositeOperator.AND] = 'AND';\n  ops[CompositeOperator.OR] = 'OR';\n  return ops;\n})();\n\nfunction assertPresent(value: unknown, description: string): asserts value {\n  debugAssert(!isNullOrUndefined(value), description + ' is missing');\n}\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nexport class JsonProtoSerializer implements Serializer {\n  constructor(\n    readonly databaseId: DatabaseId,\n    readonly useProto3Json: boolean\n  ) {}\n}\n\nfunction fromRpcStatus(status: ProtoStatus): FirestoreError {\n  const code =\n    status.code === undefined ? Code.UNKNOWN : mapCodeFromRpcCode(status.code);\n  return new FirestoreError(code, status.message || '');\n}\n\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\nfunction toInt32Proto(\n  serializer: JsonProtoSerializer,\n  val: number | null\n): number | { value: number } | null {\n  if (serializer.useProto3Json || isNullOrUndefined(val)) {\n    return val;\n  } else {\n    return { value: val };\n  }\n}\n\n/**\n * Returns a number (or null) from a google.protobuf.Int32Value proto.\n */\nfunction fromInt32Proto(\n  val: number | { value: number } | undefined\n): number | null {\n  let result;\n  if (typeof val === 'object') {\n    result = val.value;\n  } else {\n    result = val;\n  }\n  return isNullOrUndefined(result) ? null : result;\n}\n\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nexport function toTimestamp(\n  serializer: JsonProtoSerializer,\n  timestamp: Timestamp\n): ProtoTimestamp {\n  if (serializer.useProto3Json) {\n    // Serialize to ISO-8601 date format, but with full nano resolution.\n    // Since JS Date has only millis, let's only use it for the seconds and\n    // then manually add the fractions to the end.\n    const jsDateStr = new Date(timestamp.seconds * 1000).toISOString();\n    // Remove .xxx frac part and Z in the end.\n    const strUntilSeconds = jsDateStr.replace(/\\.\\d*/, '').replace('Z', '');\n    // Pad the fraction out to 9 digits (nanos).\n    const nanoStr = ('000000000' + timestamp.nanoseconds).slice(-9);\n\n    return `${strUntilSeconds}.${nanoStr}Z`;\n  } else {\n    return {\n      seconds: '' + timestamp.seconds,\n      nanos: timestamp.nanoseconds\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any;\n  }\n}\n\nfunction fromTimestamp(date: ProtoTimestamp): Timestamp {\n  const timestamp = normalizeTimestamp(date);\n  return new Timestamp(timestamp.seconds, timestamp.nanos);\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nexport function toBytes(\n  serializer: JsonProtoSerializer,\n  bytes: ByteString\n): string | Uint8Array {\n  if (serializer.useProto3Json) {\n    return bytes.toBase64();\n  } else {\n    return bytes.toUint8Array();\n  }\n}\n\n/**\n * Returns a ByteString based on the proto string value.\n */\nexport function fromBytes(\n  serializer: JsonProtoSerializer,\n  value: string | Uint8Array | undefined\n): ByteString {\n  if (serializer.useProto3Json) {\n    hardAssert(\n      value === undefined || typeof value === 'string',\n      'value must be undefined or a string when using proto3 Json'\n    );\n    return ByteString.fromBase64String(value ? value : '');\n  } else {\n    hardAssert(\n      value === undefined ||\n        // Check if the value is an instance of both Buffer and Uint8Array,\n        // despite the fact that Buffer extends Uint8Array. In some\n        // environments, such as jsdom, the prototype chain of Buffer\n        // does not indicate that it extends Uint8Array.\n        value instanceof Buffer ||\n        value instanceof Uint8Array,\n      'value must be undefined, Buffer, or Uint8Array'\n    );\n    return ByteString.fromUint8Array(value ? value : new Uint8Array());\n  }\n}\n\nexport function toVersion(\n  serializer: JsonProtoSerializer,\n  version: SnapshotVersion\n): ProtoTimestamp {\n  return toTimestamp(serializer, version.toTimestamp());\n}\n\nexport function fromVersion(version: ProtoTimestamp): SnapshotVersion {\n  hardAssert(!!version, \"Trying to deserialize version that isn't set\");\n  return SnapshotVersion.fromTimestamp(fromTimestamp(version));\n}\n\nexport function toResourceName(\n  databaseId: DatabaseId,\n  path: ResourcePath\n): string {\n  return toResourcePath(databaseId, path).canonicalString();\n}\n\nexport function toResourcePath(\n  databaseId: DatabaseId,\n  path?: ResourcePath\n): ResourcePath {\n  const resourcePath = fullyQualifiedPrefixPath(databaseId).child('documents');\n  return path === undefined ? resourcePath : resourcePath.child(path);\n}\n\nfunction fromResourceName(name: string): ResourcePath {\n  const resource = ResourcePath.fromString(name);\n  hardAssert(\n    isValidResourceName(resource),\n    'Tried to deserialize invalid key ' + resource.toString()\n  );\n  return resource;\n}\n\nexport function toName(\n  serializer: JsonProtoSerializer,\n  key: DocumentKey\n): string {\n  return toResourceName(serializer.databaseId, key.path);\n}\n\nexport function fromName(\n  serializer: JsonProtoSerializer,\n  name: string\n): DocumentKey {\n  const resource = fromResourceName(name);\n\n  if (resource.get(1) !== serializer.databaseId.projectId) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      'Tried to deserialize key from different project: ' +\n        resource.get(1) +\n        ' vs ' +\n        serializer.databaseId.projectId\n    );\n  }\n\n  if (resource.get(3) !== serializer.databaseId.database) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      'Tried to deserialize key from different database: ' +\n        resource.get(3) +\n        ' vs ' +\n        serializer.databaseId.database\n    );\n  }\n  return new DocumentKey(extractLocalPathFromResourceName(resource));\n}\n\nfunction toQueryPath(\n  serializer: JsonProtoSerializer,\n  path: ResourcePath\n): string {\n  return toResourceName(serializer.databaseId, path);\n}\n\nfunction fromQueryPath(name: string): ResourcePath {\n  const resourceName = fromResourceName(name);\n  // In v1beta1 queries for collections at the root did not have a trailing\n  // \"/documents\". In v1 all resource paths contain \"/documents\". Preserve the\n  // ability to read the v1beta1 form for compatibility with queries persisted\n  // in the local target cache.\n  if (resourceName.length === 4) {\n    return ResourcePath.emptyPath();\n  }\n  return extractLocalPathFromResourceName(resourceName);\n}\n\nexport function getEncodedDatabaseId(serializer: JsonProtoSerializer): string {\n  const path = new ResourcePath([\n    'projects',\n    serializer.databaseId.projectId,\n    'databases',\n    serializer.databaseId.database\n  ]);\n  return path.canonicalString();\n}\n\nfunction fullyQualifiedPrefixPath(databaseId: DatabaseId): ResourcePath {\n  return new ResourcePath([\n    'projects',\n    databaseId.projectId,\n    'databases',\n    databaseId.database\n  ]);\n}\n\nfunction extractLocalPathFromResourceName(\n  resourceName: ResourcePath\n): ResourcePath {\n  hardAssert(\n    resourceName.length > 4 && resourceName.get(4) === 'documents',\n    'tried to deserialize invalid key ' + resourceName.toString()\n  );\n  return resourceName.popFirst(5);\n}\n\n/** Creates a Document proto from key and fields (but no create/update time) */\nexport function toMutationDocument(\n  serializer: JsonProtoSerializer,\n  key: DocumentKey,\n  fields: ObjectValue\n): ProtoDocument {\n  return {\n    name: toName(serializer, key),\n    fields: fields.value.mapValue.fields\n  };\n}\n\nexport function toDocument(\n  serializer: JsonProtoSerializer,\n  document: MutableDocument\n): ProtoDocument {\n  debugAssert(\n    !document.hasLocalMutations,\n    \"Can't serialize documents with mutations.\"\n  );\n  return {\n    name: toName(serializer, document.key),\n    fields: document.data.value.mapValue.fields,\n    updateTime: toTimestamp(serializer, document.version.toTimestamp()),\n    createTime: toTimestamp(serializer, document.createTime.toTimestamp())\n  };\n}\n\nexport function fromDocument(\n  serializer: JsonProtoSerializer,\n  document: ProtoDocument,\n  hasCommittedMutations?: boolean\n): MutableDocument {\n  const key = fromName(serializer, document.name!);\n  const version = fromVersion(document.updateTime!);\n  // If we read a document from persistence that is missing createTime, it's due\n  // to older SDK versions not storing this information. In such cases, we'll\n  // set the createTime to zero. This can be removed in the long term.\n  const createTime = document.createTime\n    ? fromVersion(document.createTime)\n    : SnapshotVersion.min();\n  const data = new ObjectValue({ mapValue: { fields: document.fields } });\n  const result = MutableDocument.newFoundDocument(\n    key,\n    version,\n    createTime,\n    data\n  );\n  if (hasCommittedMutations) {\n    result.setHasCommittedMutations();\n  }\n  return hasCommittedMutations ? result.setHasCommittedMutations() : result;\n}\n\nfunction fromFound(\n  serializer: JsonProtoSerializer,\n  doc: ProtoBatchGetDocumentsResponse\n): MutableDocument {\n  hardAssert(\n    !!doc.found,\n    'Tried to deserialize a found document from a missing document.'\n  );\n  assertPresent(doc.found.name, 'doc.found.name');\n  assertPresent(doc.found.updateTime, 'doc.found.updateTime');\n  const key = fromName(serializer, doc.found.name);\n  const version = fromVersion(doc.found.updateTime);\n  const createTime = doc.found.createTime\n    ? fromVersion(doc.found.createTime)\n    : SnapshotVersion.min();\n  const data = new ObjectValue({ mapValue: { fields: doc.found.fields } });\n  return MutableDocument.newFoundDocument(key, version, createTime, data);\n}\n\nfunction fromMissing(\n  serializer: JsonProtoSerializer,\n  result: ProtoBatchGetDocumentsResponse\n): MutableDocument {\n  hardAssert(\n    !!result.missing,\n    'Tried to deserialize a missing document from a found document.'\n  );\n  hardAssert(\n    !!result.readTime,\n    'Tried to deserialize a missing document without a read time.'\n  );\n  const key = fromName(serializer, result.missing);\n  const version = fromVersion(result.readTime);\n  return MutableDocument.newNoDocument(key, version);\n}\n\nexport function fromBatchGetDocumentsResponse(\n  serializer: JsonProtoSerializer,\n  result: ProtoBatchGetDocumentsResponse\n): MutableDocument {\n  if ('found' in result) {\n    return fromFound(serializer, result);\n  } else if ('missing' in result) {\n    return fromMissing(serializer, result);\n  }\n  return fail('invalid batch get response: ' + JSON.stringify(result));\n}\n\nexport function fromWatchChange(\n  serializer: JsonProtoSerializer,\n  change: ProtoListenResponse\n): WatchChange {\n  let watchChange: WatchChange;\n  if ('targetChange' in change) {\n    assertPresent(change.targetChange, 'targetChange');\n    // proto3 default value is unset in JSON (undefined), so use 'NO_CHANGE'\n    // if unset\n    const state = fromWatchTargetChangeState(\n      change.targetChange.targetChangeType || 'NO_CHANGE'\n    );\n    const targetIds: TargetId[] = change.targetChange.targetIds || [];\n\n    const resumeToken = fromBytes(serializer, change.targetChange.resumeToken);\n    const causeProto = change.targetChange!.cause;\n    const cause = causeProto && fromRpcStatus(causeProto);\n    watchChange = new WatchTargetChange(\n      state,\n      targetIds,\n      resumeToken,\n      cause || null\n    );\n  } else if ('documentChange' in change) {\n    assertPresent(change.documentChange, 'documentChange');\n    const entityChange = change.documentChange;\n    assertPresent(entityChange.document, 'documentChange.name');\n    assertPresent(entityChange.document.name, 'documentChange.document.name');\n    assertPresent(\n      entityChange.document.updateTime,\n      'documentChange.document.updateTime'\n    );\n    const key = fromName(serializer, entityChange.document.name);\n    const version = fromVersion(entityChange.document.updateTime);\n    const createTime = entityChange.document.createTime\n      ? fromVersion(entityChange.document.createTime)\n      : SnapshotVersion.min();\n    const data = new ObjectValue({\n      mapValue: { fields: entityChange.document.fields }\n    });\n    const doc = MutableDocument.newFoundDocument(\n      key,\n      version,\n      createTime,\n      data\n    );\n    const updatedTargetIds = entityChange.targetIds || [];\n    const removedTargetIds = entityChange.removedTargetIds || [];\n    watchChange = new DocumentWatchChange(\n      updatedTargetIds,\n      removedTargetIds,\n      doc.key,\n      doc\n    );\n  } else if ('documentDelete' in change) {\n    assertPresent(change.documentDelete, 'documentDelete');\n    const docDelete = change.documentDelete;\n    assertPresent(docDelete.document, 'documentDelete.document');\n    const key = fromName(serializer, docDelete.document);\n    const version = docDelete.readTime\n      ? fromVersion(docDelete.readTime)\n      : SnapshotVersion.min();\n    const doc = MutableDocument.newNoDocument(key, version);\n    const removedTargetIds = docDelete.removedTargetIds || [];\n    watchChange = new DocumentWatchChange([], removedTargetIds, doc.key, doc);\n  } else if ('documentRemove' in change) {\n    assertPresent(change.documentRemove, 'documentRemove');\n    const docRemove = change.documentRemove;\n    assertPresent(docRemove.document, 'documentRemove');\n    const key = fromName(serializer, docRemove.document);\n    const removedTargetIds = docRemove.removedTargetIds || [];\n    watchChange = new DocumentWatchChange([], removedTargetIds, key, null);\n  } else if ('filter' in change) {\n    // TODO(dimond): implement existence filter parsing with strategy.\n    assertPresent(change.filter, 'filter');\n    const filter = change.filter;\n    assertPresent(filter.targetId, 'filter.targetId');\n    const { count = 0, unchangedNames } = filter;\n    const existenceFilter = new ExistenceFilter(count, unchangedNames);\n    const targetId = filter.targetId;\n    watchChange = new ExistenceFilterChange(targetId, existenceFilter);\n  } else {\n    return fail('Unknown change type ' + JSON.stringify(change));\n  }\n  return watchChange;\n}\n\nfunction fromWatchTargetChangeState(\n  state: ProtoTargetChangeTargetChangeType\n): WatchTargetChangeState {\n  if (state === 'NO_CHANGE') {\n    return WatchTargetChangeState.NoChange;\n  } else if (state === 'ADD') {\n    return WatchTargetChangeState.Added;\n  } else if (state === 'REMOVE') {\n    return WatchTargetChangeState.Removed;\n  } else if (state === 'CURRENT') {\n    return WatchTargetChangeState.Current;\n  } else if (state === 'RESET') {\n    return WatchTargetChangeState.Reset;\n  } else {\n    return fail('Got unexpected TargetChange.state: ' + state);\n  }\n}\n\nexport function versionFromListenResponse(\n  change: ProtoListenResponse\n): SnapshotVersion {\n  // We have only reached a consistent snapshot for the entire stream if there\n  // is a read_time set and it applies to all targets (i.e. the list of\n  // targets is empty). The backend is guaranteed to send such responses.\n  if (!('targetChange' in change)) {\n    return SnapshotVersion.min();\n  }\n  const targetChange = change.targetChange!;\n  if (targetChange.targetIds && targetChange.targetIds.length) {\n    return SnapshotVersion.min();\n  }\n  if (!targetChange.readTime) {\n    return SnapshotVersion.min();\n  }\n  return fromVersion(targetChange.readTime);\n}\n\nexport function toMutation(\n  serializer: JsonProtoSerializer,\n  mutation: Mutation\n): ProtoWrite {\n  let result: ProtoWrite;\n  if (mutation instanceof SetMutation) {\n    result = {\n      update: toMutationDocument(serializer, mutation.key, mutation.value)\n    };\n  } else if (mutation instanceof DeleteMutation) {\n    result = { delete: toName(serializer, mutation.key) };\n  } else if (mutation instanceof PatchMutation) {\n    result = {\n      update: toMutationDocument(serializer, mutation.key, mutation.data),\n      updateMask: toDocumentMask(mutation.fieldMask)\n    };\n  } else if (mutation instanceof VerifyMutation) {\n    result = {\n      verify: toName(serializer, mutation.key)\n    };\n  } else {\n    return fail('Unknown mutation type ' + mutation.type);\n  }\n\n  if (mutation.fieldTransforms.length > 0) {\n    result.updateTransforms = mutation.fieldTransforms.map(transform =>\n      toFieldTransform(serializer, transform)\n    );\n  }\n\n  if (!mutation.precondition.isNone) {\n    result.currentDocument = toPrecondition(serializer, mutation.precondition);\n  }\n\n  return result;\n}\n\nexport function fromMutation(\n  serializer: JsonProtoSerializer,\n  proto: ProtoWrite\n): Mutation {\n  const precondition = proto.currentDocument\n    ? fromPrecondition(proto.currentDocument)\n    : Precondition.none();\n\n  const fieldTransforms = proto.updateTransforms\n    ? proto.updateTransforms.map(transform =>\n        fromFieldTransform(serializer, transform)\n      )\n    : [];\n\n  if (proto.update) {\n    assertPresent(proto.update.name, 'name');\n    const key = fromName(serializer, proto.update.name);\n    const value = new ObjectValue({\n      mapValue: { fields: proto.update.fields }\n    });\n\n    if (proto.updateMask) {\n      const fieldMask = fromDocumentMask(proto.updateMask);\n      return new PatchMutation(\n        key,\n        value,\n        fieldMask,\n        precondition,\n        fieldTransforms\n      );\n    } else {\n      return new SetMutation(key, value, precondition, fieldTransforms);\n    }\n  } else if (proto.delete) {\n    const key = fromName(serializer, proto.delete);\n    return new DeleteMutation(key, precondition);\n  } else if (proto.verify) {\n    const key = fromName(serializer, proto.verify);\n    return new VerifyMutation(key, precondition);\n  } else {\n    return fail('unknown mutation proto: ' + JSON.stringify(proto));\n  }\n}\n\nfunction toPrecondition(\n  serializer: JsonProtoSerializer,\n  precondition: Precondition\n): ProtoPrecondition {\n  debugAssert(!precondition.isNone, \"Can't serialize an empty precondition\");\n  if (precondition.updateTime !== undefined) {\n    return {\n      updateTime: toVersion(serializer, precondition.updateTime)\n    };\n  } else if (precondition.exists !== undefined) {\n    return { exists: precondition.exists };\n  } else {\n    return fail('Unknown precondition');\n  }\n}\n\nfunction fromPrecondition(precondition: ProtoPrecondition): Precondition {\n  if (precondition.updateTime !== undefined) {\n    return Precondition.updateTime(fromVersion(precondition.updateTime));\n  } else if (precondition.exists !== undefined) {\n    return Precondition.exists(precondition.exists);\n  } else {\n    return Precondition.none();\n  }\n}\n\nfunction fromWriteResult(\n  proto: ProtoWriteResult,\n  commitTime: ProtoTimestamp\n): MutationResult {\n  // NOTE: Deletes don't have an updateTime.\n  let version = proto.updateTime\n    ? fromVersion(proto.updateTime)\n    : fromVersion(commitTime);\n\n  if (version.isEqual(SnapshotVersion.min())) {\n    // The Firestore Emulator currently returns an update time of 0 for\n    // deletes of non-existing documents (rather than null). This breaks the\n    // test \"get deleted doc while offline with source=cache\" as NoDocuments\n    // with version 0 are filtered by IndexedDb's RemoteDocumentCache.\n    // TODO(#2149): Remove this when Emulator is fixed\n    version = fromVersion(commitTime);\n  }\n\n  return new MutationResult(version, proto.transformResults || []);\n}\n\nexport function fromWriteResults(\n  protos: ProtoWriteResult[] | undefined,\n  commitTime?: ProtoTimestamp\n): MutationResult[] {\n  if (protos && protos.length > 0) {\n    hardAssert(\n      commitTime !== undefined,\n      'Received a write result without a commit time'\n    );\n    return protos.map(proto => fromWriteResult(proto, commitTime));\n  } else {\n    return [];\n  }\n}\n\nfunction toFieldTransform(\n  serializer: JsonProtoSerializer,\n  fieldTransform: FieldTransform\n): ProtoFieldTransform {\n  const transform = fieldTransform.transform;\n  if (transform instanceof ServerTimestampTransform) {\n    return {\n      fieldPath: fieldTransform.field.canonicalString(),\n      setToServerValue: 'REQUEST_TIME'\n    };\n  } else if (transform instanceof ArrayUnionTransformOperation) {\n    return {\n      fieldPath: fieldTransform.field.canonicalString(),\n      appendMissingElements: {\n        values: transform.elements\n      }\n    };\n  } else if (transform instanceof ArrayRemoveTransformOperation) {\n    return {\n      fieldPath: fieldTransform.field.canonicalString(),\n      removeAllFromArray: {\n        values: transform.elements\n      }\n    };\n  } else if (transform instanceof NumericIncrementTransformOperation) {\n    return {\n      fieldPath: fieldTransform.field.canonicalString(),\n      increment: transform.operand\n    };\n  } else {\n    throw fail('Unknown transform: ' + fieldTransform.transform);\n  }\n}\n\nfunction fromFieldTransform(\n  serializer: JsonProtoSerializer,\n  proto: ProtoFieldTransform\n): FieldTransform {\n  let transform: TransformOperation | null = null;\n  if ('setToServerValue' in proto) {\n    hardAssert(\n      proto.setToServerValue === 'REQUEST_TIME',\n      'Unknown server value transform proto: ' + JSON.stringify(proto)\n    );\n    transform = new ServerTimestampTransform();\n  } else if ('appendMissingElements' in proto) {\n    const values = proto.appendMissingElements!.values || [];\n    transform = new ArrayUnionTransformOperation(values);\n  } else if ('removeAllFromArray' in proto) {\n    const values = proto.removeAllFromArray!.values || [];\n    transform = new ArrayRemoveTransformOperation(values);\n  } else if ('increment' in proto) {\n    transform = new NumericIncrementTransformOperation(\n      serializer,\n      proto.increment!\n    );\n  } else {\n    fail('Unknown transform proto: ' + JSON.stringify(proto));\n  }\n  const fieldPath = FieldPath.fromServerFormat(proto.fieldPath!);\n  return new FieldTransform(fieldPath, transform!);\n}\n\nexport function toDocumentsTarget(\n  serializer: JsonProtoSerializer,\n  target: Target\n): ProtoDocumentsTarget {\n  return { documents: [toQueryPath(serializer, target.path)] };\n}\n\nexport function fromDocumentsTarget(\n  documentsTarget: ProtoDocumentsTarget\n): Target {\n  const count = documentsTarget.documents!.length;\n  hardAssert(\n    count === 1,\n    'DocumentsTarget contained other than 1 document: ' + count\n  );\n  const name = documentsTarget.documents![0];\n  return queryToTarget(newQueryForPath(fromQueryPath(name)));\n}\n\nexport function toQueryTarget(\n  serializer: JsonProtoSerializer,\n  target: Target\n): { queryTarget: ProtoQueryTarget; parent: ResourcePath } {\n  // Dissect the path into parent, collectionId, and optional key filter.\n  const queryTarget: ProtoQueryTarget = { structuredQuery: {} };\n  const path = target.path;\n  let parent: ResourcePath;\n  if (target.collectionGroup !== null) {\n    debugAssert(\n      path.length % 2 === 0,\n      'Collection Group queries should be within a document path or root.'\n    );\n    parent = path;\n    queryTarget.structuredQuery!.from = [\n      {\n        collectionId: target.collectionGroup,\n        allDescendants: true\n      }\n    ];\n  } else {\n    debugAssert(\n      path.length % 2 !== 0,\n      'Document queries with filters are not supported.'\n    );\n    parent = path.popLast();\n    queryTarget.structuredQuery!.from = [{ collectionId: path.lastSegment() }];\n  }\n  queryTarget.parent = toQueryPath(serializer, parent);\n\n  const where = toFilters(target.filters);\n  if (where) {\n    queryTarget.structuredQuery!.where = where;\n  }\n\n  const orderBy = toOrder(target.orderBy);\n  if (orderBy) {\n    queryTarget.structuredQuery!.orderBy = orderBy;\n  }\n\n  const limit = toInt32Proto(serializer, target.limit);\n  if (limit !== null) {\n    queryTarget.structuredQuery!.limit = limit;\n  }\n\n  if (target.startAt) {\n    queryTarget.structuredQuery!.startAt = toStartAtCursor(target.startAt);\n  }\n  if (target.endAt) {\n    queryTarget.structuredQuery!.endAt = toEndAtCursor(target.endAt);\n  }\n\n  return { queryTarget, parent };\n}\n\nexport function toRunAggregationQueryRequest(\n  serializer: JsonProtoSerializer,\n  target: Target,\n  aggregates: Aggregate[],\n  skipAliasing?: boolean\n): {\n  request: ProtoRunAggregationQueryRequest;\n  aliasMap: Record<string, string>;\n  parent: ResourcePath;\n} {\n  const { queryTarget, parent } = toQueryTarget(serializer, target);\n  const aliasMap: Record<string, string> = {};\n\n  const aggregations: ProtoAggregation[] = [];\n  let aggregationNum = 0;\n\n  aggregates.forEach(aggregate => {\n    // Map all client-side aliases to a unique short-form\n    // alias. This avoids issues with client-side aliases that\n    // exceed the 1500-byte string size limit.\n    const serverAlias = skipAliasing\n      ? aggregate.alias\n      : `aggregate_${aggregationNum++}`;\n    aliasMap[serverAlias] = aggregate.alias;\n\n    if (aggregate.aggregateType === 'count') {\n      aggregations.push({\n        alias: serverAlias,\n        count: {}\n      });\n    } else if (aggregate.aggregateType === 'avg') {\n      aggregations.push({\n        alias: serverAlias,\n        avg: {\n          field: toFieldPathReference(aggregate.fieldPath!)\n        }\n      });\n    } else if (aggregate.aggregateType === 'sum') {\n      aggregations.push({\n        alias: serverAlias,\n        sum: {\n          field: toFieldPathReference(aggregate.fieldPath!)\n        }\n      });\n    }\n  });\n\n  return {\n    request: {\n      structuredAggregationQuery: {\n        aggregations,\n        structuredQuery: queryTarget.structuredQuery\n      },\n      parent: queryTarget.parent\n    },\n    aliasMap,\n    parent\n  };\n}\n\nexport function convertQueryTargetToQuery(target: ProtoQueryTarget): Query {\n  let path = fromQueryPath(target.parent!);\n\n  const query = target.structuredQuery!;\n  const fromCount = query.from ? query.from.length : 0;\n  let collectionGroup: string | null = null;\n  if (fromCount > 0) {\n    hardAssert(\n      fromCount === 1,\n      'StructuredQuery.from with more than one collection is not supported.'\n    );\n    const from = query.from![0];\n    if (from.allDescendants) {\n      collectionGroup = from.collectionId!;\n    } else {\n      path = path.child(from.collectionId!);\n    }\n  }\n\n  let filterBy: Filter[] = [];\n  if (query.where) {\n    filterBy = fromFilters(query.where);\n  }\n\n  let orderBy: OrderBy[] = [];\n  if (query.orderBy) {\n    orderBy = fromOrder(query.orderBy);\n  }\n\n  let limit: number | null = null;\n  if (query.limit) {\n    limit = fromInt32Proto(query.limit);\n  }\n\n  let startAt: Bound | null = null;\n  if (query.startAt) {\n    startAt = fromStartAtCursor(query.startAt);\n  }\n\n  let endAt: Bound | null = null;\n  if (query.endAt) {\n    endAt = fromEndAtCursor(query.endAt);\n  }\n\n  return newQuery(\n    path,\n    collectionGroup,\n    orderBy,\n    filterBy,\n    limit,\n    LimitType.First,\n    startAt,\n    endAt\n  );\n}\n\nexport function fromQueryTarget(target: ProtoQueryTarget): Target {\n  return queryToTarget(convertQueryTargetToQuery(target));\n}\n\nexport function toListenRequestLabels(\n  serializer: JsonProtoSerializer,\n  targetData: TargetData\n): ProtoApiClientObjectMap<string> | null {\n  const value = toLabel(targetData.purpose);\n  if (value == null) {\n    return null;\n  } else {\n    return {\n      'goog-listen-tags': value\n    };\n  }\n}\n\nexport function toLabel(purpose: TargetPurpose): string | null {\n  switch (purpose) {\n    case TargetPurpose.Listen:\n      return null;\n    case TargetPurpose.ExistenceFilterMismatch:\n      return 'existence-filter-mismatch';\n    case TargetPurpose.ExistenceFilterMismatchBloom:\n      return 'existence-filter-mismatch-bloom';\n    case TargetPurpose.LimboResolution:\n      return 'limbo-document';\n    default:\n      return fail('Unrecognized query purpose: ' + purpose);\n  }\n}\n\nexport function toTarget(\n  serializer: JsonProtoSerializer,\n  targetData: TargetData\n): ProtoTarget {\n  let result: ProtoTarget;\n  const target = targetData.target;\n\n  if (targetIsDocumentTarget(target)) {\n    result = { documents: toDocumentsTarget(serializer, target) };\n  } else {\n    result = { query: toQueryTarget(serializer, target).queryTarget };\n  }\n\n  result.targetId = targetData.targetId;\n\n  if (targetData.resumeToken.approximateByteSize() > 0) {\n    result.resumeToken = toBytes(serializer, targetData.resumeToken);\n    const expectedCount = toInt32Proto(serializer, targetData.expectedCount);\n    if (expectedCount !== null) {\n      result.expectedCount = expectedCount;\n    }\n  } else if (targetData.snapshotVersion.compareTo(SnapshotVersion.min()) > 0) {\n    // TODO(wuandy): Consider removing above check because it is most likely true.\n    // Right now, many tests depend on this behaviour though (leaving min() out\n    // of serialization).\n    result.readTime = toTimestamp(\n      serializer,\n      targetData.snapshotVersion.toTimestamp()\n    );\n    const expectedCount = toInt32Proto(serializer, targetData.expectedCount);\n    if (expectedCount !== null) {\n      result.expectedCount = expectedCount;\n    }\n  }\n\n  return result;\n}\n\nfunction toFilters(filters: Filter[]): ProtoFilter | undefined {\n  if (filters.length === 0) {\n    return;\n  }\n\n  return toFilter(CompositeFilter.create(filters, CompositeOperator.AND));\n}\n\nfunction fromFilters(filter: ProtoFilter): Filter[] {\n  const result = fromFilter(filter);\n\n  if (\n    result instanceof CompositeFilter &&\n    compositeFilterIsFlatConjunction(result)\n  ) {\n    return result.getFilters();\n  }\n\n  return [result];\n}\n\nfunction fromFilter(filter: ProtoFilter): Filter {\n  if (filter.unaryFilter !== undefined) {\n    return fromUnaryFilter(filter);\n  } else if (filter.fieldFilter !== undefined) {\n    return fromFieldFilter(filter);\n  } else if (filter.compositeFilter !== undefined) {\n    return fromCompositeFilter(filter);\n  } else {\n    return fail('Unknown filter: ' + JSON.stringify(filter));\n  }\n}\n\nfunction toOrder(orderBys: OrderBy[]): ProtoOrder[] | undefined {\n  if (orderBys.length === 0) {\n    return;\n  }\n  return orderBys.map(order => toPropertyOrder(order));\n}\n\nfunction fromOrder(orderBys: ProtoOrder[]): OrderBy[] {\n  return orderBys.map(order => fromPropertyOrder(order));\n}\n\nfunction toStartAtCursor(cursor: Bound): ProtoCursor {\n  return {\n    before: cursor.inclusive,\n    values: cursor.position\n  };\n}\n\nfunction toEndAtCursor(cursor: Bound): ProtoCursor {\n  return {\n    before: !cursor.inclusive,\n    values: cursor.position\n  };\n}\n\nfunction fromStartAtCursor(cursor: ProtoCursor): Bound {\n  const inclusive = !!cursor.before;\n  const position = cursor.values || [];\n  return new Bound(position, inclusive);\n}\n\nfunction fromEndAtCursor(cursor: ProtoCursor): Bound {\n  const inclusive = !cursor.before;\n  const position = cursor.values || [];\n  return new Bound(position, inclusive);\n}\n\n// visible for testing\nexport function toDirection(dir: Direction): ProtoOrderDirection {\n  return DIRECTIONS[dir];\n}\n\n// visible for testing\nexport function fromDirection(\n  dir: ProtoOrderDirection | undefined\n): Direction | undefined {\n  switch (dir) {\n    case 'ASCENDING':\n      return Direction.ASCENDING;\n    case 'DESCENDING':\n      return Direction.DESCENDING;\n    default:\n      return undefined;\n  }\n}\n\n// visible for testing\nexport function toOperatorName(op: Operator): ProtoFieldFilterOp {\n  return OPERATORS[op];\n}\n\nexport function toCompositeOperatorName(\n  op: CompositeOperator\n): ProtoCompositeFilterOp {\n  return COMPOSITE_OPERATORS[op];\n}\n\nexport function fromOperatorName(op: ProtoFieldFilterOp): Operator {\n  switch (op) {\n    case 'EQUAL':\n      return Operator.EQUAL;\n    case 'NOT_EQUAL':\n      return Operator.NOT_EQUAL;\n    case 'GREATER_THAN':\n      return Operator.GREATER_THAN;\n    case 'GREATER_THAN_OR_EQUAL':\n      return Operator.GREATER_THAN_OR_EQUAL;\n    case 'LESS_THAN':\n      return Operator.LESS_THAN;\n    case 'LESS_THAN_OR_EQUAL':\n      return Operator.LESS_THAN_OR_EQUAL;\n    case 'ARRAY_CONTAINS':\n      return Operator.ARRAY_CONTAINS;\n    case 'IN':\n      return Operator.IN;\n    case 'NOT_IN':\n      return Operator.NOT_IN;\n    case 'ARRAY_CONTAINS_ANY':\n      return Operator.ARRAY_CONTAINS_ANY;\n    case 'OPERATOR_UNSPECIFIED':\n      return fail('Unspecified operator');\n    default:\n      return fail('Unknown operator');\n  }\n}\n\nexport function fromCompositeOperatorName(\n  op: ProtoCompositeFilterOp\n): CompositeOperator {\n  switch (op) {\n    case 'AND':\n      return CompositeOperator.AND;\n    case 'OR':\n      return CompositeOperator.OR;\n    default:\n      return fail('Unknown operator');\n  }\n}\n\nexport function toFieldPathReference(path: FieldPath): ProtoFieldReference {\n  return { fieldPath: path.canonicalString() };\n}\n\nexport function fromFieldPathReference(\n  fieldReference: ProtoFieldReference\n): FieldPath {\n  return FieldPath.fromServerFormat(fieldReference.fieldPath!);\n}\n\n// visible for testing\nexport function toPropertyOrder(orderBy: OrderBy): ProtoOrder {\n  return {\n    field: toFieldPathReference(orderBy.field),\n    direction: toDirection(orderBy.dir)\n  };\n}\n\nexport function fromPropertyOrder(orderBy: ProtoOrder): OrderBy {\n  return new OrderBy(\n    fromFieldPathReference(orderBy.field!),\n    fromDirection(orderBy.direction)\n  );\n}\n\n// visible for testing\nexport function toFilter(filter: Filter): ProtoFilter {\n  if (filter instanceof FieldFilter) {\n    return toUnaryOrFieldFilter(filter);\n  } else if (filter instanceof CompositeFilter) {\n    return toCompositeFilter(filter);\n  } else {\n    return fail('Unrecognized filter type ' + JSON.stringify(filter));\n  }\n}\n\nexport function toCompositeFilter(filter: CompositeFilter): ProtoFilter {\n  const protos = filter.getFilters().map(filter => toFilter(filter));\n\n  if (protos.length === 1) {\n    return protos[0];\n  }\n\n  return {\n    compositeFilter: {\n      op: toCompositeOperatorName(filter.op),\n      filters: protos\n    }\n  };\n}\n\nexport function toUnaryOrFieldFilter(filter: FieldFilter): ProtoFilter {\n  if (filter.op === Operator.EQUAL) {\n    if (isNanValue(filter.value)) {\n      return {\n        unaryFilter: {\n          field: toFieldPathReference(filter.field),\n          op: 'IS_NAN'\n        }\n      };\n    } else if (isNullValue(filter.value)) {\n      return {\n        unaryFilter: {\n          field: toFieldPathReference(filter.field),\n          op: 'IS_NULL'\n        }\n      };\n    }\n  } else if (filter.op === Operator.NOT_EQUAL) {\n    if (isNanValue(filter.value)) {\n      return {\n        unaryFilter: {\n          field: toFieldPathReference(filter.field),\n          op: 'IS_NOT_NAN'\n        }\n      };\n    } else if (isNullValue(filter.value)) {\n      return {\n        unaryFilter: {\n          field: toFieldPathReference(filter.field),\n          op: 'IS_NOT_NULL'\n        }\n      };\n    }\n  }\n  return {\n    fieldFilter: {\n      field: toFieldPathReference(filter.field),\n      op: toOperatorName(filter.op),\n      value: filter.value\n    }\n  };\n}\n\nexport function fromUnaryFilter(filter: ProtoFilter): Filter {\n  switch (filter.unaryFilter!.op!) {\n    case 'IS_NAN':\n      const nanField = fromFieldPathReference(filter.unaryFilter!.field!);\n      return FieldFilter.create(nanField, Operator.EQUAL, {\n        doubleValue: NaN\n      });\n    case 'IS_NULL':\n      const nullField = fromFieldPathReference(filter.unaryFilter!.field!);\n      return FieldFilter.create(nullField, Operator.EQUAL, {\n        nullValue: 'NULL_VALUE'\n      });\n    case 'IS_NOT_NAN':\n      const notNanField = fromFieldPathReference(filter.unaryFilter!.field!);\n      return FieldFilter.create(notNanField, Operator.NOT_EQUAL, {\n        doubleValue: NaN\n      });\n    case 'IS_NOT_NULL':\n      const notNullField = fromFieldPathReference(filter.unaryFilter!.field!);\n      return FieldFilter.create(notNullField, Operator.NOT_EQUAL, {\n        nullValue: 'NULL_VALUE'\n      });\n    case 'OPERATOR_UNSPECIFIED':\n      return fail('Unspecified filter');\n    default:\n      return fail('Unknown filter');\n  }\n}\n\nexport function fromFieldFilter(filter: ProtoFilter): FieldFilter {\n  return FieldFilter.create(\n    fromFieldPathReference(filter.fieldFilter!.field!),\n    fromOperatorName(filter.fieldFilter!.op!),\n    filter.fieldFilter!.value!\n  );\n}\n\nexport function fromCompositeFilter(filter: ProtoFilter): CompositeFilter {\n  return CompositeFilter.create(\n    filter.compositeFilter!.filters!.map(filter => fromFilter(filter)),\n    fromCompositeOperatorName(filter.compositeFilter!.op!)\n  );\n}\n\nexport function toDocumentMask(fieldMask: FieldMask): ProtoDocumentMask {\n  const canonicalFields: string[] = [];\n  fieldMask.fields.forEach(field =>\n    canonicalFields.push(field.canonicalString())\n  );\n  return {\n    fieldPaths: canonicalFields\n  };\n}\n\nexport function fromDocumentMask(proto: ProtoDocumentMask): FieldMask {\n  const paths = proto.fieldPaths || [];\n  return new FieldMask(paths.map(path => FieldPath.fromServerFormat(path)));\n}\n\nexport function isValidResourceName(path: ResourcePath): boolean {\n  // Resource names have at least 4 components (project ID, database ID)\n  return (\n    path.length >= 4 &&\n    path.get(0) === 'projects' &&\n    path.get(2) === 'databases'\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { Target } from '../core/target';\nimport { ListenSequenceNumber, TargetId } from '../core/types';\nimport { ByteString } from '../util/byte_string';\n\n/** An enumeration of the different purposes we have for targets. */\nexport const enum TargetPurpose {\n  /** A regular, normal query target. */\n  Listen = 'TargetPurposeListen',\n\n  /**\n   * The query target was used to refill a query after an existence filter\n   * mismatch.\n   */\n  ExistenceFilterMismatch = 'TargetPurposeExistenceFilterMismatch',\n\n  /**\n   * The query target was used if the query is the result of a false positive in\n   * the bloom filter.\n   */\n  ExistenceFilterMismatchBloom = 'TargetPurposeExistenceFilterMismatchBloom',\n\n  /** The query target was used to resolve a limbo document. */\n  LimboResolution = 'TargetPurposeLimboResolution'\n}\n\n/**\n * An immutable set of metadata that the local store tracks for each target.\n */\nexport class TargetData {\n  constructor(\n    /** The target being listened to. */\n    readonly target: Target,\n    /**\n     * The target ID to which the target corresponds; Assigned by the\n     * LocalStore for user listens and by the SyncEngine for limbo watches.\n     */\n    readonly targetId: TargetId,\n    /** The purpose of the target. */\n    readonly purpose: TargetPurpose,\n    /**\n     * The sequence number of the last transaction during which this target data\n     * was modified.\n     */\n    readonly sequenceNumber: ListenSequenceNumber,\n    /** The latest snapshot version seen for this target. */\n    readonly snapshotVersion: SnapshotVersion = SnapshotVersion.min(),\n    /**\n     * The maximum snapshot version at which the associated view\n     * contained no limbo documents.\n     */\n    readonly lastLimboFreeSnapshotVersion: SnapshotVersion = SnapshotVersion.min(),\n    /**\n     * An opaque, server-assigned token that allows watching a target to be\n     * resumed after disconnecting without retransmitting all the data that\n     * matches the target. The resume token essentially identifies a point in\n     * time from which the server should resume sending results.\n     */\n    readonly resumeToken: ByteString = ByteString.EMPTY_BYTE_STRING,\n    /**\n     * The number of documents that last matched the query at the resume token or\n     * read time. Documents are counted only when making a listen request with\n     * resume token or read time, otherwise, keep it null.\n     */\n    readonly expectedCount: number | null = null\n  ) {}\n\n  /** Creates a new target data instance with an updated sequence number. */\n  withSequenceNumber(sequenceNumber: number): TargetData {\n    return new TargetData(\n      this.target,\n      this.targetId,\n      this.purpose,\n      sequenceNumber,\n      this.snapshotVersion,\n      this.lastLimboFreeSnapshotVersion,\n      this.resumeToken,\n      this.expectedCount\n    );\n  }\n\n  /**\n   * Creates a new target data instance with an updated resume token and\n   * snapshot version.\n   */\n  withResumeToken(\n    resumeToken: ByteString,\n    snapshotVersion: SnapshotVersion\n  ): TargetData {\n    return new TargetData(\n      this.target,\n      this.targetId,\n      this.purpose,\n      this.sequenceNumber,\n      snapshotVersion,\n      this.lastLimboFreeSnapshotVersion,\n      resumeToken,\n      /* expectedCount= */ null\n    );\n  }\n\n  /**\n   * Creates a new target data instance with an updated expected count.\n   */\n  withExpectedCount(expectedCount: number): TargetData {\n    return new TargetData(\n      this.target,\n      this.targetId,\n      this.purpose,\n      this.sequenceNumber,\n      this.snapshotVersion,\n      this.lastLimboFreeSnapshotVersion,\n      this.resumeToken,\n      expectedCount\n    );\n  }\n\n  /**\n   * Creates a new target data instance with an updated last limbo free\n   * snapshot version number.\n   */\n  withLastLimboFreeSnapshotVersion(\n    lastLimboFreeSnapshotVersion: SnapshotVersion\n  ): TargetData {\n    return new TargetData(\n      this.target,\n      this.targetId,\n      this.purpose,\n      this.sequenceNumber,\n      this.snapshotVersion,\n      lastLimboFreeSnapshotVersion,\n      this.resumeToken,\n      this.expectedCount\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Timestamp } from '../api/timestamp';\nimport { BundleMetadata, NamedQuery } from '../core/bundle';\nimport { LimitType, Query, queryWithLimit } from '../core/query';\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { canonifyTarget, Target, targetIsDocumentTarget } from '../core/target';\nimport { MutableDocument } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport {\n  FieldIndex,\n  IndexOffset,\n  IndexSegment,\n  IndexState\n} from '../model/field_index';\nimport { MutationBatch } from '../model/mutation_batch';\nimport { Overlay } from '../model/overlay';\nimport { FieldPath } from '../model/path';\nimport {\n  BundledQuery as ProtoBundledQuery,\n  BundleMetadata as ProtoBundleMetadata,\n  NamedQuery as ProtoNamedQuery\n} from '../protos/firestore_bundle_proto';\nimport { DocumentsTarget as PublicDocumentsTarget } from '../protos/firestore_proto_api';\nimport {\n  convertQueryTargetToQuery,\n  fromDocument,\n  fromDocumentsTarget,\n  fromMutation,\n  fromQueryTarget,\n  fromVersion,\n  JsonProtoSerializer,\n  toDocument,\n  toDocumentsTarget,\n  toMutation,\n  toQueryTarget\n} from '../remote/serializer';\nimport { debugAssert, fail } from '../util/assert';\nimport { ByteString } from '../util/byte_string';\n\nimport {\n  decodeResourcePath,\n  encodeResourcePath\n} from './encoded_resource_path';\nimport {\n  DbBundle,\n  DbDocumentOverlay,\n  DbIndexConfiguration,\n  DbIndexState,\n  DbMutationBatch,\n  DbNamedQuery,\n  DbQuery,\n  DbRemoteDocument,\n  DbTarget,\n  DbTimestamp\n} from './indexeddb_schema';\nimport { DbDocumentOverlayKey, DbTimestampKey } from './indexeddb_sentinels';\nimport { TargetData, TargetPurpose } from './target_data';\n\n/** Serializer for values stored in the LocalStore. */\nexport class LocalSerializer {\n  constructor(readonly remoteSerializer: JsonProtoSerializer) {}\n}\n\n/** Decodes a remote document from storage locally to a Document. */\nexport function fromDbRemoteDocument(\n  localSerializer: LocalSerializer,\n  remoteDoc: DbRemoteDocument\n): MutableDocument {\n  let doc: MutableDocument;\n  if (remoteDoc.document) {\n    doc = fromDocument(\n      localSerializer.remoteSerializer,\n      remoteDoc.document,\n      !!remoteDoc.hasCommittedMutations\n    );\n  } else if (remoteDoc.noDocument) {\n    const key = DocumentKey.fromSegments(remoteDoc.noDocument.path);\n    const version = fromDbTimestamp(remoteDoc.noDocument.readTime);\n    doc = MutableDocument.newNoDocument(key, version);\n    if (remoteDoc.hasCommittedMutations) {\n      doc.setHasCommittedMutations();\n    }\n  } else if (remoteDoc.unknownDocument) {\n    const key = DocumentKey.fromSegments(remoteDoc.unknownDocument.path);\n    const version = fromDbTimestamp(remoteDoc.unknownDocument.version);\n    doc = MutableDocument.newUnknownDocument(key, version);\n  } else {\n    return fail('Unexpected DbRemoteDocument');\n  }\n\n  if (remoteDoc.readTime) {\n    doc.setReadTime(fromDbTimestampKey(remoteDoc.readTime));\n  }\n\n  return doc;\n}\n\n/** Encodes a document for storage locally. */\nexport function toDbRemoteDocument(\n  localSerializer: LocalSerializer,\n  document: MutableDocument\n): DbRemoteDocument {\n  const key = document.key;\n  const remoteDoc: DbRemoteDocument = {\n    prefixPath: key.getCollectionPath().popLast().toArray(),\n    collectionGroup: key.collectionGroup,\n    documentId: key.path.lastSegment(),\n    readTime: toDbTimestampKey(document.readTime),\n    hasCommittedMutations: document.hasCommittedMutations\n  };\n\n  if (document.isFoundDocument()) {\n    remoteDoc.document = toDocument(localSerializer.remoteSerializer, document);\n  } else if (document.isNoDocument()) {\n    remoteDoc.noDocument = {\n      path: key.path.toArray(),\n      readTime: toDbTimestamp(document.version)\n    };\n  } else if (document.isUnknownDocument()) {\n    remoteDoc.unknownDocument = {\n      path: key.path.toArray(),\n      version: toDbTimestamp(document.version)\n    };\n  } else {\n    return fail('Unexpected Document ' + document);\n  }\n  return remoteDoc;\n}\n\nexport function toDbTimestampKey(\n  snapshotVersion: SnapshotVersion\n): DbTimestampKey {\n  const timestamp = snapshotVersion.toTimestamp();\n  return [timestamp.seconds, timestamp.nanoseconds];\n}\n\nexport function fromDbTimestampKey(\n  dbTimestampKey: DbTimestampKey\n): SnapshotVersion {\n  const timestamp = new Timestamp(dbTimestampKey[0], dbTimestampKey[1]);\n  return SnapshotVersion.fromTimestamp(timestamp);\n}\n\nexport function toDbTimestamp(snapshotVersion: SnapshotVersion): DbTimestamp {\n  const timestamp = snapshotVersion.toTimestamp();\n  return { seconds: timestamp.seconds, nanoseconds: timestamp.nanoseconds };\n}\n\nfunction fromDbTimestamp(dbTimestamp: DbTimestamp): SnapshotVersion {\n  const timestamp = new Timestamp(dbTimestamp.seconds, dbTimestamp.nanoseconds);\n  return SnapshotVersion.fromTimestamp(timestamp);\n}\n\n/** Encodes a batch of mutations into a DbMutationBatch for local storage. */\nexport function toDbMutationBatch(\n  localSerializer: LocalSerializer,\n  userId: string,\n  batch: MutationBatch\n): DbMutationBatch {\n  const serializedBaseMutations = batch.baseMutations.map(m =>\n    toMutation(localSerializer.remoteSerializer, m)\n  );\n  const serializedMutations = batch.mutations.map(m =>\n    toMutation(localSerializer.remoteSerializer, m)\n  );\n  return {\n    userId,\n    batchId: batch.batchId,\n    localWriteTimeMs: batch.localWriteTime.toMillis(),\n    baseMutations: serializedBaseMutations,\n    mutations: serializedMutations\n  };\n}\n\n/** Decodes a DbMutationBatch into a MutationBatch */\nexport function fromDbMutationBatch(\n  localSerializer: LocalSerializer,\n  dbBatch: DbMutationBatch\n): MutationBatch {\n  const baseMutations = (dbBatch.baseMutations || []).map(m =>\n    fromMutation(localSerializer.remoteSerializer, m)\n  );\n\n  // Squash old transform mutations into existing patch or set mutations.\n  // The replacement of representing `transforms` with `update_transforms`\n  // on the SDK means that old `transform` mutations stored in IndexedDB need\n  // to be updated to `update_transforms`.\n  // TODO(b/174608374): Remove this code once we perform a schema migration.\n  for (let i = 0; i < dbBatch.mutations.length - 1; ++i) {\n    const currentMutation = dbBatch.mutations[i];\n    const hasTransform =\n      i + 1 < dbBatch.mutations.length &&\n      dbBatch.mutations[i + 1].transform !== undefined;\n    if (hasTransform) {\n      debugAssert(\n        dbBatch.mutations[i].transform === undefined &&\n          dbBatch.mutations[i].update !== undefined,\n        'TransformMutation should be preceded by a patch or set mutation'\n      );\n      const transformMutation = dbBatch.mutations[i + 1];\n      currentMutation.updateTransforms =\n        transformMutation.transform!.fieldTransforms;\n      dbBatch.mutations.splice(i + 1, 1);\n      ++i;\n    }\n  }\n\n  const mutations = dbBatch.mutations.map(m =>\n    fromMutation(localSerializer.remoteSerializer, m)\n  );\n  const timestamp = Timestamp.fromMillis(dbBatch.localWriteTimeMs);\n  return new MutationBatch(\n    dbBatch.batchId,\n    timestamp,\n    baseMutations,\n    mutations\n  );\n}\n\n/** Decodes a DbTarget into TargetData */\nexport function fromDbTarget(dbTarget: DbTarget): TargetData {\n  const version = fromDbTimestamp(dbTarget.readTime);\n  const lastLimboFreeSnapshotVersion =\n    dbTarget.lastLimboFreeSnapshotVersion !== undefined\n      ? fromDbTimestamp(dbTarget.lastLimboFreeSnapshotVersion)\n      : SnapshotVersion.min();\n\n  let target: Target;\n  if (isDocumentQuery(dbTarget.query)) {\n    target = fromDocumentsTarget(dbTarget.query);\n  } else {\n    target = fromQueryTarget(dbTarget.query);\n  }\n  return new TargetData(\n    target,\n    dbTarget.targetId,\n    TargetPurpose.Listen,\n    dbTarget.lastListenSequenceNumber,\n    version,\n    lastLimboFreeSnapshotVersion,\n    ByteString.fromBase64String(dbTarget.resumeToken)\n  );\n}\n\n/** Encodes TargetData into a DbTarget for storage locally. */\nexport function toDbTarget(\n  localSerializer: LocalSerializer,\n  targetData: TargetData\n): DbTarget {\n  debugAssert(\n    TargetPurpose.Listen === targetData.purpose,\n    'Only queries with purpose ' +\n      TargetPurpose.Listen +\n      ' may be stored, got ' +\n      targetData.purpose\n  );\n  const dbTimestamp = toDbTimestamp(targetData.snapshotVersion);\n  const dbLastLimboFreeTimestamp = toDbTimestamp(\n    targetData.lastLimboFreeSnapshotVersion\n  );\n  let queryProto: DbQuery;\n  if (targetIsDocumentTarget(targetData.target)) {\n    queryProto = toDocumentsTarget(\n      localSerializer.remoteSerializer,\n      targetData.target\n    );\n  } else {\n    queryProto = toQueryTarget(\n      localSerializer.remoteSerializer,\n      targetData.target\n    ).queryTarget;\n  }\n\n  // We can't store the resumeToken as a ByteString in IndexedDb, so we\n  // convert it to a base64 string for storage.\n  const resumeToken = targetData.resumeToken.toBase64();\n\n  // lastListenSequenceNumber is always 0 until we do real GC.\n  return {\n    targetId: targetData.targetId,\n    canonicalId: canonifyTarget(targetData.target),\n    readTime: dbTimestamp,\n    resumeToken,\n    lastListenSequenceNumber: targetData.sequenceNumber,\n    lastLimboFreeSnapshotVersion: dbLastLimboFreeTimestamp,\n    query: queryProto\n  };\n}\n\n/**\n * A helper function for figuring out what kind of query has been stored.\n */\nfunction isDocumentQuery(dbQuery: DbQuery): dbQuery is PublicDocumentsTarget {\n  return (dbQuery as PublicDocumentsTarget).documents !== undefined;\n}\n\n/** Encodes a DbBundle to a BundleMetadata object. */\nexport function fromDbBundle(dbBundle: DbBundle): BundleMetadata {\n  return {\n    id: dbBundle.bundleId,\n    createTime: fromDbTimestamp(dbBundle.createTime),\n    version: dbBundle.version\n  };\n}\n\n/** Encodes a BundleMetadata to a DbBundle. */\nexport function toDbBundle(metadata: ProtoBundleMetadata): DbBundle {\n  return {\n    bundleId: metadata.id!,\n    createTime: toDbTimestamp(fromVersion(metadata.createTime!)),\n    version: metadata.version!\n  };\n}\n\n/** Encodes a DbNamedQuery to a NamedQuery. */\nexport function fromDbNamedQuery(dbNamedQuery: DbNamedQuery): NamedQuery {\n  return {\n    name: dbNamedQuery.name,\n    query: fromBundledQuery(dbNamedQuery.bundledQuery),\n    readTime: fromDbTimestamp(dbNamedQuery.readTime)\n  };\n}\n\n/** Encodes a NamedQuery from a bundle proto to a DbNamedQuery. */\nexport function toDbNamedQuery(query: ProtoNamedQuery): DbNamedQuery {\n  return {\n    name: query.name!,\n    readTime: toDbTimestamp(fromVersion(query.readTime!)),\n    bundledQuery: query.bundledQuery!\n  };\n}\n\n/**\n * Encodes a `BundledQuery` from bundle proto to a Query object.\n *\n * This reconstructs the original query used to build the bundle being loaded,\n * including features exists only in SDKs (for example: limit-to-last).\n */\nexport function fromBundledQuery(bundledQuery: ProtoBundledQuery): Query {\n  const query = convertQueryTargetToQuery({\n    parent: bundledQuery.parent!,\n    structuredQuery: bundledQuery.structuredQuery!\n  });\n  if (bundledQuery.limitType === 'LAST') {\n    debugAssert(\n      !!query.limit,\n      'Bundled query has limitType LAST, but limit is null'\n    );\n    return queryWithLimit(query, query.limit, LimitType.Last);\n  }\n  return query;\n}\n\n/** Encodes a NamedQuery proto object to a NamedQuery model object. */\nexport function fromProtoNamedQuery(namedQuery: ProtoNamedQuery): NamedQuery {\n  return {\n    name: namedQuery.name!,\n    query: fromBundledQuery(namedQuery.bundledQuery!),\n    readTime: fromVersion(namedQuery.readTime!)\n  };\n}\n\n/** Decodes a BundleMetadata proto into a BundleMetadata object. */\nexport function fromBundleMetadata(\n  metadata: ProtoBundleMetadata\n): BundleMetadata {\n  return {\n    id: metadata.id!,\n    version: metadata.version!,\n    createTime: fromVersion(metadata.createTime!)\n  };\n}\n\n/** Encodes a DbDocumentOverlay object to an Overlay model object. */\nexport function fromDbDocumentOverlay(\n  localSerializer: LocalSerializer,\n  dbDocumentOverlay: DbDocumentOverlay\n): Overlay {\n  return new Overlay(\n    dbDocumentOverlay.largestBatchId,\n    fromMutation(\n      localSerializer.remoteSerializer,\n      dbDocumentOverlay.overlayMutation\n    )\n  );\n}\n\n/** Decodes an Overlay model object into a DbDocumentOverlay object. */\nexport function toDbDocumentOverlay(\n  localSerializer: LocalSerializer,\n  userId: string,\n  overlay: Overlay\n): DbDocumentOverlay {\n  const [_, collectionPath, documentId] = toDbDocumentOverlayKey(\n    userId,\n    overlay.mutation.key\n  );\n  return {\n    userId,\n    collectionPath,\n    documentId,\n    collectionGroup: overlay.mutation.key.getCollectionGroup(),\n    largestBatchId: overlay.largestBatchId,\n    overlayMutation: toMutation(\n      localSerializer.remoteSerializer,\n      overlay.mutation\n    )\n  };\n}\n\n/**\n * Returns the DbDocumentOverlayKey corresponding to the given user and\n * document key.\n */\nexport function toDbDocumentOverlayKey(\n  userId: string,\n  docKey: DocumentKey\n): DbDocumentOverlayKey {\n  const docId = docKey.path.lastSegment();\n  const collectionPath = encodeResourcePath(docKey.path.popLast());\n  return [userId, collectionPath, docId];\n}\n\nexport function toDbIndexConfiguration(\n  index: FieldIndex\n): DbIndexConfiguration {\n  return {\n    indexId: index.indexId,\n    collectionGroup: index.collectionGroup,\n    fields: index.fields.map(s => [s.fieldPath.canonicalString(), s.kind])\n  };\n}\n\nexport function fromDbIndexConfiguration(\n  index: DbIndexConfiguration,\n  state: DbIndexState | null\n): FieldIndex {\n  const decodedState = state\n    ? new IndexState(\n        state.sequenceNumber,\n        new IndexOffset(\n          fromDbTimestamp(state.readTime),\n          new DocumentKey(decodeResourcePath(state.documentKey)),\n          state.largestBatchId\n        )\n      )\n    : IndexState.empty();\n  const decodedSegments = index.fields.map(\n    ([fieldPath, kind]) =>\n      new IndexSegment(FieldPath.fromServerFormat(fieldPath), kind)\n  );\n  return new FieldIndex(\n    index.indexId!,\n    index.collectionGroup,\n    decodedSegments,\n    decodedState\n  );\n}\n\nexport function toDbIndexState(\n  indexId: number,\n  uid: string,\n  sequenceNumber: number,\n  offset: IndexOffset\n): DbIndexState {\n  return {\n    indexId,\n    uid,\n    sequenceNumber,\n    readTime: toDbTimestamp(offset.readTime),\n    documentKey: encodeResourcePath(offset.documentKey.path),\n    largestBatchId: offset.largestBatchId\n  };\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DocumentKey } from '../model/document_key';\nimport {\n  normalizeByteString,\n  normalizeNumber,\n  normalizeTimestamp\n} from '../model/normalize';\nimport { isMaxValue } from '../model/values';\nimport { ArrayValue, MapValue, Value } from '../protos/firestore_proto_api';\nimport { fail } from '../util/assert';\nimport { isNegativeZero } from '../util/types';\n\nimport { DirectionalIndexByteEncoder } from './directional_index_byte_encoder';\n\n// Note: This code is copied from the backend. Code that is not used by\n// Firestore was removed.\n\nconst INDEX_TYPE_NULL = 5;\nconst INDEX_TYPE_BOOLEAN = 10;\nconst INDEX_TYPE_NAN = 13;\nconst INDEX_TYPE_NUMBER = 15;\nconst INDEX_TYPE_TIMESTAMP = 20;\nconst INDEX_TYPE_STRING = 25;\nconst INDEX_TYPE_BLOB = 30;\nconst INDEX_TYPE_REFERENCE = 37;\nconst INDEX_TYPE_GEOPOINT = 45;\nconst INDEX_TYPE_ARRAY = 50;\nconst INDEX_TYPE_MAP = 55;\nconst INDEX_TYPE_REFERENCE_SEGMENT = 60;\n\n// A terminator that indicates that a truncatable value was not truncated.\n// This must be smaller than all other type labels.\nconst NOT_TRUNCATED = 2;\n\n/** Firestore index value writer.  */\nexport class FirestoreIndexValueWriter {\n  static INSTANCE = new FirestoreIndexValueWriter();\n\n  private constructor() {}\n\n  // The write methods below short-circuit writing terminators for values\n  // containing a (terminating) truncated value.\n  //\n  // As an example, consider the resulting encoding for:\n  //\n  // [\"bar\", [2, \"foo\"]] -> (STRING, \"bar\", TERM, ARRAY, NUMBER, 2, STRING, \"foo\", TERM, TERM, TERM)\n  // [\"bar\", [2, truncated(\"foo\")]] -> (STRING, \"bar\", TERM, ARRAY, NUMBER, 2, STRING, \"foo\", TRUNC)\n  // [\"bar\", truncated([\"foo\"])] -> (STRING, \"bar\", TERM, ARRAY. STRING, \"foo\", TERM, TRUNC)\n\n  /** Writes an index value.  */\n  writeIndexValue(value: Value, encoder: DirectionalIndexByteEncoder): void {\n    this.writeIndexValueAux(value, encoder);\n    // Write separator to split index values\n    // (see go/firestore-storage-format#encodings).\n    encoder.writeInfinity();\n  }\n\n  private writeIndexValueAux(\n    indexValue: Value,\n    encoder: DirectionalIndexByteEncoder\n  ): void {\n    if ('nullValue' in indexValue) {\n      this.writeValueTypeLabel(encoder, INDEX_TYPE_NULL);\n    } else if ('booleanValue' in indexValue) {\n      this.writeValueTypeLabel(encoder, INDEX_TYPE_BOOLEAN);\n      encoder.writeNumber(indexValue.booleanValue ? 1 : 0);\n    } else if ('integerValue' in indexValue) {\n      this.writeValueTypeLabel(encoder, INDEX_TYPE_NUMBER);\n      encoder.writeNumber(normalizeNumber(indexValue.integerValue));\n    } else if ('doubleValue' in indexValue) {\n      const n = normalizeNumber(indexValue.doubleValue);\n      if (isNaN(n)) {\n        this.writeValueTypeLabel(encoder, INDEX_TYPE_NAN);\n      } else {\n        this.writeValueTypeLabel(encoder, INDEX_TYPE_NUMBER);\n        if (isNegativeZero(n)) {\n          // -0.0, 0 and 0.0 are all considered the same\n          encoder.writeNumber(0.0);\n        } else {\n          encoder.writeNumber(n);\n        }\n      }\n    } else if ('timestampValue' in indexValue) {\n      let timestamp = indexValue.timestampValue!;\n      this.writeValueTypeLabel(encoder, INDEX_TYPE_TIMESTAMP);\n      if (typeof timestamp === 'string') {\n        timestamp = normalizeTimestamp(timestamp);\n      }\n      encoder.writeString(`${timestamp.seconds || ''}`);\n      encoder.writeNumber(timestamp.nanos || 0);\n    } else if ('stringValue' in indexValue) {\n      this.writeIndexString(indexValue.stringValue!, encoder);\n      this.writeTruncationMarker(encoder);\n    } else if ('bytesValue' in indexValue) {\n      this.writeValueTypeLabel(encoder, INDEX_TYPE_BLOB);\n      encoder.writeBytes(normalizeByteString(indexValue.bytesValue!));\n      this.writeTruncationMarker(encoder);\n    } else if ('referenceValue' in indexValue) {\n      this.writeIndexEntityRef(indexValue.referenceValue!, encoder);\n    } else if ('geoPointValue' in indexValue) {\n      const geoPoint = indexValue.geoPointValue!;\n      this.writeValueTypeLabel(encoder, INDEX_TYPE_GEOPOINT);\n      encoder.writeNumber(geoPoint.latitude || 0);\n      encoder.writeNumber(geoPoint.longitude || 0);\n    } else if ('mapValue' in indexValue) {\n      if (isMaxValue(indexValue)) {\n        this.writeValueTypeLabel(encoder, Number.MAX_SAFE_INTEGER);\n      } else {\n        this.writeIndexMap(indexValue.mapValue!, encoder);\n        this.writeTruncationMarker(encoder);\n      }\n    } else if ('arrayValue' in indexValue) {\n      this.writeIndexArray(indexValue.arrayValue!, encoder);\n      this.writeTruncationMarker(encoder);\n    } else {\n      fail('unknown index value type ' + indexValue);\n    }\n  }\n\n  private writeIndexString(\n    stringIndexValue: string,\n    encoder: DirectionalIndexByteEncoder\n  ): void {\n    this.writeValueTypeLabel(encoder, INDEX_TYPE_STRING);\n    this.writeUnlabeledIndexString(stringIndexValue, encoder);\n  }\n\n  private writeUnlabeledIndexString(\n    stringIndexValue: string,\n    encoder: DirectionalIndexByteEncoder\n  ): void {\n    encoder.writeString(stringIndexValue);\n  }\n\n  private writeIndexMap(\n    mapIndexValue: MapValue,\n    encoder: DirectionalIndexByteEncoder\n  ): void {\n    const map = mapIndexValue.fields || {};\n    this.writeValueTypeLabel(encoder, INDEX_TYPE_MAP);\n    for (const key of Object.keys(map)) {\n      this.writeIndexString(key, encoder);\n      this.writeIndexValueAux(map[key], encoder);\n    }\n  }\n\n  private writeIndexArray(\n    arrayIndexValue: ArrayValue,\n    encoder: DirectionalIndexByteEncoder\n  ): void {\n    const values = arrayIndexValue.values || [];\n    this.writeValueTypeLabel(encoder, INDEX_TYPE_ARRAY);\n    for (const element of values) {\n      this.writeIndexValueAux(element, encoder);\n    }\n  }\n\n  private writeIndexEntityRef(\n    referenceValue: string,\n    encoder: DirectionalIndexByteEncoder\n  ): void {\n    this.writeValueTypeLabel(encoder, INDEX_TYPE_REFERENCE);\n    const path = DocumentKey.fromName(referenceValue).path;\n    path.forEach(segment => {\n      this.writeValueTypeLabel(encoder, INDEX_TYPE_REFERENCE_SEGMENT);\n      this.writeUnlabeledIndexString(segment, encoder);\n    });\n  }\n\n  private writeValueTypeLabel(\n    encoder: DirectionalIndexByteEncoder,\n    typeOrder: number\n  ): void {\n    encoder.writeNumber(typeOrder);\n  }\n\n  private writeTruncationMarker(encoder: DirectionalIndexByteEncoder): void {\n    // While the SDK does not implement truncation, the truncation marker is\n    // used to terminate all variable length values (which are strings, bytes,\n    // references, arrays and maps).\n    encoder.writeNumber(NOT_TRUNCATED);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Target } from '../core/target';\nimport { DocumentMap } from '../model/collections';\nimport { DocumentKey } from '../model/document_key';\nimport { FieldIndex, IndexOffset } from '../model/field_index';\nimport { ResourcePath } from '../model/path';\nimport { debugAssert } from '../util/assert';\nimport { SortedSet } from '../util/sorted_set';\n\nimport { IndexManager, IndexType } from './index_manager';\nimport { PersistencePromise } from './persistence_promise';\nimport { PersistenceTransaction } from './persistence_transaction';\n\n/**\n * An in-memory implementation of IndexManager.\n */\nexport class MemoryIndexManager implements IndexManager {\n  private collectionParentIndex = new MemoryCollectionParentIndex();\n\n  addToCollectionParentIndex(\n    transaction: PersistenceTransaction,\n    collectionPath: ResourcePath\n  ): PersistencePromise<void> {\n    this.collectionParentIndex.add(collectionPath);\n    return PersistencePromise.resolve();\n  }\n\n  getCollectionParents(\n    transaction: PersistenceTransaction,\n    collectionId: string\n  ): PersistencePromise<ResourcePath[]> {\n    return PersistencePromise.resolve(\n      this.collectionParentIndex.getEntries(collectionId)\n    );\n  }\n\n  addFieldIndex(\n    transaction: PersistenceTransaction,\n    index: FieldIndex\n  ): PersistencePromise<void> {\n    // Field indices are not supported with memory persistence.\n    return PersistencePromise.resolve();\n  }\n\n  deleteFieldIndex(\n    transaction: PersistenceTransaction,\n    index: FieldIndex\n  ): PersistencePromise<void> {\n    // Field indices are not supported with memory persistence.\n    return PersistencePromise.resolve();\n  }\n\n  deleteAllFieldIndexes(\n    transaction: PersistenceTransaction\n  ): PersistencePromise<void> {\n    // Field indices are not supported with memory persistence.\n    return PersistencePromise.resolve();\n  }\n\n  createTargetIndexes(\n    transaction: PersistenceTransaction,\n    target: Target\n  ): PersistencePromise<void> {\n    // Field indices are not supported with memory persistence.\n    return PersistencePromise.resolve();\n  }\n\n  getDocumentsMatchingTarget(\n    transaction: PersistenceTransaction,\n    target: Target\n  ): PersistencePromise<DocumentKey[] | null> {\n    // Field indices are not supported with memory persistence.\n    return PersistencePromise.resolve<DocumentKey[] | null>(null);\n  }\n\n  getIndexType(\n    transaction: PersistenceTransaction,\n    target: Target\n  ): PersistencePromise<IndexType> {\n    // Field indices are not supported with memory persistence.\n    return PersistencePromise.resolve<IndexType>(IndexType.NONE);\n  }\n\n  getFieldIndexes(\n    transaction: PersistenceTransaction,\n    collectionGroup?: string\n  ): PersistencePromise<FieldIndex[]> {\n    // Field indices are not supported with memory persistence.\n    return PersistencePromise.resolve<FieldIndex[]>([]);\n  }\n\n  getNextCollectionGroupToUpdate(\n    transaction: PersistenceTransaction\n  ): PersistencePromise<string | null> {\n    // Field indices are not supported with memory persistence.\n    return PersistencePromise.resolve<string | null>(null);\n  }\n\n  getMinOffset(\n    transaction: PersistenceTransaction,\n    target: Target\n  ): PersistencePromise<IndexOffset> {\n    return PersistencePromise.resolve(IndexOffset.min());\n  }\n\n  getMinOffsetFromCollectionGroup(\n    transaction: PersistenceTransaction,\n    collectionGroup: string\n  ): PersistencePromise<IndexOffset> {\n    return PersistencePromise.resolve(IndexOffset.min());\n  }\n\n  updateCollectionGroup(\n    transaction: PersistenceTransaction,\n    collectionGroup: string,\n    offset: IndexOffset\n  ): PersistencePromise<void> {\n    // Field indices are not supported with memory persistence.\n    return PersistencePromise.resolve();\n  }\n\n  updateIndexEntries(\n    transaction: PersistenceTransaction,\n    documents: DocumentMap\n  ): PersistencePromise<void> {\n    // Field indices are not supported with memory persistence.\n    return PersistencePromise.resolve();\n  }\n}\n\n/**\n * Internal implementation of the collection-parent index exposed by MemoryIndexManager.\n * Also used for in-memory caching by IndexedDbIndexManager and initial index population\n * in indexeddb_schema.ts\n */\nexport class MemoryCollectionParentIndex {\n  private index = {} as {\n    [collectionId: string]: SortedSet<ResourcePath>;\n  };\n\n  // Returns false if the entry already existed.\n  add(collectionPath: ResourcePath): boolean {\n    debugAssert(collectionPath.length % 2 === 1, 'Expected a collection path.');\n    const collectionId = collectionPath.lastSegment();\n    const parentPath = collectionPath.popLast();\n    const existingParents =\n      this.index[collectionId] ||\n      new SortedSet<ResourcePath>(ResourcePath.comparator);\n    const added = !existingParents.has(parentPath);\n    this.index[collectionId] = existingParents.add(parentPath);\n    return added;\n  }\n\n  has(collectionPath: ResourcePath): boolean {\n    const collectionId = collectionPath.lastSegment();\n    const parentPath = collectionPath.popLast();\n    const existingParents = this.index[collectionId];\n    return existingParents && existingParents.has(parentPath);\n  }\n\n  getEntries(collectionId: string): ResourcePath[] {\n    const parentPaths =\n      this.index[collectionId] ||\n      new SortedSet<ResourcePath>(ResourcePath.comparator);\n    return parentPaths.toArray();\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { User } from '../auth/user';\nimport { Bound } from '../core/bound';\nimport { DatabaseId } from '../core/database_info';\nimport {\n  CompositeFilter,\n  CompositeOperator,\n  FieldFilter,\n  Filter,\n  Operator\n} from '../core/filter';\nimport {\n  canonifyTarget,\n  newTarget,\n  Target,\n  targetEquals,\n  targetGetArrayValues,\n  targetGetLowerBound,\n  targetGetNotInValues,\n  targetGetSegmentCount,\n  targetGetUpperBound,\n  targetHasLimit\n} from '../core/target';\nimport { FirestoreIndexValueWriter } from '../index/firestore_index_value_writer';\nimport { IndexByteEncoder } from '../index/index_byte_encoder';\nimport { IndexEntry, indexEntryComparator } from '../index/index_entry';\nimport { documentKeySet, DocumentMap } from '../model/collections';\nimport { Document } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport {\n  FieldIndex,\n  fieldIndexGetArraySegment,\n  fieldIndexGetDirectionalSegments,\n  fieldIndexGetKeyOrder,\n  fieldIndexToString,\n  IndexKind,\n  IndexOffset,\n  indexOffsetComparator,\n  IndexSegment\n} from '../model/field_index';\nimport { FieldPath, ResourcePath } from '../model/path';\nimport { TargetIndexMatcher } from '../model/target_index_matcher';\nimport { isArray, refValue } from '../model/values';\nimport { Value as ProtoValue } from '../protos/firestore_proto_api';\nimport { debugAssert, fail, hardAssert } from '../util/assert';\nimport { logDebug } from '../util/log';\nimport { getDnfTerms } from '../util/logic_utils';\nimport { immediateSuccessor, primitiveComparator } from '../util/misc';\nimport { ObjectMap } from '../util/obj_map';\nimport { diffSortedSets, SortedSet } from '../util/sorted_set';\n\nimport {\n  decodeResourcePath,\n  encodeResourcePath\n} from './encoded_resource_path';\nimport { IndexManager, IndexType } from './index_manager';\nimport {\n  DbCollectionParent,\n  DbIndexConfiguration,\n  DbIndexEntry,\n  DbIndexState\n} from './indexeddb_schema';\nimport {\n  DbCollectionParentKey,\n  DbCollectionParentStore,\n  DbIndexConfigurationCollectionGroupIndex,\n  DbIndexConfigurationKey,\n  DbIndexConfigurationStore,\n  DbIndexEntryDocumentKeyIndex,\n  DbIndexEntryKey,\n  DbIndexEntryStore,\n  DbIndexStateKey,\n  DbIndexStateSequenceNumberIndex,\n  DbIndexStateStore\n} from './indexeddb_sentinels';\nimport { getStore } from './indexeddb_transaction';\nimport {\n  fromDbIndexConfiguration,\n  toDbIndexConfiguration,\n  toDbIndexState\n} from './local_serializer';\nimport { MemoryCollectionParentIndex } from './memory_index_manager';\nimport { PersistencePromise } from './persistence_promise';\nimport { PersistenceTransaction } from './persistence_transaction';\nimport { SimpleDbStore } from './simple_db';\n\nconst LOG_TAG = 'IndexedDbIndexManager';\n\nconst EMPTY_VALUE = new Uint8Array(0);\n\n/**\n * A persisted implementation of IndexManager.\n *\n * PORTING NOTE: Unlike iOS and Android, the Web SDK does not memoize index\n * data as it supports multi-tab access.\n */\nexport class IndexedDbIndexManager implements IndexManager {\n  /**\n   * An in-memory copy of the index entries we've already written since the SDK\n   * launched. Used to avoid re-writing the same entry repeatedly.\n   *\n   * This is *NOT* a complete cache of what's in persistence and so can never be\n   * used to satisfy reads.\n   */\n  private collectionParentsCache = new MemoryCollectionParentIndex();\n\n  private readonly uid: string;\n\n  /**\n   * Maps from a target to its equivalent list of sub-targets. Each sub-target\n   * contains only one term from the target's disjunctive normal form (DNF).\n   */\n  private targetToDnfSubTargets = new ObjectMap<Target, Target[]>(\n    t => canonifyTarget(t),\n    (l, r) => targetEquals(l, r)\n  );\n\n  constructor(user: User, private readonly databaseId: DatabaseId) {\n    this.uid = user.uid || '';\n  }\n\n  /**\n   * Adds a new entry to the collection parent index.\n   *\n   * Repeated calls for the same collectionPath should be avoided within a\n   * transaction as IndexedDbIndexManager only caches writes once a transaction\n   * has been committed.\n   */\n  addToCollectionParentIndex(\n    transaction: PersistenceTransaction,\n    collectionPath: ResourcePath\n  ): PersistencePromise<void> {\n    debugAssert(collectionPath.length % 2 === 1, 'Expected a collection path.');\n    if (!this.collectionParentsCache.has(collectionPath)) {\n      const collectionId = collectionPath.lastSegment();\n      const parentPath = collectionPath.popLast();\n\n      transaction.addOnCommittedListener(() => {\n        // Add the collection to the in memory cache only if the transaction was\n        // successfully committed.\n        this.collectionParentsCache.add(collectionPath);\n      });\n\n      const collectionParent: DbCollectionParent = {\n        collectionId,\n        parent: encodeResourcePath(parentPath)\n      };\n      return collectionParentsStore(transaction).put(collectionParent);\n    }\n    return PersistencePromise.resolve();\n  }\n\n  getCollectionParents(\n    transaction: PersistenceTransaction,\n    collectionId: string\n  ): PersistencePromise<ResourcePath[]> {\n    const parentPaths = [] as ResourcePath[];\n    const range = IDBKeyRange.bound(\n      [collectionId, ''],\n      [immediateSuccessor(collectionId), ''],\n      /*lowerOpen=*/ false,\n      /*upperOpen=*/ true\n    );\n    return collectionParentsStore(transaction)\n      .loadAll(range)\n      .next(entries => {\n        for (const entry of entries) {\n          // This collectionId guard shouldn't be necessary (and isn't as long\n          // as we're running in a real browser), but there's a bug in\n          // indexeddbshim that breaks our range in our tests running in node:\n          // https://github.com/axemclion/IndexedDBShim/issues/334\n          if (entry.collectionId !== collectionId) {\n            break;\n          }\n          parentPaths.push(decodeResourcePath(entry.parent));\n        }\n        return parentPaths;\n      });\n  }\n\n  addFieldIndex(\n    transaction: PersistenceTransaction,\n    index: FieldIndex\n  ): PersistencePromise<void> {\n    // TODO(indexing): Verify that the auto-incrementing index ID works in\n    // Safari & Firefox.\n    const indexes = indexConfigurationStore(transaction);\n    const dbIndex = toDbIndexConfiguration(index);\n    delete dbIndex.indexId; // `indexId` is auto-populated by IndexedDb\n    const result = indexes.add(dbIndex);\n    if (index.indexState) {\n      const states = indexStateStore(transaction);\n      return result.next(indexId => {\n        states.put(\n          toDbIndexState(\n            indexId,\n            this.uid,\n            index.indexState.sequenceNumber,\n            index.indexState.offset\n          )\n        );\n      });\n    } else {\n      return result.next();\n    }\n  }\n\n  deleteFieldIndex(\n    transaction: PersistenceTransaction,\n    index: FieldIndex\n  ): PersistencePromise<void> {\n    const indexes = indexConfigurationStore(transaction);\n    const states = indexStateStore(transaction);\n    const entries = indexEntriesStore(transaction);\n    return indexes\n      .delete(index.indexId)\n      .next(() =>\n        states.delete(\n          IDBKeyRange.bound(\n            [index.indexId],\n            [index.indexId + 1],\n            /*lowerOpen=*/ false,\n            /*upperOpen=*/ true\n          )\n        )\n      )\n      .next(() =>\n        entries.delete(\n          IDBKeyRange.bound(\n            [index.indexId],\n            [index.indexId + 1],\n            /*lowerOpen=*/ false,\n            /*upperOpen=*/ true\n          )\n        )\n      );\n  }\n\n  deleteAllFieldIndexes(\n    transaction: PersistenceTransaction\n  ): PersistencePromise<void> {\n    const indexes = indexConfigurationStore(transaction);\n    const entries = indexEntriesStore(transaction);\n    const states = indexStateStore(transaction);\n\n    return indexes\n      .deleteAll()\n      .next(() => entries.deleteAll())\n      .next(() => states.deleteAll());\n  }\n\n  createTargetIndexes(\n    transaction: PersistenceTransaction,\n    target: Target\n  ): PersistencePromise<void> {\n    return PersistencePromise.forEach(\n      this.getSubTargets(target),\n      (subTarget: Target) => {\n        return this.getIndexType(transaction, subTarget).next(type => {\n          if (type === IndexType.NONE || type === IndexType.PARTIAL) {\n            const targetIndexMatcher = new TargetIndexMatcher(subTarget);\n            const fieldIndex = targetIndexMatcher.buildTargetIndex();\n            if (fieldIndex != null) {\n              return this.addFieldIndex(transaction, fieldIndex);\n            }\n          }\n        });\n      }\n    );\n  }\n\n  getDocumentsMatchingTarget(\n    transaction: PersistenceTransaction,\n    target: Target\n  ): PersistencePromise<DocumentKey[] | null> {\n    const indexEntries = indexEntriesStore(transaction);\n\n    let canServeTarget = true;\n    const indexes = new Map<Target, FieldIndex | null>();\n\n    return PersistencePromise.forEach(\n      this.getSubTargets(target),\n      (subTarget: Target) => {\n        return this.getFieldIndex(transaction, subTarget).next(index => {\n          canServeTarget &&= !!index;\n          indexes.set(subTarget, index);\n        });\n      }\n    ).next(() => {\n      if (!canServeTarget) {\n        return PersistencePromise.resolve(null as DocumentKey[] | null);\n      } else {\n        let existingKeys = documentKeySet();\n        const result: DocumentKey[] = [];\n        return PersistencePromise.forEach(indexes, (index, subTarget) => {\n          logDebug(\n            LOG_TAG,\n            `Using index ${fieldIndexToString(\n              index!\n            )} to execute ${canonifyTarget(target)}`\n          );\n\n          const arrayValues = targetGetArrayValues(subTarget, index!);\n          const notInValues = targetGetNotInValues(subTarget, index!);\n          const lowerBound = targetGetLowerBound(subTarget, index!);\n          const upperBound = targetGetUpperBound(subTarget, index!);\n\n          const lowerBoundEncoded = this.encodeBound(\n            index!,\n            subTarget,\n            lowerBound\n          );\n          const upperBoundEncoded = this.encodeBound(\n            index!,\n            subTarget,\n            upperBound\n          );\n          const notInEncoded = this.encodeValues(\n            index!,\n            subTarget,\n            notInValues\n          );\n\n          const indexRanges = this.generateIndexRanges(\n            index!.indexId,\n            arrayValues,\n            lowerBoundEncoded,\n            lowerBound.inclusive,\n            upperBoundEncoded,\n            upperBound.inclusive,\n            notInEncoded\n          );\n          return PersistencePromise.forEach(\n            indexRanges,\n            (indexRange: IDBKeyRange) => {\n              return indexEntries\n                .loadFirst(indexRange, target.limit)\n                .next(entries => {\n                  entries.forEach(entry => {\n                    const documentKey = DocumentKey.fromSegments(\n                      entry.documentKey\n                    );\n                    if (!existingKeys.has(documentKey)) {\n                      existingKeys = existingKeys.add(documentKey);\n                      result.push(documentKey);\n                    }\n                  });\n                });\n            }\n          );\n        }).next(() => result as DocumentKey[] | null);\n      }\n    });\n  }\n\n  private getSubTargets(target: Target): Target[] {\n    let subTargets = this.targetToDnfSubTargets.get(target);\n    if (subTargets) {\n      return subTargets;\n    }\n\n    if (target.filters.length === 0) {\n      subTargets = [target];\n    } else {\n      // There is an implicit AND operation between all the filters stored in the target\n      const dnf: Filter[] = getDnfTerms(\n        CompositeFilter.create(target.filters, CompositeOperator.AND)\n      );\n\n      subTargets = dnf.map(term =>\n        newTarget(\n          target.path,\n          target.collectionGroup,\n          target.orderBy,\n          term.getFilters(),\n          target.limit,\n          target.startAt,\n          target.endAt\n        )\n      );\n    }\n\n    this.targetToDnfSubTargets.set(target, subTargets);\n    return subTargets;\n  }\n\n  /**\n   * Constructs a key range query on `DbIndexEntryStore` that unions all\n   * bounds.\n   */\n  private generateIndexRanges(\n    indexId: number,\n    arrayValues: ProtoValue[] | null,\n    lowerBounds: Uint8Array[],\n    lowerBoundInclusive: boolean,\n    upperBounds: Uint8Array[],\n    upperBoundInclusive: boolean,\n    notInValues: Uint8Array[]\n  ): IDBKeyRange[] {\n    // The number of total index scans we union together. This is similar to a\n    // distributed normal form, but adapted for array values. We create a single\n    // index range per value in an ARRAY_CONTAINS or ARRAY_CONTAINS_ANY filter\n    // combined with the values from the query bounds.\n    const totalScans =\n      (arrayValues != null ? arrayValues.length : 1) *\n      Math.max(lowerBounds.length, upperBounds.length);\n    const scansPerArrayElement =\n      totalScans / (arrayValues != null ? arrayValues.length : 1);\n\n    const indexRanges: IDBKeyRange[] = [];\n    for (let i = 0; i < totalScans; ++i) {\n      const arrayValue = arrayValues\n        ? this.encodeSingleElement(arrayValues[i / scansPerArrayElement])\n        : EMPTY_VALUE;\n\n      const lowerBound = this.generateLowerBound(\n        indexId,\n        arrayValue,\n        lowerBounds[i % scansPerArrayElement],\n        lowerBoundInclusive\n      );\n      const upperBound = this.generateUpperBound(\n        indexId,\n        arrayValue,\n        upperBounds[i % scansPerArrayElement],\n        upperBoundInclusive\n      );\n\n      const notInBound = notInValues.map(notIn =>\n        this.generateLowerBound(\n          indexId,\n          arrayValue,\n          notIn,\n          /* inclusive= */ true\n        )\n      );\n\n      indexRanges.push(...this.createRange(lowerBound, upperBound, notInBound));\n    }\n\n    return indexRanges;\n  }\n\n  /** Generates the lower bound for `arrayValue` and `directionalValue`. */\n  private generateLowerBound(\n    indexId: number,\n    arrayValue: Uint8Array,\n    directionalValue: Uint8Array,\n    inclusive: boolean\n  ): IndexEntry {\n    const entry = new IndexEntry(\n      indexId,\n      DocumentKey.empty(),\n      arrayValue,\n      directionalValue\n    );\n    return inclusive ? entry : entry.successor();\n  }\n\n  /** Generates the upper bound for `arrayValue` and `directionalValue`. */\n  private generateUpperBound(\n    indexId: number,\n    arrayValue: Uint8Array,\n    directionalValue: Uint8Array,\n    inclusive: boolean\n  ): IndexEntry {\n    const entry = new IndexEntry(\n      indexId,\n      DocumentKey.empty(),\n      arrayValue,\n      directionalValue\n    );\n    return inclusive ? entry.successor() : entry;\n  }\n\n  private getFieldIndex(\n    transaction: PersistenceTransaction,\n    target: Target\n  ): PersistencePromise<FieldIndex | null> {\n    const targetIndexMatcher = new TargetIndexMatcher(target);\n    const collectionGroup =\n      target.collectionGroup != null\n        ? target.collectionGroup\n        : target.path.lastSegment();\n\n    return this.getFieldIndexes(transaction, collectionGroup).next(indexes => {\n      // Return the index with the most number of segments.\n      let index: FieldIndex | null = null;\n      for (const candidate of indexes) {\n        const matches = targetIndexMatcher.servedByIndex(candidate);\n        if (\n          matches &&\n          (!index || candidate.fields.length > index.fields.length)\n        ) {\n          index = candidate;\n        }\n      }\n      return index;\n    });\n  }\n\n  getIndexType(\n    transaction: PersistenceTransaction,\n    target: Target\n  ): PersistencePromise<IndexType> {\n    let indexType = IndexType.FULL;\n    const subTargets = this.getSubTargets(target);\n    return PersistencePromise.forEach(subTargets, (target: Target) => {\n      return this.getFieldIndex(transaction, target).next(index => {\n        if (!index) {\n          indexType = IndexType.NONE;\n        } else if (\n          indexType !== IndexType.NONE &&\n          index.fields.length < targetGetSegmentCount(target)\n        ) {\n          indexType = IndexType.PARTIAL;\n        }\n      });\n    }).next(() => {\n      // OR queries have more than one sub-target (one sub-target per DNF term). We currently consider\n      // OR queries that have a `limit` to have a partial index. For such queries we perform sorting\n      // and apply the limit in memory as a post-processing step.\n      if (\n        targetHasLimit(target) &&\n        subTargets.length > 1 &&\n        indexType === IndexType.FULL\n      ) {\n        return IndexType.PARTIAL;\n      }\n\n      return indexType;\n    });\n  }\n\n  /**\n   * Returns the byte encoded form of the directional values in the field index.\n   * Returns `null` if the document does not have all fields specified in the\n   * index.\n   */\n  private encodeDirectionalElements(\n    fieldIndex: FieldIndex,\n    document: Document\n  ): Uint8Array | null {\n    const encoder = new IndexByteEncoder();\n    for (const segment of fieldIndexGetDirectionalSegments(fieldIndex)) {\n      const field = document.data.field(segment.fieldPath);\n      if (field == null) {\n        return null;\n      }\n      const directionalEncoder = encoder.forKind(segment.kind);\n      FirestoreIndexValueWriter.INSTANCE.writeIndexValue(\n        field,\n        directionalEncoder\n      );\n    }\n    return encoder.encodedBytes();\n  }\n\n  /** Encodes a single value to the ascending index format. */\n  private encodeSingleElement(value: ProtoValue): Uint8Array {\n    const encoder = new IndexByteEncoder();\n    FirestoreIndexValueWriter.INSTANCE.writeIndexValue(\n      value,\n      encoder.forKind(IndexKind.ASCENDING)\n    );\n    return encoder.encodedBytes();\n  }\n\n  /**\n   * Returns an encoded form of the document key that sorts based on the key\n   * ordering of the field index.\n   */\n  private encodeDirectionalKey(\n    fieldIndex: FieldIndex,\n    documentKey: DocumentKey\n  ): Uint8Array {\n    const encoder = new IndexByteEncoder();\n    FirestoreIndexValueWriter.INSTANCE.writeIndexValue(\n      refValue(this.databaseId, documentKey),\n      encoder.forKind(fieldIndexGetKeyOrder(fieldIndex))\n    );\n    return encoder.encodedBytes();\n  }\n\n  /**\n   * Encodes the given field values according to the specification in `target`.\n   * For IN queries, a list of possible values is returned.\n   */\n  private encodeValues(\n    fieldIndex: FieldIndex,\n    target: Target,\n    values: ProtoValue[] | null\n  ): Uint8Array[] {\n    if (values === null) {\n      return [];\n    }\n\n    let encoders: IndexByteEncoder[] = [];\n    encoders.push(new IndexByteEncoder());\n\n    let valueIdx = 0;\n    for (const segment of fieldIndexGetDirectionalSegments(fieldIndex)) {\n      const value = values[valueIdx++];\n      for (const encoder of encoders) {\n        if (this.isInFilter(target, segment.fieldPath) && isArray(value)) {\n          encoders = this.expandIndexValues(encoders, segment, value);\n        } else {\n          const directionalEncoder = encoder.forKind(segment.kind);\n          FirestoreIndexValueWriter.INSTANCE.writeIndexValue(\n            value,\n            directionalEncoder\n          );\n        }\n      }\n    }\n    return this.getEncodedBytes(encoders);\n  }\n\n  /**\n   * Encodes the given bounds according to the specification in `target`. For IN\n   * queries, a list of possible values is returned.\n   */\n  private encodeBound(\n    fieldIndex: FieldIndex,\n    target: Target,\n    bound: Bound\n  ): Uint8Array[] {\n    return this.encodeValues(fieldIndex, target, bound.position);\n  }\n\n  /** Returns the byte representation for the provided encoders. */\n  private getEncodedBytes(encoders: IndexByteEncoder[]): Uint8Array[] {\n    const result: Uint8Array[] = [];\n    for (let i = 0; i < encoders.length; ++i) {\n      result[i] = encoders[i].encodedBytes();\n    }\n    return result;\n  }\n\n  /**\n   * Creates a separate encoder for each element of an array.\n   *\n   * The method appends each value to all existing encoders (e.g. filter(\"a\",\n   * \"==\", \"a1\").filter(\"b\", \"in\", [\"b1\", \"b2\"]) becomes [\"a1,b1\", \"a1,b2\"]). A\n   * list of new encoders is returned.\n   */\n  private expandIndexValues(\n    encoders: IndexByteEncoder[],\n    segment: IndexSegment,\n    value: ProtoValue\n  ): IndexByteEncoder[] {\n    const prefixes = [...encoders];\n    const results: IndexByteEncoder[] = [];\n    for (const arrayElement of value.arrayValue!.values || []) {\n      for (const prefix of prefixes) {\n        const clonedEncoder = new IndexByteEncoder();\n        clonedEncoder.seed(prefix.encodedBytes());\n        FirestoreIndexValueWriter.INSTANCE.writeIndexValue(\n          arrayElement,\n          clonedEncoder.forKind(segment.kind)\n        );\n        results.push(clonedEncoder);\n      }\n    }\n    return results;\n  }\n\n  private isInFilter(target: Target, fieldPath: FieldPath): boolean {\n    return !!target.filters.find(\n      f =>\n        f instanceof FieldFilter &&\n        f.field.isEqual(fieldPath) &&\n        (f.op === Operator.IN || f.op === Operator.NOT_IN)\n    );\n  }\n\n  getFieldIndexes(\n    transaction: PersistenceTransaction,\n    collectionGroup?: string\n  ): PersistencePromise<FieldIndex[]> {\n    const indexes = indexConfigurationStore(transaction);\n    const states = indexStateStore(transaction);\n\n    return (\n      collectionGroup\n        ? indexes.loadAll(\n            DbIndexConfigurationCollectionGroupIndex,\n            IDBKeyRange.bound(collectionGroup, collectionGroup)\n          )\n        : indexes.loadAll()\n    ).next(indexConfigs => {\n      const result: FieldIndex[] = [];\n      return PersistencePromise.forEach(\n        indexConfigs,\n        (indexConfig: DbIndexConfiguration) => {\n          return states\n            .get([indexConfig.indexId!, this.uid])\n            .next(indexState => {\n              result.push(fromDbIndexConfiguration(indexConfig, indexState));\n            });\n        }\n      ).next(() => result);\n    });\n  }\n\n  getNextCollectionGroupToUpdate(\n    transaction: PersistenceTransaction\n  ): PersistencePromise<string | null> {\n    return this.getFieldIndexes(transaction).next(indexes => {\n      if (indexes.length === 0) {\n        return null;\n      }\n      indexes.sort((l, r) => {\n        const cmp = l.indexState.sequenceNumber - r.indexState.sequenceNumber;\n        return cmp !== 0\n          ? cmp\n          : primitiveComparator(l.collectionGroup, r.collectionGroup);\n      });\n      return indexes[0].collectionGroup;\n    });\n  }\n\n  updateCollectionGroup(\n    transaction: PersistenceTransaction,\n    collectionGroup: string,\n    offset: IndexOffset\n  ): PersistencePromise<void> {\n    const indexes = indexConfigurationStore(transaction);\n    const states = indexStateStore(transaction);\n    return this.getNextSequenceNumber(transaction).next(nextSequenceNumber =>\n      indexes\n        .loadAll(\n          DbIndexConfigurationCollectionGroupIndex,\n          IDBKeyRange.bound(collectionGroup, collectionGroup)\n        )\n        .next(configs =>\n          PersistencePromise.forEach(configs, (config: DbIndexConfiguration) =>\n            states.put(\n              toDbIndexState(\n                config.indexId!,\n                this.uid,\n                nextSequenceNumber,\n                offset\n              )\n            )\n          )\n        )\n    );\n  }\n\n  updateIndexEntries(\n    transaction: PersistenceTransaction,\n    documents: DocumentMap\n  ): PersistencePromise<void> {\n    // Porting Note: `getFieldIndexes()` on Web does not cache index lookups as\n    // it could be used across different IndexedDB transactions. As any cached\n    // data might be invalidated by other multi-tab clients, we can only trust\n    // data within a single IndexedDB transaction. We therefore add a cache\n    // here.\n    const memoizedIndexes = new Map<string, FieldIndex[]>();\n    return PersistencePromise.forEach(documents, (key, doc) => {\n      const memoizedCollectionIndexes = memoizedIndexes.get(\n        key.collectionGroup\n      );\n      const fieldIndexes = memoizedCollectionIndexes\n        ? PersistencePromise.resolve(memoizedCollectionIndexes)\n        : this.getFieldIndexes(transaction, key.collectionGroup);\n\n      return fieldIndexes.next(fieldIndexes => {\n        memoizedIndexes.set(key.collectionGroup, fieldIndexes);\n        return PersistencePromise.forEach(\n          fieldIndexes,\n          (fieldIndex: FieldIndex) => {\n            return this.getExistingIndexEntries(\n              transaction,\n              key,\n              fieldIndex\n            ).next(existingEntries => {\n              const newEntries = this.computeIndexEntries(doc, fieldIndex);\n              if (!existingEntries.isEqual(newEntries)) {\n                return this.updateEntries(\n                  transaction,\n                  doc,\n                  fieldIndex,\n                  existingEntries,\n                  newEntries\n                );\n              }\n              return PersistencePromise.resolve();\n            });\n          }\n        );\n      });\n    });\n  }\n\n  private addIndexEntry(\n    transaction: PersistenceTransaction,\n    document: Document,\n    fieldIndex: FieldIndex,\n    indexEntry: IndexEntry\n  ): PersistencePromise<void> {\n    const indexEntries = indexEntriesStore(transaction);\n    return indexEntries.put({\n      indexId: indexEntry.indexId,\n      uid: this.uid,\n      arrayValue: indexEntry.arrayValue,\n      directionalValue: indexEntry.directionalValue,\n      orderedDocumentKey: this.encodeDirectionalKey(fieldIndex, document.key),\n      documentKey: document.key.path.toArray()\n    });\n  }\n\n  private deleteIndexEntry(\n    transaction: PersistenceTransaction,\n    document: Document,\n    fieldIndex: FieldIndex,\n    indexEntry: IndexEntry\n  ): PersistencePromise<void> {\n    const indexEntries = indexEntriesStore(transaction);\n    return indexEntries.delete([\n      indexEntry.indexId,\n      this.uid,\n      indexEntry.arrayValue,\n      indexEntry.directionalValue,\n      this.encodeDirectionalKey(fieldIndex, document.key),\n      document.key.path.toArray()\n    ]);\n  }\n\n  private getExistingIndexEntries(\n    transaction: PersistenceTransaction,\n    documentKey: DocumentKey,\n    fieldIndex: FieldIndex\n  ): PersistencePromise<SortedSet<IndexEntry>> {\n    const indexEntries = indexEntriesStore(transaction);\n    let results = new SortedSet<IndexEntry>(indexEntryComparator);\n    return indexEntries\n      .iterate(\n        {\n          index: DbIndexEntryDocumentKeyIndex,\n          range: IDBKeyRange.only([\n            fieldIndex.indexId,\n            this.uid,\n            this.encodeDirectionalKey(fieldIndex, documentKey)\n          ])\n        },\n        (_, entry) => {\n          results = results.add(\n            new IndexEntry(\n              fieldIndex.indexId,\n              documentKey,\n              entry.arrayValue,\n              entry.directionalValue\n            )\n          );\n        }\n      )\n      .next(() => results);\n  }\n\n  /** Creates the index entries for the given document. */\n  private computeIndexEntries(\n    document: Document,\n    fieldIndex: FieldIndex\n  ): SortedSet<IndexEntry> {\n    let results = new SortedSet<IndexEntry>(indexEntryComparator);\n\n    const directionalValue = this.encodeDirectionalElements(\n      fieldIndex,\n      document\n    );\n    if (directionalValue == null) {\n      return results;\n    }\n\n    const arraySegment = fieldIndexGetArraySegment(fieldIndex);\n    if (arraySegment != null) {\n      const value = document.data.field(arraySegment.fieldPath);\n      if (isArray(value)) {\n        for (const arrayValue of value.arrayValue!.values || []) {\n          results = results.add(\n            new IndexEntry(\n              fieldIndex.indexId,\n              document.key,\n              this.encodeSingleElement(arrayValue),\n              directionalValue\n            )\n          );\n        }\n      }\n    } else {\n      results = results.add(\n        new IndexEntry(\n          fieldIndex.indexId,\n          document.key,\n          EMPTY_VALUE,\n          directionalValue\n        )\n      );\n    }\n\n    return results;\n  }\n\n  /**\n   * Updates the index entries for the provided document by deleting entries\n   * that are no longer referenced in `newEntries` and adding all newly added\n   * entries.\n   */\n  private updateEntries(\n    transaction: PersistenceTransaction,\n    document: Document,\n    fieldIndex: FieldIndex,\n    existingEntries: SortedSet<IndexEntry>,\n    newEntries: SortedSet<IndexEntry>\n  ): PersistencePromise<void> {\n    logDebug(LOG_TAG, \"Updating index entries for document '%s'\", document.key);\n\n    const promises: Array<PersistencePromise<void>> = [];\n    diffSortedSets(\n      existingEntries,\n      newEntries,\n      indexEntryComparator,\n      /* onAdd= */ entry => {\n        promises.push(\n          this.addIndexEntry(transaction, document, fieldIndex, entry)\n        );\n      },\n      /* onRemove= */ entry => {\n        promises.push(\n          this.deleteIndexEntry(transaction, document, fieldIndex, entry)\n        );\n      }\n    );\n\n    return PersistencePromise.waitFor(promises);\n  }\n\n  private getNextSequenceNumber(\n    transaction: PersistenceTransaction\n  ): PersistencePromise<number> {\n    let nextSequenceNumber = 1;\n    const states = indexStateStore(transaction);\n    return states\n      .iterate(\n        {\n          index: DbIndexStateSequenceNumberIndex,\n          reverse: true,\n          range: IDBKeyRange.upperBound([this.uid, Number.MAX_SAFE_INTEGER])\n        },\n        (_, state, controller) => {\n          controller.done();\n          nextSequenceNumber = state.sequenceNumber + 1;\n        }\n      )\n      .next(() => nextSequenceNumber);\n  }\n\n  /**\n   * Returns a new set of IDB ranges that splits the existing range and excludes\n   * any values that match the `notInValue` from these ranges. As an example,\n   * '[foo > 2 && foo != 3]` becomes  `[foo > 2 && < 3, foo > 3]`.\n   */\n  private createRange(\n    lower: IndexEntry,\n    upper: IndexEntry,\n    notInValues: IndexEntry[]\n  ): IDBKeyRange[] {\n    // The notIn values need to be sorted and unique so that we can return a\n    // sorted set of non-overlapping ranges.\n    notInValues = notInValues\n      .sort((l, r) => indexEntryComparator(l, r))\n      .filter(\n        (el, i, values) => !i || indexEntryComparator(el, values[i - 1]) !== 0\n      );\n\n    const bounds: IndexEntry[] = [];\n    bounds.push(lower);\n    for (const notInValue of notInValues) {\n      const cmpToLower = indexEntryComparator(notInValue, lower);\n      const cmpToUpper = indexEntryComparator(notInValue, upper);\n\n      if (cmpToLower === 0) {\n        // `notInValue` is the lower bound. We therefore need to raise the bound\n        // to the next value.\n        bounds[0] = lower.successor();\n      } else if (cmpToLower > 0 && cmpToUpper < 0) {\n        // `notInValue` is in the middle of the range\n        bounds.push(notInValue);\n        bounds.push(notInValue.successor());\n      } else if (cmpToUpper > 0) {\n        // `notInValue` (and all following values) are out of the range\n        break;\n      }\n    }\n    bounds.push(upper);\n\n    const ranges: IDBKeyRange[] = [];\n    for (let i = 0; i < bounds.length; i += 2) {\n      // If we encounter two bounds that will create an unmatchable key range,\n      // then we return an empty set of key ranges.\n      if (this.isRangeMatchable(bounds[i], bounds[i + 1])) {\n        return [];\n      }\n\n      const lowerBound = [\n        bounds[i].indexId,\n        this.uid,\n        bounds[i].arrayValue,\n        bounds[i].directionalValue,\n        EMPTY_VALUE,\n        []\n      ] as DbIndexEntryKey;\n\n      const upperBound = [\n        bounds[i + 1].indexId,\n        this.uid,\n        bounds[i + 1].arrayValue,\n        bounds[i + 1].directionalValue,\n        EMPTY_VALUE,\n        []\n      ] as DbIndexEntryKey;\n\n      ranges.push(IDBKeyRange.bound(lowerBound, upperBound));\n    }\n    return ranges;\n  }\n\n  isRangeMatchable(lowerBound: IndexEntry, upperBound: IndexEntry): boolean {\n    // If lower bound is greater than the upper bound, then the key\n    // range can never be matched.\n    return indexEntryComparator(lowerBound, upperBound) > 0;\n  }\n\n  getMinOffsetFromCollectionGroup(\n    transaction: PersistenceTransaction,\n    collectionGroup: string\n  ): PersistencePromise<IndexOffset> {\n    return this.getFieldIndexes(transaction, collectionGroup).next(\n      getMinOffsetFromFieldIndexes\n    );\n  }\n\n  getMinOffset(\n    transaction: PersistenceTransaction,\n    target: Target\n  ): PersistencePromise<IndexOffset> {\n    return PersistencePromise.mapArray(\n      this.getSubTargets(target),\n      (subTarget: Target) =>\n        this.getFieldIndex(transaction, subTarget).next(index =>\n          index ? index : fail('Target cannot be served from index')\n        )\n    ).next(getMinOffsetFromFieldIndexes);\n  }\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the collectionParents\n * document store.\n */\nfunction collectionParentsStore(\n  txn: PersistenceTransaction\n): SimpleDbStore<DbCollectionParentKey, DbCollectionParent> {\n  return getStore<DbCollectionParentKey, DbCollectionParent>(\n    txn,\n    DbCollectionParentStore\n  );\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the index entry object store.\n */\nfunction indexEntriesStore(\n  txn: PersistenceTransaction\n): SimpleDbStore<DbIndexEntryKey, DbIndexEntry> {\n  return getStore<DbIndexEntryKey, DbIndexEntry>(txn, DbIndexEntryStore);\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the index configuration object store.\n */\nfunction indexConfigurationStore(\n  txn: PersistenceTransaction\n): SimpleDbStore<DbIndexConfigurationKey, DbIndexConfiguration> {\n  return getStore<DbIndexConfigurationKey, DbIndexConfiguration>(\n    txn,\n    DbIndexConfigurationStore\n  );\n}\n\n/**\n * Helper to get a typed SimpleDbStore for the index state object store.\n */\nfunction indexStateStore(\n  txn: PersistenceTransaction\n): SimpleDbStore<DbIndexStateKey, DbIndexState> {\n  return getStore<DbIndexStateKey, DbIndexState>(txn, DbIndexStateStore);\n}\n\nfunction getMinOffsetFromFieldIndexes(fieldIndexes: FieldIndex[]): IndexOffset {\n  hardAssert(\n    fieldIndexes.length !== 0,\n    'Found empty index group when looking for least recent index offset.'\n  );\n\n  let minOffset: IndexOffset = fieldIndexes[0].indexState.offset;\n  let maxBatchId: number = minOffset.largestBatchId;\n  for (let i = 1; i < fieldIndexes.length; i++) {\n    const newOffset: IndexOffset = fieldIndexes[i].indexState.offset;\n    if (indexOffsetComparator(newOffset, minOffset) < 0) {\n      minOffset = newOffset;\n    }\n    if (maxBatchId < newOffset.largestBatchId) {\n      maxBatchId = newOffset.largestBatchId;\n    }\n  }\n  return new IndexOffset(minOffset.readTime, minOffset.documentKey, maxBatchId);\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ListenSequenceNumber, TargetId } from '../core/types';\nimport { SortedMap } from '../util/sorted_map';\n\nimport { PersistencePromise } from './persistence_promise';\nimport { PersistenceTransaction } from './persistence_transaction';\nimport { TargetData } from './target_data';\n\n/**\n * Describes a map whose keys are active target ids. We do not care about the type of the\n * values.\n */\nexport type ActiveTargets = SortedMap<TargetId, unknown>;\n\nexport const GC_DID_NOT_RUN: LruResults = {\n  didRun: false,\n  sequenceNumbersCollected: 0,\n  targetsRemoved: 0,\n  documentsRemoved: 0\n};\n\nexport const LRU_COLLECTION_DISABLED = -1;\nexport const LRU_DEFAULT_CACHE_SIZE_BYTES = 40 * 1024 * 1024;\n\nexport class LruParams {\n  private static readonly DEFAULT_COLLECTION_PERCENTILE = 10;\n  private static readonly DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT = 1000;\n\n  static withCacheSize(cacheSize: number): LruParams {\n    return new LruParams(\n      cacheSize,\n      LruParams.DEFAULT_COLLECTION_PERCENTILE,\n      LruParams.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT\n    );\n  }\n\n  static readonly DEFAULT: LruParams = new LruParams(\n    LRU_DEFAULT_CACHE_SIZE_BYTES,\n    LruParams.DEFAULT_COLLECTION_PERCENTILE,\n    LruParams.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT\n  );\n\n  static readonly DISABLED: LruParams = new LruParams(\n    LRU_COLLECTION_DISABLED,\n    0,\n    0\n  );\n\n  constructor(\n    // When we attempt to collect, we will only do so if the cache size is greater than this\n    // threshold. Passing `COLLECTION_DISABLED` here will cause collection to always be skipped.\n    readonly cacheSizeCollectionThreshold: number,\n    // The percentage of sequence numbers that we will attempt to collect\n    readonly percentileToCollect: number,\n    // A cap on the total number of sequence numbers that will be collected. This prevents\n    // us from collecting a huge number of sequence numbers if the cache has grown very large.\n    readonly maximumSequenceNumbersToCollect: number\n  ) {}\n}\n\nexport interface LruGarbageCollector {\n  readonly params: LruParams;\n\n  collect(\n    txn: PersistenceTransaction,\n    activeTargetIds: ActiveTargets\n  ): PersistencePromise<LruResults>;\n\n  /** Given a percentile of target to collect, returns the number of targets to collect. */\n  calculateTargetCount(\n    txn: PersistenceTransaction,\n    percentile: number\n  ): PersistencePromise<number>;\n\n  /** Returns the nth sequence number, counting in order from the smallest. */\n  nthSequenceNumber(\n    txn: PersistenceTransaction,\n    n: number\n  ): PersistencePromise<number>;\n\n  /**\n   * Removes documents that have a sequence number equal to or less than the\n   * upper bound and are not otherwise pinned.\n   */\n  removeOrphanedDocuments(\n    txn: PersistenceTransaction,\n    upperBound: ListenSequenceNumber\n  ): PersistencePromise<number>;\n\n  getCacheSize(txn: PersistenceTransaction): PersistencePromise<number>;\n\n  /**\n   * Removes targets with a sequence number equal to or less than the given\n   * upper bound, and removes document associations with those targets.\n   */\n  removeTargets(\n    txn: PersistenceTransaction,\n    upperBound: ListenSequenceNumber,\n    activeTargetIds: ActiveTargets\n  ): PersistencePromise<number>;\n}\n\n/**\n * Describes the results of a garbage collection run. `didRun` will be set to\n * `false` if collection was skipped (either it is disabled or the cache size\n * has not hit the threshold). If collection ran, the other fields will be\n * filled in with the details of the results.\n */\nexport interface LruResults {\n  readonly didRun: boolean;\n  readonly sequenceNumbersCollected: number;\n  readonly targetsRemoved: number;\n  readonly documentsRemoved: number;\n}\n\n/**\n * Persistence layers intending to use LRU Garbage collection should have\n * reference delegates that implement this interface. This interface defines the\n * operations that the LRU garbage collector needs from the persistence layer.\n */\nexport interface LruDelegate {\n  readonly garbageCollector: LruGarbageCollector;\n\n  /** Enumerates all the targets in the TargetCache. */\n  forEachTarget(\n    txn: PersistenceTransaction,\n    f: (target: TargetData) => void\n  ): PersistencePromise<void>;\n\n  getSequenceNumberCount(\n    txn: PersistenceTransaction\n  ): PersistencePromise<number>;\n\n  /**\n   * Enumerates sequence numbers for documents not associated with a target.\n   * Note that this may include duplicate sequence numbers.\n   */\n  forEachOrphanedDocumentSequenceNumber(\n    txn: PersistenceTransaction,\n    f: (sequenceNumber: ListenSequenceNumber) => void\n  ): PersistencePromise<void>;\n\n  /**\n   * Removes all targets that have a sequence number less than or equal to\n   * `upperBound`, and are not present in the `activeTargetIds` set.\n   *\n   * @returns the number of targets removed.\n   */\n  removeTargets(\n    txn: PersistenceTransaction,\n    upperBound: ListenSequenceNumber,\n    activeTargetIds: ActiveTargets\n  ): PersistencePromise<number>;\n\n  /**\n   * Removes all unreferenced documents from the cache that have a sequence\n   * number less than or equal to the given `upperBound`.\n   *\n   * @returns the number of documents removed.\n   */\n  removeOrphanedDocuments(\n    txn: PersistenceTransaction,\n    upperBound: ListenSequenceNumber\n  ): PersistencePromise<number>;\n\n  getCacheSize(txn: PersistenceTransaction): PersistencePromise<number>;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TargetId } from './types';\n\n/** Offset to ensure non-overlapping target ids. */\nconst OFFSET = 2;\n\n/**\n * Generates monotonically increasing target IDs for sending targets to the\n * watch stream.\n *\n * The client constructs two generators, one for the target cache, and one for\n * for the sync engine (to generate limbo documents targets). These\n * generators produce non-overlapping IDs (by using even and odd IDs\n * respectively).\n *\n * By separating the target ID space, the query cache can generate target IDs\n * that persist across client restarts, while sync engine can independently\n * generate in-memory target IDs that are transient and can be reused after a\n * restart.\n */\nexport class TargetIdGenerator {\n  constructor(private lastId: number) {}\n\n  next(): TargetId {\n    this.lastId += OFFSET;\n    return this.lastId;\n  }\n\n  static forTargetCache(): TargetIdGenerator {\n    // The target cache generator must return '2' in its first call to `next()`\n    // as there is no differentiation in the protocol layer between an unset\n    // number and the number '0'. If we were to sent a target with target ID\n    // '0', the backend would consider it unset and replace it with its own ID.\n    return new TargetIdGenerator(2 - OFFSET);\n  }\n\n  static forSyncEngine(): TargetIdGenerator {\n    // Sync engine assigns target IDs for limbo document detection.\n    return new TargetIdGenerator(1 - OFFSET);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { DocumentKeySet, MutableDocumentMap } from '../model/collections';\nimport { MutableDocument } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { debugAssert } from '../util/assert';\nimport { ObjectMap } from '../util/obj_map';\n\nimport { PersistencePromise } from './persistence_promise';\nimport { PersistenceTransaction } from './persistence_transaction';\n\n/**\n * An in-memory buffer of entries to be written to a RemoteDocumentCache.\n * It can be used to batch up a set of changes to be written to the cache, but\n * additionally supports reading entries back with the `getEntry()` method,\n * falling back to the underlying RemoteDocumentCache if no entry is\n * buffered.\n *\n * Entries added to the cache *must* be read first. This is to facilitate\n * calculating the size delta of the pending changes.\n *\n * PORTING NOTE: This class was implemented then removed from other platforms.\n * If byte-counting ends up being needed on the other platforms, consider\n * porting this class as part of that implementation work.\n */\nexport abstract class RemoteDocumentChangeBuffer {\n  // A mapping of document key to the new cache entry that should be written.\n  protected changes: ObjectMap<DocumentKey, MutableDocument> = new ObjectMap(\n    key => key.toString(),\n    (l, r) => l.isEqual(r)\n  );\n\n  private changesApplied = false;\n\n  protected abstract getFromCache(\n    transaction: PersistenceTransaction,\n    documentKey: DocumentKey\n  ): PersistencePromise<MutableDocument>;\n\n  protected abstract getAllFromCache(\n    transaction: PersistenceTransaction,\n    documentKeys: DocumentKeySet\n  ): PersistencePromise<MutableDocumentMap>;\n\n  protected abstract applyChanges(\n    transaction: PersistenceTransaction\n  ): PersistencePromise<void>;\n\n  /**\n   * Buffers a `RemoteDocumentCache.addEntry()` call.\n   *\n   * You can only modify documents that have already been retrieved via\n   * `getEntry()/getEntries()` (enforced via IndexedDbs `apply()`).\n   */\n  addEntry(document: MutableDocument): void {\n    this.assertNotApplied();\n    this.changes.set(document.key, document);\n  }\n\n  /**\n   * Buffers a `RemoteDocumentCache.removeEntry()` call.\n   *\n   * You can only remove documents that have already been retrieved via\n   * `getEntry()/getEntries()` (enforced via IndexedDbs `apply()`).\n   */\n  removeEntry(key: DocumentKey, readTime: SnapshotVersion): void {\n    this.assertNotApplied();\n    this.changes.set(\n      key,\n      MutableDocument.newInvalidDocument(key).setReadTime(readTime)\n    );\n  }\n\n  /**\n   * Looks up an entry in the cache. The buffered changes will first be checked,\n   * and if no buffered change applies, this will forward to\n   * `RemoteDocumentCache.getEntry()`.\n   *\n   * @param transaction - The transaction in which to perform any persistence\n   *     operations.\n   * @param documentKey - The key of the entry to look up.\n   * @returns The cached document or an invalid document if we have nothing\n   * cached.\n   */\n  getEntry(\n    transaction: PersistenceTransaction,\n    documentKey: DocumentKey\n  ): PersistencePromise<MutableDocument> {\n    this.assertNotApplied();\n    const bufferedEntry = this.changes.get(documentKey);\n    if (bufferedEntry !== undefined) {\n      return PersistencePromise.resolve(bufferedEntry);\n    } else {\n      return this.getFromCache(transaction, documentKey);\n    }\n  }\n\n  /**\n   * Looks up several entries in the cache, forwarding to\n   * `RemoteDocumentCache.getEntry()`.\n   *\n   * @param transaction - The transaction in which to perform any persistence\n   *     operations.\n   * @param documentKeys - The keys of the entries to look up.\n   * @returns A map of cached documents, indexed by key. If an entry cannot be\n   *     found, the corresponding key will be mapped to an invalid document.\n   */\n  getEntries(\n    transaction: PersistenceTransaction,\n    documentKeys: DocumentKeySet\n  ): PersistencePromise<MutableDocumentMap> {\n    return this.getAllFromCache(transaction, documentKeys);\n  }\n\n  /**\n   * Applies buffered changes to the underlying RemoteDocumentCache, using\n   * the provided transaction.\n   */\n  apply(transaction: PersistenceTransaction): PersistencePromise<void> {\n    this.assertNotApplied();\n    this.changesApplied = true;\n    return this.applyChanges(transaction);\n  }\n\n  /** Helper to assert this.changes is not null  */\n  protected assertNotApplied(): void {\n    debugAssert(!this.changesApplied, 'Changes have already been applied.');\n  }\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Document } from '../model/document';\nimport { FieldMask } from '../model/field_mask';\n\n/**\n * Represents a local view (overlay) of a document, and the fields that are\n * locally mutated.\n */\nexport class OverlayedDocument {\n  constructor(\n    readonly overlayedDocument: Document,\n\n    /**\n     * The fields that are locally mutated by patch mutations.\n     *\n     * If the overlayed\tdocument is from set or delete mutations, this is `null`.\n     * If there is no overlay (mutation) for the document, this is an empty `FieldMask`.\n     */\n    readonly mutatedFields: FieldMask | null\n  ) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  asCollectionQueryAtPath,\n  isCollectionGroupQuery,\n  isDocumentQuery,\n  Query,\n  queryMatches\n} from '../core/query';\nimport { Timestamp } from '../lite-api/timestamp';\nimport {\n  DocumentKeySet,\n  OverlayMap,\n  DocumentMap,\n  MutableDocumentMap,\n  newDocumentKeyMap,\n  newMutationMap,\n  newOverlayMap,\n  documentMap,\n  mutableDocumentMap,\n  documentKeySet,\n  DocumentKeyMap,\n  convertOverlayedDocumentMapToDocumentMap,\n  OverlayedDocumentMap,\n  newOverlayedDocumentMap\n} from '../model/collections';\nimport { Document, MutableDocument } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { IndexOffset, INITIAL_LARGEST_BATCH_ID } from '../model/field_index';\nimport { FieldMask } from '../model/field_mask';\nimport {\n  calculateOverlayMutation,\n  mutationApplyToLocalView,\n  PatchMutation\n} from '../model/mutation';\nimport { Overlay } from '../model/overlay';\nimport { ResourcePath } from '../model/path';\nimport { debugAssert } from '../util/assert';\nimport { SortedMap } from '../util/sorted_map';\n\nimport { DocumentOverlayCache } from './document_overlay_cache';\nimport { IndexManager } from './index_manager';\nimport { LocalWriteResult } from './local_store_impl';\nimport { MutationQueue } from './mutation_queue';\nimport { OverlayedDocument } from './overlayed_document';\nimport { PersistencePromise } from './persistence_promise';\nimport { PersistenceTransaction } from './persistence_transaction';\nimport { QueryContext } from './query_context';\nimport { RemoteDocumentCache } from './remote_document_cache';\n\n/**\n * A readonly view of the local state of all documents we're tracking (i.e. we\n * have a cached version in remoteDocumentCache or local mutations for the\n * document). The view is computed by applying the mutations in the\n * MutationQueue to the RemoteDocumentCache.\n */\nexport class LocalDocumentsView {\n  constructor(\n    readonly remoteDocumentCache: RemoteDocumentCache,\n    readonly mutationQueue: MutationQueue,\n    readonly documentOverlayCache: DocumentOverlayCache,\n    readonly indexManager: IndexManager\n  ) {}\n\n  /**\n   * Get the local view of the document identified by `key`.\n   *\n   * @returns Local view of the document or null if we don't have any cached\n   * state for it.\n   */\n  getDocument(\n    transaction: PersistenceTransaction,\n    key: DocumentKey\n  ): PersistencePromise<Document> {\n    let overlay: Overlay | null = null;\n    return this.documentOverlayCache\n      .getOverlay(transaction, key)\n      .next(value => {\n        overlay = value;\n        return this.remoteDocumentCache.getEntry(transaction, key);\n      })\n      .next(document => {\n        if (overlay !== null) {\n          mutationApplyToLocalView(\n            overlay.mutation,\n            document,\n            FieldMask.empty(),\n            Timestamp.now()\n          );\n        }\n        return document as Document;\n      });\n  }\n\n  /**\n   * Gets the local view of the documents identified by `keys`.\n   *\n   * If we don't have cached state for a document in `keys`, a NoDocument will\n   * be stored for that key in the resulting set.\n   */\n  getDocuments(\n    transaction: PersistenceTransaction,\n    keys: DocumentKeySet\n  ): PersistencePromise<DocumentMap> {\n    return this.remoteDocumentCache\n      .getEntries(transaction, keys)\n      .next(docs =>\n        this.getLocalViewOfDocuments(transaction, docs, documentKeySet()).next(\n          () => docs as DocumentMap\n        )\n      );\n  }\n\n  /**\n   * Similar to `getDocuments`, but creates the local view from the given\n   * `baseDocs` without retrieving documents from the local store.\n   *\n   * @param transaction - The transaction this operation is scoped to.\n   * @param docs - The documents to apply local mutations to get the local views.\n   * @param existenceStateChanged - The set of document keys whose existence state\n   *   is changed. This is useful to determine if some documents overlay needs\n   *   to be recalculated.\n   */\n  getLocalViewOfDocuments(\n    transaction: PersistenceTransaction,\n    docs: MutableDocumentMap,\n    existenceStateChanged: DocumentKeySet = documentKeySet()\n  ): PersistencePromise<DocumentMap> {\n    const overlays = newOverlayMap();\n    return this.populateOverlays(transaction, overlays, docs).next(() => {\n      return this.computeViews(\n        transaction,\n        docs,\n        overlays,\n        existenceStateChanged\n      ).next(computeViewsResult => {\n        let result = documentMap();\n        computeViewsResult.forEach((documentKey, overlayedDocument) => {\n          result = result.insert(\n            documentKey,\n            overlayedDocument.overlayedDocument\n          );\n        });\n        return result;\n      });\n    });\n  }\n\n  /**\n   * Gets the overlayed documents for the given document map, which will include\n   * the local view of those documents and a `FieldMask` indicating which fields\n   * are mutated locally, `null` if overlay is a Set or Delete mutation.\n   */\n  getOverlayedDocuments(\n    transaction: PersistenceTransaction,\n    docs: MutableDocumentMap\n  ): PersistencePromise<OverlayedDocumentMap> {\n    const overlays = newOverlayMap();\n    return this.populateOverlays(transaction, overlays, docs).next(() =>\n      this.computeViews(transaction, docs, overlays, documentKeySet())\n    );\n  }\n\n  /**\n   * Fetches the overlays for {@code docs} and adds them to provided overlay map\n   * if the map does not already contain an entry for the given document key.\n   */\n  private populateOverlays(\n    transaction: PersistenceTransaction,\n    overlays: OverlayMap,\n    docs: MutableDocumentMap\n  ): PersistencePromise<void> {\n    const missingOverlays: DocumentKey[] = [];\n    docs.forEach(key => {\n      if (!overlays.has(key)) {\n        missingOverlays.push(key);\n      }\n    });\n    return this.documentOverlayCache\n      .getOverlays(transaction, missingOverlays)\n      .next(result => {\n        result.forEach((key, val) => {\n          overlays.set(key, val);\n        });\n      });\n  }\n\n  /**\n   * Computes the local view for the given documents.\n   *\n   * @param docs - The documents to compute views for. It also has the base\n   *   version of the documents.\n   * @param overlays - The overlays that need to be applied to the given base\n   *   version of the documents.\n   * @param existenceStateChanged - A set of documents whose existence states\n   *   might have changed. This is used to determine if we need to re-calculate\n   *   overlays from mutation queues.\n   * @return A map represents the local documents view.\n   */\n  computeViews(\n    transaction: PersistenceTransaction,\n    docs: MutableDocumentMap,\n    overlays: OverlayMap,\n    existenceStateChanged: DocumentKeySet\n  ): PersistencePromise<OverlayedDocumentMap> {\n    let recalculateDocuments = mutableDocumentMap();\n    const mutatedFields = newDocumentKeyMap<FieldMask | null>();\n    const results = newOverlayedDocumentMap();\n    docs.forEach((_, doc) => {\n      const overlay = overlays.get(doc.key);\n      // Recalculate an overlay if the document's existence state changed due to\n      // a remote event *and* the overlay is a PatchMutation. This is because\n      // document existence state can change if some patch mutation's\n      // preconditions are met.\n      // NOTE: we recalculate when `overlay` is undefined as well, because there\n      // might be a patch mutation whose precondition does not match before the\n      // change (hence overlay is undefined), but would now match.\n      if (\n        existenceStateChanged.has(doc.key) &&\n        (overlay === undefined || overlay.mutation instanceof PatchMutation)\n      ) {\n        recalculateDocuments = recalculateDocuments.insert(doc.key, doc);\n      } else if (overlay !== undefined) {\n        mutatedFields.set(doc.key, overlay.mutation.getFieldMask());\n        mutationApplyToLocalView(\n          overlay.mutation,\n          doc,\n          overlay.mutation.getFieldMask(),\n          Timestamp.now()\n        );\n      } else {\n        // no overlay exists\n        // Using EMPTY to indicate there is no overlay for the document.\n        mutatedFields.set(doc.key, FieldMask.empty());\n      }\n    });\n\n    return this.recalculateAndSaveOverlays(\n      transaction,\n      recalculateDocuments\n    ).next(recalculatedFields => {\n      recalculatedFields.forEach((documentKey, mask) =>\n        mutatedFields.set(documentKey, mask)\n      );\n      docs.forEach((documentKey, document) =>\n        results.set(\n          documentKey,\n          new OverlayedDocument(\n            document,\n            mutatedFields.get(documentKey) ?? null\n          )\n        )\n      );\n      return results;\n    });\n  }\n\n  private recalculateAndSaveOverlays(\n    transaction: PersistenceTransaction,\n    docs: MutableDocumentMap\n  ): PersistencePromise<DocumentKeyMap<FieldMask | null>> {\n    const masks = newDocumentKeyMap<FieldMask | null>();\n    // A reverse lookup map from batch id to the documents within that batch.\n    let documentsByBatchId = new SortedMap<number, DocumentKeySet>(\n      (key1: number, key2: number) => key1 - key2\n    );\n    let processed = documentKeySet();\n    return this.mutationQueue\n      .getAllMutationBatchesAffectingDocumentKeys(transaction, docs)\n      .next(batches => {\n        for (const batch of batches) {\n          batch.keys().forEach(key => {\n            const baseDoc = docs.get(key);\n            if (baseDoc === null) {\n              return;\n            }\n            let mask: FieldMask | null = masks.get(key) || FieldMask.empty();\n            mask = batch.applyToLocalView(baseDoc, mask);\n            masks.set(key, mask);\n            const newSet = (\n              documentsByBatchId.get(batch.batchId) || documentKeySet()\n            ).add(key);\n            documentsByBatchId = documentsByBatchId.insert(\n              batch.batchId,\n              newSet\n            );\n          });\n        }\n      })\n      .next(() => {\n        const promises: Array<PersistencePromise<void>> = [];\n        // Iterate in descending order of batch IDs, and skip documents that are\n        // already saved.\n        const iter = documentsByBatchId.getReverseIterator();\n        while (iter.hasNext()) {\n          const entry = iter.getNext();\n          const batchId = entry.key;\n          const keys = entry.value;\n          const overlays = newMutationMap();\n          keys.forEach(key => {\n            if (!processed.has(key)) {\n              const overlayMutation = calculateOverlayMutation(\n                docs.get(key)!,\n                masks.get(key)!\n              );\n              if (overlayMutation !== null) {\n                overlays.set(key, overlayMutation);\n              }\n              processed = processed.add(key);\n            }\n          });\n          promises.push(\n            this.documentOverlayCache.saveOverlays(\n              transaction,\n              batchId,\n              overlays\n            )\n          );\n        }\n        return PersistencePromise.waitFor(promises);\n      })\n      .next(() => masks);\n  }\n\n  /**\n   * Recalculates overlays by reading the documents from remote document cache\n   * first, and saves them after they are calculated.\n   */\n  recalculateAndSaveOverlaysForDocumentKeys(\n    transaction: PersistenceTransaction,\n    documentKeys: DocumentKeySet\n  ): PersistencePromise<DocumentKeyMap<FieldMask | null>> {\n    return this.remoteDocumentCache\n      .getEntries(transaction, documentKeys)\n      .next(docs => this.recalculateAndSaveOverlays(transaction, docs));\n  }\n\n  /**\n   * Performs a query against the local view of all documents.\n   *\n   * @param transaction - The persistence transaction.\n   * @param query - The query to match documents against.\n   * @param offset - Read time and key to start scanning by (exclusive).\n   * @param context - A optional tracker to keep a record of important details\n   *   during database local query execution.\n   */\n  getDocumentsMatchingQuery(\n    transaction: PersistenceTransaction,\n    query: Query,\n    offset: IndexOffset,\n    context?: QueryContext\n  ): PersistencePromise<DocumentMap> {\n    if (isDocumentQuery(query)) {\n      return this.getDocumentsMatchingDocumentQuery(transaction, query.path);\n    } else if (isCollectionGroupQuery(query)) {\n      return this.getDocumentsMatchingCollectionGroupQuery(\n        transaction,\n        query,\n        offset,\n        context\n      );\n    } else {\n      return this.getDocumentsMatchingCollectionQuery(\n        transaction,\n        query,\n        offset,\n        context\n      );\n    }\n  }\n\n  /**\n   * Given a collection group, returns the next documents that follow the provided offset, along\n   * with an updated batch ID.\n   *\n   * <p>The documents returned by this method are ordered by remote version from the provided\n   * offset. If there are no more remote documents after the provided offset, documents with\n   * mutations in order of batch id from the offset are returned. Since all documents in a batch are\n   * returned together, the total number of documents returned can exceed {@code count}.\n   *\n   * @param transaction\n   * @param collectionGroup The collection group for the documents.\n   * @param offset The offset to index into.\n   * @param count The number of documents to return\n   * @return A LocalWriteResult with the documents that follow the provided offset and the last processed batch id.\n   */\n  getNextDocuments(\n    transaction: PersistenceTransaction,\n    collectionGroup: string,\n    offset: IndexOffset,\n    count: number\n  ): PersistencePromise<LocalWriteResult> {\n    return this.remoteDocumentCache\n      .getAllFromCollectionGroup(transaction, collectionGroup, offset, count)\n      .next((originalDocs: MutableDocumentMap) => {\n        const overlaysPromise: PersistencePromise<OverlayMap> =\n          count - originalDocs.size > 0\n            ? this.documentOverlayCache.getOverlaysForCollectionGroup(\n                transaction,\n                collectionGroup,\n                offset.largestBatchId,\n                count - originalDocs.size\n              )\n            : PersistencePromise.resolve(newOverlayMap());\n        // The callsite will use the largest batch ID together with the latest read time to create\n        // a new index offset. Since we only process batch IDs if all remote documents have been read,\n        // no overlay will increase the overall read time. This is why we only need to special case\n        // the batch id.\n        let largestBatchId = INITIAL_LARGEST_BATCH_ID;\n        let modifiedDocs = originalDocs;\n        return overlaysPromise.next(overlays => {\n          return PersistencePromise.forEach(\n            overlays,\n            (key: DocumentKey, overlay: Overlay) => {\n              if (largestBatchId < overlay.largestBatchId) {\n                largestBatchId = overlay.largestBatchId;\n              }\n              if (originalDocs.get(key)) {\n                return PersistencePromise.resolve();\n              }\n              return this.remoteDocumentCache\n                .getEntry(transaction, key)\n                .next(doc => {\n                  modifiedDocs = modifiedDocs.insert(key, doc);\n                });\n            }\n          )\n            .next(() =>\n              this.populateOverlays(transaction, overlays, originalDocs)\n            )\n            .next(() =>\n              this.computeViews(\n                transaction,\n                modifiedDocs,\n                overlays,\n                documentKeySet()\n              )\n            )\n            .next(localDocs => ({\n              batchId: largestBatchId,\n              changes: convertOverlayedDocumentMapToDocumentMap(localDocs)\n            }));\n        });\n      });\n  }\n\n  private getDocumentsMatchingDocumentQuery(\n    transaction: PersistenceTransaction,\n    docPath: ResourcePath\n  ): PersistencePromise<DocumentMap> {\n    // Just do a simple document lookup.\n    return this.getDocument(transaction, new DocumentKey(docPath)).next(\n      document => {\n        let result = documentMap();\n        if (document.isFoundDocument()) {\n          result = result.insert(document.key, document);\n        }\n        return result;\n      }\n    );\n  }\n\n  private getDocumentsMatchingCollectionGroupQuery(\n    transaction: PersistenceTransaction,\n    query: Query,\n    offset: IndexOffset,\n    context?: QueryContext\n  ): PersistencePromise<DocumentMap> {\n    debugAssert(\n      query.path.isEmpty(),\n      'Currently we only support collection group queries at the root.'\n    );\n    const collectionId = query.collectionGroup!;\n    let results = documentMap();\n    return this.indexManager\n      .getCollectionParents(transaction, collectionId)\n      .next(parents => {\n        // Perform a collection query against each parent that contains the\n        // collectionId and aggregate the results.\n        return PersistencePromise.forEach(parents, (parent: ResourcePath) => {\n          const collectionQuery = asCollectionQueryAtPath(\n            query,\n            parent.child(collectionId)\n          );\n          return this.getDocumentsMatchingCollectionQuery(\n            transaction,\n            collectionQuery,\n            offset,\n            context\n          ).next(r => {\n            r.forEach((key, doc) => {\n              results = results.insert(key, doc);\n            });\n          });\n        }).next(() => results);\n      });\n  }\n\n  private getDocumentsMatchingCollectionQuery(\n    transaction: PersistenceTransaction,\n    query: Query,\n    offset: IndexOffset,\n    context?: QueryContext\n  ): PersistencePromise<DocumentMap> {\n    // Query the remote documents and overlay mutations.\n    let overlays: OverlayMap;\n    return this.documentOverlayCache\n      .getOverlaysForCollection(transaction, query.path, offset.largestBatchId)\n      .next(result => {\n        overlays = result;\n        return this.remoteDocumentCache.getDocumentsMatchingQuery(\n          transaction,\n          query,\n          offset,\n          overlays,\n          context\n        );\n      })\n      .next(remoteDocuments => {\n        // As documents might match the query because of their overlay we need to\n        // include documents for all overlays in the initial document set.\n        overlays.forEach((_, overlay) => {\n          const key = overlay.getKey();\n          if (remoteDocuments.get(key) === null) {\n            remoteDocuments = remoteDocuments.insert(\n              key,\n              MutableDocument.newInvalidDocument(key)\n            );\n          }\n        });\n\n        // Apply the overlays and match against the query.\n        let results = documentMap();\n        remoteDocuments.forEach((key, document) => {\n          const overlay = overlays.get(key);\n          if (overlay !== undefined) {\n            mutationApplyToLocalView(\n              overlay.mutation,\n              document,\n              FieldMask.empty(),\n              Timestamp.now()\n            );\n          }\n          // Finally, insert the documents that still match the query\n          if (queryMatches(query, document)) {\n            results = results.insert(key, document);\n          }\n        });\n        return results;\n      });\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BundleMetadata, NamedQuery } from '../core/bundle';\nimport {\n  NamedQuery as ProtoNamedQuery,\n  BundleMetadata as ProtoBundleMetadata\n} from '../protos/firestore_bundle_proto';\n\nimport { BundleCache } from './bundle_cache';\nimport {\n  fromBundleMetadata,\n  fromProtoNamedQuery,\n  LocalSerializer\n} from './local_serializer';\nimport { PersistencePromise } from './persistence_promise';\nimport { PersistenceTransaction } from './persistence_transaction';\n\nexport class MemoryBundleCache implements BundleCache {\n  private bundles = new Map<string, BundleMetadata>();\n  private namedQueries = new Map<string, NamedQuery>();\n\n  constructor(private serializer: LocalSerializer) {}\n\n  getBundleMetadata(\n    transaction: PersistenceTransaction,\n    bundleId: string\n  ): PersistencePromise<BundleMetadata | undefined> {\n    return PersistencePromise.resolve(this.bundles.get(bundleId));\n  }\n\n  saveBundleMetadata(\n    transaction: PersistenceTransaction,\n    bundleMetadata: ProtoBundleMetadata\n  ): PersistencePromise<void> {\n    this.bundles.set(bundleMetadata.id!, fromBundleMetadata(bundleMetadata));\n    return PersistencePromise.resolve();\n  }\n\n  getNamedQuery(\n    transaction: PersistenceTransaction,\n    queryName: string\n  ): PersistencePromise<NamedQuery | undefined> {\n    return PersistencePromise.resolve(this.namedQueries.get(queryName));\n  }\n\n  saveNamedQuery(\n    transaction: PersistenceTransaction,\n    query: ProtoNamedQuery\n  ): PersistencePromise<void> {\n    this.namedQueries.set(query.name!, fromProtoNamedQuery(query));\n    return PersistencePromise.resolve();\n  }\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  documentKeySet,\n  DocumentKeySet,\n  MutationMap,\n  OverlayMap,\n  newOverlayMap\n} from '../model/collections';\nimport { DocumentKey } from '../model/document_key';\nimport { Mutation } from '../model/mutation';\nimport { Overlay } from '../model/overlay';\nimport { ResourcePath } from '../model/path';\nimport { SortedMap } from '../util/sorted_map';\n\nimport { DocumentOverlayCache } from './document_overlay_cache';\nimport { PersistencePromise } from './persistence_promise';\nimport { PersistenceTransaction } from './persistence_transaction';\n\n/**\n * An in-memory implementation of DocumentOverlayCache.\n */\nexport class MemoryDocumentOverlayCache implements DocumentOverlayCache {\n  // A map sorted by DocumentKey, whose value is a pair of the largest batch id\n  // for the overlay and the overlay itself.\n  private overlays = new SortedMap<DocumentKey, Overlay>(\n    DocumentKey.comparator\n  );\n  private overlayByBatchId = new Map<number, DocumentKeySet>();\n\n  getOverlay(\n    transaction: PersistenceTransaction,\n    key: DocumentKey\n  ): PersistencePromise<Overlay | null> {\n    return PersistencePromise.resolve(this.overlays.get(key));\n  }\n\n  getOverlays(\n    transaction: PersistenceTransaction,\n    keys: DocumentKey[]\n  ): PersistencePromise<OverlayMap> {\n    const result = newOverlayMap();\n    return PersistencePromise.forEach(keys, (key: DocumentKey) => {\n      return this.getOverlay(transaction, key).next(overlay => {\n        if (overlay !== null) {\n          result.set(key, overlay);\n        }\n      });\n    }).next(() => result);\n  }\n\n  saveOverlays(\n    transaction: PersistenceTransaction,\n    largestBatchId: number,\n    overlays: MutationMap\n  ): PersistencePromise<void> {\n    overlays.forEach((_, mutation) => {\n      this.saveOverlay(transaction, largestBatchId, mutation);\n    });\n    return PersistencePromise.resolve();\n  }\n\n  removeOverlaysForBatchId(\n    transaction: PersistenceTransaction,\n    documentKeys: DocumentKeySet,\n    batchId: number\n  ): PersistencePromise<void> {\n    const keys = this.overlayByBatchId.get(batchId);\n    if (keys !== undefined) {\n      keys.forEach(key => (this.overlays = this.overlays.remove(key)));\n      this.overlayByBatchId.delete(batchId);\n    }\n    return PersistencePromise.resolve();\n  }\n\n  getOverlaysForCollection(\n    transaction: PersistenceTransaction,\n    collection: ResourcePath,\n    sinceBatchId: number\n  ): PersistencePromise<OverlayMap> {\n    const result = newOverlayMap();\n\n    const immediateChildrenPathLength = collection.length + 1;\n    const prefix = new DocumentKey(collection.child(''));\n    const iter = this.overlays.getIteratorFrom(prefix);\n    while (iter.hasNext()) {\n      const entry = iter.getNext();\n      const overlay = entry.value;\n      const key = overlay.getKey();\n      if (!collection.isPrefixOf(key.path)) {\n        break;\n      }\n      // Documents from sub-collections\n      if (key.path.length !== immediateChildrenPathLength) {\n        continue;\n      }\n      if (overlay.largestBatchId > sinceBatchId) {\n        result.set(overlay.getKey(), overlay);\n      }\n    }\n\n    return PersistencePromise.resolve(result);\n  }\n\n  getOverlaysForCollectionGroup(\n    transaction: PersistenceTransaction,\n    collectionGroup: string,\n    sinceBatchId: number,\n    count: number\n  ): PersistencePromise<OverlayMap> {\n    let batchIdToOverlays = new SortedMap<number, OverlayMap>(\n      (key1: number, key2: number) => key1 - key2\n    );\n\n    const iter = this.overlays.getIterator();\n    while (iter.hasNext()) {\n      const entry = iter.getNext();\n      const overlay = entry.value;\n      const key = overlay.getKey();\n      if (key.getCollectionGroup() !== collectionGroup) {\n        continue;\n      }\n      if (overlay.largestBatchId > sinceBatchId) {\n        let overlaysForBatchId = batchIdToOverlays.get(overlay.largestBatchId);\n        if (overlaysForBatchId === null) {\n          overlaysForBatchId = newOverlayMap();\n          batchIdToOverlays = batchIdToOverlays.insert(\n            overlay.largestBatchId,\n            overlaysForBatchId\n          );\n        }\n        overlaysForBatchId.set(overlay.getKey(), overlay);\n      }\n    }\n\n    const result = newOverlayMap();\n    const batchIter = batchIdToOverlays.getIterator();\n    while (batchIter.hasNext()) {\n      const entry = batchIter.getNext();\n      const overlays = entry.value;\n      overlays.forEach((key, overlay) => result.set(key, overlay));\n      if (result.size() >= count) {\n        break;\n      }\n    }\n    return PersistencePromise.resolve(result);\n  }\n\n  private saveOverlay(\n    transaction: PersistenceTransaction,\n    largestBatchId: number,\n    mutation: Mutation\n  ): void {\n    // Remove the association of the overlay to its batch id.\n    const existing = this.overlays.get(mutation.key);\n    if (existing !== null) {\n      const newSet = this.overlayByBatchId\n        .get(existing.largestBatchId)!\n        .delete(mutation.key);\n      this.overlayByBatchId.set(existing.largestBatchId, newSet);\n    }\n\n    this.overlays = this.overlays.insert(\n      mutation.key,\n      new Overlay(largestBatchId, mutation)\n    );\n\n    // Create the association of this overlay to the given largestBatchId.\n    let batch = this.overlayByBatchId.get(largestBatchId);\n    if (batch === undefined) {\n      batch = documentKeySet();\n      this.overlayByBatchId.set(largestBatchId, batch);\n    }\n    this.overlayByBatchId.set(largestBatchId, batch.add(mutation.key));\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BatchId, TargetId } from '../core/types';\nimport { documentKeySet, DocumentKeySet } from '../model/collections';\nimport { DocumentKey } from '../model/document_key';\nimport { ResourcePath } from '../model/path';\nimport { primitiveComparator } from '../util/misc';\nimport { SortedSet } from '../util/sorted_set';\n\n/**\n * A collection of references to a document from some kind of numbered entity\n * (either a target ID or batch ID). As references are added to or removed from\n * the set corresponding events are emitted to a registered garbage collector.\n *\n * Each reference is represented by a DocumentReference object. Each of them\n * contains enough information to uniquely identify the reference. They are all\n * stored primarily in a set sorted by key. A document is considered garbage if\n * there's no references in that set (this can be efficiently checked thanks to\n * sorting by key).\n *\n * ReferenceSet also keeps a secondary set that contains references sorted by\n * IDs. This one is used to efficiently implement removal of all references by\n * some target ID.\n */\nexport class ReferenceSet {\n  // A set of outstanding references to a document sorted by key.\n  private refsByKey = new SortedSet(DocReference.compareByKey);\n\n  // A set of outstanding references to a document sorted by target id.\n  private refsByTarget = new SortedSet(DocReference.compareByTargetId);\n\n  /** Returns true if the reference set contains no references. */\n  isEmpty(): boolean {\n    return this.refsByKey.isEmpty();\n  }\n\n  /** Adds a reference to the given document key for the given ID. */\n  addReference(key: DocumentKey, id: TargetId | BatchId): void {\n    const ref = new DocReference(key, id);\n    this.refsByKey = this.refsByKey.add(ref);\n    this.refsByTarget = this.refsByTarget.add(ref);\n  }\n\n  /** Add references to the given document keys for the given ID. */\n  addReferences(keys: DocumentKeySet, id: TargetId | BatchId): void {\n    keys.forEach(key => this.addReference(key, id));\n  }\n\n  /**\n   * Removes a reference to the given document key for the given\n   * ID.\n   */\n  removeReference(key: DocumentKey, id: TargetId | BatchId): void {\n    this.removeRef(new DocReference(key, id));\n  }\n\n  removeReferences(keys: DocumentKeySet, id: TargetId | BatchId): void {\n    keys.forEach(key => this.removeReference(key, id));\n  }\n\n  /**\n   * Clears all references with a given ID. Calls removeRef() for each key\n   * removed.\n   */\n  removeReferencesForId(id: TargetId | BatchId): DocumentKey[] {\n    const emptyKey = new DocumentKey(new ResourcePath([]));\n    const startRef = new DocReference(emptyKey, id);\n    const endRef = new DocReference(emptyKey, id + 1);\n    const keys: DocumentKey[] = [];\n    this.refsByTarget.forEachInRange([startRef, endRef], ref => {\n      this.removeRef(ref);\n      keys.push(ref.key);\n    });\n    return keys;\n  }\n\n  removeAllReferences(): void {\n    this.refsByKey.forEach(ref => this.removeRef(ref));\n  }\n\n  private removeRef(ref: DocReference): void {\n    this.refsByKey = this.refsByKey.delete(ref);\n    this.refsByTarget = this.refsByTarget.delete(ref);\n  }\n\n  referencesForId(id: TargetId | BatchId): DocumentKeySet {\n    const emptyKey = new DocumentKey(new ResourcePath([]));\n    const startRef = new DocReference(emptyKey, id);\n    const endRef = new DocReference(emptyKey, id + 1);\n    let keys = documentKeySet();\n    this.refsByTarget.forEachInRange([startRef, endRef], ref => {\n      keys = keys.add(ref.key);\n    });\n    return keys;\n  }\n\n  containsKey(key: DocumentKey): boolean {\n    const ref = new DocReference(key, 0);\n    const firstRef = this.refsByKey.firstAfterOrEqual(ref);\n    return firstRef !== null && key.isEqual(firstRef.key);\n  }\n}\n\nexport class DocReference {\n  constructor(\n    public key: DocumentKey,\n    public targetOrBatchId: TargetId | BatchId\n  ) {}\n\n  /** Compare by key then by ID */\n  static compareByKey(left: DocReference, right: DocReference): number {\n    return (\n      DocumentKey.comparator(left.key, right.key) ||\n      primitiveComparator(left.targetOrBatchId, right.targetOrBatchId)\n    );\n  }\n\n  /** Compare by ID then by key */\n  static compareByTargetId(left: DocReference, right: DocReference): number {\n    return (\n      primitiveComparator(left.targetOrBatchId, right.targetOrBatchId) ||\n      DocumentKey.comparator(left.key, right.key)\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isCollectionGroupQuery, Query } from '../core/query';\nimport { BatchId } from '../core/types';\nimport { Timestamp } from '../lite-api/timestamp';\nimport { DocumentKey } from '../model/document_key';\nimport { Mutation } from '../model/mutation';\nimport { MutationBatch } from '../model/mutation_batch';\nimport { debugAssert, hardAssert } from '../util/assert';\nimport { primitiveComparator } from '../util/misc';\nimport { SortedMap } from '../util/sorted_map';\nimport { SortedSet } from '../util/sorted_set';\nimport { BATCHID_UNKNOWN } from '../util/types';\n\nimport { IndexManager } from './index_manager';\nimport { MutationQueue } from './mutation_queue';\nimport { ReferenceDelegate } from './persistence';\nimport { PersistencePromise } from './persistence_promise';\nimport { PersistenceTransaction } from './persistence_transaction';\nimport { DocReference } from './reference_set';\n\nexport class MemoryMutationQueue implements MutationQueue {\n  /**\n   * The set of all mutations that have been sent but not yet been applied to\n   * the backend.\n   */\n  private mutationQueue: MutationBatch[] = [];\n\n  /** Next value to use when assigning sequential IDs to each mutation batch. */\n  private nextBatchId: BatchId = 1;\n\n  /** An ordered mapping between documents and the mutations batch IDs. */\n  private batchesByDocumentKey = new SortedSet(DocReference.compareByKey);\n\n  constructor(\n    private readonly indexManager: IndexManager,\n    private readonly referenceDelegate: ReferenceDelegate\n  ) {}\n\n  checkEmpty(transaction: PersistenceTransaction): PersistencePromise<boolean> {\n    return PersistencePromise.resolve(this.mutationQueue.length === 0);\n  }\n\n  addMutationBatch(\n    transaction: PersistenceTransaction,\n    localWriteTime: Timestamp,\n    baseMutations: Mutation[],\n    mutations: Mutation[]\n  ): PersistencePromise<MutationBatch> {\n    debugAssert(mutations.length !== 0, 'Mutation batches should not be empty');\n\n    const batchId = this.nextBatchId;\n    this.nextBatchId++;\n\n    if (this.mutationQueue.length > 0) {\n      const prior = this.mutationQueue[this.mutationQueue.length - 1];\n      debugAssert(\n        prior.batchId < batchId,\n        'Mutation batchIDs must be monotonically increasing order'\n      );\n    }\n\n    const batch = new MutationBatch(\n      batchId,\n      localWriteTime,\n      baseMutations,\n      mutations\n    );\n    this.mutationQueue.push(batch);\n\n    // Track references by document key and index collection parents.\n    for (const mutation of mutations) {\n      this.batchesByDocumentKey = this.batchesByDocumentKey.add(\n        new DocReference(mutation.key, batchId)\n      );\n\n      this.indexManager.addToCollectionParentIndex(\n        transaction,\n        mutation.key.path.popLast()\n      );\n    }\n\n    return PersistencePromise.resolve(batch);\n  }\n\n  lookupMutationBatch(\n    transaction: PersistenceTransaction,\n    batchId: BatchId\n  ): PersistencePromise<MutationBatch | null> {\n    return PersistencePromise.resolve(this.findMutationBatch(batchId));\n  }\n\n  getNextMutationBatchAfterBatchId(\n    transaction: PersistenceTransaction,\n    batchId: BatchId\n  ): PersistencePromise<MutationBatch | null> {\n    const nextBatchId = batchId + 1;\n\n    // The requested batchId may still be out of range so normalize it to the\n    // start of the queue.\n    const rawIndex = this.indexOfBatchId(nextBatchId);\n    const index = rawIndex < 0 ? 0 : rawIndex;\n    return PersistencePromise.resolve(\n      this.mutationQueue.length > index ? this.mutationQueue[index] : null\n    );\n  }\n\n  getHighestUnacknowledgedBatchId(): PersistencePromise<BatchId> {\n    return PersistencePromise.resolve(\n      this.mutationQueue.length === 0 ? BATCHID_UNKNOWN : this.nextBatchId - 1\n    );\n  }\n\n  getAllMutationBatches(\n    transaction: PersistenceTransaction\n  ): PersistencePromise<MutationBatch[]> {\n    return PersistencePromise.resolve(this.mutationQueue.slice());\n  }\n\n  getAllMutationBatchesAffectingDocumentKey(\n    transaction: PersistenceTransaction,\n    documentKey: DocumentKey\n  ): PersistencePromise<MutationBatch[]> {\n    const start = new DocReference(documentKey, 0);\n    const end = new DocReference(documentKey, Number.POSITIVE_INFINITY);\n    const result: MutationBatch[] = [];\n    this.batchesByDocumentKey.forEachInRange([start, end], ref => {\n      debugAssert(\n        documentKey.isEqual(ref.key),\n        \"Should only iterate over a single key's batches\"\n      );\n      const batch = this.findMutationBatch(ref.targetOrBatchId);\n      debugAssert(\n        batch !== null,\n        'Batches in the index must exist in the main table'\n      );\n      result.push(batch!);\n    });\n\n    return PersistencePromise.resolve(result);\n  }\n\n  getAllMutationBatchesAffectingDocumentKeys(\n    transaction: PersistenceTransaction,\n    documentKeys: SortedMap<DocumentKey, unknown>\n  ): PersistencePromise<MutationBatch[]> {\n    let uniqueBatchIDs = new SortedSet<number>(primitiveComparator);\n\n    documentKeys.forEach(documentKey => {\n      const start = new DocReference(documentKey, 0);\n      const end = new DocReference(documentKey, Number.POSITIVE_INFINITY);\n      this.batchesByDocumentKey.forEachInRange([start, end], ref => {\n        debugAssert(\n          documentKey.isEqual(ref.key),\n          \"For each key, should only iterate over a single key's batches\"\n        );\n\n        uniqueBatchIDs = uniqueBatchIDs.add(ref.targetOrBatchId);\n      });\n    });\n\n    return PersistencePromise.resolve(this.findMutationBatches(uniqueBatchIDs));\n  }\n\n  getAllMutationBatchesAffectingQuery(\n    transaction: PersistenceTransaction,\n    query: Query\n  ): PersistencePromise<MutationBatch[]> {\n    debugAssert(\n      !isCollectionGroupQuery(query),\n      'CollectionGroup queries should be handled in LocalDocumentsView'\n    );\n    // Use the query path as a prefix for testing if a document matches the\n    // query.\n    const prefix = query.path;\n    const immediateChildrenPathLength = prefix.length + 1;\n\n    // Construct a document reference for actually scanning the index. Unlike\n    // the prefix the document key in this reference must have an even number of\n    // segments. The empty segment can be used a suffix of the query path\n    // because it precedes all other segments in an ordered traversal.\n    let startPath = prefix;\n    if (!DocumentKey.isDocumentKey(startPath)) {\n      startPath = startPath.child('');\n    }\n\n    const start = new DocReference(new DocumentKey(startPath), 0);\n\n    // Find unique batchIDs referenced by all documents potentially matching the\n    // query.\n    let uniqueBatchIDs = new SortedSet<number>(primitiveComparator);\n\n    this.batchesByDocumentKey.forEachWhile(ref => {\n      const rowKeyPath = ref.key.path;\n      if (!prefix.isPrefixOf(rowKeyPath)) {\n        return false;\n      } else {\n        // Rows with document keys more than one segment longer than the query\n        // path can't be matches. For example, a query on 'rooms' can't match\n        // the document /rooms/abc/messages/xyx.\n        // TODO(mcg): we'll need a different scanner when we implement\n        // ancestor queries.\n        if (rowKeyPath.length === immediateChildrenPathLength) {\n          uniqueBatchIDs = uniqueBatchIDs.add(ref.targetOrBatchId);\n        }\n        return true;\n      }\n    }, start);\n\n    return PersistencePromise.resolve(this.findMutationBatches(uniqueBatchIDs));\n  }\n\n  private findMutationBatches(batchIDs: SortedSet<number>): MutationBatch[] {\n    // Construct an array of matching batches, sorted by batchID to ensure that\n    // multiple mutations affecting the same document key are applied in order.\n    const result: MutationBatch[] = [];\n    batchIDs.forEach(batchId => {\n      const batch = this.findMutationBatch(batchId);\n      if (batch !== null) {\n        result.push(batch);\n      }\n    });\n    return result;\n  }\n\n  removeMutationBatch(\n    transaction: PersistenceTransaction,\n    batch: MutationBatch\n  ): PersistencePromise<void> {\n    // Find the position of the first batch for removal.\n    const batchIndex = this.indexOfExistingBatchId(batch.batchId, 'removed');\n    hardAssert(\n      batchIndex === 0,\n      'Can only remove the first entry of the mutation queue'\n    );\n    this.mutationQueue.shift();\n\n    let references = this.batchesByDocumentKey;\n    return PersistencePromise.forEach(batch.mutations, (mutation: Mutation) => {\n      const ref = new DocReference(mutation.key, batch.batchId);\n      references = references.delete(ref);\n      return this.referenceDelegate.markPotentiallyOrphaned(\n        transaction,\n        mutation.key\n      );\n    }).next(() => {\n      this.batchesByDocumentKey = references;\n    });\n  }\n\n  removeCachedMutationKeys(batchId: BatchId): void {\n    // No-op since the memory mutation queue does not maintain a separate cache.\n  }\n\n  containsKey(\n    txn: PersistenceTransaction,\n    key: DocumentKey\n  ): PersistencePromise<boolean> {\n    const ref = new DocReference(key, 0);\n    const firstRef = this.batchesByDocumentKey.firstAfterOrEqual(ref);\n    return PersistencePromise.resolve(key.isEqual(firstRef && firstRef.key));\n  }\n\n  performConsistencyCheck(\n    txn: PersistenceTransaction\n  ): PersistencePromise<void> {\n    if (this.mutationQueue.length === 0) {\n      debugAssert(\n        this.batchesByDocumentKey.isEmpty(),\n        'Document leak -- detected dangling mutation references when queue is empty.'\n      );\n    }\n    return PersistencePromise.resolve();\n  }\n\n  /**\n   * Finds the index of the given batchId in the mutation queue and asserts that\n   * the resulting index is within the bounds of the queue.\n   *\n   * @param batchId - The batchId to search for\n   * @param action - A description of what the caller is doing, phrased in passive\n   * form (e.g. \"acknowledged\" in a routine that acknowledges batches).\n   */\n  private indexOfExistingBatchId(batchId: BatchId, action: string): number {\n    const index = this.indexOfBatchId(batchId);\n    debugAssert(\n      index >= 0 && index < this.mutationQueue.length,\n      'Batches must exist to be ' + action\n    );\n    return index;\n  }\n\n  /**\n   * Finds the index of the given batchId in the mutation queue. This operation\n   * is O(1).\n   *\n   * @returns The computed index of the batch with the given batchId, based on\n   * the state of the queue. Note this index can be negative if the requested\n   * batchId has already been remvoed from the queue or past the end of the\n   * queue if the batchId is larger than the last added batch.\n   */\n  private indexOfBatchId(batchId: BatchId): number {\n    if (this.mutationQueue.length === 0) {\n      // As an index this is past the end of the queue\n      return 0;\n    }\n\n    // Examine the front of the queue to figure out the difference between the\n    // batchId and indexes in the array. Note that since the queue is ordered\n    // by batchId, if the first batch has a larger batchId then the requested\n    // batchId doesn't exist in the queue.\n    const firstBatchId = this.mutationQueue[0].batchId;\n    return batchId - firstBatchId;\n  }\n\n  /**\n   * A version of lookupMutationBatch that doesn't return a promise, this makes\n   * other functions that uses this code easier to read and more efficent.\n   */\n  private findMutationBatch(batchId: BatchId): MutationBatch | null {\n    const index = this.indexOfBatchId(batchId);\n    if (index < 0 || index >= this.mutationQueue.length) {\n      return null;\n    }\n\n    const batch = this.mutationQueue[index];\n    debugAssert(batch.batchId === batchId, 'If found batch must match');\n    return batch;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Query, queryMatches } from '../core/query';\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport {\n  DocumentKeySet,\n  MutableDocumentMap,\n  mutableDocumentMap,\n  OverlayMap\n} from '../model/collections';\nimport { Document, MutableDocument } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport {\n  IndexOffset,\n  indexOffsetComparator,\n  newIndexOffsetFromDocument\n} from '../model/field_index';\nimport { debugAssert, fail } from '../util/assert';\nimport { SortedMap } from '../util/sorted_map';\n\nimport { IndexManager } from './index_manager';\nimport { PersistencePromise } from './persistence_promise';\nimport { PersistenceTransaction } from './persistence_transaction';\nimport { RemoteDocumentCache } from './remote_document_cache';\nimport { RemoteDocumentChangeBuffer } from './remote_document_change_buffer';\n\nexport type DocumentSizer = (doc: Document) => number;\n\n/** Miscellaneous collection types / constants. */\ninterface MemoryRemoteDocumentCacheEntry {\n  document: Document;\n  size: number;\n}\n\ntype DocumentEntryMap = SortedMap<DocumentKey, MemoryRemoteDocumentCacheEntry>;\nfunction documentEntryMap(): DocumentEntryMap {\n  return new SortedMap<DocumentKey, MemoryRemoteDocumentCacheEntry>(\n    DocumentKey.comparator\n  );\n}\n\nexport interface MemoryRemoteDocumentCache extends RemoteDocumentCache {\n  forEachDocumentKey(\n    transaction: PersistenceTransaction,\n    f: (key: DocumentKey) => PersistencePromise<void>\n  ): PersistencePromise<void>;\n}\n\n/**\n * The memory-only RemoteDocumentCache for IndexedDb. To construct, invoke\n * `newMemoryRemoteDocumentCache()`.\n */\nclass MemoryRemoteDocumentCacheImpl implements MemoryRemoteDocumentCache {\n  /** Underlying cache of documents and their read times. */\n  private docs = documentEntryMap();\n  private indexManager!: IndexManager;\n\n  /** Size of all cached documents. */\n  private size = 0;\n\n  /**\n   * @param sizer - Used to assess the size of a document. For eager GC, this is\n   * expected to just return 0 to avoid unnecessarily doing the work of\n   * calculating the size.\n   */\n  constructor(private readonly sizer: DocumentSizer) {}\n\n  setIndexManager(indexManager: IndexManager): void {\n    this.indexManager = indexManager;\n  }\n\n  /**\n   * Adds the supplied entry to the cache and updates the cache size as appropriate.\n   *\n   * All calls of `addEntry`  are required to go through the RemoteDocumentChangeBuffer\n   * returned by `newChangeBuffer()`.\n   */\n  addEntry(\n    transaction: PersistenceTransaction,\n    doc: MutableDocument\n  ): PersistencePromise<void> {\n    debugAssert(\n      !doc.readTime.isEqual(SnapshotVersion.min()),\n      'Cannot add a document with a read time of zero'\n    );\n\n    const key = doc.key;\n    const entry = this.docs.get(key);\n    const previousSize = entry ? entry.size : 0;\n    const currentSize = this.sizer(doc);\n\n    this.docs = this.docs.insert(key, {\n      document: doc.mutableCopy(),\n      size: currentSize\n    });\n\n    this.size += currentSize - previousSize;\n\n    return this.indexManager.addToCollectionParentIndex(\n      transaction,\n      key.path.popLast()\n    );\n  }\n\n  /**\n   * Removes the specified entry from the cache and updates the cache size as appropriate.\n   *\n   * All calls of `removeEntry` are required to go through the RemoteDocumentChangeBuffer\n   * returned by `newChangeBuffer()`.\n   */\n  removeEntry(documentKey: DocumentKey): void {\n    const entry = this.docs.get(documentKey);\n    if (entry) {\n      this.docs = this.docs.remove(documentKey);\n      this.size -= entry.size;\n    }\n  }\n\n  getEntry(\n    transaction: PersistenceTransaction,\n    documentKey: DocumentKey\n  ): PersistencePromise<MutableDocument> {\n    const entry = this.docs.get(documentKey);\n    return PersistencePromise.resolve(\n      entry\n        ? entry.document.mutableCopy()\n        : MutableDocument.newInvalidDocument(documentKey)\n    );\n  }\n\n  getEntries(\n    transaction: PersistenceTransaction,\n    documentKeys: DocumentKeySet\n  ): PersistencePromise<MutableDocumentMap> {\n    let results = mutableDocumentMap();\n    documentKeys.forEach(documentKey => {\n      const entry = this.docs.get(documentKey);\n      results = results.insert(\n        documentKey,\n        entry\n          ? entry.document.mutableCopy()\n          : MutableDocument.newInvalidDocument(documentKey)\n      );\n    });\n    return PersistencePromise.resolve(results);\n  }\n\n  getDocumentsMatchingQuery(\n    transaction: PersistenceTransaction,\n    query: Query,\n    offset: IndexOffset,\n    mutatedDocs: OverlayMap\n  ): PersistencePromise<MutableDocumentMap> {\n    let results = mutableDocumentMap();\n\n    // Documents are ordered by key, so we can use a prefix scan to narrow down\n    // the documents we need to match the query against.\n    const collectionPath = query.path;\n    const prefix = new DocumentKey(collectionPath.child(''));\n    const iterator = this.docs.getIteratorFrom(prefix);\n    while (iterator.hasNext()) {\n      const {\n        key,\n        value: { document }\n      } = iterator.getNext();\n      if (!collectionPath.isPrefixOf(key.path)) {\n        break;\n      }\n      if (key.path.length > collectionPath.length + 1) {\n        // Exclude entries from subcollections.\n        continue;\n      }\n      if (\n        indexOffsetComparator(newIndexOffsetFromDocument(document), offset) <= 0\n      ) {\n        // The document sorts before the offset.\n        continue;\n      }\n      if (!mutatedDocs.has(document.key) && !queryMatches(query, document)) {\n        // The document cannot possibly match the query.\n        continue;\n      }\n\n      results = results.insert(document.key, document.mutableCopy());\n    }\n    return PersistencePromise.resolve(results);\n  }\n\n  getAllFromCollectionGroup(\n    transaction: PersistenceTransaction,\n    collectionGroup: string,\n    offset: IndexOffset,\n    limti: number\n  ): PersistencePromise<MutableDocumentMap> {\n    // This method should only be called from the IndexBackfiller if persistence\n    // is enabled.\n    fail('getAllFromCollectionGroup() is not supported.');\n  }\n\n  forEachDocumentKey(\n    transaction: PersistenceTransaction,\n    f: (key: DocumentKey) => PersistencePromise<void>\n  ): PersistencePromise<void> {\n    return PersistencePromise.forEach(this.docs, (key: DocumentKey) => f(key));\n  }\n\n  newChangeBuffer(options?: {\n    trackRemovals: boolean;\n  }): RemoteDocumentChangeBuffer {\n    // `trackRemovals` is ignores since the MemoryRemoteDocumentCache keeps\n    // a separate changelog and does not need special handling for removals.\n    return new MemoryRemoteDocumentChangeBuffer(this);\n  }\n\n  getSize(txn: PersistenceTransaction): PersistencePromise<number> {\n    return PersistencePromise.resolve(this.size);\n  }\n}\n\n/**\n * Creates a new memory-only RemoteDocumentCache.\n *\n * @param sizer - Used to assess the size of a document. For eager GC, this is\n * expected to just return 0 to avoid unnecessarily doing the work of\n * calculating the size.\n */\nexport function newMemoryRemoteDocumentCache(\n  sizer: DocumentSizer\n): MemoryRemoteDocumentCache {\n  return new MemoryRemoteDocumentCacheImpl(sizer);\n}\n\n/**\n * Handles the details of adding and updating documents in the MemoryRemoteDocumentCache.\n */\nclass MemoryRemoteDocumentChangeBuffer extends RemoteDocumentChangeBuffer {\n  constructor(private readonly documentCache: MemoryRemoteDocumentCacheImpl) {\n    super();\n  }\n\n  protected applyChanges(\n    transaction: PersistenceTransaction\n  ): PersistencePromise<void> {\n    const promises: Array<PersistencePromise<void>> = [];\n    this.changes.forEach((key, doc) => {\n      if (doc.isValidDocument()) {\n        promises.push(this.documentCache.addEntry(transaction, doc));\n      } else {\n        this.documentCache.removeEntry(key);\n      }\n    });\n    return PersistencePromise.waitFor(promises);\n  }\n\n  protected getFromCache(\n    transaction: PersistenceTransaction,\n    documentKey: DocumentKey\n  ): PersistencePromise<MutableDocument> {\n    return this.documentCache.getEntry(transaction, documentKey);\n  }\n\n  protected getAllFromCache(\n    transaction: PersistenceTransaction,\n    documentKeys: DocumentKeySet\n  ): PersistencePromise<MutableDocumentMap> {\n    return this.documentCache.getEntries(transaction, documentKeys);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { canonifyTarget, Target, targetEquals } from '../core/target';\nimport { TargetIdGenerator } from '../core/target_id_generator';\nimport { ListenSequenceNumber, TargetId } from '../core/types';\nimport { DocumentKeySet } from '../model/collections';\nimport { DocumentKey } from '../model/document_key';\nimport { debugAssert } from '../util/assert';\nimport { ObjectMap } from '../util/obj_map';\n\nimport { ActiveTargets } from './lru_garbage_collector';\nimport { Persistence } from './persistence';\nimport { PersistencePromise } from './persistence_promise';\nimport { PersistenceTransaction } from './persistence_transaction';\nimport { ReferenceSet } from './reference_set';\nimport { TargetCache } from './target_cache';\nimport { TargetData } from './target_data';\n\nexport class MemoryTargetCache implements TargetCache {\n  /**\n   * Maps a target to the data about that target\n   */\n  private targets = new ObjectMap<Target, TargetData>(\n    t => canonifyTarget(t),\n    targetEquals\n  );\n\n  /** The last received snapshot version. */\n  private lastRemoteSnapshotVersion = SnapshotVersion.min();\n  /** The highest numbered target ID encountered. */\n  private highestTargetId: TargetId = 0;\n  /** The highest sequence number encountered. */\n  private highestSequenceNumber: ListenSequenceNumber = 0;\n  /**\n   * A ordered bidirectional mapping between documents and the remote target\n   * IDs.\n   */\n  private references = new ReferenceSet();\n\n  private targetCount = 0;\n\n  private targetIdGenerator = TargetIdGenerator.forTargetCache();\n\n  constructor(private readonly persistence: Persistence) {}\n\n  forEachTarget(\n    txn: PersistenceTransaction,\n    f: (q: TargetData) => void\n  ): PersistencePromise<void> {\n    this.targets.forEach((_, targetData) => f(targetData));\n    return PersistencePromise.resolve();\n  }\n\n  getLastRemoteSnapshotVersion(\n    transaction: PersistenceTransaction\n  ): PersistencePromise<SnapshotVersion> {\n    return PersistencePromise.resolve(this.lastRemoteSnapshotVersion);\n  }\n\n  getHighestSequenceNumber(\n    transaction: PersistenceTransaction\n  ): PersistencePromise<ListenSequenceNumber> {\n    return PersistencePromise.resolve(this.highestSequenceNumber);\n  }\n\n  allocateTargetId(\n    transaction: PersistenceTransaction\n  ): PersistencePromise<TargetId> {\n    this.highestTargetId = this.targetIdGenerator.next();\n    return PersistencePromise.resolve(this.highestTargetId);\n  }\n\n  setTargetsMetadata(\n    transaction: PersistenceTransaction,\n    highestListenSequenceNumber: number,\n    lastRemoteSnapshotVersion?: SnapshotVersion\n  ): PersistencePromise<void> {\n    if (lastRemoteSnapshotVersion) {\n      this.lastRemoteSnapshotVersion = lastRemoteSnapshotVersion;\n    }\n    if (highestListenSequenceNumber > this.highestSequenceNumber) {\n      this.highestSequenceNumber = highestListenSequenceNumber;\n    }\n    return PersistencePromise.resolve();\n  }\n\n  private saveTargetData(targetData: TargetData): void {\n    this.targets.set(targetData.target, targetData);\n    const targetId = targetData.targetId;\n    if (targetId > this.highestTargetId) {\n      this.targetIdGenerator = new TargetIdGenerator(targetId);\n      this.highestTargetId = targetId;\n    }\n    if (targetData.sequenceNumber > this.highestSequenceNumber) {\n      this.highestSequenceNumber = targetData.sequenceNumber;\n    }\n  }\n\n  addTargetData(\n    transaction: PersistenceTransaction,\n    targetData: TargetData\n  ): PersistencePromise<void> {\n    debugAssert(\n      !this.targets.has(targetData.target),\n      'Adding a target that already exists'\n    );\n    this.saveTargetData(targetData);\n    this.targetCount += 1;\n    return PersistencePromise.resolve();\n  }\n\n  updateTargetData(\n    transaction: PersistenceTransaction,\n    targetData: TargetData\n  ): PersistencePromise<void> {\n    debugAssert(\n      this.targets.has(targetData.target),\n      'Updating a non-existent target'\n    );\n    this.saveTargetData(targetData);\n    return PersistencePromise.resolve();\n  }\n\n  removeTargetData(\n    transaction: PersistenceTransaction,\n    targetData: TargetData\n  ): PersistencePromise<void> {\n    debugAssert(this.targetCount > 0, 'Removing a target from an empty cache');\n    debugAssert(\n      this.targets.has(targetData.target),\n      'Removing a non-existent target from the cache'\n    );\n    this.targets.delete(targetData.target);\n    this.references.removeReferencesForId(targetData.targetId);\n    this.targetCount -= 1;\n    return PersistencePromise.resolve();\n  }\n\n  removeTargets(\n    transaction: PersistenceTransaction,\n    upperBound: ListenSequenceNumber,\n    activeTargetIds: ActiveTargets\n  ): PersistencePromise<number> {\n    let count = 0;\n    const removals: Array<PersistencePromise<void>> = [];\n    this.targets.forEach((key, targetData) => {\n      if (\n        targetData.sequenceNumber <= upperBound &&\n        activeTargetIds.get(targetData.targetId) === null\n      ) {\n        this.targets.delete(key);\n        removals.push(\n          this.removeMatchingKeysForTargetId(transaction, targetData.targetId)\n        );\n        count++;\n      }\n    });\n    return PersistencePromise.waitFor(removals).next(() => count);\n  }\n\n  getTargetCount(\n    transaction: PersistenceTransaction\n  ): PersistencePromise<number> {\n    return PersistencePromise.resolve(this.targetCount);\n  }\n\n  getTargetData(\n    transaction: PersistenceTransaction,\n    target: Target\n  ): PersistencePromise<TargetData | null> {\n    const targetData = this.targets.get(target) || null;\n    return PersistencePromise.resolve(targetData);\n  }\n\n  addMatchingKeys(\n    txn: PersistenceTransaction,\n    keys: DocumentKeySet,\n    targetId: TargetId\n  ): PersistencePromise<void> {\n    this.references.addReferences(keys, targetId);\n    return PersistencePromise.resolve();\n  }\n\n  removeMatchingKeys(\n    txn: PersistenceTransaction,\n    keys: DocumentKeySet,\n    targetId: TargetId\n  ): PersistencePromise<void> {\n    this.references.removeReferences(keys, targetId);\n    const referenceDelegate = this.persistence.referenceDelegate;\n    const promises: Array<PersistencePromise<void>> = [];\n    if (referenceDelegate) {\n      keys.forEach(key => {\n        promises.push(referenceDelegate.markPotentiallyOrphaned(txn, key));\n      });\n    }\n    return PersistencePromise.waitFor(promises);\n  }\n\n  removeMatchingKeysForTargetId(\n    txn: PersistenceTransaction,\n    targetId: TargetId\n  ): PersistencePromise<void> {\n    this.references.removeReferencesForId(targetId);\n    return PersistencePromise.resolve();\n  }\n\n  getMatchingKeysForTargetId(\n    txn: PersistenceTransaction,\n    targetId: TargetId\n  ): PersistencePromise<DocumentKeySet> {\n    const matchingKeys = this.references.referencesForId(targetId);\n    return PersistencePromise.resolve(matchingKeys);\n  }\n\n  containsKey(\n    txn: PersistenceTransaction,\n    key: DocumentKey\n  ): PersistencePromise<boolean> {\n    return PersistencePromise.resolve(this.references.containsKey(key));\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { User } from '../auth/user';\nimport { ListenSequence } from '../core/listen_sequence';\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { ListenSequenceNumber, TargetId } from '../core/types';\nimport { Document } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { estimateByteSize } from '../model/values';\nimport { JsonProtoSerializer } from '../remote/serializer';\nimport { fail } from '../util/assert';\nimport { logDebug } from '../util/log';\nimport { ObjectMap } from '../util/obj_map';\n\nimport { DocumentOverlayCache } from './document_overlay_cache';\nimport { encodeResourcePath } from './encoded_resource_path';\nimport { IndexManager } from './index_manager';\nimport { LocalSerializer } from './local_serializer';\nimport {\n  ActiveTargets,\n  LruDelegate,\n  LruGarbageCollector,\n  LruParams\n} from './lru_garbage_collector';\nimport { newLruGarbageCollector } from './lru_garbage_collector_impl';\nimport { MemoryBundleCache } from './memory_bundle_cache';\nimport { MemoryDocumentOverlayCache } from './memory_document_overlay_cache';\nimport { MemoryIndexManager } from './memory_index_manager';\nimport { MemoryMutationQueue } from './memory_mutation_queue';\nimport {\n  MemoryRemoteDocumentCache,\n  newMemoryRemoteDocumentCache\n} from './memory_remote_document_cache';\nimport { MemoryTargetCache } from './memory_target_cache';\nimport { MutationQueue } from './mutation_queue';\nimport { Persistence, ReferenceDelegate } from './persistence';\nimport { PersistencePromise } from './persistence_promise';\nimport {\n  PersistenceTransaction,\n  PersistenceTransactionMode\n} from './persistence_transaction';\nimport { ReferenceSet } from './reference_set';\nimport { TargetData } from './target_data';\n\nconst LOG_TAG = 'MemoryPersistence';\n/**\n * A memory-backed instance of Persistence. Data is stored only in RAM and\n * not persisted across sessions.\n */\nexport class MemoryPersistence implements Persistence {\n  /**\n   * Note that these are retained here to make it easier to write tests\n   * affecting both the in-memory and IndexedDB-backed persistence layers. Tests\n   * can create a new LocalStore wrapping this Persistence instance and this\n   * will make the in-memory persistence layer behave as if it were actually\n   * persisting values.\n   */\n  private readonly indexManager: MemoryIndexManager;\n  private mutationQueues: { [user: string]: MemoryMutationQueue } = {};\n  private overlays: { [user: string]: MemoryDocumentOverlayCache } = {};\n  private readonly remoteDocumentCache: MemoryRemoteDocumentCache;\n  private readonly targetCache: MemoryTargetCache;\n  private readonly bundleCache: MemoryBundleCache;\n  private readonly listenSequence = new ListenSequence(0);\n  private serializer: LocalSerializer;\n\n  private _started = false;\n\n  readonly referenceDelegate: MemoryReferenceDelegate;\n\n  /**\n   * The constructor accepts a factory for creating a reference delegate. This\n   * allows both the delegate and this instance to have strong references to\n   * each other without having nullable fields that would then need to be\n   * checked or asserted on every access.\n   */\n  constructor(\n    referenceDelegateFactory: (p: MemoryPersistence) => MemoryReferenceDelegate,\n    serializer: JsonProtoSerializer\n  ) {\n    this._started = true;\n    this.referenceDelegate = referenceDelegateFactory(this);\n    this.targetCache = new MemoryTargetCache(this);\n    const sizer = (doc: Document): number =>\n      this.referenceDelegate.documentSize(doc);\n    this.indexManager = new MemoryIndexManager();\n    this.remoteDocumentCache = newMemoryRemoteDocumentCache(sizer);\n    this.serializer = new LocalSerializer(serializer);\n    this.bundleCache = new MemoryBundleCache(this.serializer);\n  }\n\n  start(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  shutdown(): Promise<void> {\n    // No durable state to ensure is closed on shutdown.\n    this._started = false;\n    return Promise.resolve();\n  }\n\n  get started(): boolean {\n    return this._started;\n  }\n\n  setDatabaseDeletedListener(): void {\n    // No op.\n  }\n\n  setNetworkEnabled(): void {\n    // No op.\n  }\n\n  getIndexManager(user: User): MemoryIndexManager {\n    // We do not currently support indices for memory persistence, so we can\n    // return the same shared instance of the memory index manager.\n    return this.indexManager;\n  }\n\n  getDocumentOverlayCache(user: User): DocumentOverlayCache {\n    let overlay = this.overlays[user.toKey()];\n    if (!overlay) {\n      overlay = new MemoryDocumentOverlayCache();\n      this.overlays[user.toKey()] = overlay;\n    }\n    return overlay;\n  }\n\n  getMutationQueue(user: User, indexManager: IndexManager): MutationQueue {\n    let queue = this.mutationQueues[user.toKey()];\n    if (!queue) {\n      queue = new MemoryMutationQueue(indexManager, this.referenceDelegate);\n      this.mutationQueues[user.toKey()] = queue;\n    }\n    return queue;\n  }\n\n  getTargetCache(): MemoryTargetCache {\n    return this.targetCache;\n  }\n\n  getRemoteDocumentCache(): MemoryRemoteDocumentCache {\n    return this.remoteDocumentCache;\n  }\n\n  getBundleCache(): MemoryBundleCache {\n    return this.bundleCache;\n  }\n\n  runTransaction<T>(\n    action: string,\n    mode: PersistenceTransactionMode,\n    transactionOperation: (\n      transaction: PersistenceTransaction\n    ) => PersistencePromise<T>\n  ): Promise<T> {\n    logDebug(LOG_TAG, 'Starting transaction:', action);\n    const txn = new MemoryTransaction(this.listenSequence.next());\n    this.referenceDelegate.onTransactionStarted();\n    return transactionOperation(txn)\n      .next(result => {\n        return this.referenceDelegate\n          .onTransactionCommitted(txn)\n          .next(() => result);\n      })\n      .toPromise()\n      .then(result => {\n        txn.raiseOnCommittedEvent();\n        return result;\n      });\n  }\n\n  mutationQueuesContainKey(\n    transaction: PersistenceTransaction,\n    key: DocumentKey\n  ): PersistencePromise<boolean> {\n    return PersistencePromise.or(\n      Object.values(this.mutationQueues).map(\n        queue => () => queue.containsKey(transaction, key)\n      )\n    );\n  }\n}\n\n/**\n * Memory persistence is not actually transactional, but future implementations\n * may have transaction-scoped state.\n */\nexport class MemoryTransaction extends PersistenceTransaction {\n  constructor(readonly currentSequenceNumber: ListenSequenceNumber) {\n    super();\n  }\n}\n\nexport interface MemoryReferenceDelegate extends ReferenceDelegate {\n  documentSize(doc: Document): number;\n  onTransactionStarted(): void;\n  onTransactionCommitted(txn: PersistenceTransaction): PersistencePromise<void>;\n}\n\nexport class MemoryEagerDelegate implements MemoryReferenceDelegate {\n  /** Tracks all documents that are active in Query views. */\n  private localViewReferences: ReferenceSet = new ReferenceSet();\n  /** The list of documents that are potentially GCed after each transaction. */\n  private _orphanedDocuments: Set</* path= */ string> | null = null;\n\n  private constructor(private readonly persistence: MemoryPersistence) {}\n\n  static factory(persistence: MemoryPersistence): MemoryEagerDelegate {\n    return new MemoryEagerDelegate(persistence);\n  }\n\n  private get orphanedDocuments(): Set<string> {\n    if (!this._orphanedDocuments) {\n      throw fail('orphanedDocuments is only valid during a transaction.');\n    } else {\n      return this._orphanedDocuments;\n    }\n  }\n\n  addReference(\n    txn: PersistenceTransaction,\n    targetId: TargetId,\n    key: DocumentKey\n  ): PersistencePromise<void> {\n    this.localViewReferences.addReference(key, targetId);\n    this.orphanedDocuments.delete(key.toString());\n    return PersistencePromise.resolve();\n  }\n\n  removeReference(\n    txn: PersistenceTransaction,\n    targetId: TargetId,\n    key: DocumentKey\n  ): PersistencePromise<void> {\n    this.localViewReferences.removeReference(key, targetId);\n    this.orphanedDocuments.add(key.toString());\n    return PersistencePromise.resolve();\n  }\n\n  markPotentiallyOrphaned(\n    txn: PersistenceTransaction,\n    key: DocumentKey\n  ): PersistencePromise<void> {\n    this.orphanedDocuments.add(key.toString());\n    return PersistencePromise.resolve();\n  }\n\n  removeTarget(\n    txn: PersistenceTransaction,\n    targetData: TargetData\n  ): PersistencePromise<void> {\n    const orphaned = this.localViewReferences.removeReferencesForId(\n      targetData.targetId\n    );\n    orphaned.forEach(key => this.orphanedDocuments.add(key.toString()));\n    const cache = this.persistence.getTargetCache();\n    return cache\n      .getMatchingKeysForTargetId(txn, targetData.targetId)\n      .next(keys => {\n        keys.forEach(key => this.orphanedDocuments.add(key.toString()));\n      })\n      .next(() => cache.removeTargetData(txn, targetData));\n  }\n\n  onTransactionStarted(): void {\n    this._orphanedDocuments = new Set<string>();\n  }\n\n  onTransactionCommitted(\n    txn: PersistenceTransaction\n  ): PersistencePromise<void> {\n    // Remove newly orphaned documents.\n    const cache = this.persistence.getRemoteDocumentCache();\n    const changeBuffer = cache.newChangeBuffer();\n    return PersistencePromise.forEach(\n      this.orphanedDocuments,\n      (path: string) => {\n        const key = DocumentKey.fromPath(path);\n        return this.isReferenced(txn, key).next(isReferenced => {\n          if (!isReferenced) {\n            changeBuffer.removeEntry(key, SnapshotVersion.min());\n          }\n        });\n      }\n    ).next(() => {\n      this._orphanedDocuments = null;\n      return changeBuffer.apply(txn);\n    });\n  }\n\n  updateLimboDocument(\n    txn: PersistenceTransaction,\n    key: DocumentKey\n  ): PersistencePromise<void> {\n    return this.isReferenced(txn, key).next(isReferenced => {\n      if (isReferenced) {\n        this.orphanedDocuments.delete(key.toString());\n      } else {\n        this.orphanedDocuments.add(key.toString());\n      }\n    });\n  }\n\n  documentSize(doc: Document): number {\n    // For eager GC, we don't care about the document size, there are no size thresholds.\n    return 0;\n  }\n\n  private isReferenced(\n    txn: PersistenceTransaction,\n    key: DocumentKey\n  ): PersistencePromise<boolean> {\n    return PersistencePromise.or([\n      () =>\n        PersistencePromise.resolve(this.localViewReferences.containsKey(key)),\n      () => this.persistence.getTargetCache().containsKey(txn, key),\n      () => this.persistence.mutationQueuesContainKey(txn, key)\n    ]);\n  }\n}\n\nexport class MemoryLruDelegate implements ReferenceDelegate, LruDelegate {\n  private orphanedSequenceNumbers: ObjectMap<\n    DocumentKey,\n    ListenSequenceNumber\n  > = new ObjectMap(\n    k => encodeResourcePath(k.path),\n    (l, r) => l.isEqual(r)\n  );\n\n  readonly garbageCollector: LruGarbageCollector;\n\n  constructor(\n    private readonly persistence: MemoryPersistence,\n    lruParams: LruParams\n  ) {\n    this.garbageCollector = newLruGarbageCollector(this, lruParams);\n  }\n\n  static factory(\n    persistence: MemoryPersistence,\n    lruParams: LruParams\n  ): MemoryLruDelegate {\n    return new MemoryLruDelegate(persistence, lruParams);\n  }\n\n  // No-ops, present so memory persistence doesn't have to care which delegate\n  // it has.\n  onTransactionStarted(): void {}\n\n  onTransactionCommitted(\n    txn: PersistenceTransaction\n  ): PersistencePromise<void> {\n    return PersistencePromise.resolve();\n  }\n\n  forEachTarget(\n    txn: PersistenceTransaction,\n    f: (q: TargetData) => void\n  ): PersistencePromise<void> {\n    return this.persistence.getTargetCache().forEachTarget(txn, f);\n  }\n\n  getSequenceNumberCount(\n    txn: PersistenceTransaction\n  ): PersistencePromise<number> {\n    const docCountPromise = this.orphanedDocumentCount(txn);\n    const targetCountPromise = this.persistence\n      .getTargetCache()\n      .getTargetCount(txn);\n    return targetCountPromise.next(targetCount =>\n      docCountPromise.next(docCount => targetCount + docCount)\n    );\n  }\n\n  private orphanedDocumentCount(\n    txn: PersistenceTransaction\n  ): PersistencePromise<number> {\n    let orphanedCount = 0;\n    return this.forEachOrphanedDocumentSequenceNumber(txn, _ => {\n      orphanedCount++;\n    }).next(() => orphanedCount);\n  }\n\n  forEachOrphanedDocumentSequenceNumber(\n    txn: PersistenceTransaction,\n    f: (sequenceNumber: ListenSequenceNumber) => void\n  ): PersistencePromise<void> {\n    return PersistencePromise.forEach(\n      this.orphanedSequenceNumbers,\n      (key, sequenceNumber) => {\n        // Pass in the exact sequence number as the upper bound so we know it won't be pinned by\n        // being too recent.\n        return this.isPinned(txn, key, sequenceNumber).next(isPinned => {\n          if (!isPinned) {\n            return f(sequenceNumber);\n          } else {\n            return PersistencePromise.resolve();\n          }\n        });\n      }\n    );\n  }\n\n  removeTargets(\n    txn: PersistenceTransaction,\n    upperBound: ListenSequenceNumber,\n    activeTargetIds: ActiveTargets\n  ): PersistencePromise<number> {\n    return this.persistence\n      .getTargetCache()\n      .removeTargets(txn, upperBound, activeTargetIds);\n  }\n\n  removeOrphanedDocuments(\n    txn: PersistenceTransaction,\n    upperBound: ListenSequenceNumber\n  ): PersistencePromise<number> {\n    let count = 0;\n    const cache = this.persistence.getRemoteDocumentCache();\n    const changeBuffer = cache.newChangeBuffer();\n    const p = cache.forEachDocumentKey(txn, key => {\n      return this.isPinned(txn, key, upperBound).next(isPinned => {\n        if (!isPinned) {\n          count++;\n          changeBuffer.removeEntry(key, SnapshotVersion.min());\n        }\n      });\n    });\n    return p.next(() => changeBuffer.apply(txn)).next(() => count);\n  }\n\n  markPotentiallyOrphaned(\n    txn: PersistenceTransaction,\n    key: DocumentKey\n  ): PersistencePromise<void> {\n    this.orphanedSequenceNumbers.set(key, txn.currentSequenceNumber);\n    return PersistencePromise.resolve();\n  }\n\n  removeTarget(\n    txn: PersistenceTransaction,\n    targetData: TargetData\n  ): PersistencePromise<void> {\n    const updated = targetData.withSequenceNumber(txn.currentSequenceNumber);\n    return this.persistence.getTargetCache().updateTargetData(txn, updated);\n  }\n\n  addReference(\n    txn: PersistenceTransaction,\n    targetId: TargetId,\n    key: DocumentKey\n  ): PersistencePromise<void> {\n    this.orphanedSequenceNumbers.set(key, txn.currentSequenceNumber);\n    return PersistencePromise.resolve();\n  }\n\n  removeReference(\n    txn: PersistenceTransaction,\n    targetId: TargetId,\n    key: DocumentKey\n  ): PersistencePromise<void> {\n    this.orphanedSequenceNumbers.set(key, txn.currentSequenceNumber);\n    return PersistencePromise.resolve();\n  }\n\n  updateLimboDocument(\n    txn: PersistenceTransaction,\n    key: DocumentKey\n  ): PersistencePromise<void> {\n    this.orphanedSequenceNumbers.set(key, txn.currentSequenceNumber);\n    return PersistencePromise.resolve();\n  }\n\n  documentSize(document: Document): number {\n    let documentSize = document.key.toString().length;\n    if (document.isFoundDocument()) {\n      documentSize += estimateByteSize(document.data.value);\n    }\n    return documentSize;\n  }\n\n  private isPinned(\n    txn: PersistenceTransaction,\n    key: DocumentKey,\n    upperBound: ListenSequenceNumber\n  ): PersistencePromise<boolean> {\n    return PersistencePromise.or([\n      () => this.persistence.mutationQueuesContainKey(txn, key),\n      () => this.persistence.getTargetCache().containsKey(txn, key),\n      () => {\n        const orphanedAt = this.orphanedSequenceNumbers.get(key);\n        return PersistencePromise.resolve(\n          orphanedAt !== undefined && orphanedAt > upperBound\n        );\n      }\n    ]);\n  }\n\n  getCacheSize(txn: PersistenceTransaction): PersistencePromise<number> {\n    return this.persistence.getRemoteDocumentCache().getSize(txn);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TargetId } from '../core/types';\nimport { ChangeType, ViewSnapshot } from '../core/view_snapshot';\nimport { documentKeySet, DocumentKeySet } from '../model/collections';\n\n/**\n * A set of changes to what documents are currently in view and out of view for\n * a given query. These changes are sent to the LocalStore by the View (via\n * the SyncEngine) and are used to pin / unpin documents as appropriate.\n */\nexport class LocalViewChanges {\n  constructor(\n    readonly targetId: TargetId,\n    readonly fromCache: boolean,\n    readonly addedKeys: DocumentKeySet,\n    readonly removedKeys: DocumentKeySet\n  ) {}\n\n  static fromSnapshot(\n    targetId: TargetId,\n    viewSnapshot: ViewSnapshot\n  ): LocalViewChanges {\n    let addedKeys = documentKeySet();\n    let removedKeys = documentKeySet();\n\n    for (const docChange of viewSnapshot.docChanges) {\n      switch (docChange.type) {\n        case ChangeType.Added:\n          addedKeys = addedKeys.add(docChange.doc.key);\n          break;\n        case ChangeType.Removed:\n          removedKeys = removedKeys.add(docChange.doc.key);\n          break;\n        default:\n        // do nothing\n      }\n    }\n\n    return new LocalViewChanges(\n      targetId,\n      viewSnapshot.fromCache,\n      addedKeys,\n      removedKeys\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A tracker to keep a record of important details during database local query\n * execution.\n */\nexport class QueryContext {\n  /**\n   * Counts the number of documents passed through during local query execution.\n   */\n  private _documentReadCount = 0;\n\n  get documentReadCount(): number {\n    return this._documentReadCount;\n  }\n\n  incrementDocumentReadCount(amount: number): void {\n    this._documentReadCount += amount;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getUA, isSafari } from '@firebase/util';\n\nimport {\n  LimitType,\n  newQueryComparator,\n  Query,\n  queryMatches,\n  queryMatchesAllDocuments,\n  queryToTarget,\n  queryWithLimit,\n  stringifyQuery\n} from '../core/query';\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport {\n  documentKeySet,\n  DocumentKeySet,\n  DocumentMap\n} from '../model/collections';\nimport { Document } from '../model/document';\nimport {\n  IndexOffset,\n  INITIAL_LARGEST_BATCH_ID,\n  newIndexOffsetSuccessorFromReadTime\n} from '../model/field_index';\nimport { debugAssert } from '../util/assert';\nimport { getLogLevel, logDebug, LogLevel } from '../util/log';\nimport { Iterable } from '../util/misc';\nimport { SortedSet } from '../util/sorted_set';\n\nimport { IndexManager, IndexType } from './index_manager';\nimport { LocalDocumentsView } from './local_documents_view';\nimport { PersistencePromise } from './persistence_promise';\nimport { PersistenceTransaction } from './persistence_transaction';\nimport { QueryContext } from './query_context';\nimport { getAndroidVersion } from './simple_db';\n\nconst DEFAULT_INDEX_AUTO_CREATION_MIN_COLLECTION_SIZE = 100;\n\n/**\n * This cost represents the evaluation result of\n * (([index, docKey] + [docKey, docContent]) per document in the result set)\n * / ([docKey, docContent] per documents in full collection scan) coming from\n * experiment [enter PR experiment URL here].\n */\nfunction getDefaultRelativeIndexReadCostPerDocument(): number {\n  // These values were derived from an experiment where several members of the\n  // Firestore SDK team ran a performance test in various environments.\n  // Googlers can see b/299284287 for details.\n  if (isSafari()) {\n    return 8;\n  } else if (getAndroidVersion(getUA()) > 0) {\n    return 6;\n  } else {\n    return 4;\n  }\n}\n\n/**\n * The Firestore query engine.\n *\n * Firestore queries can be executed in three modes. The Query Engine determines\n * what mode to use based on what data is persisted. The mode only determines\n * the runtime complexity of the query - the result set is equivalent across all\n * implementations.\n *\n * The Query engine will use indexed-based execution if a user has configured\n * any index that can be used to execute query (via `setIndexConfiguration()`).\n * Otherwise, the engine will try to optimize the query by re-using a previously\n * persisted query result. If that is not possible, the query will be executed\n * via a full collection scan.\n *\n * Index-based execution is the default when available. The query engine\n * supports partial indexed execution and merges the result from the index\n * lookup with documents that have not yet been indexed. The index evaluation\n * matches the backend's format and as such, the SDK can use indexing for all\n * queries that the backend supports.\n *\n * If no index exists, the query engine tries to take advantage of the target\n * document mapping in the TargetCache. These mappings exists for all queries\n * that have been synced with the backend at least once and allow the query\n * engine to only read documents that previously matched a query plus any\n * documents that were edited after the query was last listened to.\n *\n * There are some cases when this optimization is not guaranteed to produce\n * the same results as full collection scans. In these cases, query\n * processing falls back to full scans. These cases are:\n *\n * - Limit queries where a document that matched the query previously no longer\n *   matches the query.\n *\n * - Limit queries where a document edit may cause the document to sort below\n *   another document that is in the local cache.\n *\n * - Queries that have never been CURRENT or free of limbo documents.\n */\nexport class QueryEngine {\n  private localDocumentsView!: LocalDocumentsView;\n  private indexManager!: IndexManager;\n  private initialized = false;\n\n  indexAutoCreationEnabled = false;\n\n  /**\n   * SDK only decides whether it should create index when collection size is\n   * larger than this.\n   */\n  indexAutoCreationMinCollectionSize =\n    DEFAULT_INDEX_AUTO_CREATION_MIN_COLLECTION_SIZE;\n\n  relativeIndexReadCostPerDocument =\n    getDefaultRelativeIndexReadCostPerDocument();\n\n  /** Sets the document view to query against. */\n  initialize(\n    localDocuments: LocalDocumentsView,\n    indexManager: IndexManager\n  ): void {\n    this.localDocumentsView = localDocuments;\n    this.indexManager = indexManager;\n    this.initialized = true;\n  }\n\n  /** Returns all local documents matching the specified query. */\n  getDocumentsMatchingQuery(\n    transaction: PersistenceTransaction,\n    query: Query,\n    lastLimboFreeSnapshotVersion: SnapshotVersion,\n    remoteKeys: DocumentKeySet\n  ): PersistencePromise<DocumentMap> {\n    debugAssert(this.initialized, 'initialize() not called');\n\n    // Stores the result from executing the query; using this object is more\n    // convenient than passing the result between steps of the persistence\n    // transaction and improves readability comparatively.\n    const queryResult: { result: DocumentMap | null } = { result: null };\n\n    return this.performQueryUsingIndex(transaction, query)\n      .next(result => {\n        queryResult.result = result;\n      })\n      .next(() => {\n        if (queryResult.result) {\n          return;\n        }\n        return this.performQueryUsingRemoteKeys(\n          transaction,\n          query,\n          remoteKeys,\n          lastLimboFreeSnapshotVersion\n        ).next(result => {\n          queryResult.result = result;\n        });\n      })\n      .next(() => {\n        if (queryResult.result) {\n          return;\n        }\n        const context = new QueryContext();\n        return this.executeFullCollectionScan(transaction, query, context).next(\n          result => {\n            queryResult.result = result;\n            if (this.indexAutoCreationEnabled) {\n              return this.createCacheIndexes(\n                transaction,\n                query,\n                context,\n                result.size\n              );\n            }\n          }\n        );\n      })\n      .next(() => queryResult.result!);\n  }\n\n  createCacheIndexes(\n    transaction: PersistenceTransaction,\n    query: Query,\n    context: QueryContext,\n    resultSize: number\n  ): PersistencePromise<void> {\n    if (context.documentReadCount < this.indexAutoCreationMinCollectionSize) {\n      if (getLogLevel() <= LogLevel.DEBUG) {\n        logDebug(\n          'QueryEngine',\n          'SDK will not create cache indexes for query:',\n          stringifyQuery(query),\n          'since it only creates cache indexes for collection contains',\n          'more than or equal to',\n          this.indexAutoCreationMinCollectionSize,\n          'documents'\n        );\n      }\n      return PersistencePromise.resolve();\n    }\n\n    if (getLogLevel() <= LogLevel.DEBUG) {\n      logDebug(\n        'QueryEngine',\n        'Query:',\n        stringifyQuery(query),\n        'scans',\n        context.documentReadCount,\n        'local documents and returns',\n        resultSize,\n        'documents as results.'\n      );\n    }\n\n    if (\n      context.documentReadCount >\n      this.relativeIndexReadCostPerDocument * resultSize\n    ) {\n      if (getLogLevel() <= LogLevel.DEBUG) {\n        logDebug(\n          'QueryEngine',\n          'The SDK decides to create cache indexes for query:',\n          stringifyQuery(query),\n          'as using cache indexes may help improve performance.'\n        );\n      }\n      return this.indexManager.createTargetIndexes(\n        transaction,\n        queryToTarget(query)\n      );\n    }\n\n    return PersistencePromise.resolve();\n  }\n\n  /**\n   * Performs an indexed query that evaluates the query based on a collection's\n   * persisted index values. Returns `null` if an index is not available.\n   */\n  private performQueryUsingIndex(\n    transaction: PersistenceTransaction,\n    query: Query\n  ): PersistencePromise<DocumentMap | null> {\n    if (queryMatchesAllDocuments(query)) {\n      // Queries that match all documents don't benefit from using\n      // key-based lookups. It is more efficient to scan all documents in a\n      // collection, rather than to perform individual lookups.\n      return PersistencePromise.resolve<DocumentMap | null>(null);\n    }\n\n    let target = queryToTarget(query);\n    return this.indexManager\n      .getIndexType(transaction, target)\n      .next(indexType => {\n        if (indexType === IndexType.NONE) {\n          // The target cannot be served from any index.\n          return null;\n        }\n\n        if (query.limit !== null && indexType === IndexType.PARTIAL) {\n          // We cannot apply a limit for targets that are served using a partial\n          // index. If a partial index will be used to serve the target, the\n          // query may return a superset of documents that match the target\n          // (e.g. if the index doesn't include all the target's filters), or\n          // may return the correct set of documents in the wrong order (e.g. if\n          // the index doesn't include a segment for one of the orderBys).\n          // Therefore, a limit should not be applied in such cases.\n          query = queryWithLimit(query, null, LimitType.First);\n          target = queryToTarget(query);\n        }\n\n        return this.indexManager\n          .getDocumentsMatchingTarget(transaction, target)\n          .next(keys => {\n            debugAssert(\n              !!keys,\n              'Index manager must return results for partial and full indexes.'\n            );\n            const sortedKeys = documentKeySet(...keys);\n            return this.localDocumentsView\n              .getDocuments(transaction, sortedKeys)\n              .next(indexedDocuments => {\n                return this.indexManager\n                  .getMinOffset(transaction, target)\n                  .next(offset => {\n                    const previousResults = this.applyQuery(\n                      query,\n                      indexedDocuments\n                    );\n\n                    if (\n                      this.needsRefill(\n                        query,\n                        previousResults,\n                        sortedKeys,\n                        offset.readTime\n                      )\n                    ) {\n                      // A limit query whose boundaries change due to local\n                      // edits can be re-run against the cache by excluding the\n                      // limit. This ensures that all documents that match the\n                      // query's filters are included in the result set. The SDK\n                      // can then apply the limit once all local edits are\n                      // incorporated.\n                      return this.performQueryUsingIndex(\n                        transaction,\n                        queryWithLimit(query, null, LimitType.First)\n                      );\n                    }\n\n                    return this.appendRemainingResults(\n                      transaction,\n                      previousResults,\n                      query,\n                      offset\n                    ) as PersistencePromise<DocumentMap | null>;\n                  });\n              });\n          });\n      });\n  }\n\n  /**\n   * Performs a query based on the target's persisted query mapping. Returns\n   * `null` if the mapping is not available or cannot be used.\n   */\n  private performQueryUsingRemoteKeys(\n    transaction: PersistenceTransaction,\n    query: Query,\n    remoteKeys: DocumentKeySet,\n    lastLimboFreeSnapshotVersion: SnapshotVersion\n  ): PersistencePromise<DocumentMap | null> {\n    if (queryMatchesAllDocuments(query)) {\n      // Queries that match all documents don't benefit from using\n      // key-based lookups. It is more efficient to scan all documents in a\n      // collection, rather than to perform individual lookups.\n      return PersistencePromise.resolve<DocumentMap | null>(null);\n    }\n\n    // Queries that have never seen a snapshot without limbo free documents\n    // should also be run as a full collection scan.\n    if (lastLimboFreeSnapshotVersion.isEqual(SnapshotVersion.min())) {\n      return PersistencePromise.resolve<DocumentMap | null>(null);\n    }\n\n    return this.localDocumentsView!.getDocuments(transaction, remoteKeys).next(\n      documents => {\n        const previousResults = this.applyQuery(query, documents);\n\n        if (\n          this.needsRefill(\n            query,\n            previousResults,\n            remoteKeys,\n            lastLimboFreeSnapshotVersion\n          )\n        ) {\n          return PersistencePromise.resolve<DocumentMap | null>(null);\n        }\n\n        if (getLogLevel() <= LogLevel.DEBUG) {\n          logDebug(\n            'QueryEngine',\n            'Re-using previous result from %s to execute query: %s',\n            lastLimboFreeSnapshotVersion.toString(),\n            stringifyQuery(query)\n          );\n        }\n\n        // Retrieve all results for documents that were updated since the last\n        // limbo-document free remote snapshot.\n        return this.appendRemainingResults(\n          transaction,\n          previousResults,\n          query,\n          newIndexOffsetSuccessorFromReadTime(\n            lastLimboFreeSnapshotVersion,\n            INITIAL_LARGEST_BATCH_ID\n          )\n        ).next<DocumentMap | null>(results => results);\n      }\n    );\n  }\n\n  /** Applies the query filter and sorting to the provided documents.  */\n  private applyQuery(\n    query: Query,\n    documents: DocumentMap\n  ): SortedSet<Document> {\n    // Sort the documents and re-apply the query filter since previously\n    // matching documents do not necessarily still match the query.\n    let queryResults = new SortedSet<Document>(newQueryComparator(query));\n    documents.forEach((_, maybeDoc) => {\n      if (queryMatches(query, maybeDoc)) {\n        queryResults = queryResults.add(maybeDoc);\n      }\n    });\n    return queryResults;\n  }\n\n  /**\n   * Determines if a limit query needs to be refilled from cache, making it\n   * ineligible for index-free execution.\n   *\n   * @param query - The query.\n   * @param sortedPreviousResults - The documents that matched the query when it\n   * was last synchronized, sorted by the query's comparator.\n   * @param remoteKeys - The document keys that matched the query at the last\n   * snapshot.\n   * @param limboFreeSnapshotVersion - The version of the snapshot when the\n   * query was last synchronized.\n   */\n  private needsRefill(\n    query: Query,\n    sortedPreviousResults: SortedSet<Document>,\n    remoteKeys: DocumentKeySet,\n    limboFreeSnapshotVersion: SnapshotVersion\n  ): boolean {\n    if (query.limit === null) {\n      // Queries without limits do not need to be refilled.\n      return false;\n    }\n\n    if (remoteKeys.size !== sortedPreviousResults.size) {\n      // The query needs to be refilled if a previously matching document no\n      // longer matches.\n      return true;\n    }\n\n    // Limit queries are not eligible for index-free query execution if there is\n    // a potential that an older document from cache now sorts before a document\n    // that was previously part of the limit. This, however, can only happen if\n    // the document at the edge of the limit goes out of limit.\n    // If a document that is not the limit boundary sorts differently,\n    // the boundary of the limit itself did not change and documents from cache\n    // will continue to be \"rejected\" by this boundary. Therefore, we can ignore\n    // any modifications that don't affect the last document.\n    const docAtLimitEdge =\n      query.limitType === LimitType.First\n        ? sortedPreviousResults.last()\n        : sortedPreviousResults.first();\n    if (!docAtLimitEdge) {\n      // We don't need to refill the query if there were already no documents.\n      return false;\n    }\n    return (\n      docAtLimitEdge.hasPendingWrites ||\n      docAtLimitEdge.version.compareTo(limboFreeSnapshotVersion) > 0\n    );\n  }\n\n  private executeFullCollectionScan(\n    transaction: PersistenceTransaction,\n    query: Query,\n    context: QueryContext\n  ): PersistencePromise<DocumentMap> {\n    if (getLogLevel() <= LogLevel.DEBUG) {\n      logDebug(\n        'QueryEngine',\n        'Using full collection scan to execute query:',\n        stringifyQuery(query)\n      );\n    }\n\n    return this.localDocumentsView!.getDocumentsMatchingQuery(\n      transaction,\n      query,\n      IndexOffset.min(),\n      context\n    );\n  }\n\n  /**\n   * Combines the results from an indexed execution with the remaining documents\n   * that have not yet been indexed.\n   */\n  private appendRemainingResults(\n    transaction: PersistenceTransaction,\n    indexedResults: Iterable<Document>,\n    query: Query,\n    offset: IndexOffset\n  ): PersistencePromise<DocumentMap> {\n    // Retrieve all results for documents that were updated since the offset.\n    return this.localDocumentsView\n      .getDocumentsMatchingQuery(transaction, query, offset)\n      .next(remainingResults => {\n        // Merge with existing results\n        indexedResults.forEach(d => {\n          remainingResults = remainingResults.insert(d.key, d);\n        });\n        return remainingResults;\n      });\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { User } from '../auth/user';\nimport { BundleConverter, BundledDocuments, NamedQuery } from '../core/bundle';\nimport {\n  newQueryForPath,\n  Query,\n  queryCollectionGroup,\n  queryToTarget\n} from '../core/query';\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { canonifyTarget, Target, targetEquals } from '../core/target';\nimport { BatchId, TargetId } from '../core/types';\nimport { Timestamp } from '../lite-api/timestamp';\nimport {\n  convertOverlayedDocumentMapToDocumentMap,\n  documentKeySet,\n  DocumentKeySet,\n  DocumentMap,\n  mutableDocumentMap,\n  MutableDocumentMap,\n  OverlayedDocumentMap\n} from '../model/collections';\nimport { Document } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport {\n  FieldIndex,\n  fieldIndexSemanticComparator,\n  INITIAL_LARGEST_BATCH_ID,\n  newIndexOffsetSuccessorFromReadTime\n} from '../model/field_index';\nimport {\n  mutationExtractBaseValue,\n  Mutation,\n  PatchMutation,\n  Precondition\n} from '../model/mutation';\nimport { MutationBatch, MutationBatchResult } from '../model/mutation_batch';\nimport { extractFieldMask } from '../model/object_value';\nimport { ResourcePath } from '../model/path';\nimport {\n  BundleMetadata,\n  NamedQuery as ProtoNamedQuery\n} from '../protos/firestore_bundle_proto';\nimport { RemoteEvent, TargetChange } from '../remote/remote_event';\nimport { fromVersion, JsonProtoSerializer } from '../remote/serializer';\nimport { diffArrays } from '../util/array';\nimport { debugAssert, debugCast, hardAssert } from '../util/assert';\nimport { ByteString } from '../util/byte_string';\nimport { logDebug } from '../util/log';\nimport { primitiveComparator } from '../util/misc';\nimport { ObjectMap } from '../util/obj_map';\nimport { SortedMap } from '../util/sorted_map';\nimport { BATCHID_UNKNOWN } from '../util/types';\n\nimport { BundleCache } from './bundle_cache';\nimport { DocumentOverlayCache } from './document_overlay_cache';\nimport { IndexManager } from './index_manager';\nimport { IndexedDbMutationQueue } from './indexeddb_mutation_queue';\nimport { IndexedDbPersistence } from './indexeddb_persistence';\nimport { IndexedDbTargetCache } from './indexeddb_target_cache';\nimport { LocalDocumentsView } from './local_documents_view';\nimport { fromBundledQuery } from './local_serializer';\nimport { LocalStore } from './local_store';\nimport { LocalViewChanges } from './local_view_changes';\nimport { LruGarbageCollector, LruResults } from './lru_garbage_collector';\nimport { MutationQueue } from './mutation_queue';\nimport { Persistence } from './persistence';\nimport { PersistencePromise } from './persistence_promise';\nimport { PersistenceTransaction } from './persistence_transaction';\nimport { QueryEngine } from './query_engine';\nimport { RemoteDocumentCache } from './remote_document_cache';\nimport { RemoteDocumentChangeBuffer } from './remote_document_change_buffer';\nimport { ClientId } from './shared_client_state';\nimport { isIndexedDbTransactionError } from './simple_db';\nimport { TargetCache } from './target_cache';\nimport { TargetData, TargetPurpose } from './target_data';\n\nexport const LOG_TAG = 'LocalStore';\n\n/**\n * The maximum time to leave a resume token buffered without writing it out.\n * This value is arbitrary: it's long enough to avoid several writes\n * (possibly indefinitely if updates come more frequently than this) but\n * short enough that restarting after crashing will still have a pretty\n * recent resume token.\n */\nconst RESUME_TOKEN_MAX_AGE_MICROS = 5 * 60 * 1e6;\n\n/** The result of a write to the local store. */\nexport interface LocalWriteResult {\n  batchId: BatchId;\n  changes: DocumentMap;\n}\n\n/** The result of a user-change operation in the local store. */\nexport interface UserChangeResult {\n  readonly affectedDocuments: DocumentMap;\n  readonly removedBatchIds: BatchId[];\n  readonly addedBatchIds: BatchId[];\n}\n\n/** The result of executing a query against the local store. */\nexport interface QueryResult {\n  readonly documents: DocumentMap;\n  readonly remoteKeys: DocumentKeySet;\n}\n\n/**\n * Implements `LocalStore` interface.\n *\n * Note: some field defined in this class might have public access level, but\n * the class is not exported so they are only accessible from this module.\n * This is useful to implement optional features (like bundles) in free\n * functions, such that they are tree-shakeable.\n */\nclass LocalStoreImpl implements LocalStore {\n  /**\n   * The set of all mutations that have been sent but not yet been applied to\n   * the backend.\n   */\n  mutationQueue!: MutationQueue;\n\n  /**\n   * The overlays that can be used to short circuit applying all mutations from\n   * mutation queue.\n   */\n  documentOverlayCache!: DocumentOverlayCache;\n\n  /** The set of all cached remote documents. */\n  remoteDocuments: RemoteDocumentCache;\n\n  /**\n   * The \"local\" view of all documents (layering mutationQueue on top of\n   * remoteDocumentCache).\n   */\n  localDocuments!: LocalDocumentsView;\n\n  /** Manages the list of active field and collection indices. */\n  indexManager!: IndexManager;\n\n  /** The set of all cached bundle metadata and named queries. */\n  bundleCache: BundleCache;\n\n  /** Maps a target to its `TargetData`. */\n  targetCache: TargetCache;\n\n  /**\n   * Maps a targetID to data about its target.\n   *\n   * PORTING NOTE: We are using an immutable data structure on Web to make re-runs\n   * of `applyRemoteEvent()` idempotent.\n   */\n  targetDataByTarget = new SortedMap<TargetId, TargetData>(primitiveComparator);\n\n  /** Maps a target to its targetID. */\n  // TODO(wuandy): Evaluate if TargetId can be part of Target.\n  targetIdByTarget = new ObjectMap<Target, TargetId>(\n    t => canonifyTarget(t),\n    targetEquals\n  );\n\n  /**\n   * A per collection group index of the last read time processed by\n   * `getNewDocumentChanges()`.\n   *\n   * PORTING NOTE: This is only used for multi-tab synchronization.\n   */\n  collectionGroupReadTime = new Map<string, SnapshotVersion>();\n\n  constructor(\n    /** Manages our in-memory or durable persistence. */\n    readonly persistence: Persistence,\n    readonly queryEngine: QueryEngine,\n    initialUser: User,\n    readonly serializer: JsonProtoSerializer\n  ) {\n    debugAssert(\n      persistence.started,\n      'LocalStore was passed an unstarted persistence implementation'\n    );\n    this.remoteDocuments = persistence.getRemoteDocumentCache();\n    this.targetCache = persistence.getTargetCache();\n    this.bundleCache = persistence.getBundleCache();\n\n    this.initializeUserComponents(initialUser);\n  }\n\n  initializeUserComponents(user: User): void {\n    // TODO(indexing): Add spec tests that test these components change after a\n    // user change\n    this.documentOverlayCache = this.persistence.getDocumentOverlayCache(user);\n    this.indexManager = this.persistence.getIndexManager(user);\n    this.mutationQueue = this.persistence.getMutationQueue(\n      user,\n      this.indexManager\n    );\n    this.localDocuments = new LocalDocumentsView(\n      this.remoteDocuments,\n      this.mutationQueue,\n      this.documentOverlayCache,\n      this.indexManager\n    );\n    this.remoteDocuments.setIndexManager(this.indexManager);\n    this.queryEngine.initialize(this.localDocuments, this.indexManager);\n  }\n\n  collectGarbage(garbageCollector: LruGarbageCollector): Promise<LruResults> {\n    return this.persistence.runTransaction(\n      'Collect garbage',\n      'readwrite-primary',\n      txn => garbageCollector.collect(txn, this.targetDataByTarget)\n    );\n  }\n}\n\ninterface DocumentChangeResult {\n  changedDocuments: MutableDocumentMap;\n  existenceChangedKeys: DocumentKeySet;\n}\n\nexport function newLocalStore(\n  /** Manages our in-memory or durable persistence. */\n  persistence: Persistence,\n  queryEngine: QueryEngine,\n  initialUser: User,\n  serializer: JsonProtoSerializer\n): LocalStore {\n  return new LocalStoreImpl(persistence, queryEngine, initialUser, serializer);\n}\n\n/**\n * Tells the LocalStore that the currently authenticated user has changed.\n *\n * In response the local store switches the mutation queue to the new user and\n * returns any resulting document changes.\n */\n// PORTING NOTE: Android and iOS only return the documents affected by the\n// change.\nexport async function localStoreHandleUserChange(\n  localStore: LocalStore,\n  user: User\n): Promise<UserChangeResult> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n\n  const result = await localStoreImpl.persistence.runTransaction(\n    'Handle user change',\n    'readonly',\n    txn => {\n      // Swap out the mutation queue, grabbing the pending mutation batches\n      // before and after.\n      let oldBatches: MutationBatch[];\n      return localStoreImpl.mutationQueue\n        .getAllMutationBatches(txn)\n        .next(promisedOldBatches => {\n          oldBatches = promisedOldBatches;\n          localStoreImpl.initializeUserComponents(user);\n          return localStoreImpl.mutationQueue.getAllMutationBatches(txn);\n        })\n        .next(newBatches => {\n          const removedBatchIds: BatchId[] = [];\n          const addedBatchIds: BatchId[] = [];\n\n          // Union the old/new changed keys.\n          let changedKeys = documentKeySet();\n\n          for (const batch of oldBatches) {\n            removedBatchIds.push(batch.batchId);\n            for (const mutation of batch.mutations) {\n              changedKeys = changedKeys.add(mutation.key);\n            }\n          }\n\n          for (const batch of newBatches) {\n            addedBatchIds.push(batch.batchId);\n            for (const mutation of batch.mutations) {\n              changedKeys = changedKeys.add(mutation.key);\n            }\n          }\n\n          // Return the set of all (potentially) changed documents and the list\n          // of mutation batch IDs that were affected by change.\n          return localStoreImpl.localDocuments\n            .getDocuments(txn, changedKeys)\n            .next(affectedDocuments => {\n              return {\n                affectedDocuments,\n                removedBatchIds,\n                addedBatchIds\n              };\n            });\n        });\n    }\n  );\n\n  return result;\n}\n\n/* Accepts locally generated Mutations and commit them to storage. */\nexport function localStoreWriteLocally(\n  localStore: LocalStore,\n  mutations: Mutation[]\n): Promise<LocalWriteResult> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  const localWriteTime = Timestamp.now();\n  const keys = mutations.reduce((keys, m) => keys.add(m.key), documentKeySet());\n\n  let overlayedDocuments: OverlayedDocumentMap;\n  let mutationBatch: MutationBatch;\n\n  return localStoreImpl.persistence\n    .runTransaction('Locally write mutations', 'readwrite', txn => {\n      // Figure out which keys do not have a remote version in the cache, this\n      // is needed to create the right overlay mutation: if no remote version\n      // presents, we do not need to create overlays as patch mutations.\n      // TODO(Overlay): Is there a better way to determine this? Using the\n      //  document version does not work because local mutations set them back\n      //  to 0.\n      let remoteDocs = mutableDocumentMap();\n      let docsWithoutRemoteVersion = documentKeySet();\n      return localStoreImpl.remoteDocuments\n        .getEntries(txn, keys)\n        .next(docs => {\n          remoteDocs = docs;\n          remoteDocs.forEach((key, doc) => {\n            if (!doc.isValidDocument()) {\n              docsWithoutRemoteVersion = docsWithoutRemoteVersion.add(key);\n            }\n          });\n        })\n        .next(() => {\n          // Load and apply all existing mutations. This lets us compute the\n          // current base state for all non-idempotent transforms before applying\n          // any additional user-provided writes.\n          return localStoreImpl.localDocuments.getOverlayedDocuments(\n            txn,\n            remoteDocs\n          );\n        })\n        .next((docs: OverlayedDocumentMap) => {\n          overlayedDocuments = docs;\n\n          // For non-idempotent mutations (such as `FieldValue.increment()`),\n          // we record the base state in a separate patch mutation. This is\n          // later used to guarantee consistent values and prevents flicker\n          // even if the backend sends us an update that already includes our\n          // transform.\n          const baseMutations: Mutation[] = [];\n\n          for (const mutation of mutations) {\n            const baseValue = mutationExtractBaseValue(\n              mutation,\n              overlayedDocuments.get(mutation.key)!.overlayedDocument\n            );\n            if (baseValue != null) {\n              // NOTE: The base state should only be applied if there's some\n              // existing document to override, so use a Precondition of\n              // exists=true\n              baseMutations.push(\n                new PatchMutation(\n                  mutation.key,\n                  baseValue,\n                  extractFieldMask(baseValue.value.mapValue),\n                  Precondition.exists(true)\n                )\n              );\n            }\n          }\n\n          return localStoreImpl.mutationQueue.addMutationBatch(\n            txn,\n            localWriteTime,\n            baseMutations,\n            mutations\n          );\n        })\n        .next(batch => {\n          mutationBatch = batch;\n          const overlays = batch.applyToLocalDocumentSet(\n            overlayedDocuments,\n            docsWithoutRemoteVersion\n          );\n          return localStoreImpl.documentOverlayCache.saveOverlays(\n            txn,\n            batch.batchId,\n            overlays\n          );\n        });\n    })\n    .then(() => ({\n      batchId: mutationBatch.batchId,\n      changes: convertOverlayedDocumentMapToDocumentMap(overlayedDocuments)\n    }));\n}\n\n/**\n * Acknowledges the given batch.\n *\n * On the happy path when a batch is acknowledged, the local store will\n *\n *  + remove the batch from the mutation queue;\n *  + apply the changes to the remote document cache;\n *  + recalculate the latency compensated view implied by those changes (there\n *    may be mutations in the queue that affect the documents but haven't been\n *    acknowledged yet); and\n *  + give the changed documents back the sync engine\n *\n * @returns The resulting (modified) documents.\n */\nexport function localStoreAcknowledgeBatch(\n  localStore: LocalStore,\n  batchResult: MutationBatchResult\n): Promise<DocumentMap> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  return localStoreImpl.persistence.runTransaction(\n    'Acknowledge batch',\n    'readwrite-primary',\n    txn => {\n      const affected = batchResult.batch.keys();\n      const documentBuffer = localStoreImpl.remoteDocuments.newChangeBuffer({\n        trackRemovals: true // Make sure document removals show up in `getNewDocumentChanges()`\n      });\n      return applyWriteToRemoteDocuments(\n        localStoreImpl,\n        txn,\n        batchResult,\n        documentBuffer\n      )\n        .next(() => documentBuffer.apply(txn))\n        .next(() => localStoreImpl.mutationQueue.performConsistencyCheck(txn))\n        .next(() =>\n          localStoreImpl.documentOverlayCache.removeOverlaysForBatchId(\n            txn,\n            affected,\n            batchResult.batch.batchId\n          )\n        )\n        .next(() =>\n          localStoreImpl.localDocuments.recalculateAndSaveOverlaysForDocumentKeys(\n            txn,\n            getKeysWithTransformResults(batchResult)\n          )\n        )\n        .next(() => localStoreImpl.localDocuments.getDocuments(txn, affected));\n    }\n  );\n}\n\nfunction getKeysWithTransformResults(\n  batchResult: MutationBatchResult\n): DocumentKeySet {\n  let result = documentKeySet();\n\n  for (let i = 0; i < batchResult.mutationResults.length; ++i) {\n    const mutationResult = batchResult.mutationResults[i];\n    if (mutationResult.transformResults.length > 0) {\n      result = result.add(batchResult.batch.mutations[i].key);\n    }\n  }\n  return result;\n}\n\n/**\n * Removes mutations from the MutationQueue for the specified batch;\n * LocalDocuments will be recalculated.\n *\n * @returns The resulting modified documents.\n */\nexport function localStoreRejectBatch(\n  localStore: LocalStore,\n  batchId: BatchId\n): Promise<DocumentMap> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  return localStoreImpl.persistence.runTransaction(\n    'Reject batch',\n    'readwrite-primary',\n    txn => {\n      let affectedKeys: DocumentKeySet;\n      return localStoreImpl.mutationQueue\n        .lookupMutationBatch(txn, batchId)\n        .next((batch: MutationBatch | null) => {\n          hardAssert(batch !== null, 'Attempt to reject nonexistent batch!');\n          affectedKeys = batch.keys();\n          return localStoreImpl.mutationQueue.removeMutationBatch(txn, batch);\n        })\n        .next(() => localStoreImpl.mutationQueue.performConsistencyCheck(txn))\n        .next(() =>\n          localStoreImpl.documentOverlayCache.removeOverlaysForBatchId(\n            txn,\n            affectedKeys,\n            batchId\n          )\n        )\n        .next(() =>\n          localStoreImpl.localDocuments.recalculateAndSaveOverlaysForDocumentKeys(\n            txn,\n            affectedKeys\n          )\n        )\n        .next(() =>\n          localStoreImpl.localDocuments.getDocuments(txn, affectedKeys)\n        );\n    }\n  );\n}\n\n/**\n * Returns the largest (latest) batch id in mutation queue that is pending\n * server response.\n *\n * Returns `BATCHID_UNKNOWN` if the queue is empty.\n */\nexport function localStoreGetHighestUnacknowledgedBatchId(\n  localStore: LocalStore\n): Promise<BatchId> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  return localStoreImpl.persistence.runTransaction(\n    'Get highest unacknowledged batch id',\n    'readonly',\n    txn => localStoreImpl.mutationQueue.getHighestUnacknowledgedBatchId(txn)\n  );\n}\n\n/**\n * Returns the last consistent snapshot processed (used by the RemoteStore to\n * determine whether to buffer incoming snapshots from the backend).\n */\nexport function localStoreGetLastRemoteSnapshotVersion(\n  localStore: LocalStore\n): Promise<SnapshotVersion> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  return localStoreImpl.persistence.runTransaction(\n    'Get last remote snapshot version',\n    'readonly',\n    txn => localStoreImpl.targetCache.getLastRemoteSnapshotVersion(txn)\n  );\n}\n\n/**\n * Updates the \"ground-state\" (remote) documents. We assume that the remote\n * event reflects any write batches that have been acknowledged or rejected\n * (i.e. we do not re-apply local mutations to updates from this event).\n *\n * LocalDocuments are re-calculated if there are remaining mutations in the\n * queue.\n */\nexport function localStoreApplyRemoteEventToLocalCache(\n  localStore: LocalStore,\n  remoteEvent: RemoteEvent\n): Promise<DocumentMap> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  const remoteVersion = remoteEvent.snapshotVersion;\n  let newTargetDataByTargetMap = localStoreImpl.targetDataByTarget;\n\n  return localStoreImpl.persistence\n    .runTransaction('Apply remote event', 'readwrite-primary', txn => {\n      const documentBuffer = localStoreImpl.remoteDocuments.newChangeBuffer({\n        trackRemovals: true // Make sure document removals show up in `getNewDocumentChanges()`\n      });\n\n      // Reset newTargetDataByTargetMap in case this transaction gets re-run.\n      newTargetDataByTargetMap = localStoreImpl.targetDataByTarget;\n\n      const promises = [] as Array<PersistencePromise<void>>;\n      remoteEvent.targetChanges.forEach((change, targetId) => {\n        const oldTargetData = newTargetDataByTargetMap.get(targetId);\n        if (!oldTargetData) {\n          return;\n        }\n\n        // Only update the remote keys if the target is still active. This\n        // ensures that we can persist the updated target data along with\n        // the updated assignment.\n        promises.push(\n          localStoreImpl.targetCache\n            .removeMatchingKeys(txn, change.removedDocuments, targetId)\n            .next(() => {\n              return localStoreImpl.targetCache.addMatchingKeys(\n                txn,\n                change.addedDocuments,\n                targetId\n              );\n            })\n        );\n\n        let newTargetData = oldTargetData.withSequenceNumber(\n          txn.currentSequenceNumber\n        );\n        if (remoteEvent.targetMismatches.get(targetId) !== null) {\n          newTargetData = newTargetData\n            .withResumeToken(\n              ByteString.EMPTY_BYTE_STRING,\n              SnapshotVersion.min()\n            )\n            .withLastLimboFreeSnapshotVersion(SnapshotVersion.min());\n        } else if (change.resumeToken.approximateByteSize() > 0) {\n          newTargetData = newTargetData.withResumeToken(\n            change.resumeToken,\n            remoteVersion\n          );\n        }\n\n        newTargetDataByTargetMap = newTargetDataByTargetMap.insert(\n          targetId,\n          newTargetData\n        );\n\n        // Update the target data if there are target changes (or if\n        // sufficient time has passed since the last update).\n        if (shouldPersistTargetData(oldTargetData, newTargetData, change)) {\n          promises.push(\n            localStoreImpl.targetCache.updateTargetData(txn, newTargetData)\n          );\n        }\n      });\n\n      let changedDocs = mutableDocumentMap();\n      let existenceChangedKeys = documentKeySet();\n      remoteEvent.documentUpdates.forEach(key => {\n        if (remoteEvent.resolvedLimboDocuments.has(key)) {\n          promises.push(\n            localStoreImpl.persistence.referenceDelegate.updateLimboDocument(\n              txn,\n              key\n            )\n          );\n        }\n      });\n\n      // Each loop iteration only affects its \"own\" doc, so it's safe to get all\n      // the remote documents in advance in a single call.\n      promises.push(\n        populateDocumentChangeBuffer(\n          txn,\n          documentBuffer,\n          remoteEvent.documentUpdates\n        ).next(result => {\n          changedDocs = result.changedDocuments;\n          existenceChangedKeys = result.existenceChangedKeys;\n        })\n      );\n\n      // HACK: The only reason we allow a null snapshot version is so that we\n      // can synthesize remote events when we get permission denied errors while\n      // trying to resolve the state of a locally cached document that is in\n      // limbo.\n      if (!remoteVersion.isEqual(SnapshotVersion.min())) {\n        const updateRemoteVersion = localStoreImpl.targetCache\n          .getLastRemoteSnapshotVersion(txn)\n          .next(lastRemoteSnapshotVersion => {\n            debugAssert(\n              remoteVersion.compareTo(lastRemoteSnapshotVersion) >= 0,\n              'Watch stream reverted to previous snapshot?? ' +\n                remoteVersion +\n                ' < ' +\n                lastRemoteSnapshotVersion\n            );\n            return localStoreImpl.targetCache.setTargetsMetadata(\n              txn,\n              txn.currentSequenceNumber,\n              remoteVersion\n            );\n          });\n        promises.push(updateRemoteVersion);\n      }\n\n      return PersistencePromise.waitFor(promises)\n        .next(() => documentBuffer.apply(txn))\n        .next(() =>\n          localStoreImpl.localDocuments.getLocalViewOfDocuments(\n            txn,\n            changedDocs,\n            existenceChangedKeys\n          )\n        )\n        .next(() => changedDocs);\n    })\n    .then(changedDocs => {\n      localStoreImpl.targetDataByTarget = newTargetDataByTargetMap;\n      return changedDocs;\n    });\n}\n\n/**\n * Populates document change buffer with documents from backend or a bundle.\n * Returns the document changes resulting from applying those documents, and\n * also a set of documents whose existence state are changed as a result.\n *\n * @param txn - Transaction to use to read existing documents from storage.\n * @param documentBuffer - Document buffer to collect the resulted changes to be\n *        applied to storage.\n * @param documents - Documents to be applied.\n */\nfunction populateDocumentChangeBuffer(\n  txn: PersistenceTransaction,\n  documentBuffer: RemoteDocumentChangeBuffer,\n  documents: MutableDocumentMap\n): PersistencePromise<DocumentChangeResult> {\n  let updatedKeys = documentKeySet();\n  let existenceChangedKeys = documentKeySet();\n  documents.forEach(k => (updatedKeys = updatedKeys.add(k)));\n  return documentBuffer.getEntries(txn, updatedKeys).next(existingDocs => {\n    let changedDocuments = mutableDocumentMap();\n    documents.forEach((key, doc) => {\n      const existingDoc = existingDocs.get(key)!;\n\n      // Check if see if there is a existence state change for this document.\n      if (doc.isFoundDocument() !== existingDoc.isFoundDocument()) {\n        existenceChangedKeys = existenceChangedKeys.add(key);\n      }\n\n      // Note: The order of the steps below is important, since we want\n      // to ensure that rejected limbo resolutions (which fabricate\n      // NoDocuments with SnapshotVersion.min()) never add documents to\n      // cache.\n      if (doc.isNoDocument() && doc.version.isEqual(SnapshotVersion.min())) {\n        // NoDocuments with SnapshotVersion.min() are used in manufactured\n        // events. We remove these documents from cache since we lost\n        // access.\n        documentBuffer.removeEntry(key, doc.readTime);\n        changedDocuments = changedDocuments.insert(key, doc);\n      } else if (\n        !existingDoc.isValidDocument() ||\n        doc.version.compareTo(existingDoc.version) > 0 ||\n        (doc.version.compareTo(existingDoc.version) === 0 &&\n          existingDoc.hasPendingWrites)\n      ) {\n        debugAssert(\n          !SnapshotVersion.min().isEqual(doc.readTime),\n          'Cannot add a document when the remote version is zero'\n        );\n        documentBuffer.addEntry(doc);\n        changedDocuments = changedDocuments.insert(key, doc);\n      } else {\n        logDebug(\n          LOG_TAG,\n          'Ignoring outdated watch update for ',\n          key,\n          '. Current version:',\n          existingDoc.version,\n          ' Watch version:',\n          doc.version\n        );\n      }\n    });\n    return { changedDocuments, existenceChangedKeys };\n  });\n}\n\n/**\n * Returns true if the newTargetData should be persisted during an update of\n * an active target. TargetData should always be persisted when a target is\n * being released and should not call this function.\n *\n * While the target is active, TargetData updates can be omitted when nothing\n * about the target has changed except metadata like the resume token or\n * snapshot version. Occasionally it's worth the extra write to prevent these\n * values from getting too stale after a crash, but this doesn't have to be\n * too frequent.\n */\nfunction shouldPersistTargetData(\n  oldTargetData: TargetData,\n  newTargetData: TargetData,\n  change: TargetChange\n): boolean {\n  // Always persist target data if we don't already have a resume token.\n  if (oldTargetData.resumeToken.approximateByteSize() === 0) {\n    return true;\n  }\n\n  // Don't allow resume token changes to be buffered indefinitely. This\n  // allows us to be reasonably up-to-date after a crash and avoids needing\n  // to loop over all active queries on shutdown. Especially in the browser\n  // we may not get time to do anything interesting while the current tab is\n  // closing.\n  const timeDelta =\n    newTargetData.snapshotVersion.toMicroseconds() -\n    oldTargetData.snapshotVersion.toMicroseconds();\n  if (timeDelta >= RESUME_TOKEN_MAX_AGE_MICROS) {\n    return true;\n  }\n\n  // Otherwise if the only thing that has changed about a target is its resume\n  // token it's not worth persisting. Note that the RemoteStore keeps an\n  // in-memory view of the currently active targets which includes the current\n  // resume token, so stream failure or user changes will still use an\n  // up-to-date resume token regardless of what we do here.\n  const changes =\n    change.addedDocuments.size +\n    change.modifiedDocuments.size +\n    change.removedDocuments.size;\n  return changes > 0;\n}\n\n/**\n * Notifies local store of the changed views to locally pin documents.\n */\nexport async function localStoreNotifyLocalViewChanges(\n  localStore: LocalStore,\n  viewChanges: LocalViewChanges[]\n): Promise<void> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  try {\n    await localStoreImpl.persistence.runTransaction(\n      'notifyLocalViewChanges',\n      'readwrite',\n      txn => {\n        return PersistencePromise.forEach(\n          viewChanges,\n          (viewChange: LocalViewChanges) => {\n            return PersistencePromise.forEach(\n              viewChange.addedKeys,\n              (key: DocumentKey) =>\n                localStoreImpl.persistence.referenceDelegate.addReference(\n                  txn,\n                  viewChange.targetId,\n                  key\n                )\n            ).next(() =>\n              PersistencePromise.forEach(\n                viewChange.removedKeys,\n                (key: DocumentKey) =>\n                  localStoreImpl.persistence.referenceDelegate.removeReference(\n                    txn,\n                    viewChange.targetId,\n                    key\n                  )\n              )\n            );\n          }\n        );\n      }\n    );\n  } catch (e) {\n    if (isIndexedDbTransactionError(e as Error)) {\n      // If `notifyLocalViewChanges` fails, we did not advance the sequence\n      // number for the documents that were included in this transaction.\n      // This might trigger them to be deleted earlier than they otherwise\n      // would have, but it should not invalidate the integrity of the data.\n      logDebug(LOG_TAG, 'Failed to update sequence numbers: ' + e);\n    } else {\n      throw e;\n    }\n  }\n\n  for (const viewChange of viewChanges) {\n    const targetId = viewChange.targetId;\n\n    if (!viewChange.fromCache) {\n      const targetData = localStoreImpl.targetDataByTarget.get(targetId);\n      debugAssert(\n        targetData !== null,\n        `Can't set limbo-free snapshot version for unknown target: ${targetId}`\n      );\n\n      // Advance the last limbo free snapshot version\n      const lastLimboFreeSnapshotVersion = targetData.snapshotVersion;\n      const updatedTargetData = targetData.withLastLimboFreeSnapshotVersion(\n        lastLimboFreeSnapshotVersion\n      );\n      localStoreImpl.targetDataByTarget =\n        localStoreImpl.targetDataByTarget.insert(targetId, updatedTargetData);\n\n      // TODO(b/272564316): Apply the optimization done on other platforms.\n      // This is a problem for web because saving the updated targetData from\n      // non-primary client conflicts with what primary client saved.\n    }\n  }\n}\n\n/**\n * Gets the mutation batch after the passed in batchId in the mutation queue\n * or null if empty.\n * @param afterBatchId - If provided, the batch to search after.\n * @returns The next mutation or null if there wasn't one.\n */\nexport function localStoreGetNextMutationBatch(\n  localStore: LocalStore,\n  afterBatchId?: BatchId\n): Promise<MutationBatch | null> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  return localStoreImpl.persistence.runTransaction(\n    'Get next mutation batch',\n    'readonly',\n    txn => {\n      if (afterBatchId === undefined) {\n        afterBatchId = BATCHID_UNKNOWN;\n      }\n      return localStoreImpl.mutationQueue.getNextMutationBatchAfterBatchId(\n        txn,\n        afterBatchId\n      );\n    }\n  );\n}\n\n/**\n * Reads the current value of a Document with a given key or null if not\n * found - used for testing.\n */\nexport function localStoreReadDocument(\n  localStore: LocalStore,\n  key: DocumentKey\n): Promise<Document> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  return localStoreImpl.persistence.runTransaction(\n    'read document',\n    'readonly',\n    txn => localStoreImpl.localDocuments.getDocument(txn, key)\n  );\n}\n\n/**\n * Assigns the given target an internal ID so that its results can be pinned so\n * they don't get GC'd. A target must be allocated in the local store before\n * the store can be used to manage its view.\n *\n * Allocating an already allocated `Target` will return the existing `TargetData`\n * for that `Target`.\n */\nexport function localStoreAllocateTarget(\n  localStore: LocalStore,\n  target: Target\n): Promise<TargetData> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  return localStoreImpl.persistence\n    .runTransaction('Allocate target', 'readwrite', txn => {\n      let targetData: TargetData;\n      return localStoreImpl.targetCache\n        .getTargetData(txn, target)\n        .next((cached: TargetData | null) => {\n          if (cached) {\n            // This target has been listened to previously, so reuse the\n            // previous targetID.\n            // TODO(mcg): freshen last accessed date?\n            targetData = cached;\n            return PersistencePromise.resolve(targetData);\n          } else {\n            return localStoreImpl.targetCache\n              .allocateTargetId(txn)\n              .next(targetId => {\n                targetData = new TargetData(\n                  target,\n                  targetId,\n                  TargetPurpose.Listen,\n                  txn.currentSequenceNumber\n                );\n                return localStoreImpl.targetCache\n                  .addTargetData(txn, targetData)\n                  .next(() => targetData);\n              });\n          }\n        });\n    })\n    .then(targetData => {\n      // If Multi-Tab is enabled, the existing target data may be newer than\n      // the in-memory data\n      const cachedTargetData = localStoreImpl.targetDataByTarget.get(\n        targetData.targetId\n      );\n      if (\n        cachedTargetData === null ||\n        targetData.snapshotVersion.compareTo(cachedTargetData.snapshotVersion) >\n          0\n      ) {\n        localStoreImpl.targetDataByTarget =\n          localStoreImpl.targetDataByTarget.insert(\n            targetData.targetId,\n            targetData\n          );\n        localStoreImpl.targetIdByTarget.set(target, targetData.targetId);\n      }\n      return targetData;\n    });\n}\n\n/**\n * Returns the TargetData as seen by the LocalStore, including updates that may\n * have not yet been persisted to the TargetCache.\n */\n// Visible for testing.\nexport function localStoreGetTargetData(\n  localStore: LocalStore,\n  transaction: PersistenceTransaction,\n  target: Target\n): PersistencePromise<TargetData | null> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  const targetId = localStoreImpl.targetIdByTarget.get(target);\n  if (targetId !== undefined) {\n    return PersistencePromise.resolve<TargetData | null>(\n      localStoreImpl.targetDataByTarget.get(targetId)\n    );\n  } else {\n    return localStoreImpl.targetCache.getTargetData(transaction, target);\n  }\n}\n\n/**\n * Unpins all the documents associated with the given target. If\n * `keepPersistedTargetData` is set to false and Eager GC enabled, the method\n * directly removes the associated target data from the target cache.\n *\n * Releasing a non-existing `Target` is a no-op.\n */\n// PORTING NOTE: `keepPersistedTargetData` is multi-tab only.\nexport async function localStoreReleaseTarget(\n  localStore: LocalStore,\n  targetId: number,\n  keepPersistedTargetData: boolean\n): Promise<void> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  const targetData = localStoreImpl.targetDataByTarget.get(targetId);\n  debugAssert(\n    targetData !== null,\n    `Tried to release nonexistent target: ${targetId}`\n  );\n\n  const mode = keepPersistedTargetData ? 'readwrite' : 'readwrite-primary';\n\n  try {\n    if (!keepPersistedTargetData) {\n      await localStoreImpl.persistence.runTransaction(\n        'Release target',\n        mode,\n        txn => {\n          return localStoreImpl.persistence.referenceDelegate.removeTarget(\n            txn,\n            targetData!\n          );\n        }\n      );\n    }\n  } catch (e) {\n    if (isIndexedDbTransactionError(e as Error)) {\n      // All `releaseTarget` does is record the final metadata state for the\n      // target, but we've been recording this periodically during target\n      // activity. If we lose this write this could cause a very slight\n      // difference in the order of target deletion during GC, but we\n      // don't define exact LRU semantics so this is acceptable.\n      logDebug(\n        LOG_TAG,\n        `Failed to update sequence numbers for target ${targetId}: ${e}`\n      );\n    } else {\n      throw e;\n    }\n  }\n\n  localStoreImpl.targetDataByTarget =\n    localStoreImpl.targetDataByTarget.remove(targetId);\n  localStoreImpl.targetIdByTarget.delete(targetData!.target);\n}\n\n/**\n * Runs the specified query against the local store and returns the results,\n * potentially taking advantage of query data from previous executions (such\n * as the set of remote keys).\n *\n * @param usePreviousResults - Whether results from previous executions can\n * be used to optimize this query execution.\n */\nexport function localStoreExecuteQuery(\n  localStore: LocalStore,\n  query: Query,\n  usePreviousResults: boolean\n): Promise<QueryResult> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  let lastLimboFreeSnapshotVersion = SnapshotVersion.min();\n  let remoteKeys = documentKeySet();\n\n  return localStoreImpl.persistence.runTransaction(\n    'Execute query',\n    'readwrite', // Use readwrite instead of readonly so indexes can be created\n    txn => {\n      return localStoreGetTargetData(localStoreImpl, txn, queryToTarget(query))\n        .next(targetData => {\n          if (targetData) {\n            lastLimboFreeSnapshotVersion =\n              targetData.lastLimboFreeSnapshotVersion;\n            return localStoreImpl.targetCache\n              .getMatchingKeysForTargetId(txn, targetData.targetId)\n              .next(result => {\n                remoteKeys = result;\n              });\n          }\n        })\n        .next(() =>\n          localStoreImpl.queryEngine.getDocumentsMatchingQuery(\n            txn,\n            query,\n            usePreviousResults\n              ? lastLimboFreeSnapshotVersion\n              : SnapshotVersion.min(),\n            usePreviousResults ? remoteKeys : documentKeySet()\n          )\n        )\n        .next(documents => {\n          setMaxReadTime(\n            localStoreImpl,\n            queryCollectionGroup(query),\n            documents\n          );\n          return { documents, remoteKeys };\n        });\n    }\n  );\n}\n\nfunction applyWriteToRemoteDocuments(\n  localStoreImpl: LocalStoreImpl,\n  txn: PersistenceTransaction,\n  batchResult: MutationBatchResult,\n  documentBuffer: RemoteDocumentChangeBuffer\n): PersistencePromise<void> {\n  const batch = batchResult.batch;\n  const docKeys = batch.keys();\n  let promiseChain = PersistencePromise.resolve();\n  docKeys.forEach(docKey => {\n    promiseChain = promiseChain\n      .next(() => documentBuffer.getEntry(txn, docKey))\n      .next(doc => {\n        const ackVersion = batchResult.docVersions.get(docKey);\n        hardAssert(\n          ackVersion !== null,\n          'ackVersions should contain every doc in the write.'\n        );\n        if (doc.version.compareTo(ackVersion!) < 0) {\n          batch.applyToRemoteDocument(doc, batchResult);\n          if (doc.isValidDocument()) {\n            // We use the commitVersion as the readTime rather than the\n            // document's updateTime since the updateTime is not advanced\n            // for updates that do not modify the underlying document.\n            doc.setReadTime(batchResult.commitVersion);\n            documentBuffer.addEntry(doc);\n          }\n        }\n      });\n  });\n  return promiseChain.next(() =>\n    localStoreImpl.mutationQueue.removeMutationBatch(txn, batch)\n  );\n}\n\n/** Returns the local view of the documents affected by a mutation batch. */\n// PORTING NOTE: Multi-Tab only.\nexport function localStoreLookupMutationDocuments(\n  localStore: LocalStore,\n  batchId: BatchId\n): Promise<DocumentMap | null> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  const mutationQueueImpl = debugCast(\n    localStoreImpl.mutationQueue,\n    IndexedDbMutationQueue // We only support IndexedDb in multi-tab mode.\n  );\n  return localStoreImpl.persistence.runTransaction(\n    'Lookup mutation documents',\n    'readonly',\n    txn => {\n      return mutationQueueImpl.lookupMutationKeys(txn, batchId).next(keys => {\n        if (keys) {\n          return localStoreImpl.localDocuments.getDocuments(\n            txn,\n            keys\n          ) as PersistencePromise<DocumentMap | null>;\n        } else {\n          return PersistencePromise.resolve<DocumentMap | null>(null);\n        }\n      });\n    }\n  );\n}\n\n// PORTING NOTE: Multi-Tab only.\nexport function localStoreRemoveCachedMutationBatchMetadata(\n  localStore: LocalStore,\n  batchId: BatchId\n): void {\n  const mutationQueueImpl = debugCast(\n    debugCast(localStore, LocalStoreImpl).mutationQueue,\n    IndexedDbMutationQueue // We only support IndexedDb in multi-tab mode.\n  );\n  mutationQueueImpl.removeCachedMutationKeys(batchId);\n}\n\n// PORTING NOTE: Multi-Tab only.\nexport function localStoreGetActiveClients(\n  localStore: LocalStore\n): Promise<ClientId[]> {\n  const persistenceImpl = debugCast(\n    debugCast(localStore, LocalStoreImpl).persistence,\n    IndexedDbPersistence // We only support IndexedDb in multi-tab mode.\n  );\n  return persistenceImpl.getActiveClients();\n}\n\n// PORTING NOTE: Multi-Tab only.\nexport function localStoreGetCachedTarget(\n  localStore: LocalStore,\n  targetId: TargetId\n): Promise<Target | null> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  const targetCacheImpl = debugCast(\n    localStoreImpl.targetCache,\n    IndexedDbTargetCache // We only support IndexedDb in multi-tab mode.\n  );\n  const cachedTargetData = localStoreImpl.targetDataByTarget.get(targetId);\n  if (cachedTargetData) {\n    return Promise.resolve(cachedTargetData.target);\n  } else {\n    return localStoreImpl.persistence.runTransaction(\n      'Get target data',\n      'readonly',\n      txn => {\n        return targetCacheImpl\n          .getTargetDataForTarget(txn, targetId)\n          .next(targetData => (targetData ? targetData.target : null));\n      }\n    );\n  }\n}\n\n/**\n * Returns the set of documents that have been updated since the last call.\n * If this is the first call, returns the set of changes since client\n * initialization. Further invocations will return document that have changed\n * since the prior call.\n */\n// PORTING NOTE: Multi-Tab only.\nexport function localStoreGetNewDocumentChanges(\n  localStore: LocalStore,\n  collectionGroup: string\n): Promise<DocumentMap> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n\n  // Get the current maximum read time for the collection. This should always\n  // exist, but to reduce the chance for regressions we default to\n  // SnapshotVersion.Min()\n  // TODO(indexing): Consider removing the default value.\n  const readTime =\n    localStoreImpl.collectionGroupReadTime.get(collectionGroup) ||\n    SnapshotVersion.min();\n\n  return localStoreImpl.persistence\n    .runTransaction('Get new document changes', 'readonly', txn =>\n      localStoreImpl.remoteDocuments.getAllFromCollectionGroup(\n        txn,\n        collectionGroup,\n        newIndexOffsetSuccessorFromReadTime(readTime, INITIAL_LARGEST_BATCH_ID),\n        /* limit= */ Number.MAX_SAFE_INTEGER\n      )\n    )\n    .then(changedDocs => {\n      setMaxReadTime(localStoreImpl, collectionGroup, changedDocs);\n      return changedDocs;\n    });\n}\n\n/** Sets the collection group's maximum read time from the given documents. */\n// PORTING NOTE: Multi-Tab only.\nfunction setMaxReadTime(\n  localStoreImpl: LocalStoreImpl,\n  collectionGroup: string,\n  changedDocs: SortedMap<DocumentKey, Document>\n): void {\n  let readTime =\n    localStoreImpl.collectionGroupReadTime.get(collectionGroup) ||\n    SnapshotVersion.min();\n  changedDocs.forEach((_, doc) => {\n    if (doc.readTime.compareTo(readTime) > 0) {\n      readTime = doc.readTime;\n    }\n  });\n  localStoreImpl.collectionGroupReadTime.set(collectionGroup, readTime);\n}\n\n/**\n * Creates a new target using the given bundle name, which will be used to\n * hold the keys of all documents from the bundle in query-document mappings.\n * This ensures that the loaded documents do not get garbage collected\n * right away.\n */\nfunction umbrellaTarget(bundleName: string): Target {\n  // It is OK that the path used for the query is not valid, because this will\n  // not be read and queried.\n  return queryToTarget(\n    newQueryForPath(ResourcePath.fromString(`__bundle__/docs/${bundleName}`))\n  );\n}\n\n/**\n * Applies the documents from a bundle to the \"ground-state\" (remote)\n * documents.\n *\n * LocalDocuments are re-calculated if there are remaining mutations in the\n * queue.\n */\nexport async function localStoreApplyBundledDocuments(\n  localStore: LocalStore,\n  bundleConverter: BundleConverter,\n  documents: BundledDocuments,\n  bundleName: string\n): Promise<DocumentMap> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  let documentKeys = documentKeySet();\n  let documentMap = mutableDocumentMap();\n  for (const bundleDoc of documents) {\n    const documentKey = bundleConverter.toDocumentKey(bundleDoc.metadata.name!);\n    if (bundleDoc.document) {\n      documentKeys = documentKeys.add(documentKey);\n    }\n    const doc = bundleConverter.toMutableDocument(bundleDoc);\n    doc.setReadTime(\n      bundleConverter.toSnapshotVersion(bundleDoc.metadata.readTime!)\n    );\n    documentMap = documentMap.insert(documentKey, doc);\n  }\n\n  const documentBuffer = localStoreImpl.remoteDocuments.newChangeBuffer({\n    trackRemovals: true // Make sure document removals show up in `getNewDocumentChanges()`\n  });\n\n  // Allocates a target to hold all document keys from the bundle, such that\n  // they will not get garbage collected right away.\n  const umbrellaTargetData = await localStoreAllocateTarget(\n    localStoreImpl,\n    umbrellaTarget(bundleName)\n  );\n  return localStoreImpl.persistence.runTransaction(\n    'Apply bundle documents',\n    'readwrite',\n    txn => {\n      return populateDocumentChangeBuffer(txn, documentBuffer, documentMap)\n        .next(documentChangeResult => {\n          documentBuffer.apply(txn);\n          return documentChangeResult;\n        })\n        .next(documentChangeResult => {\n          return localStoreImpl.targetCache\n            .removeMatchingKeysForTargetId(txn, umbrellaTargetData.targetId)\n            .next(() =>\n              localStoreImpl.targetCache.addMatchingKeys(\n                txn,\n                documentKeys,\n                umbrellaTargetData.targetId\n              )\n            )\n            .next(() =>\n              localStoreImpl.localDocuments.getLocalViewOfDocuments(\n                txn,\n                documentChangeResult.changedDocuments,\n                documentChangeResult.existenceChangedKeys\n              )\n            )\n            .next(() => documentChangeResult.changedDocuments);\n        });\n    }\n  );\n}\n\n/**\n * Returns a promise of a boolean to indicate if the given bundle has already\n * been loaded and the create time is newer than the current loading bundle.\n */\nexport function localStoreHasNewerBundle(\n  localStore: LocalStore,\n  bundleMetadata: BundleMetadata\n): Promise<boolean> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  const currentReadTime = fromVersion(bundleMetadata.createTime!);\n  return localStoreImpl.persistence\n    .runTransaction('hasNewerBundle', 'readonly', transaction => {\n      return localStoreImpl.bundleCache.getBundleMetadata(\n        transaction,\n        bundleMetadata.id!\n      );\n    })\n    .then(cached => {\n      return !!cached && cached.createTime!.compareTo(currentReadTime) >= 0;\n    });\n}\n\n/**\n * Saves the given `BundleMetadata` to local persistence.\n */\nexport function localStoreSaveBundle(\n  localStore: LocalStore,\n  bundleMetadata: BundleMetadata\n): Promise<void> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  return localStoreImpl.persistence.runTransaction(\n    'Save bundle',\n    'readwrite',\n    transaction => {\n      return localStoreImpl.bundleCache.saveBundleMetadata(\n        transaction,\n        bundleMetadata\n      );\n    }\n  );\n}\n\n/**\n * Returns a promise of a `NamedQuery` associated with given query name. Promise\n * resolves to undefined if no persisted data can be found.\n */\nexport function localStoreGetNamedQuery(\n  localStore: LocalStore,\n  queryName: string\n): Promise<NamedQuery | undefined> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  return localStoreImpl.persistence.runTransaction(\n    'Get named query',\n    'readonly',\n    transaction =>\n      localStoreImpl.bundleCache.getNamedQuery(transaction, queryName)\n  );\n}\n\n/**\n * Saves the given `NamedQuery` to local persistence.\n */\nexport async function localStoreSaveNamedQuery(\n  localStore: LocalStore,\n  query: ProtoNamedQuery,\n  documents: DocumentKeySet = documentKeySet()\n): Promise<void> {\n  // Allocate a target for the named query such that it can be resumed\n  // from associated read time if users use it to listen.\n  // NOTE: this also means if no corresponding target exists, the new target\n  // will remain active and will not get collected, unless users happen to\n  // unlisten the query somehow.\n  const allocated = await localStoreAllocateTarget(\n    localStore,\n    queryToTarget(fromBundledQuery(query.bundledQuery!))\n  );\n\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  return localStoreImpl.persistence.runTransaction(\n    'Save named query',\n    'readwrite',\n    transaction => {\n      const readTime = fromVersion(query.readTime!);\n      // Simply save the query itself if it is older than what the SDK already\n      // has.\n      if (allocated.snapshotVersion.compareTo(readTime) >= 0) {\n        return localStoreImpl.bundleCache.saveNamedQuery(transaction, query);\n      }\n\n      // Update existing target data because the query from the bundle is newer.\n      const newTargetData = allocated.withResumeToken(\n        ByteString.EMPTY_BYTE_STRING,\n        readTime\n      );\n      localStoreImpl.targetDataByTarget =\n        localStoreImpl.targetDataByTarget.insert(\n          newTargetData.targetId,\n          newTargetData\n        );\n      return localStoreImpl.targetCache\n        .updateTargetData(transaction, newTargetData)\n        .next(() =>\n          localStoreImpl.targetCache.removeMatchingKeysForTargetId(\n            transaction,\n            allocated.targetId\n          )\n        )\n        .next(() =>\n          localStoreImpl.targetCache.addMatchingKeys(\n            transaction,\n            documents,\n            allocated.targetId\n          )\n        )\n        .next(() =>\n          localStoreImpl.bundleCache.saveNamedQuery(transaction, query)\n        );\n    }\n  );\n}\n\nexport async function localStoreConfigureFieldIndexes(\n  localStore: LocalStore,\n  newFieldIndexes: FieldIndex[]\n): Promise<void> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  const indexManager = localStoreImpl.indexManager;\n  const promises: Array<PersistencePromise<void>> = [];\n  return localStoreImpl.persistence.runTransaction(\n    'Configure indexes',\n    'readwrite',\n    transaction =>\n      indexManager\n        .getFieldIndexes(transaction)\n        .next(oldFieldIndexes =>\n          diffArrays(\n            oldFieldIndexes,\n            newFieldIndexes,\n            fieldIndexSemanticComparator,\n            fieldIndex => {\n              promises.push(\n                indexManager.addFieldIndex(transaction, fieldIndex)\n              );\n            },\n            fieldIndex => {\n              promises.push(\n                indexManager.deleteFieldIndex(transaction, fieldIndex)\n              );\n            }\n          )\n        )\n        .next(() => PersistencePromise.waitFor(promises))\n  );\n}\n\nexport function localStoreSetIndexAutoCreationEnabled(\n  localStore: LocalStore,\n  isEnabled: boolean\n): void {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  localStoreImpl.queryEngine.indexAutoCreationEnabled = isEnabled;\n}\n\nexport function localStoreDeleteAllFieldIndexes(\n  localStore: LocalStore\n): Promise<void> {\n  const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n  const indexManager = localStoreImpl.indexManager;\n  return localStoreImpl.persistence.runTransaction(\n    'Delete All Indexes',\n    'readwrite',\n    transaction => indexManager.deleteAllFieldIndexes(transaction)\n  );\n}\n\n/**\n * Test-only hooks into the SDK for use exclusively by tests.\n */\nexport class TestingHooks {\n  private constructor() {\n    throw new Error('creating instances is not supported');\n  }\n\n  static setIndexAutoCreationSettings(\n    localStore: LocalStore,\n    settings: {\n      indexAutoCreationMinCollectionSize?: number;\n      relativeIndexReadCostPerDocument?: number;\n    }\n  ): void {\n    const localStoreImpl = debugCast(localStore, LocalStoreImpl);\n    if (settings.indexAutoCreationMinCollectionSize !== undefined) {\n      localStoreImpl.queryEngine.indexAutoCreationMinCollectionSize =\n        settings.indexAutoCreationMinCollectionSize;\n    }\n    if (settings.relativeIndexReadCostPerDocument !== undefined) {\n      localStoreImpl.queryEngine.relativeIndexReadCostPerDocument =\n        settings.relativeIndexReadCostPerDocument;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { User } from '../auth/user';\nimport { ListenSequence } from '../core/listen_sequence';\nimport {\n  BatchId,\n  ListenSequenceNumber,\n  MutationBatchState,\n  OnlineState,\n  TargetId\n} from '../core/types';\nimport { TargetIdSet, targetIdSet } from '../model/collections';\nimport { hardAssert, debugAssert } from '../util/assert';\nimport { AsyncQueue } from '../util/async_queue';\nimport { Code, FirestoreError } from '../util/error';\nimport { logError, logDebug } from '../util/log';\nimport { primitiveComparator } from '../util/misc';\nimport { SortedMap } from '../util/sorted_map';\nimport { SortedSet } from '../util/sorted_set';\nimport { isSafeInteger, WindowLike } from '../util/types';\n\nimport {\n  CLIENT_STATE_KEY_PREFIX,\n  ClientStateSchema,\n  createBundleLoadedKey,\n  createWebStorageClientStateKey,\n  createWebStorageMutationBatchKey,\n  createWebStorageOnlineStateKey,\n  createWebStorageQueryTargetMetadataKey,\n  createWebStorageSequenceNumberKey,\n  MUTATION_BATCH_KEY_PREFIX,\n  MutationMetadataSchema,\n  QUERY_TARGET_KEY_PREFIX,\n  QueryTargetStateSchema,\n  SharedOnlineStateSchema\n} from './shared_client_state_schema';\nimport {\n  QueryTargetState,\n  SharedClientStateSyncer\n} from './shared_client_state_syncer';\n\nconst LOG_TAG = 'SharedClientState';\n\n/**\n * A randomly-generated key assigned to each Firestore instance at startup.\n */\nexport type ClientId = string;\n\n/**\n * A `SharedClientState` keeps track of the global state of the mutations\n * and query targets for all active clients with the same persistence key (i.e.\n * project ID and FirebaseApp name). It relays local changes to other clients\n * and updates its local state as new state is observed.\n *\n * `SharedClientState` is primarily used for synchronization in Multi-Tab\n * environments. Each tab is responsible for registering its active query\n * targets and mutations. `SharedClientState` will then notify the listener\n * assigned to `.syncEngine` for updates to mutations and queries that\n * originated in other clients.\n *\n * To receive notifications, `.syncEngine` and `.onlineStateHandler` has to be\n * assigned before calling `start()`.\n */\nexport interface SharedClientState {\n  onlineStateHandler: ((onlineState: OnlineState) => void) | null;\n  sequenceNumberHandler:\n    | ((sequenceNumber: ListenSequenceNumber) => void)\n    | null;\n\n  /** Registers the Mutation Batch ID of a newly pending mutation. */\n  addPendingMutation(batchId: BatchId): void;\n\n  /**\n   * Records that a pending mutation has been acknowledged or rejected.\n   * Called by the primary client to notify secondary clients of mutation\n   * results as they come back from the backend.\n   */\n  updateMutationState(\n    batchId: BatchId,\n    state: 'acknowledged' | 'rejected',\n    error?: FirestoreError\n  ): void;\n\n  /**\n   * Associates a new Query Target ID with the local Firestore client. Returns\n   * the new query state for the query (which can be 'current' if the query is\n   * already associated with another tab).\n   *\n   * If the target id is already associated with local client, the method simply\n   * returns its `QueryTargetState`.\n   */\n  addLocalQueryTarget(targetId: TargetId): QueryTargetState;\n\n  /** Removes the Query Target ID association from the local client. */\n  removeLocalQueryTarget(targetId: TargetId): void;\n\n  /** Checks whether the target is associated with the local client. */\n  isLocalQueryTarget(targetId: TargetId): boolean;\n\n  /**\n   * Processes an update to a query target.\n   *\n   * Called by the primary client to notify secondary clients of document\n   * changes or state transitions that affect the provided query target.\n   */\n  updateQueryState(\n    targetId: TargetId,\n    state: QueryTargetState,\n    error?: FirestoreError\n  ): void;\n\n  /**\n   * Removes the target's metadata entry.\n   *\n   * Called by the primary client when all clients stopped listening to a query\n   * target.\n   */\n  clearQueryState(targetId: TargetId): void;\n\n  /**\n   * Gets the active Query Targets IDs for all active clients.\n   *\n   * The implementation for this may require O(n) runtime, where 'n' is the size\n   * of the result set.\n   */\n  // Visible for testing\n  getAllActiveQueryTargets(): SortedSet<TargetId>;\n\n  /**\n   * Checks whether the provided target ID is currently being listened to by\n   * any of the active clients.\n   *\n   * The implementation may require O(n*log m) runtime, where 'n' is the number\n   * of clients and 'm' the number of targets.\n   */\n  isActiveQueryTarget(targetId: TargetId): boolean;\n\n  /**\n   * Starts the SharedClientState, reads existing client data and registers\n   * listeners for updates to new and existing clients.\n   */\n  start(): Promise<void>;\n\n  /** Shuts down the `SharedClientState` and its listeners. */\n  shutdown(): void;\n\n  /**\n   * Changes the active user and removes all existing user-specific data. The\n   * user change does not call back into SyncEngine (for example, no mutations\n   * will be marked as removed).\n   */\n  handleUserChange(\n    user: User,\n    removedBatchIds: BatchId[],\n    addedBatchIds: BatchId[]\n  ): void;\n\n  /** Changes the shared online state of all clients. */\n  setOnlineState(onlineState: OnlineState): void;\n\n  writeSequenceNumber(sequenceNumber: ListenSequenceNumber): void;\n\n  /**\n   * Notifies other clients when remote documents have changed due to loading\n   * a bundle.\n   *\n   * @param collectionGroups The collection groups affected by this bundle.\n   */\n  notifyBundleLoaded(collectionGroups: Set<string>): void;\n}\n\n/**\n * Holds the state of a mutation batch, including its user ID, batch ID and\n * whether the batch is 'pending', 'acknowledged' or 'rejected'.\n */\n// Visible for testing\nexport class MutationMetadata {\n  constructor(\n    readonly user: User,\n    readonly batchId: BatchId,\n    readonly state: MutationBatchState,\n    readonly error?: FirestoreError\n  ) {\n    debugAssert(\n      (error !== undefined) === (state === 'rejected'),\n      `MutationMetadata must contain an error iff state is 'rejected'`\n    );\n  }\n\n  /**\n   * Parses a MutationMetadata from its JSON representation in WebStorage.\n   * Logs a warning and returns null if the format of the data is not valid.\n   */\n  static fromWebStorageEntry(\n    user: User,\n    batchId: BatchId,\n    value: string\n  ): MutationMetadata | null {\n    const mutationBatch = JSON.parse(value) as MutationMetadataSchema;\n\n    let validData =\n      typeof mutationBatch === 'object' &&\n      ['pending', 'acknowledged', 'rejected'].indexOf(mutationBatch.state) !==\n        -1 &&\n      (mutationBatch.error === undefined ||\n        typeof mutationBatch.error === 'object');\n\n    let firestoreError: FirestoreError | undefined = undefined;\n\n    if (validData && mutationBatch.error) {\n      validData =\n        typeof mutationBatch.error.message === 'string' &&\n        typeof mutationBatch.error.code === 'string';\n      if (validData) {\n        firestoreError = new FirestoreError(\n          mutationBatch.error.code as Code,\n          mutationBatch.error.message\n        );\n      }\n    }\n\n    if (validData) {\n      return new MutationMetadata(\n        user,\n        batchId,\n        mutationBatch.state,\n        firestoreError\n      );\n    } else {\n      logError(\n        LOG_TAG,\n        `Failed to parse mutation state for ID '${batchId}': ${value}`\n      );\n      return null;\n    }\n  }\n\n  toWebStorageJSON(): string {\n    const batchMetadata: MutationMetadataSchema = {\n      state: this.state,\n      updateTimeMs: Date.now() // Modify the existing value to trigger update.\n    };\n\n    if (this.error) {\n      batchMetadata.error = {\n        code: this.error.code,\n        message: this.error.message\n      };\n    }\n\n    return JSON.stringify(batchMetadata);\n  }\n}\n\n/**\n * Holds the state of a query target, including its target ID and whether the\n * target is 'not-current', 'current' or 'rejected'.\n */\n// Visible for testing\nexport class QueryTargetMetadata {\n  constructor(\n    readonly targetId: TargetId,\n    readonly state: QueryTargetState,\n    readonly error?: FirestoreError\n  ) {\n    debugAssert(\n      (error !== undefined) === (state === 'rejected'),\n      `QueryTargetMetadata must contain an error iff state is 'rejected'`\n    );\n  }\n\n  /**\n   * Parses a QueryTargetMetadata from its JSON representation in WebStorage.\n   * Logs a warning and returns null if the format of the data is not valid.\n   */\n  static fromWebStorageEntry(\n    targetId: TargetId,\n    value: string\n  ): QueryTargetMetadata | null {\n    const targetState = JSON.parse(value) as QueryTargetStateSchema;\n\n    let validData =\n      typeof targetState === 'object' &&\n      ['not-current', 'current', 'rejected'].indexOf(targetState.state) !==\n        -1 &&\n      (targetState.error === undefined ||\n        typeof targetState.error === 'object');\n\n    let firestoreError: FirestoreError | undefined = undefined;\n\n    if (validData && targetState.error) {\n      validData =\n        typeof targetState.error.message === 'string' &&\n        typeof targetState.error.code === 'string';\n      if (validData) {\n        firestoreError = new FirestoreError(\n          targetState.error.code as Code,\n          targetState.error.message\n        );\n      }\n    }\n\n    if (validData) {\n      return new QueryTargetMetadata(\n        targetId,\n        targetState.state,\n        firestoreError\n      );\n    } else {\n      logError(\n        LOG_TAG,\n        `Failed to parse target state for ID '${targetId}': ${value}`\n      );\n      return null;\n    }\n  }\n\n  toWebStorageJSON(): string {\n    const targetState: QueryTargetStateSchema = {\n      state: this.state,\n      updateTimeMs: Date.now() // Modify the existing value to trigger update.\n    };\n\n    if (this.error) {\n      targetState.error = {\n        code: this.error.code,\n        message: this.error.message\n      };\n    }\n\n    return JSON.stringify(targetState);\n  }\n}\n\n/**\n * Metadata state of a single client denoting the query targets it is actively\n * listening to the watch.\n */\n// Visible for testing.\nexport interface ClientState {\n  readonly activeTargetIds: TargetIdSet;\n}\n\n/**\n * This class represents the immutable ClientState for a client read from\n * WebStorage, containing the list of active query targets.\n */\nclass RemoteClientState implements ClientState {\n  private constructor(\n    readonly clientId: ClientId,\n    readonly activeTargetIds: TargetIdSet\n  ) {}\n\n  /**\n   * Parses a RemoteClientState from the JSON representation in WebStorage.\n   * Logs a warning and returns null if the format of the data is not valid.\n   */\n  static fromWebStorageEntry(\n    clientId: ClientId,\n    value: string\n  ): RemoteClientState | null {\n    const clientState = JSON.parse(value) as ClientStateSchema;\n\n    let validData =\n      typeof clientState === 'object' &&\n      clientState.activeTargetIds instanceof Array;\n\n    let activeTargetIdsSet = targetIdSet();\n\n    for (let i = 0; validData && i < clientState.activeTargetIds.length; ++i) {\n      validData = isSafeInteger(clientState.activeTargetIds[i]);\n      activeTargetIdsSet = activeTargetIdsSet.add(\n        clientState.activeTargetIds[i]\n      );\n    }\n\n    if (validData) {\n      return new RemoteClientState(clientId, activeTargetIdsSet);\n    } else {\n      logError(\n        LOG_TAG,\n        `Failed to parse client data for instance '${clientId}': ${value}`\n      );\n      return null;\n    }\n  }\n}\n\n/**\n * This class represents the online state for all clients participating in\n * multi-tab. The online state is only written to by the primary client, and\n * used in secondary clients to update their query views.\n */\nexport class SharedOnlineState {\n  constructor(readonly clientId: string, readonly onlineState: OnlineState) {}\n\n  /**\n   * Parses a SharedOnlineState from its JSON representation in WebStorage.\n   * Logs a warning and returns null if the format of the data is not valid.\n   */\n  static fromWebStorageEntry(value: string): SharedOnlineState | null {\n    const onlineState = JSON.parse(value) as SharedOnlineStateSchema;\n\n    const validData =\n      typeof onlineState === 'object' &&\n      ['Unknown', 'Online', 'Offline'].indexOf(onlineState.onlineState) !==\n        -1 &&\n      typeof onlineState.clientId === 'string';\n\n    if (validData) {\n      return new SharedOnlineState(\n        onlineState.clientId,\n        onlineState.onlineState as OnlineState\n      );\n    } else {\n      logError(LOG_TAG, `Failed to parse online state: ${value}`);\n      return null;\n    }\n  }\n}\n\n/**\n * Metadata state of the local client. Unlike `RemoteClientState`, this class is\n * mutable and keeps track of all pending mutations, which allows us to\n * update the range of pending mutation batch IDs as new mutations are added or\n * removed.\n *\n * The data in `LocalClientState` is not read from WebStorage and instead\n * updated via its instance methods. The updated state can be serialized via\n * `toWebStorageJSON()`.\n */\n// Visible for testing.\nexport class LocalClientState implements ClientState {\n  activeTargetIds = targetIdSet();\n\n  addQueryTarget(targetId: TargetId): void {\n    this.activeTargetIds = this.activeTargetIds.add(targetId);\n  }\n\n  removeQueryTarget(targetId: TargetId): void {\n    this.activeTargetIds = this.activeTargetIds.delete(targetId);\n  }\n\n  /**\n   * Converts this entry into a JSON-encoded format we can use for WebStorage.\n   * Does not encode `clientId` as it is part of the key in WebStorage.\n   */\n  toWebStorageJSON(): string {\n    const data: ClientStateSchema = {\n      activeTargetIds: this.activeTargetIds.toArray(),\n      updateTimeMs: Date.now() // Modify the existing value to trigger update.\n    };\n    return JSON.stringify(data);\n  }\n}\n\n/**\n * `WebStorageSharedClientState` uses WebStorage (window.localStorage) as the\n * backing store for the SharedClientState. It keeps track of all active\n * clients and supports modifications of the local client's data.\n */\nexport class WebStorageSharedClientState implements SharedClientState {\n  syncEngine: SharedClientStateSyncer | null = null;\n  onlineStateHandler: ((onlineState: OnlineState) => void) | null = null;\n  sequenceNumberHandler:\n    | ((sequenceNumber: ListenSequenceNumber) => void)\n    | null = null;\n\n  private readonly storage: Storage;\n  private readonly localClientStorageKey: string;\n  private readonly sequenceNumberKey: string;\n  private readonly storageListener = this.handleWebStorageEvent.bind(this);\n  private readonly onlineStateKey: string;\n  private readonly bundleLoadedKey: string;\n  private readonly clientStateKeyRe: RegExp;\n  private readonly mutationBatchKeyRe: RegExp;\n  private readonly queryTargetKeyRe: RegExp;\n  private activeClients = new SortedMap<string, ClientState>(\n    primitiveComparator\n  );\n  private started = false;\n  private currentUser: User;\n\n  /**\n   * Captures WebStorage events that occur before `start()` is called. These\n   * events are replayed once `WebStorageSharedClientState` is started.\n   */\n  private earlyEvents: StorageEvent[] = [];\n\n  constructor(\n    private readonly window: WindowLike,\n    private readonly queue: AsyncQueue,\n    private readonly persistenceKey: string,\n    private readonly localClientId: ClientId,\n    initialUser: User\n  ) {\n    // Escape the special characters mentioned here:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\n    const escapedPersistenceKey = persistenceKey.replace(\n      /[.*+?^${}()|[\\]\\\\]/g,\n      '\\\\$&'\n    );\n\n    this.storage = this.window.localStorage;\n    this.currentUser = initialUser;\n    this.localClientStorageKey = createWebStorageClientStateKey(\n      this.persistenceKey,\n      this.localClientId\n    );\n    this.sequenceNumberKey = createWebStorageSequenceNumberKey(\n      this.persistenceKey\n    );\n    this.activeClients = this.activeClients.insert(\n      this.localClientId,\n      new LocalClientState()\n    );\n\n    this.clientStateKeyRe = new RegExp(\n      `^${CLIENT_STATE_KEY_PREFIX}_${escapedPersistenceKey}_([^_]*)$`\n    );\n    this.mutationBatchKeyRe = new RegExp(\n      `^${MUTATION_BATCH_KEY_PREFIX}_${escapedPersistenceKey}_(\\\\d+)(?:_(.*))?$`\n    );\n    this.queryTargetKeyRe = new RegExp(\n      `^${QUERY_TARGET_KEY_PREFIX}_${escapedPersistenceKey}_(\\\\d+)$`\n    );\n\n    this.onlineStateKey = createWebStorageOnlineStateKey(this.persistenceKey);\n\n    this.bundleLoadedKey = createBundleLoadedKey(this.persistenceKey);\n\n    // Rather than adding the storage observer during start(), we add the\n    // storage observer during initialization. This ensures that we collect\n    // events before other components populate their initial state (during their\n    // respective start() calls). Otherwise, we might for example miss a\n    // mutation that is added after LocalStore's start() processed the existing\n    // mutations but before we observe WebStorage events.\n    this.window.addEventListener('storage', this.storageListener);\n  }\n\n  /** Returns 'true' if WebStorage is available in the current environment. */\n  static isAvailable(window: WindowLike | null): window is WindowLike {\n    return !!(window && window.localStorage);\n  }\n\n  async start(): Promise<void> {\n    debugAssert(!this.started, 'WebStorageSharedClientState already started');\n    debugAssert(\n      this.syncEngine !== null,\n      'syncEngine property must be set before calling start()'\n    );\n    debugAssert(\n      this.onlineStateHandler !== null,\n      'onlineStateHandler property must be set before calling start()'\n    );\n\n    // Retrieve the list of existing clients to backfill the data in\n    // SharedClientState.\n    const existingClients = await this.syncEngine!.getActiveClients();\n\n    for (const clientId of existingClients) {\n      if (clientId === this.localClientId) {\n        continue;\n      }\n\n      const storageItem = this.getItem(\n        createWebStorageClientStateKey(this.persistenceKey, clientId)\n      );\n      if (storageItem) {\n        const clientState = RemoteClientState.fromWebStorageEntry(\n          clientId,\n          storageItem\n        );\n        if (clientState) {\n          this.activeClients = this.activeClients.insert(\n            clientState.clientId,\n            clientState\n          );\n        }\n      }\n    }\n\n    this.persistClientState();\n\n    // Check if there is an existing online state and call the callback handler\n    // if applicable.\n    const onlineStateJSON = this.storage.getItem(this.onlineStateKey);\n    if (onlineStateJSON) {\n      const onlineState = this.fromWebStorageOnlineState(onlineStateJSON);\n      if (onlineState) {\n        this.handleOnlineStateEvent(onlineState);\n      }\n    }\n\n    for (const event of this.earlyEvents) {\n      this.handleWebStorageEvent(event);\n    }\n\n    this.earlyEvents = [];\n\n    // Register a window unload hook to remove the client metadata entry from\n    // WebStorage even if `shutdown()` was not called.\n    this.window.addEventListener('pagehide', () => this.shutdown());\n\n    this.started = true;\n  }\n\n  writeSequenceNumber(sequenceNumber: ListenSequenceNumber): void {\n    this.setItem(this.sequenceNumberKey, JSON.stringify(sequenceNumber));\n  }\n\n  getAllActiveQueryTargets(): TargetIdSet {\n    return this.extractActiveQueryTargets(this.activeClients);\n  }\n\n  isActiveQueryTarget(targetId: TargetId): boolean {\n    let found = false;\n    this.activeClients.forEach((key, value) => {\n      if (value.activeTargetIds.has(targetId)) {\n        found = true;\n      }\n    });\n    return found;\n  }\n\n  addPendingMutation(batchId: BatchId): void {\n    this.persistMutationState(batchId, 'pending');\n  }\n\n  updateMutationState(\n    batchId: BatchId,\n    state: 'acknowledged' | 'rejected',\n    error?: FirestoreError\n  ): void {\n    this.persistMutationState(batchId, state, error);\n\n    // Once a final mutation result is observed by other clients, they no longer\n    // access the mutation's metadata entry. Since WebStorage replays events\n    // in order, it is safe to delete the entry right after updating it.\n    this.removeMutationState(batchId);\n  }\n\n  addLocalQueryTarget(targetId: TargetId): QueryTargetState {\n    let queryState: QueryTargetState = 'not-current';\n\n    // Lookup an existing query state if the target ID was already registered\n    // by another tab\n    if (this.isActiveQueryTarget(targetId)) {\n      const storageItem = this.storage.getItem(\n        createWebStorageQueryTargetMetadataKey(this.persistenceKey, targetId)\n      );\n\n      if (storageItem) {\n        const metadata = QueryTargetMetadata.fromWebStorageEntry(\n          targetId,\n          storageItem\n        );\n        if (metadata) {\n          queryState = metadata.state;\n        }\n      }\n    }\n\n    this.localClientState.addQueryTarget(targetId);\n    this.persistClientState();\n\n    return queryState;\n  }\n\n  removeLocalQueryTarget(targetId: TargetId): void {\n    this.localClientState.removeQueryTarget(targetId);\n    this.persistClientState();\n  }\n\n  isLocalQueryTarget(targetId: TargetId): boolean {\n    return this.localClientState.activeTargetIds.has(targetId);\n  }\n\n  clearQueryState(targetId: TargetId): void {\n    this.removeItem(\n      createWebStorageQueryTargetMetadataKey(this.persistenceKey, targetId)\n    );\n  }\n\n  updateQueryState(\n    targetId: TargetId,\n    state: QueryTargetState,\n    error?: FirestoreError\n  ): void {\n    this.persistQueryTargetState(targetId, state, error);\n  }\n\n  handleUserChange(\n    user: User,\n    removedBatchIds: BatchId[],\n    addedBatchIds: BatchId[]\n  ): void {\n    removedBatchIds.forEach(batchId => {\n      this.removeMutationState(batchId);\n    });\n    this.currentUser = user;\n    addedBatchIds.forEach(batchId => {\n      this.addPendingMutation(batchId);\n    });\n  }\n\n  setOnlineState(onlineState: OnlineState): void {\n    this.persistOnlineState(onlineState);\n  }\n\n  notifyBundleLoaded(collectionGroups: Set<string>): void {\n    this.persistBundleLoadedState(collectionGroups);\n  }\n\n  shutdown(): void {\n    if (this.started) {\n      this.window.removeEventListener('storage', this.storageListener);\n      this.removeItem(this.localClientStorageKey);\n      this.started = false;\n    }\n  }\n\n  private getItem(key: string): string | null {\n    const value = this.storage.getItem(key);\n    logDebug(LOG_TAG, 'READ', key, value);\n    return value;\n  }\n\n  private setItem(key: string, value: string): void {\n    logDebug(LOG_TAG, 'SET', key, value);\n    this.storage.setItem(key, value);\n  }\n\n  private removeItem(key: string): void {\n    logDebug(LOG_TAG, 'REMOVE', key);\n    this.storage.removeItem(key);\n  }\n\n  private handleWebStorageEvent(event: Event): void {\n    // Note: The function is typed to take Event to be interface-compatible with\n    // `Window.addEventListener`.\n    const storageEvent = event as StorageEvent;\n    if (storageEvent.storageArea === this.storage) {\n      logDebug(LOG_TAG, 'EVENT', storageEvent.key, storageEvent.newValue);\n\n      if (storageEvent.key === this.localClientStorageKey) {\n        logError(\n          'Received WebStorage notification for local change. Another client might have ' +\n            'garbage-collected our state'\n        );\n        return;\n      }\n\n      this.queue.enqueueRetryable(async () => {\n        if (!this.started) {\n          this.earlyEvents.push(storageEvent);\n          return;\n        }\n\n        if (storageEvent.key === null) {\n          return;\n        }\n\n        if (this.clientStateKeyRe.test(storageEvent.key)) {\n          if (storageEvent.newValue != null) {\n            const clientState = this.fromWebStorageClientState(\n              storageEvent.key,\n              storageEvent.newValue\n            );\n            if (clientState) {\n              return this.handleClientStateEvent(\n                clientState.clientId,\n                clientState\n              );\n            }\n          } else {\n            const clientId = this.fromWebStorageClientStateKey(\n              storageEvent.key\n            )!;\n            return this.handleClientStateEvent(clientId, null);\n          }\n        } else if (this.mutationBatchKeyRe.test(storageEvent.key)) {\n          if (storageEvent.newValue !== null) {\n            const mutationMetadata = this.fromWebStorageMutationMetadata(\n              storageEvent.key,\n              storageEvent.newValue\n            );\n            if (mutationMetadata) {\n              return this.handleMutationBatchEvent(mutationMetadata);\n            }\n          }\n        } else if (this.queryTargetKeyRe.test(storageEvent.key)) {\n          if (storageEvent.newValue !== null) {\n            const queryTargetMetadata = this.fromWebStorageQueryTargetMetadata(\n              storageEvent.key,\n              storageEvent.newValue\n            );\n            if (queryTargetMetadata) {\n              return this.handleQueryTargetEvent(queryTargetMetadata);\n            }\n          }\n        } else if (storageEvent.key === this.onlineStateKey) {\n          if (storageEvent.newValue !== null) {\n            const onlineState = this.fromWebStorageOnlineState(\n              storageEvent.newValue\n            );\n            if (onlineState) {\n              return this.handleOnlineStateEvent(onlineState);\n            }\n          }\n        } else if (storageEvent.key === this.sequenceNumberKey) {\n          debugAssert(\n            !!this.sequenceNumberHandler,\n            'Missing sequenceNumberHandler'\n          );\n          const sequenceNumber = fromWebStorageSequenceNumber(\n            storageEvent.newValue\n          );\n          if (sequenceNumber !== ListenSequence.INVALID) {\n            this.sequenceNumberHandler!(sequenceNumber);\n          }\n        } else if (storageEvent.key === this.bundleLoadedKey) {\n          const collectionGroups = this.fromWebStoreBundleLoadedState(\n            storageEvent.newValue!\n          );\n          await Promise.all(\n            collectionGroups.map(cg =>\n              this.syncEngine!.synchronizeWithChangedDocuments(cg)\n            )\n          );\n        }\n      });\n    }\n  }\n\n  private get localClientState(): LocalClientState {\n    return this.activeClients.get(this.localClientId) as LocalClientState;\n  }\n\n  private persistClientState(): void {\n    this.setItem(\n      this.localClientStorageKey,\n      this.localClientState.toWebStorageJSON()\n    );\n  }\n\n  private persistMutationState(\n    batchId: BatchId,\n    state: MutationBatchState,\n    error?: FirestoreError\n  ): void {\n    const mutationState = new MutationMetadata(\n      this.currentUser,\n      batchId,\n      state,\n      error\n    );\n    const mutationKey = createWebStorageMutationBatchKey(\n      this.persistenceKey,\n      this.currentUser,\n      batchId\n    );\n    this.setItem(mutationKey, mutationState.toWebStorageJSON());\n  }\n\n  private removeMutationState(batchId: BatchId): void {\n    const mutationKey = createWebStorageMutationBatchKey(\n      this.persistenceKey,\n      this.currentUser,\n      batchId\n    );\n    this.removeItem(mutationKey);\n  }\n\n  private persistOnlineState(onlineState: OnlineState): void {\n    const entry: SharedOnlineStateSchema = {\n      clientId: this.localClientId,\n      onlineState\n    };\n    this.storage.setItem(this.onlineStateKey, JSON.stringify(entry));\n  }\n\n  private persistQueryTargetState(\n    targetId: TargetId,\n    state: QueryTargetState,\n    error?: FirestoreError\n  ): void {\n    const targetKey = createWebStorageQueryTargetMetadataKey(\n      this.persistenceKey,\n      targetId\n    );\n    const targetMetadata = new QueryTargetMetadata(targetId, state, error);\n    this.setItem(targetKey, targetMetadata.toWebStorageJSON());\n  }\n\n  private persistBundleLoadedState(collectionGroups: Set<string>): void {\n    const json = JSON.stringify(Array.from(collectionGroups));\n    this.setItem(this.bundleLoadedKey, json);\n  }\n\n  /**\n   * Parses a client state key in WebStorage. Returns null if the key does not\n   * match the expected key format.\n   */\n  private fromWebStorageClientStateKey(key: string): ClientId | null {\n    const match = this.clientStateKeyRe.exec(key);\n    return match ? match[1] : null;\n  }\n\n  /**\n   * Parses a client state in WebStorage. Returns 'null' if the value could not\n   * be parsed.\n   */\n  private fromWebStorageClientState(\n    key: string,\n    value: string\n  ): RemoteClientState | null {\n    const clientId = this.fromWebStorageClientStateKey(key);\n    debugAssert(clientId !== null, `Cannot parse client state key '${key}'`);\n    return RemoteClientState.fromWebStorageEntry(clientId, value);\n  }\n\n  /**\n   * Parses a mutation batch state in WebStorage. Returns 'null' if the value\n   * could not be parsed.\n   */\n  private fromWebStorageMutationMetadata(\n    key: string,\n    value: string\n  ): MutationMetadata | null {\n    const match = this.mutationBatchKeyRe.exec(key);\n    debugAssert(match !== null, `Cannot parse mutation batch key '${key}'`);\n\n    const batchId = Number(match[1]);\n    const userId = match[2] !== undefined ? match[2] : null;\n    return MutationMetadata.fromWebStorageEntry(\n      new User(userId),\n      batchId,\n      value\n    );\n  }\n\n  /**\n   * Parses a query target state from WebStorage. Returns 'null' if the value\n   * could not be parsed.\n   */\n  private fromWebStorageQueryTargetMetadata(\n    key: string,\n    value: string\n  ): QueryTargetMetadata | null {\n    const match = this.queryTargetKeyRe.exec(key);\n    debugAssert(match !== null, `Cannot parse query target key '${key}'`);\n\n    const targetId = Number(match[1]);\n    return QueryTargetMetadata.fromWebStorageEntry(targetId, value);\n  }\n\n  /**\n   * Parses an online state from WebStorage. Returns 'null' if the value\n   * could not be parsed.\n   */\n  private fromWebStorageOnlineState(value: string): SharedOnlineState | null {\n    return SharedOnlineState.fromWebStorageEntry(value);\n  }\n\n  private fromWebStoreBundleLoadedState(value: string): string[] {\n    return JSON.parse(value) as string[];\n  }\n\n  private async handleMutationBatchEvent(\n    mutationBatch: MutationMetadata\n  ): Promise<void> {\n    if (mutationBatch.user.uid !== this.currentUser.uid) {\n      logDebug(\n        LOG_TAG,\n        `Ignoring mutation for non-active user ${mutationBatch.user.uid}`\n      );\n      return;\n    }\n\n    return this.syncEngine!.applyBatchState(\n      mutationBatch.batchId,\n      mutationBatch.state,\n      mutationBatch.error\n    );\n  }\n\n  private handleQueryTargetEvent(\n    targetMetadata: QueryTargetMetadata\n  ): Promise<void> {\n    return this.syncEngine!.applyTargetState(\n      targetMetadata.targetId,\n      targetMetadata.state,\n      targetMetadata.error\n    );\n  }\n\n  private handleClientStateEvent(\n    clientId: ClientId,\n    clientState: RemoteClientState | null\n  ): Promise<void> {\n    const updatedClients = clientState\n      ? this.activeClients.insert(clientId, clientState)\n      : this.activeClients.remove(clientId);\n\n    const existingTargets = this.extractActiveQueryTargets(this.activeClients);\n    const newTargets = this.extractActiveQueryTargets(updatedClients);\n\n    const addedTargets: TargetId[] = [];\n    const removedTargets: TargetId[] = [];\n\n    newTargets.forEach(targetId => {\n      if (!existingTargets.has(targetId)) {\n        addedTargets.push(targetId);\n      }\n    });\n\n    existingTargets.forEach(targetId => {\n      if (!newTargets.has(targetId)) {\n        removedTargets.push(targetId);\n      }\n    });\n\n    return this.syncEngine!.applyActiveTargetsChange(\n      addedTargets,\n      removedTargets\n    ).then(() => {\n      this.activeClients = updatedClients;\n    });\n  }\n\n  private handleOnlineStateEvent(onlineState: SharedOnlineState): void {\n    // We check whether the client that wrote this online state is still active\n    // by comparing its client ID to the list of clients kept active in\n    // IndexedDb. If a client does not update their IndexedDb client state\n    // within 5 seconds, it is considered inactive and we don't emit an online\n    // state event.\n    if (this.activeClients.get(onlineState.clientId)) {\n      this.onlineStateHandler!(onlineState.onlineState);\n    }\n  }\n\n  private extractActiveQueryTargets(\n    clients: SortedMap<string, ClientState>\n  ): SortedSet<TargetId> {\n    let activeTargets = targetIdSet();\n    clients.forEach((kev, value) => {\n      activeTargets = activeTargets.unionWith(value.activeTargetIds);\n    });\n    return activeTargets;\n  }\n}\n\nfunction fromWebStorageSequenceNumber(\n  seqString: string | null\n): ListenSequenceNumber {\n  let sequenceNumber = ListenSequence.INVALID;\n  if (seqString != null) {\n    try {\n      const parsed = JSON.parse(seqString);\n      hardAssert(\n        typeof parsed === 'number',\n        'Found non-numeric sequence number'\n      );\n      sequenceNumber = parsed;\n    } catch (e) {\n      logError(LOG_TAG, 'Failed to read sequence number from WebStorage', e);\n    }\n  }\n  return sequenceNumber;\n}\n\n/**\n * `MemorySharedClientState` is a simple implementation of SharedClientState for\n * clients using memory persistence. The state in this class remains fully\n * isolated and no synchronization is performed.\n */\nexport class MemorySharedClientState implements SharedClientState {\n  private localState = new LocalClientState();\n  private queryState: { [targetId: number]: QueryTargetState } = {};\n  onlineStateHandler: ((onlineState: OnlineState) => void) | null = null;\n  sequenceNumberHandler:\n    | ((sequenceNumber: ListenSequenceNumber) => void)\n    | null = null;\n\n  addPendingMutation(batchId: BatchId): void {\n    // No op.\n  }\n\n  updateMutationState(\n    batchId: BatchId,\n    state: 'acknowledged' | 'rejected',\n    error?: FirestoreError\n  ): void {\n    // No op.\n  }\n\n  addLocalQueryTarget(targetId: TargetId): QueryTargetState {\n    this.localState.addQueryTarget(targetId);\n    return this.queryState[targetId] || 'not-current';\n  }\n\n  updateQueryState(\n    targetId: TargetId,\n    state: QueryTargetState,\n    error?: FirestoreError\n  ): void {\n    this.queryState[targetId] = state;\n  }\n\n  removeLocalQueryTarget(targetId: TargetId): void {\n    this.localState.removeQueryTarget(targetId);\n  }\n\n  isLocalQueryTarget(targetId: TargetId): boolean {\n    return this.localState.activeTargetIds.has(targetId);\n  }\n\n  clearQueryState(targetId: TargetId): void {\n    delete this.queryState[targetId];\n  }\n\n  getAllActiveQueryTargets(): TargetIdSet {\n    return this.localState.activeTargetIds;\n  }\n\n  isActiveQueryTarget(targetId: TargetId): boolean {\n    return this.localState.activeTargetIds.has(targetId);\n  }\n\n  start(): Promise<void> {\n    this.localState = new LocalClientState();\n    return Promise.resolve();\n  }\n\n  handleUserChange(\n    user: User,\n    removedBatchIds: BatchId[],\n    addedBatchIds: BatchId[]\n  ): void {\n    // No op.\n  }\n\n  setOnlineState(onlineState: OnlineState): void {\n    // No op.\n  }\n\n  shutdown(): void {}\n\n  writeSequenceNumber(sequenceNumber: ListenSequenceNumber): void {}\n\n  notifyBundleLoaded(collectionGroups: Set<string>): void {\n    // No op.\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ConnectivityMonitor, NetworkStatus } from './connectivity_monitor';\n\nexport class NoopConnectivityMonitor implements ConnectivityMonitor {\n  addCallback(callback: (status: NetworkStatus) => void): void {\n    // No-op.\n  }\n\n  shutdown(): void {\n    // No-op.\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ConnectivityMonitor,\n  ConnectivityMonitorCallback,\n  NetworkStatus\n} from '../../remote/connectivity_monitor';\nimport { logDebug } from '../../util/log';\n\n// References to `window` are guarded by BrowserConnectivityMonitor.isAvailable()\n/* eslint-disable no-restricted-globals */\n\nconst LOG_TAG = 'ConnectivityMonitor';\n\n/**\n * Browser implementation of ConnectivityMonitor.\n */\nexport class BrowserConnectivityMonitor implements ConnectivityMonitor {\n  private readonly networkAvailableListener = (): void =>\n    this.onNetworkAvailable();\n  private readonly networkUnavailableListener = (): void =>\n    this.onNetworkUnavailable();\n  private callbacks: ConnectivityMonitorCallback[] = [];\n\n  constructor() {\n    this.configureNetworkMonitoring();\n  }\n\n  addCallback(callback: (status: NetworkStatus) => void): void {\n    this.callbacks.push(callback);\n  }\n\n  shutdown(): void {\n    window.removeEventListener('online', this.networkAvailableListener);\n    window.removeEventListener('offline', this.networkUnavailableListener);\n  }\n\n  private configureNetworkMonitoring(): void {\n    window.addEventListener('online', this.networkAvailableListener);\n    window.addEventListener('offline', this.networkUnavailableListener);\n  }\n\n  private onNetworkAvailable(): void {\n    logDebug(LOG_TAG, 'Network connectivity changed: AVAILABLE');\n    for (const callback of this.callbacks) {\n      callback(NetworkStatus.AVAILABLE);\n    }\n  }\n\n  private onNetworkUnavailable(): void {\n    logDebug(LOG_TAG, 'Network connectivity changed: UNAVAILABLE');\n    for (const callback of this.callbacks) {\n      callback(NetworkStatus.UNAVAILABLE);\n    }\n  }\n\n  // TODO(chenbrian): Consider passing in window either into this component or\n  // here for testing via FakeWindow.\n  /** Checks that all used attributes of window are available. */\n  static isAvailable(): boolean {\n    return (\n      typeof window !== 'undefined' &&\n      window.addEventListener !== undefined &&\n      window.removeEventListener !== undefined\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The value returned from the most recent invocation of\n * `generateUniqueDebugId()`, or null if it has never been invoked.\n */\nlet lastUniqueDebugId: number | null = null;\n\n/**\n * Generates and returns an initial value for `lastUniqueDebugId`.\n *\n * The returned value is randomly selected from a range of integers that are\n * represented as 8 hexadecimal digits. This means that (within reason) any\n * numbers generated by incrementing the returned number by 1 will also be\n * represented by 8 hexadecimal digits. This leads to all \"IDs\" having the same\n * length when converted to a hexadecimal string, making reading logs containing\n * these IDs easier to follow. And since the return value is randomly selected\n * it will help to differentiate between logs from different executions.\n */\nfunction generateInitialUniqueDebugId(): number {\n  const minResult = 0x10000000;\n  const maxResult = 0x90000000;\n  const resultRange = maxResult - minResult;\n  const resultOffset = Math.round(resultRange * Math.random());\n  return minResult + resultOffset;\n}\n\n/**\n * Generates and returns a unique ID as a hexadecimal string.\n *\n * The returned ID is intended to be used in debug logging messages to help\n * correlate log messages that may be spatially separated in the logs, but\n * logically related. For example, a network connection could include the same\n * \"debug ID\" string in all of its log messages to help trace a specific\n * connection over time.\n *\n * @return the 10-character generated ID (e.g. \"0xa1b2c3d4\").\n */\nexport function generateUniqueDebugId(): string {\n  if (lastUniqueDebugId === null) {\n    lastUniqueDebugId = generateInitialUniqueDebugId();\n  } else {\n    lastUniqueDebugId++;\n  }\n  return '0x' + lastUniqueDebugId.toString(16);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SDK_VERSION } from '../../src/core/version';\nimport { Token } from '../api/credentials';\nimport {\n  DatabaseId,\n  DatabaseInfo,\n  DEFAULT_DATABASE_NAME\n} from '../core/database_info';\nimport { ResourcePath } from '../model/path';\nimport { debugAssert } from '../util/assert';\nimport { generateUniqueDebugId } from '../util/debug_uid';\nimport { FirestoreError } from '../util/error';\nimport { logDebug, logWarn } from '../util/log';\nimport { StringMap } from '../util/types';\n\nimport { Connection, Stream } from './connection';\n\nconst LOG_TAG = 'RestConnection';\n\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\nconst RPC_NAME_URL_MAPPING: StringMap = {};\n\nRPC_NAME_URL_MAPPING['BatchGetDocuments'] = 'batchGet';\nRPC_NAME_URL_MAPPING['Commit'] = 'commit';\nRPC_NAME_URL_MAPPING['RunQuery'] = 'runQuery';\nRPC_NAME_URL_MAPPING['RunAggregationQuery'] = 'runAggregationQuery';\n\nconst RPC_URL_VERSION = 'v1';\n\n// SDK_VERSION is updated to different value at runtime depending on the entry point,\n// so we need to get its value when we need it in a function.\nfunction getGoogApiClientValue(): string {\n  return 'gl-js/ fire/' + SDK_VERSION;\n}\n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nexport abstract class RestConnection implements Connection {\n  protected readonly databaseId: DatabaseId;\n  protected readonly baseUrl: string;\n  private readonly databasePath: string;\n  private readonly requestParams: string;\n\n  get shouldResourcePathBeIncludedInRequest(): boolean {\n    // Both `invokeRPC()` and `invokeStreamingRPC()` use their `path` arguments to determine\n    // where to run the query, and expect the `request` to NOT specify the \"path\".\n    return false;\n  }\n\n  constructor(private readonly databaseInfo: DatabaseInfo) {\n    this.databaseId = databaseInfo.databaseId;\n    const proto = databaseInfo.ssl ? 'https' : 'http';\n    const projectId = encodeURIComponent(this.databaseId.projectId);\n    const databaseId = encodeURIComponent(this.databaseId.database);\n    this.baseUrl = proto + '://' + databaseInfo.host;\n    this.databasePath = `projects/${projectId}/databases/${databaseId}`;\n    this.requestParams =\n      this.databaseId.database === DEFAULT_DATABASE_NAME\n        ? `project_id=${projectId}`\n        : `project_id=${projectId}&database_id=${databaseId}`;\n  }\n\n  invokeRPC<Req, Resp>(\n    rpcName: string,\n    path: ResourcePath,\n    req: Req,\n    authToken: Token | null,\n    appCheckToken: Token | null\n  ): Promise<Resp> {\n    const streamId = generateUniqueDebugId();\n    const url = this.makeUrl(rpcName, path.toUriEncodedString());\n    logDebug(LOG_TAG, `Sending RPC '${rpcName}' ${streamId}:`, url, req);\n\n    const headers: StringMap = {\n      'google-cloud-resource-prefix': this.databasePath,\n      'x-goog-request-params': this.requestParams\n    };\n    this.modifyHeadersForRequest(headers, authToken, appCheckToken);\n\n    return this.performRPCRequest<Req, Resp>(rpcName, url, headers, req).then(\n      response => {\n        logDebug(LOG_TAG, `Received RPC '${rpcName}' ${streamId}: `, response);\n        return response;\n      },\n      (err: FirestoreError) => {\n        logWarn(\n          LOG_TAG,\n          `RPC '${rpcName}' ${streamId} failed with error: `,\n          err,\n          'url: ',\n          url,\n          'request:',\n          req\n        );\n        throw err;\n      }\n    );\n  }\n\n  invokeStreamingRPC<Req, Resp>(\n    rpcName: string,\n    path: ResourcePath,\n    request: Req,\n    authToken: Token | null,\n    appCheckToken: Token | null,\n    expectedResponseCount?: number\n  ): Promise<Resp[]> {\n    // The REST API automatically aggregates all of the streamed results, so we\n    // can just use the normal invoke() method.\n    return this.invokeRPC<Req, Resp[]>(\n      rpcName,\n      path,\n      request,\n      authToken,\n      appCheckToken\n    );\n  }\n\n  abstract openStream<Req, Resp>(\n    rpcName: string,\n    authToken: Token | null,\n    appCheckToken: Token | null\n  ): Stream<Req, Resp>;\n\n  /**\n   * Modifies the headers for a request, adding any authorization token if\n   * present and any additional headers for the request.\n   */\n  protected modifyHeadersForRequest(\n    headers: StringMap,\n    authToken: Token | null,\n    appCheckToken: Token | null\n  ): void {\n    headers['X-Goog-Api-Client'] = getGoogApiClientValue();\n\n    // Content-Type: text/plain will avoid preflight requests which might\n    // mess with CORS and redirects by proxies. If we add custom headers\n    // we will need to change this code to potentially use the $httpOverwrite\n    // parameter supported by ESF to avoid triggering preflight requests.\n    headers['Content-Type'] = 'text/plain';\n\n    if (this.databaseInfo.appId) {\n      headers['X-Firebase-GMPID'] = this.databaseInfo.appId;\n    }\n\n    if (authToken) {\n      authToken.headers.forEach((value, key) => (headers[key] = value));\n    }\n    if (appCheckToken) {\n      appCheckToken.headers.forEach((value, key) => (headers[key] = value));\n    }\n  }\n\n  /**\n   * Performs an RPC request using an implementation specific networking layer.\n   */\n  protected abstract performRPCRequest<Req, Resp>(\n    rpcName: string,\n    url: string,\n    headers: StringMap,\n    body: Req\n  ): Promise<Resp>;\n\n  private makeUrl(rpcName: string, path: string): string {\n    const urlRpcName = RPC_NAME_URL_MAPPING[rpcName];\n    debugAssert(\n      urlRpcName !== undefined,\n      'Unknown REST mapping for: ' + rpcName\n    );\n    return `${this.baseUrl}/${RPC_URL_VERSION}/${path}:${urlRpcName}`;\n  }\n\n  /**\n   * Closes and cleans up any resources associated with the connection. This\n   * implementation is a no-op because there are no resources associated\n   * with the RestConnection that need to be cleaned up.\n   */\n  terminate(): void {\n    // No-op\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugAssert } from '../util/assert';\nimport { FirestoreError } from '../util/error';\n\nimport { Stream } from './connection';\n\n/**\n * Provides a simple helper class that implements the Stream interface to\n * bridge to other implementations that are streams but do not implement the\n * interface. The stream callbacks are invoked with the callOn... methods.\n */\nexport class StreamBridge<I, O> implements Stream<I, O> {\n  private wrappedOnConnected: (() => void) | undefined;\n  private wrappedOnOpen: (() => void) | undefined;\n  private wrappedOnClose: ((err?: FirestoreError) => void) | undefined;\n  private wrappedOnMessage: ((msg: O) => void) | undefined;\n\n  private sendFn: (msg: I) => void;\n  private closeFn: () => void;\n\n  constructor(args: { sendFn: (msg: I) => void; closeFn: () => void }) {\n    this.sendFn = args.sendFn;\n    this.closeFn = args.closeFn;\n  }\n\n  onConnected(callback: () => void): void {\n    debugAssert(\n      !this.wrappedOnConnected,\n      'Called onConnected on stream twice!'\n    );\n    this.wrappedOnConnected = callback;\n  }\n\n  onOpen(callback: () => void): void {\n    debugAssert(!this.wrappedOnOpen, 'Called onOpen on stream twice!');\n    this.wrappedOnOpen = callback;\n  }\n\n  onClose(callback: (err?: FirestoreError) => void): void {\n    debugAssert(!this.wrappedOnClose, 'Called onClose on stream twice!');\n    this.wrappedOnClose = callback;\n  }\n\n  onMessage(callback: (msg: O) => void): void {\n    debugAssert(!this.wrappedOnMessage, 'Called onMessage on stream twice!');\n    this.wrappedOnMessage = callback;\n  }\n\n  close(): void {\n    this.closeFn();\n  }\n\n  send(msg: I): void {\n    this.sendFn(msg);\n  }\n\n  callOnConnected(): void {\n    debugAssert(\n      this.wrappedOnConnected !== undefined,\n      'Cannot call onConnected because no callback was set'\n    );\n    this.wrappedOnConnected();\n  }\n\n  callOnOpen(): void {\n    debugAssert(\n      this.wrappedOnOpen !== undefined,\n      'Cannot call onOpen because no callback was set'\n    );\n    this.wrappedOnOpen();\n  }\n\n  callOnClose(err?: FirestoreError): void {\n    debugAssert(\n      this.wrappedOnClose !== undefined,\n      'Cannot call onClose because no callback was set'\n    );\n    this.wrappedOnClose(err);\n  }\n\n  callOnMessage(msg: O): void {\n    debugAssert(\n      this.wrappedOnMessage !== undefined,\n      'Cannot call onMessage because no callback was set'\n    );\n    this.wrappedOnMessage(msg);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  createWebChannelTransport,\n  ErrorCode,\n  EventType,\n  WebChannel,\n  WebChannelError,\n  WebChannelOptions,\n  XhrIo,\n  getStatEventTarget,\n  EventTarget,\n  StatEvent,\n  Event,\n  FetchXmlHttpFactory,\n  Stat\n} from '@firebase/webchannel-wrapper/webchannel-blob';\n\nimport { Token } from '../../api/credentials';\nimport { ExperimentalLongPollingOptions } from '../../api/long_polling_options';\nimport { DatabaseInfo } from '../../core/database_info';\nimport { Stream } from '../../remote/connection';\nimport { RestConnection } from '../../remote/rest_connection';\nimport {\n  mapCodeFromRpcStatus,\n  mapCodeFromHttpResponseErrorStatus\n} from '../../remote/rpc_error';\nimport { StreamBridge } from '../../remote/stream_bridge';\nimport { fail, hardAssert } from '../../util/assert';\nimport { generateUniqueDebugId } from '../../util/debug_uid';\nimport { Code, FirestoreError } from '../../util/error';\nimport { logDebug, logWarn } from '../../util/log';\nimport { Rejecter, Resolver } from '../../util/promise';\nimport { StringMap } from '../../util/types';\n\nconst LOG_TAG = 'WebChannelConnection';\n\nconst RPC_STREAM_SERVICE = 'google.firestore.v1.Firestore';\n\nconst XHR_TIMEOUT_SECS = 15;\n\nexport class WebChannelConnection extends RestConnection {\n  private readonly forceLongPolling: boolean;\n  private readonly autoDetectLongPolling: boolean;\n  private readonly useFetchStreams: boolean;\n  private readonly longPollingOptions: ExperimentalLongPollingOptions;\n\n  constructor(info: DatabaseInfo) {\n    super(info);\n    this.forceLongPolling = info.forceLongPolling;\n    this.autoDetectLongPolling = info.autoDetectLongPolling;\n    this.useFetchStreams = info.useFetchStreams;\n    this.longPollingOptions = info.longPollingOptions;\n  }\n\n  protected performRPCRequest<Req, Resp>(\n    rpcName: string,\n    url: string,\n    headers: StringMap,\n    body: Req\n  ): Promise<Resp> {\n    const streamId = generateUniqueDebugId();\n    return new Promise((resolve: Resolver<Resp>, reject: Rejecter) => {\n      const xhr = new XhrIo();\n      xhr.setWithCredentials(true);\n      xhr.listenOnce(EventType.COMPLETE, () => {\n        try {\n          switch (xhr.getLastErrorCode()) {\n            case ErrorCode.NO_ERROR:\n              const json = xhr.getResponseJson() as Resp;\n              logDebug(\n                LOG_TAG,\n                `XHR for RPC '${rpcName}' ${streamId} received:`,\n                JSON.stringify(json)\n              );\n              resolve(json);\n              break;\n            case ErrorCode.TIMEOUT:\n              logDebug(LOG_TAG, `RPC '${rpcName}' ${streamId} timed out`);\n              reject(\n                new FirestoreError(Code.DEADLINE_EXCEEDED, 'Request time out')\n              );\n              break;\n            case ErrorCode.HTTP_ERROR:\n              const status = xhr.getStatus();\n              logDebug(\n                LOG_TAG,\n                `RPC '${rpcName}' ${streamId} failed with status:`,\n                status,\n                'response text:',\n                xhr.getResponseText()\n              );\n              if (status > 0) {\n                let response = xhr.getResponseJson();\n                if (Array.isArray(response)) {\n                  response = response[0];\n                }\n                const responseError = (response as WebChannelError)?.error;\n                if (\n                  !!responseError &&\n                  !!responseError.status &&\n                  !!responseError.message\n                ) {\n                  const firestoreErrorCode = mapCodeFromHttpResponseErrorStatus(\n                    responseError.status\n                  );\n                  reject(\n                    new FirestoreError(\n                      firestoreErrorCode,\n                      responseError.message\n                    )\n                  );\n                } else {\n                  reject(\n                    new FirestoreError(\n                      Code.UNKNOWN,\n                      'Server responded with status ' + xhr.getStatus()\n                    )\n                  );\n                }\n              } else {\n                // If we received an HTTP_ERROR but there's no status code,\n                // it's most probably a connection issue\n                reject(\n                  new FirestoreError(Code.UNAVAILABLE, 'Connection failed.')\n                );\n              }\n              break;\n            default:\n              fail(\n                `RPC '${rpcName}' ${streamId} ` +\n                  'failed with unanticipated webchannel error: ' +\n                  xhr.getLastErrorCode() +\n                  ': ' +\n                  xhr.getLastError() +\n                  ', giving up.'\n              );\n          }\n        } finally {\n          logDebug(LOG_TAG, `RPC '${rpcName}' ${streamId} completed.`);\n        }\n      });\n\n      const requestString = JSON.stringify(body);\n      logDebug(LOG_TAG, `RPC '${rpcName}' ${streamId} sending request:`, body);\n      xhr.send(url, 'POST', requestString, headers, XHR_TIMEOUT_SECS);\n    });\n  }\n\n  openStream<Req, Resp>(\n    rpcName: string,\n    authToken: Token | null,\n    appCheckToken: Token | null\n  ): Stream<Req, Resp> {\n    const streamId = generateUniqueDebugId();\n    const urlParts = [\n      this.baseUrl,\n      '/',\n      RPC_STREAM_SERVICE,\n      '/',\n      rpcName,\n      '/channel'\n    ];\n    const webchannelTransport = createWebChannelTransport();\n    const requestStats = getStatEventTarget();\n    const request: WebChannelOptions = {\n      // Required for backend stickiness, routing behavior is based on this\n      // parameter.\n      httpSessionIdParam: 'gsessionid',\n      initMessageHeaders: {},\n      messageUrlParams: {\n        // This param is used to improve routing and project isolation by the\n        // backend and must be included in every request.\n        database: `projects/${this.databaseId.projectId}/databases/${this.databaseId.database}`\n      },\n      sendRawJson: true,\n      supportsCrossDomainXhr: true,\n      internalChannelParams: {\n        // Override the default timeout (randomized between 10-20 seconds) since\n        // a large write batch on a slow internet connection may take a long\n        // time to send to the backend. Rather than have WebChannel impose a\n        // tight timeout which could lead to infinite timeouts and retries, we\n        // set it very large (5-10 minutes) and rely on the browser's builtin\n        // timeouts to kick in if the request isn't working.\n        forwardChannelRequestTimeoutMs: 10 * 60 * 1000\n      },\n      forceLongPolling: this.forceLongPolling,\n      detectBufferingProxy: this.autoDetectLongPolling\n    };\n\n    const longPollingTimeoutSeconds = this.longPollingOptions.timeoutSeconds;\n    if (longPollingTimeoutSeconds !== undefined) {\n      request.longPollingTimeout = Math.round(longPollingTimeoutSeconds * 1000);\n    }\n\n    if (this.useFetchStreams) {\n      request.xmlHttpFactory = new FetchXmlHttpFactory({});\n    }\n\n    this.modifyHeadersForRequest(\n      request.initMessageHeaders!,\n      authToken,\n      appCheckToken\n    );\n\n    // Sending the custom headers we just added to request.initMessageHeaders\n    // (Authorization, etc.) will trigger the browser to make a CORS preflight\n    // request because the XHR will no longer meet the criteria for a \"simple\"\n    // CORS request:\n    // https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Simple_requests\n    //\n    // Therefore to avoid the CORS preflight request (an extra network\n    // roundtrip), we use the encodeInitMessageHeaders option to specify that\n    // the headers should instead be encoded in the request's POST payload,\n    // which is recognized by the webchannel backend.\n    request.encodeInitMessageHeaders = true;\n\n    const url = urlParts.join('');\n    logDebug(\n      LOG_TAG,\n      `Creating RPC '${rpcName}' stream ${streamId}: ${url}`,\n      request\n    );\n    const channel = webchannelTransport.createWebChannel(url, request);\n\n    // WebChannel supports sending the first message with the handshake - saving\n    // a network round trip. However, it will have to call send in the same\n    // JS event loop as open. In order to enforce this, we delay actually\n    // opening the WebChannel until send is called. Whether we have called\n    // open is tracked with this variable.\n    let opened = false;\n\n    // A flag to determine whether the stream was closed (by us or through an\n    // error/close event) to avoid delivering multiple close events or sending\n    // on a closed stream\n    let closed = false;\n\n    const streamBridge = new StreamBridge<Req, Resp>({\n      sendFn: (msg: Req) => {\n        if (!closed) {\n          if (!opened) {\n            logDebug(\n              LOG_TAG,\n              `Opening RPC '${rpcName}' stream ${streamId} transport.`\n            );\n            channel.open();\n            opened = true;\n          }\n          logDebug(\n            LOG_TAG,\n            `RPC '${rpcName}' stream ${streamId} sending:`,\n            msg\n          );\n          channel.send(msg);\n        } else {\n          logDebug(\n            LOG_TAG,\n            `Not sending because RPC '${rpcName}' stream ${streamId} ` +\n              'is closed:',\n            msg\n          );\n        }\n      },\n      closeFn: () => channel.close()\n    });\n\n    // Closure events are guarded and exceptions are swallowed, so catch any\n    // exception and rethrow using a setTimeout so they become visible again.\n    // Note that eventually this function could go away if we are confident\n    // enough the code is exception free.\n    const unguardedEventListen = <T>(\n      target: EventTarget,\n      type: string | number,\n      fn: (param: T) => void\n    ): void => {\n      // TODO(dimond): closure typing seems broken because WebChannel does\n      // not implement goog.events.Listenable\n      target.listen(type, (param: unknown) => {\n        try {\n          fn(param as T);\n        } catch (e) {\n          setTimeout(() => {\n            throw e;\n          }, 0);\n        }\n      });\n    };\n\n    unguardedEventListen(channel, WebChannel.EventType.OPEN, () => {\n      if (!closed) {\n        logDebug(\n          LOG_TAG,\n          `RPC '${rpcName}' stream ${streamId} transport opened.`\n        );\n        streamBridge.callOnConnected();\n      }\n    });\n\n    unguardedEventListen(channel, WebChannel.EventType.CLOSE, () => {\n      if (!closed) {\n        closed = true;\n        logDebug(\n          LOG_TAG,\n          `RPC '${rpcName}' stream ${streamId} transport closed`\n        );\n        streamBridge.callOnClose();\n      }\n    });\n\n    unguardedEventListen<Error>(channel, WebChannel.EventType.ERROR, err => {\n      if (!closed) {\n        closed = true;\n        logWarn(\n          LOG_TAG,\n          `RPC '${rpcName}' stream ${streamId} transport errored:`,\n          err\n        );\n        streamBridge.callOnClose(\n          new FirestoreError(\n            Code.UNAVAILABLE,\n            'The operation could not be completed'\n          )\n        );\n      }\n    });\n\n    // WebChannel delivers message events as array. If batching is not enabled\n    // (it's off by default) each message will be delivered alone, resulting in\n    // a single element array.\n    interface WebChannelResponse {\n      data: Resp[];\n    }\n\n    unguardedEventListen<WebChannelResponse>(\n      channel,\n      WebChannel.EventType.MESSAGE,\n      msg => {\n        if (!closed) {\n          const msgData = msg.data[0];\n          hardAssert(!!msgData, 'Got a webchannel message without data.');\n          // TODO(b/35143891): There is a bug in One Platform that caused errors\n          // (and only errors) to be wrapped in an extra array. To be forward\n          // compatible with the bug we need to check either condition. The latter\n          // can be removed once the fix has been rolled out.\n          // Use any because msgData.error is not typed.\n          const msgDataOrError: WebChannelError | object = msgData;\n          const error =\n            msgDataOrError.error ||\n            (msgDataOrError as WebChannelError[])[0]?.error;\n          if (error) {\n            logDebug(\n              LOG_TAG,\n              `RPC '${rpcName}' stream ${streamId} received error:`,\n              error\n            );\n            // error.status will be a string like 'OK' or 'NOT_FOUND'.\n            const status: string = error.status;\n            let code = mapCodeFromRpcStatus(status);\n            let message = error.message;\n            if (code === undefined) {\n              code = Code.INTERNAL;\n              message =\n                'Unknown error status: ' +\n                status +\n                ' with message ' +\n                error.message;\n            }\n            // Mark closed so no further events are propagated\n            closed = true;\n            streamBridge.callOnClose(new FirestoreError(code, message));\n            channel.close();\n          } else {\n            logDebug(\n              LOG_TAG,\n              `RPC '${rpcName}' stream ${streamId} received:`,\n              msgData\n            );\n            streamBridge.callOnMessage(msgData);\n          }\n        }\n      }\n    );\n\n    unguardedEventListen<StatEvent>(requestStats, Event.STAT_EVENT, event => {\n      if (event.stat === Stat.PROXY) {\n        logDebug(\n          LOG_TAG,\n          `RPC '${rpcName}' stream ${streamId} detected buffering proxy`\n        );\n      } else if (event.stat === Stat.NOPROXY) {\n        logDebug(\n          LOG_TAG,\n          `RPC '${rpcName}' stream ${streamId} detected no buffering proxy`\n        );\n      }\n    });\n\n    setTimeout(() => {\n      // Technically we could/should wait for the WebChannel opened event,\n      // but because we want to send the first message with the WebChannel\n      // handshake we pretend the channel opened here (asynchronously), and\n      // then delay the actual open until the first message is sent.\n      streamBridge.callOnOpen();\n    }, 0);\n    return streamBridge;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** The Platform's 'window' implementation or null if not available. */\nexport function getWindow(): Window | null {\n  // `window` is not always available, e.g. in ReactNative and WebWorkers.\n  // eslint-disable-next-line no-restricted-globals\n  return typeof window !== 'undefined' ? window : null;\n}\n\n/** The Platform's 'document' implementation or null if not available. */\nexport function getDocument(): Document | null {\n  // `document` is not always available, e.g. in ReactNative and WebWorkers.\n  // eslint-disable-next-line no-restricted-globals\n  return typeof document !== 'undefined' ? document : null;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Return the Platform-specific serializer monitor. */\nimport { DatabaseId } from '../../core/database_info';\nimport { JsonProtoSerializer } from '../../remote/serializer';\n\nexport function newSerializer(databaseId: DatabaseId): JsonProtoSerializer {\n  return new JsonProtoSerializer(databaseId, /* useProto3Json= */ true);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AsyncQueue, DelayedOperation, TimerId } from '../util/async_queue';\nimport { logDebug } from '../util/log';\n\nconst LOG_TAG = 'ExponentialBackoff';\n\n/**\n * Initial backoff time in milliseconds after an error.\n * Set to 1s according to https://cloud.google.com/apis/design/errors.\n */\nconst DEFAULT_BACKOFF_INITIAL_DELAY_MS = 1000;\n\nconst DEFAULT_BACKOFF_FACTOR = 1.5;\n\n/** Maximum backoff time in milliseconds */\nconst DEFAULT_BACKOFF_MAX_DELAY_MS = 60 * 1000;\n\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nexport class ExponentialBackoff {\n  private currentBaseMs: number = 0;\n  private timerPromise: DelayedOperation<void> | null = null;\n  /** The last backoff attempt, as epoch milliseconds. */\n  private lastAttemptTime = Date.now();\n\n  constructor(\n    /**\n     * The AsyncQueue to run backoff operations on.\n     */\n    private readonly queue: AsyncQueue,\n    /**\n     * The ID to use when scheduling backoff operations on the AsyncQueue.\n     */\n    private readonly timerId: TimerId,\n    /**\n     * The initial delay (used as the base delay on the first retry attempt).\n     * Note that jitter will still be applied, so the actual delay could be as\n     * little as 0.5*initialDelayMs.\n     */\n    private readonly initialDelayMs: number = DEFAULT_BACKOFF_INITIAL_DELAY_MS,\n    /**\n     * The multiplier to use to determine the extended base delay after each\n     * attempt.\n     */\n    private readonly backoffFactor: number = DEFAULT_BACKOFF_FACTOR,\n    /**\n     * The maximum base delay after which no further backoff is performed.\n     * Note that jitter will still be applied, so the actual delay could be as\n     * much as 1.5*maxDelayMs.\n     */\n    private readonly maxDelayMs: number = DEFAULT_BACKOFF_MAX_DELAY_MS\n  ) {\n    this.reset();\n  }\n\n  /**\n   * Resets the backoff delay.\n   *\n   * The very next backoffAndWait() will have no delay. If it is called again\n   * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n   * subsequent ones will increase according to the backoffFactor.\n   */\n  reset(): void {\n    this.currentBaseMs = 0;\n  }\n\n  /**\n   * Resets the backoff delay to the maximum delay (e.g. for use after a\n   * RESOURCE_EXHAUSTED error).\n   */\n  resetToMax(): void {\n    this.currentBaseMs = this.maxDelayMs;\n  }\n\n  /**\n   * Returns a promise that resolves after currentDelayMs, and increases the\n   * delay for any subsequent attempts. If there was a pending backoff operation\n   * already, it will be canceled.\n   */\n  backoffAndRun(op: () => Promise<void>): void {\n    // Cancel any pending backoff operation.\n    this.cancel();\n\n    // First schedule using the current base (which may be 0 and should be\n    // honored as such).\n    const desiredDelayWithJitterMs = Math.floor(\n      this.currentBaseMs + this.jitterDelayMs()\n    );\n\n    // Guard against lastAttemptTime being in the future due to a clock change.\n    const delaySoFarMs = Math.max(0, Date.now() - this.lastAttemptTime);\n\n    // Guard against the backoff delay already being past.\n    const remainingDelayMs = Math.max(\n      0,\n      desiredDelayWithJitterMs - delaySoFarMs\n    );\n\n    if (remainingDelayMs > 0) {\n      logDebug(\n        LOG_TAG,\n        `Backing off for ${remainingDelayMs} ms ` +\n          `(base delay: ${this.currentBaseMs} ms, ` +\n          `delay with jitter: ${desiredDelayWithJitterMs} ms, ` +\n          `last attempt: ${delaySoFarMs} ms ago)`\n      );\n    }\n\n    this.timerPromise = this.queue.enqueueAfterDelay(\n      this.timerId,\n      remainingDelayMs,\n      () => {\n        this.lastAttemptTime = Date.now();\n        return op();\n      }\n    );\n\n    // Apply backoff factor to determine next delay and ensure it is within\n    // bounds.\n    this.currentBaseMs *= this.backoffFactor;\n    if (this.currentBaseMs < this.initialDelayMs) {\n      this.currentBaseMs = this.initialDelayMs;\n    }\n    if (this.currentBaseMs > this.maxDelayMs) {\n      this.currentBaseMs = this.maxDelayMs;\n    }\n  }\n\n  skipBackoff(): void {\n    if (this.timerPromise !== null) {\n      this.timerPromise.skipDelay();\n      this.timerPromise = null;\n    }\n  }\n\n  cancel(): void {\n    if (this.timerPromise !== null) {\n      this.timerPromise.cancel();\n      this.timerPromise = null;\n    }\n  }\n\n  /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */\n  private jitterDelayMs(): number {\n    return (Math.random() - 0.5) * this.currentBaseMs;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CredentialsProvider, Token } from '../api/credentials';\nimport { User } from '../auth/user';\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { TargetId } from '../core/types';\nimport { TargetData } from '../local/target_data';\nimport { Mutation, MutationResult } from '../model/mutation';\nimport {\n  ListenRequest as ProtoListenRequest,\n  ListenResponse as ProtoListenResponse,\n  WriteRequest as ProtoWriteRequest,\n  WriteResponse as ProtoWriteResponse\n} from '../protos/firestore_proto_api';\nimport { debugAssert, hardAssert } from '../util/assert';\nimport { AsyncQueue, DelayedOperation, TimerId } from '../util/async_queue';\nimport { Code, FirestoreError } from '../util/error';\nimport { logDebug, logError } from '../util/log';\nimport { isNullOrUndefined } from '../util/types';\n\nimport { ExponentialBackoff } from './backoff';\nimport { Connection, Stream } from './connection';\nimport {\n  fromVersion,\n  fromWatchChange,\n  fromWriteResults,\n  getEncodedDatabaseId,\n  JsonProtoSerializer,\n  toListenRequestLabels,\n  toMutation,\n  toTarget,\n  versionFromListenResponse\n} from './serializer';\nimport { WatchChange } from './watch_change';\n\nconst LOG_TAG = 'PersistentStream';\n\n// The generated proto interfaces for these class are missing the database\n// field. So we add it here.\n// TODO(b/36015800): Remove this once the api generator is fixed.\ninterface ListenRequest extends ProtoListenRequest {\n  database?: string;\n}\nexport interface WriteRequest extends ProtoWriteRequest {\n  database?: string;\n}\n/**\n * PersistentStream can be in one of 5 states (each described in detail below)\n * based on the following state transition diagram:\n *\n *          start() called             auth & connection succeeded\n * INITIAL ----------------> STARTING -----------------------------> OPEN\n *                             ^  |                                   |\n *                             |  |                    error occurred |\n *                             |  \\-----------------------------v-----/\n *                             |                                |\n *                    backoff  |                                |\n *                    elapsed  |              start() called    |\n *                             \\--- BACKOFF <---------------- ERROR\n *\n * [any state] --------------------------> INITIAL\n *               stop() called or\n *               idle timer expired\n */\nconst enum PersistentStreamState {\n  /**\n   * The streaming RPC is not yet running and there's no error condition.\n   * Calling start() will start the stream immediately without backoff.\n   * While in this state isStarted() will return false.\n   */\n  Initial,\n\n  /**\n   * The stream is starting, either waiting for an auth token or for the stream\n   * to successfully open. While in this state, isStarted() will return true but\n   * isOpen() will return false.\n   */\n  Starting,\n\n  /**\n   * The streaming RPC is up and running. Requests and responses can flow\n   * freely. Both isStarted() and isOpen() will return true.\n   */\n  Open,\n\n  /**\n   * The stream is healthy and has been connected for more than 10 seconds. We\n   * therefore assume that the credentials we passed were valid. Both\n   * isStarted() and isOpen() will return true.\n   */\n  Healthy,\n\n  /**\n   * The stream encountered an error. The next start attempt will back off.\n   * While in this state isStarted() will return false.\n   */\n  Error,\n\n  /**\n   * An in-between state after an error where the stream is waiting before\n   * re-starting. After waiting is complete, the stream will try to open.\n   * While in this state isStarted() will return true but isOpen() will return\n   * false.\n   */\n  Backoff\n}\n\n/**\n * Provides a common interface that is shared by the listeners for stream\n * events by the concrete implementation classes.\n */\nexport interface PersistentStreamListener {\n  /**\n   * Called after receiving an acknowledgement from the server, confirming that\n   * we are able to connect to it.\n   */\n  onConnected: () => Promise<void>;\n  /**\n   * Called after the stream was established and can accept outgoing\n   * messages\n   */\n  onOpen: () => Promise<void>;\n  /**\n   * Called after the stream has closed. If there was an error, the\n   * FirestoreError will be set.\n   */\n  onClose: (err?: FirestoreError) => Promise<void>;\n}\n\n/** The time a stream stays open after it is marked idle. */\nconst IDLE_TIMEOUT_MS = 60 * 1000;\n\n/** The time a stream stays open until we consider it healthy. */\nconst HEALTHY_TIMEOUT_MS = 10 * 1000;\n\n/**\n * A PersistentStream is an abstract base class that represents a streaming RPC\n * to the Firestore backend. It's built on top of the connections own support\n * for streaming RPCs, and adds several critical features for our clients:\n *\n *   - Exponential backoff on failure\n *   - Authentication via CredentialsProvider\n *   - Dispatching all callbacks into the shared worker queue\n *   - Closing idle streams after 60 seconds of inactivity\n *\n * Subclasses of PersistentStream implement serialization of models to and\n * from the JSON representation of the protocol buffers for a specific\n * streaming RPC.\n *\n * ## Starting and Stopping\n *\n * Streaming RPCs are stateful and need to be start()ed before messages can\n * be sent and received. The PersistentStream will call the onOpen() function\n * of the listener once the stream is ready to accept requests.\n *\n * Should a start() fail, PersistentStream will call the registered onClose()\n * listener with a FirestoreError indicating what went wrong.\n *\n * A PersistentStream can be started and stopped repeatedly.\n *\n * Generic types:\n *  SendType: The type of the outgoing message of the underlying\n *    connection stream\n *  ReceiveType: The type of the incoming message of the underlying\n *    connection stream\n *  ListenerType: The type of the listener that will be used for callbacks\n */\nexport abstract class PersistentStream<\n  SendType,\n  ReceiveType,\n  ListenerType extends PersistentStreamListener\n> {\n  private state = PersistentStreamState.Initial;\n  /**\n   * A close count that's incremented every time the stream is closed; used by\n   * getCloseGuardedDispatcher() to invalidate callbacks that happen after\n   * close.\n   */\n  private closeCount = 0;\n\n  private idleTimer: DelayedOperation<void> | null = null;\n  private healthCheck: DelayedOperation<void> | null = null;\n  private stream: Stream<SendType, ReceiveType> | null = null;\n\n  protected backoff: ExponentialBackoff;\n\n  constructor(\n    private queue: AsyncQueue,\n    connectionTimerId: TimerId,\n    private idleTimerId: TimerId,\n    private healthTimerId: TimerId,\n    protected connection: Connection,\n    private authCredentialsProvider: CredentialsProvider<User>,\n    private appCheckCredentialsProvider: CredentialsProvider<string>,\n    protected listener: ListenerType\n  ) {\n    this.backoff = new ExponentialBackoff(queue, connectionTimerId);\n  }\n\n  /**\n   * Returns true if start() has been called and no error has occurred. True\n   * indicates the stream is open or in the process of opening (which\n   * encompasses respecting backoff, getting auth tokens, and starting the\n   * actual RPC). Use isOpen() to determine if the stream is open and ready for\n   * outbound requests.\n   */\n  isStarted(): boolean {\n    return (\n      this.state === PersistentStreamState.Starting ||\n      this.state === PersistentStreamState.Backoff ||\n      this.isOpen()\n    );\n  }\n\n  /**\n   * Returns true if the underlying RPC is open (the onOpen() listener has been\n   * called) and the stream is ready for outbound requests.\n   */\n  isOpen(): boolean {\n    return (\n      this.state === PersistentStreamState.Open ||\n      this.state === PersistentStreamState.Healthy\n    );\n  }\n\n  /**\n   * Starts the RPC. Only allowed if isStarted() returns false. The stream is\n   * not immediately ready for use: onOpen() will be invoked when the RPC is\n   * ready for outbound requests, at which point isOpen() will return true.\n   *\n   * When start returns, isStarted() will return true.\n   */\n  start(): void {\n    if (this.state === PersistentStreamState.Error) {\n      this.performBackoff();\n      return;\n    }\n\n    debugAssert(\n      this.state === PersistentStreamState.Initial,\n      'Already started'\n    );\n    this.auth();\n  }\n\n  /**\n   * Stops the RPC. This call is idempotent and allowed regardless of the\n   * current isStarted() state.\n   *\n   * When stop returns, isStarted() and isOpen() will both return false.\n   */\n  async stop(): Promise<void> {\n    if (this.isStarted()) {\n      await this.close(PersistentStreamState.Initial);\n    }\n  }\n\n  /**\n   * After an error the stream will usually back off on the next attempt to\n   * start it. If the error warrants an immediate restart of the stream, the\n   * sender can use this to indicate that the receiver should not back off.\n   *\n   * Each error will call the onClose() listener. That function can decide to\n   * inhibit backoff if required.\n   */\n  inhibitBackoff(): void {\n    debugAssert(\n      !this.isStarted(),\n      'Can only inhibit backoff in a stopped state'\n    );\n\n    this.state = PersistentStreamState.Initial;\n    this.backoff.reset();\n  }\n\n  /**\n   * Marks this stream as idle. If no further actions are performed on the\n   * stream for one minute, the stream will automatically close itself and\n   * notify the stream's onClose() handler with Status.OK. The stream will then\n   * be in a !isStarted() state, requiring the caller to start the stream again\n   * before further use.\n   *\n   * Only streams that are in state 'Open' can be marked idle, as all other\n   * states imply pending network operations.\n   */\n  markIdle(): void {\n    // Starts the idle time if we are in state 'Open' and are not yet already\n    // running a timer (in which case the previous idle timeout still applies).\n    if (this.isOpen() && this.idleTimer === null) {\n      this.idleTimer = this.queue.enqueueAfterDelay(\n        this.idleTimerId,\n        IDLE_TIMEOUT_MS,\n        () => this.handleIdleCloseTimer()\n      );\n    }\n  }\n\n  /** Sends a message to the underlying stream. */\n  protected sendRequest(msg: SendType): void {\n    this.cancelIdleCheck();\n    this.stream!.send(msg);\n  }\n\n  /** Called by the idle timer when the stream should close due to inactivity. */\n  private async handleIdleCloseTimer(): Promise<void> {\n    if (this.isOpen()) {\n      // When timing out an idle stream there's no reason to force the stream into backoff when\n      // it restarts so set the stream state to Initial instead of Error.\n      return this.close(PersistentStreamState.Initial);\n    }\n  }\n\n  /** Marks the stream as active again. */\n  private cancelIdleCheck(): void {\n    if (this.idleTimer) {\n      this.idleTimer.cancel();\n      this.idleTimer = null;\n    }\n  }\n\n  /** Cancels the health check delayed operation. */\n  private cancelHealthCheck(): void {\n    if (this.healthCheck) {\n      this.healthCheck.cancel();\n      this.healthCheck = null;\n    }\n  }\n\n  /**\n   * Closes the stream and cleans up as necessary:\n   *\n   * * closes the underlying GRPC stream;\n   * * calls the onClose handler with the given 'error';\n   * * sets internal stream state to 'finalState';\n   * * adjusts the backoff timer based on the error\n   *\n   * A new stream can be opened by calling start().\n   *\n   * @param finalState - the intended state of the stream after closing.\n   * @param error - the error the connection was closed with.\n   */\n  private async close(\n    finalState: PersistentStreamState,\n    error?: FirestoreError\n  ): Promise<void> {\n    debugAssert(this.isStarted(), 'Only started streams should be closed.');\n    debugAssert(\n      finalState === PersistentStreamState.Error || isNullOrUndefined(error),\n      \"Can't provide an error when not in an error state.\"\n    );\n\n    // Cancel any outstanding timers (they're guaranteed not to execute).\n    this.cancelIdleCheck();\n    this.cancelHealthCheck();\n    this.backoff.cancel();\n\n    // Invalidates any stream-related callbacks (e.g. from auth or the\n    // underlying stream), guaranteeing they won't execute.\n    this.closeCount++;\n\n    if (finalState !== PersistentStreamState.Error) {\n      // If this is an intentional close ensure we don't delay our next connection attempt.\n      this.backoff.reset();\n    } else if (error && error.code === Code.RESOURCE_EXHAUSTED) {\n      // Log the error. (Probably either 'quota exceeded' or 'max queue length reached'.)\n      logError(error.toString());\n      logError(\n        'Using maximum backoff delay to prevent overloading the backend.'\n      );\n      this.backoff.resetToMax();\n    } else if (\n      error &&\n      error.code === Code.UNAUTHENTICATED &&\n      this.state !== PersistentStreamState.Healthy\n    ) {\n      // \"unauthenticated\" error means the token was rejected. This should rarely\n      // happen since both Auth and AppCheck ensure a sufficient TTL when we\n      // request a token. If a user manually resets their system clock this can\n      // fail, however. In this case, we should get a Code.UNAUTHENTICATED error\n      // before we received the first message and we need to invalidate the token\n      // to ensure that we fetch a new token.\n      this.authCredentialsProvider.invalidateToken();\n      this.appCheckCredentialsProvider.invalidateToken();\n    }\n\n    // Clean up the underlying stream because we are no longer interested in events.\n    if (this.stream !== null) {\n      this.tearDown();\n      this.stream.close();\n      this.stream = null;\n    }\n\n    // This state must be assigned before calling onClose() to allow the callback to\n    // inhibit backoff or otherwise manipulate the state in its non-started state.\n    this.state = finalState;\n\n    // Notify the listener that the stream closed.\n    await this.listener.onClose(error);\n  }\n\n  /**\n   * Can be overridden to perform additional cleanup before the stream is closed.\n   * Calling super.tearDown() is not required.\n   */\n  protected tearDown(): void {}\n\n  /**\n   * Used by subclasses to start the concrete RPC and return the underlying\n   * connection stream.\n   */\n  protected abstract startRpc(\n    authToken: Token | null,\n    appCheckToken: Token | null\n  ): Stream<SendType, ReceiveType>;\n\n  /**\n   * Called after the stream has received a message. The function will be\n   * called on the right queue and must return a Promise.\n   * @param message - The message received from the stream.\n   */\n  protected abstract onMessage(message: ReceiveType): Promise<void>;\n\n  private auth(): void {\n    debugAssert(\n      this.state === PersistentStreamState.Initial,\n      'Must be in initial state to auth'\n    );\n\n    this.state = PersistentStreamState.Starting;\n\n    const dispatchIfNotClosed = this.getCloseGuardedDispatcher(this.closeCount);\n\n    // TODO(mikelehen): Just use dispatchIfNotClosed, but see TODO below.\n    const closeCount = this.closeCount;\n\n    Promise.all([\n      this.authCredentialsProvider.getToken(),\n      this.appCheckCredentialsProvider.getToken()\n    ]).then(\n      ([authToken, appCheckToken]) => {\n        // Stream can be stopped while waiting for authentication.\n        // TODO(mikelehen): We really should just use dispatchIfNotClosed\n        // and let this dispatch onto the queue, but that opened a spec test can\n        // of worms that I don't want to deal with in this PR.\n        if (this.closeCount === closeCount) {\n          // Normally we'd have to schedule the callback on the AsyncQueue.\n          // However, the following calls are safe to be called outside the\n          // AsyncQueue since they don't chain asynchronous calls\n          this.startStream(authToken, appCheckToken);\n        }\n      },\n      (error: Error) => {\n        dispatchIfNotClosed(() => {\n          const rpcError = new FirestoreError(\n            Code.UNKNOWN,\n            'Fetching auth token failed: ' + error.message\n          );\n          return this.handleStreamClose(rpcError);\n        });\n      }\n    );\n  }\n\n  private startStream(\n    authToken: Token | null,\n    appCheckToken: Token | null\n  ): void {\n    debugAssert(\n      this.state === PersistentStreamState.Starting,\n      'Trying to start stream in a non-starting state'\n    );\n\n    const dispatchIfNotClosed = this.getCloseGuardedDispatcher(this.closeCount);\n\n    this.stream = this.startRpc(authToken, appCheckToken);\n    this.stream.onConnected(() => {\n      dispatchIfNotClosed(() => this.listener!.onConnected());\n    });\n    this.stream.onOpen(() => {\n      dispatchIfNotClosed(() => {\n        debugAssert(\n          this.state === PersistentStreamState.Starting,\n          'Expected stream to be in state Starting, but was ' + this.state\n        );\n        this.state = PersistentStreamState.Open;\n        debugAssert(\n          this.healthCheck === null,\n          'Expected healthCheck to be null'\n        );\n        this.healthCheck = this.queue.enqueueAfterDelay(\n          this.healthTimerId,\n          HEALTHY_TIMEOUT_MS,\n          () => {\n            if (this.isOpen()) {\n              this.state = PersistentStreamState.Healthy;\n            }\n            return Promise.resolve();\n          }\n        );\n        return this.listener!.onOpen();\n      });\n    });\n    this.stream.onClose((error?: FirestoreError) => {\n      dispatchIfNotClosed(() => {\n        return this.handleStreamClose(error);\n      });\n    });\n    this.stream.onMessage((msg: ReceiveType) => {\n      dispatchIfNotClosed(() => {\n        return this.onMessage(msg);\n      });\n    });\n  }\n\n  private performBackoff(): void {\n    debugAssert(\n      this.state === PersistentStreamState.Error,\n      'Should only perform backoff when in Error state'\n    );\n    this.state = PersistentStreamState.Backoff;\n\n    this.backoff.backoffAndRun(async () => {\n      debugAssert(\n        this.state === PersistentStreamState.Backoff,\n        'Backoff elapsed but state is now: ' + this.state\n      );\n\n      this.state = PersistentStreamState.Initial;\n      this.start();\n      debugAssert(this.isStarted(), 'PersistentStream should have started');\n    });\n  }\n\n  // Visible for tests\n  handleStreamClose(error?: FirestoreError): Promise<void> {\n    debugAssert(\n      this.isStarted(),\n      \"Can't handle server close on non-started stream\"\n    );\n    logDebug(LOG_TAG, `close with error: ${error}`);\n\n    this.stream = null;\n\n    // In theory the stream could close cleanly, however, in our current model\n    // we never expect this to happen because if we stop a stream ourselves,\n    // this callback will never be called. To prevent cases where we retry\n    // without a backoff accidentally, we set the stream to error in all cases.\n    return this.close(PersistentStreamState.Error, error);\n  }\n\n  /**\n   * Returns a \"dispatcher\" function that dispatches operations onto the\n   * AsyncQueue but only runs them if closeCount remains unchanged. This allows\n   * us to turn auth / stream callbacks into no-ops if the stream is closed /\n   * re-opened, etc.\n   */\n  private getCloseGuardedDispatcher(\n    startCloseCount: number\n  ): (fn: () => Promise<void>) => void {\n    return (fn: () => Promise<void>): void => {\n      this.queue.enqueueAndForget(() => {\n        if (this.closeCount === startCloseCount) {\n          return fn();\n        } else {\n          logDebug(\n            LOG_TAG,\n            'stream callback skipped by getCloseGuardedDispatcher.'\n          );\n          return Promise.resolve();\n        }\n      });\n    };\n  }\n}\n\n/** Listener for the PersistentWatchStream */\nexport interface WatchStreamListener extends PersistentStreamListener {\n  /**\n   * Called on a watchChange. The snapshot parameter will be MIN if the watch\n   * change did not have a snapshot associated with it.\n   */\n  onWatchChange: (\n    watchChange: WatchChange,\n    snapshot: SnapshotVersion\n  ) => Promise<void>;\n}\n\n/**\n * A PersistentStream that implements the Listen RPC.\n *\n * Once the Listen stream has called the onOpen() listener, any number of\n * listen() and unlisten() calls can be made to control what changes will be\n * sent from the server for ListenResponses.\n */\nexport class PersistentListenStream extends PersistentStream<\n  ProtoListenRequest,\n  ProtoListenResponse,\n  WatchStreamListener\n> {\n  constructor(\n    queue: AsyncQueue,\n    connection: Connection,\n    authCredentials: CredentialsProvider<User>,\n    appCheckCredentials: CredentialsProvider<string>,\n    private serializer: JsonProtoSerializer,\n    listener: WatchStreamListener\n  ) {\n    super(\n      queue,\n      TimerId.ListenStreamConnectionBackoff,\n      TimerId.ListenStreamIdle,\n      TimerId.HealthCheckTimeout,\n      connection,\n      authCredentials,\n      appCheckCredentials,\n      listener\n    );\n  }\n\n  protected startRpc(\n    authToken: Token | null,\n    appCheckToken: Token | null\n  ): Stream<ProtoListenRequest, ProtoListenResponse> {\n    return this.connection.openStream<ProtoListenRequest, ProtoListenResponse>(\n      'Listen',\n      authToken,\n      appCheckToken\n    );\n  }\n\n  protected onMessage(watchChangeProto: ProtoListenResponse): Promise<void> {\n    // A successful response means the stream is healthy\n    this.backoff.reset();\n\n    const watchChange = fromWatchChange(this.serializer, watchChangeProto);\n    const snapshot = versionFromListenResponse(watchChangeProto);\n    return this.listener!.onWatchChange(watchChange, snapshot);\n  }\n\n  /**\n   * Registers interest in the results of the given target. If the target\n   * includes a resumeToken it will be included in the request. Results that\n   * affect the target will be streamed back as WatchChange messages that\n   * reference the targetId.\n   */\n  watch(targetData: TargetData): void {\n    const request: ListenRequest = {};\n    request.database = getEncodedDatabaseId(this.serializer);\n    request.addTarget = toTarget(this.serializer, targetData);\n\n    const labels = toListenRequestLabels(this.serializer, targetData);\n    if (labels) {\n      request.labels = labels;\n    }\n\n    this.sendRequest(request);\n  }\n\n  /**\n   * Unregisters interest in the results of the target associated with the\n   * given targetId.\n   */\n  unwatch(targetId: TargetId): void {\n    const request: ListenRequest = {};\n    request.database = getEncodedDatabaseId(this.serializer);\n    request.removeTarget = targetId;\n    this.sendRequest(request);\n  }\n}\n\n/** Listener for the PersistentWriteStream */\nexport interface WriteStreamListener extends PersistentStreamListener {\n  /**\n   * Called by the PersistentWriteStream upon a successful handshake response\n   * from the server, which is the receiver's cue to send any pending writes.\n   */\n  onHandshakeComplete: () => Promise<void>;\n\n  /**\n   * Called by the PersistentWriteStream upon receiving a StreamingWriteResponse\n   * from the server that contains a mutation result.\n   */\n  onMutationResult: (\n    commitVersion: SnapshotVersion,\n    results: MutationResult[]\n  ) => Promise<void>;\n}\n\n/**\n * A Stream that implements the Write RPC.\n *\n * The Write RPC requires the caller to maintain special streamToken\n * state in between calls, to help the server understand which responses the\n * client has processed by the time the next request is made. Every response\n * will contain a streamToken; this value must be passed to the next\n * request.\n *\n * After calling start() on this stream, the next request must be a handshake,\n * containing whatever streamToken is on hand. Once a response to this\n * request is received, all pending mutations may be submitted. When\n * submitting multiple batches of mutations at the same time, it's\n * okay to use the same streamToken for the calls to writeMutations.\n *\n * TODO(b/33271235): Use proto types\n */\nexport class PersistentWriteStream extends PersistentStream<\n  ProtoWriteRequest,\n  ProtoWriteResponse,\n  WriteStreamListener\n> {\n  private handshakeComplete_ = false;\n\n  constructor(\n    queue: AsyncQueue,\n    connection: Connection,\n    authCredentials: CredentialsProvider<User>,\n    appCheckCredentials: CredentialsProvider<string>,\n    private serializer: JsonProtoSerializer,\n    listener: WriteStreamListener\n  ) {\n    super(\n      queue,\n      TimerId.WriteStreamConnectionBackoff,\n      TimerId.WriteStreamIdle,\n      TimerId.HealthCheckTimeout,\n      connection,\n      authCredentials,\n      appCheckCredentials,\n      listener\n    );\n  }\n\n  /**\n   * The last received stream token from the server, used to acknowledge which\n   * responses the client has processed. Stream tokens are opaque checkpoint\n   * markers whose only real value is their inclusion in the next request.\n   *\n   * PersistentWriteStream manages propagating this value from responses to the\n   * next request.\n   */\n  private lastStreamToken: string | Uint8Array | undefined;\n\n  /**\n   * Tracks whether or not a handshake has been successfully exchanged and\n   * the stream is ready to accept mutations.\n   */\n  get handshakeComplete(): boolean {\n    return this.handshakeComplete_;\n  }\n\n  // Override of PersistentStream.start\n  start(): void {\n    this.handshakeComplete_ = false;\n    this.lastStreamToken = undefined;\n    super.start();\n  }\n\n  protected tearDown(): void {\n    if (this.handshakeComplete_) {\n      this.writeMutations([]);\n    }\n  }\n\n  protected startRpc(\n    authToken: Token | null,\n    appCheckToken: Token | null\n  ): Stream<ProtoWriteRequest, ProtoWriteResponse> {\n    return this.connection.openStream<ProtoWriteRequest, ProtoWriteResponse>(\n      'Write',\n      authToken,\n      appCheckToken\n    );\n  }\n\n  protected onMessage(responseProto: ProtoWriteResponse): Promise<void> {\n    // Always capture the last stream token.\n    hardAssert(\n      !!responseProto.streamToken,\n      'Got a write response without a stream token'\n    );\n    this.lastStreamToken = responseProto.streamToken;\n\n    if (!this.handshakeComplete_) {\n      // The first response is always the handshake response\n      hardAssert(\n        !responseProto.writeResults || responseProto.writeResults.length === 0,\n        'Got mutation results for handshake'\n      );\n      this.handshakeComplete_ = true;\n      return this.listener!.onHandshakeComplete();\n    } else {\n      // A successful first write response means the stream is healthy,\n      // Note, that we could consider a successful handshake healthy, however,\n      // the write itself might be causing an error we want to back off from.\n      this.backoff.reset();\n\n      const results = fromWriteResults(\n        responseProto.writeResults,\n        responseProto.commitTime\n      );\n      const commitVersion = fromVersion(responseProto.commitTime!);\n      return this.listener!.onMutationResult(commitVersion, results);\n    }\n  }\n\n  /**\n   * Sends an initial streamToken to the server, performing the handshake\n   * required to make the StreamingWrite RPC work. Subsequent\n   * calls should wait until onHandshakeComplete was called.\n   */\n  writeHandshake(): void {\n    debugAssert(this.isOpen(), 'Writing handshake requires an opened stream');\n    debugAssert(!this.handshakeComplete_, 'Handshake already completed');\n    debugAssert(\n      !this.lastStreamToken,\n      'Stream token should be empty during handshake'\n    );\n    // TODO(dimond): Support stream resumption. We intentionally do not set the\n    // stream token on the handshake, ignoring any stream token we might have.\n    const request: WriteRequest = {};\n    request.database = getEncodedDatabaseId(this.serializer);\n    this.sendRequest(request);\n  }\n\n  /** Sends a group of mutations to the Firestore backend to apply. */\n  writeMutations(mutations: Mutation[]): void {\n    debugAssert(this.isOpen(), 'Writing mutations requires an opened stream');\n    debugAssert(\n      this.handshakeComplete_,\n      'Handshake must be complete before writing mutations'\n    );\n    debugAssert(\n      !!this.lastStreamToken,\n      'Trying to write mutation without a token'\n    );\n\n    const request: WriteRequest = {\n      streamToken: this.lastStreamToken,\n      writes: mutations.map(mutation => toMutation(this.serializer, mutation))\n    };\n\n    this.sendRequest(request);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CredentialsProvider } from '../api/credentials';\nimport { User } from '../auth/user';\nimport { Aggregate } from '../core/aggregate';\nimport { DatabaseId } from '../core/database_info';\nimport { queryToAggregateTarget, Query, queryToTarget } from '../core/query';\nimport { Document } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { Mutation } from '../model/mutation';\nimport { ResourcePath } from '../model/path';\nimport {\n  ApiClientObjectMap,\n  BatchGetDocumentsRequest as ProtoBatchGetDocumentsRequest,\n  BatchGetDocumentsResponse as ProtoBatchGetDocumentsResponse,\n  RunAggregationQueryRequest as ProtoRunAggregationQueryRequest,\n  RunAggregationQueryResponse as ProtoRunAggregationQueryResponse,\n  RunQueryRequest as ProtoRunQueryRequest,\n  RunQueryResponse as ProtoRunQueryResponse,\n  Value\n} from '../protos/firestore_proto_api';\nimport { debugAssert, debugCast, hardAssert } from '../util/assert';\nimport { AsyncQueue } from '../util/async_queue';\nimport { Code, FirestoreError } from '../util/error';\nimport { isNullOrUndefined } from '../util/types';\n\nimport { Connection } from './connection';\nimport {\n  PersistentListenStream,\n  PersistentWriteStream,\n  WatchStreamListener,\n  WriteStreamListener\n} from './persistent_stream';\nimport {\n  fromDocument,\n  fromBatchGetDocumentsResponse,\n  JsonProtoSerializer,\n  toMutation,\n  toName,\n  toQueryTarget,\n  toResourcePath,\n  toRunAggregationQueryRequest\n} from './serializer';\n\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\nexport abstract class Datastore {\n  abstract terminate(): void;\n  abstract serializer: JsonProtoSerializer;\n}\n\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\nclass DatastoreImpl extends Datastore {\n  terminated = false;\n\n  constructor(\n    readonly authCredentials: CredentialsProvider<User>,\n    readonly appCheckCredentials: CredentialsProvider<string>,\n    readonly connection: Connection,\n    readonly serializer: JsonProtoSerializer\n  ) {\n    super();\n  }\n\n  verifyInitialized(): void {\n    debugAssert(!!this.connection, 'Datastore.start() not called');\n    if (this.terminated) {\n      throw new FirestoreError(\n        Code.FAILED_PRECONDITION,\n        'The client has already been terminated.'\n      );\n    }\n  }\n\n  /** Invokes the provided RPC with auth and AppCheck tokens. */\n  invokeRPC<Req, Resp>(\n    rpcName: string,\n    databaseId: DatabaseId,\n    resourcePath: ResourcePath,\n    request: Req\n  ): Promise<Resp> {\n    this.verifyInitialized();\n    return Promise.all([\n      this.authCredentials.getToken(),\n      this.appCheckCredentials.getToken()\n    ])\n      .then(([authToken, appCheckToken]) => {\n        return this.connection.invokeRPC<Req, Resp>(\n          rpcName,\n          toResourcePath(databaseId, resourcePath),\n          request,\n          authToken,\n          appCheckToken\n        );\n      })\n      .catch((error: FirestoreError) => {\n        if (error.name === 'FirebaseError') {\n          if (error.code === Code.UNAUTHENTICATED) {\n            this.authCredentials.invalidateToken();\n            this.appCheckCredentials.invalidateToken();\n          }\n          throw error;\n        } else {\n          throw new FirestoreError(Code.UNKNOWN, error.toString());\n        }\n      });\n  }\n\n  /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */\n  invokeStreamingRPC<Req, Resp>(\n    rpcName: string,\n    databaseId: DatabaseId,\n    resourcePath: ResourcePath,\n    request: Req,\n    expectedResponseCount?: number\n  ): Promise<Resp[]> {\n    this.verifyInitialized();\n    return Promise.all([\n      this.authCredentials.getToken(),\n      this.appCheckCredentials.getToken()\n    ])\n      .then(([authToken, appCheckToken]) => {\n        return this.connection.invokeStreamingRPC<Req, Resp>(\n          rpcName,\n          toResourcePath(databaseId, resourcePath),\n          request,\n          authToken,\n          appCheckToken,\n          expectedResponseCount\n        );\n      })\n      .catch((error: FirestoreError) => {\n        if (error.name === 'FirebaseError') {\n          if (error.code === Code.UNAUTHENTICATED) {\n            this.authCredentials.invalidateToken();\n            this.appCheckCredentials.invalidateToken();\n          }\n          throw error;\n        } else {\n          throw new FirestoreError(Code.UNKNOWN, error.toString());\n        }\n      });\n  }\n\n  terminate(): void {\n    this.terminated = true;\n    this.connection.terminate();\n  }\n}\n\n// TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\nexport function newDatastore(\n  authCredentials: CredentialsProvider<User>,\n  appCheckCredentials: CredentialsProvider<string>,\n  connection: Connection,\n  serializer: JsonProtoSerializer\n): Datastore {\n  return new DatastoreImpl(\n    authCredentials,\n    appCheckCredentials,\n    connection,\n    serializer\n  );\n}\n\nexport async function invokeCommitRpc(\n  datastore: Datastore,\n  mutations: Mutation[]\n): Promise<void> {\n  const datastoreImpl = debugCast(datastore, DatastoreImpl);\n  const request = {\n    writes: mutations.map(m => toMutation(datastoreImpl.serializer, m))\n  };\n  await datastoreImpl.invokeRPC(\n    'Commit',\n    datastoreImpl.serializer.databaseId,\n    ResourcePath.emptyPath(),\n    request\n  );\n}\n\nexport async function invokeBatchGetDocumentsRpc(\n  datastore: Datastore,\n  keys: DocumentKey[]\n): Promise<Document[]> {\n  const datastoreImpl = debugCast(datastore, DatastoreImpl);\n  const request = {\n    documents: keys.map(k => toName(datastoreImpl.serializer, k))\n  };\n  const response = await datastoreImpl.invokeStreamingRPC<\n    ProtoBatchGetDocumentsRequest,\n    ProtoBatchGetDocumentsResponse\n  >(\n    'BatchGetDocuments',\n    datastoreImpl.serializer.databaseId,\n    ResourcePath.emptyPath(),\n    request,\n    keys.length\n  );\n\n  const docs = new Map<string, Document>();\n  response.forEach(proto => {\n    const doc = fromBatchGetDocumentsResponse(datastoreImpl.serializer, proto);\n    docs.set(doc.key.toString(), doc);\n  });\n  const result: Document[] = [];\n  keys.forEach(key => {\n    const doc = docs.get(key.toString());\n    hardAssert(!!doc, 'Missing entity in write response for ' + key);\n    result.push(doc);\n  });\n  return result;\n}\n\nexport async function invokeRunQueryRpc(\n  datastore: Datastore,\n  query: Query\n): Promise<Document[]> {\n  const datastoreImpl = debugCast(datastore, DatastoreImpl);\n  const { queryTarget, parent } = toQueryTarget(\n    datastoreImpl.serializer,\n    queryToTarget(query)\n  );\n  const response = await datastoreImpl.invokeStreamingRPC<\n    ProtoRunQueryRequest,\n    ProtoRunQueryResponse\n  >('RunQuery', datastoreImpl.serializer.databaseId, parent, {\n    structuredQuery: queryTarget.structuredQuery\n  });\n  return (\n    response\n      // Omit RunQueryResponses that only contain readTimes.\n      .filter(proto => !!proto.document)\n      .map(proto =>\n        fromDocument(datastoreImpl.serializer, proto.document!, undefined)\n      )\n  );\n}\n\nexport async function invokeRunAggregationQueryRpc(\n  datastore: Datastore,\n  query: Query,\n  aggregates: Aggregate[]\n): Promise<ApiClientObjectMap<Value>> {\n  const datastoreImpl = debugCast(datastore, DatastoreImpl);\n  const { request, aliasMap, parent } = toRunAggregationQueryRequest(\n    datastoreImpl.serializer,\n    queryToAggregateTarget(query),\n    aggregates\n  );\n\n  if (!datastoreImpl.connection.shouldResourcePathBeIncludedInRequest) {\n    delete request.parent;\n  }\n  const response = await datastoreImpl.invokeStreamingRPC<\n    ProtoRunAggregationQueryRequest,\n    ProtoRunAggregationQueryResponse\n  >(\n    'RunAggregationQuery',\n    datastoreImpl.serializer.databaseId,\n    parent,\n    request,\n    /*expectedResponseCount=*/ 1\n  );\n\n  // Omit RunAggregationQueryResponse that only contain readTimes.\n  const filteredResult = response.filter(proto => !!proto.result);\n\n  hardAssert(\n    filteredResult.length === 1,\n    'Aggregation fields are missing from result.'\n  );\n  debugAssert(\n    !isNullOrUndefined(filteredResult[0].result),\n    'aggregationQueryResponse.result'\n  );\n  debugAssert(\n    !isNullOrUndefined(filteredResult[0].result.aggregateFields),\n    'aggregationQueryResponse.result.aggregateFields'\n  );\n\n  // Remap the short-form aliases that were sent to the server\n  // to the client-side aliases. Users will access the results\n  // using the client-side alias.\n  const unmappedAggregateFields = filteredResult[0].result?.aggregateFields;\n  const remappedFields = Object.keys(unmappedAggregateFields).reduce<\n    ApiClientObjectMap<Value>\n  >((accumulator, key) => {\n    debugAssert(\n      !isNullOrUndefined(aliasMap[key]),\n      `'${key}' not present in aliasMap result`\n    );\n    accumulator[aliasMap[key]] = unmappedAggregateFields[key]!;\n    return accumulator;\n  }, {});\n\n  return remappedFields;\n}\n\nexport function newPersistentWriteStream(\n  datastore: Datastore,\n  queue: AsyncQueue,\n  listener: WriteStreamListener\n): PersistentWriteStream {\n  const datastoreImpl = debugCast(datastore, DatastoreImpl);\n  datastoreImpl.verifyInitialized();\n  return new PersistentWriteStream(\n    queue,\n    datastoreImpl.connection,\n    datastoreImpl.authCredentials,\n    datastoreImpl.appCheckCredentials,\n    datastoreImpl.serializer,\n    listener\n  );\n}\n\nexport function newPersistentWatchStream(\n  datastore: Datastore,\n  queue: AsyncQueue,\n  listener: WatchStreamListener\n): PersistentListenStream {\n  const datastoreImpl = debugCast(datastore, DatastoreImpl);\n  datastoreImpl.verifyInitialized();\n  return new PersistentListenStream(\n    queue,\n    datastoreImpl.connection,\n    datastoreImpl.authCredentials,\n    datastoreImpl.appCheckCredentials,\n    datastoreImpl.serializer,\n    listener\n  );\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OnlineState } from '../core/types';\nimport { debugAssert } from '../util/assert';\nimport { AsyncQueue, DelayedOperation, TimerId } from '../util/async_queue';\nimport { FirestoreError } from '../util/error';\nimport { logError, logDebug } from '../util/log';\n\nconst LOG_TAG = 'OnlineStateTracker';\n\n// To deal with transient failures, we allow multiple stream attempts before\n// giving up and transitioning from OnlineState.Unknown to Offline.\n// TODO(mikelehen): This used to be set to 2 as a mitigation for b/66228394.\n// @jdimond thinks that bug is sufficiently fixed so that we can set this back\n// to 1. If that works okay, we could potentially remove this logic entirely.\nconst MAX_WATCH_STREAM_FAILURES = 1;\n\n// To deal with stream attempts that don't succeed or fail in a timely manner,\n// we have a timeout for OnlineState to reach Online or Offline.\n// If the timeout is reached, we transition to Offline rather than waiting\n// indefinitely.\nconst ONLINE_STATE_TIMEOUT_MS = 10 * 1000;\n\n/**\n * A component used by the RemoteStore to track the OnlineState (that is,\n * whether or not the client as a whole should be considered to be online or\n * offline), implementing the appropriate heuristics.\n *\n * In particular, when the client is trying to connect to the backend, we\n * allow up to MAX_WATCH_STREAM_FAILURES within ONLINE_STATE_TIMEOUT_MS for\n * a connection to succeed. If we have too many failures or the timeout elapses,\n * then we set the OnlineState to Offline, and the client will behave as if\n * it is offline (get()s will return cached data, etc.).\n */\nexport class OnlineStateTracker {\n  /** The current OnlineState. */\n  private state = OnlineState.Unknown;\n\n  /**\n   * A count of consecutive failures to open the stream. If it reaches the\n   * maximum defined by MAX_WATCH_STREAM_FAILURES, we'll set the OnlineState to\n   * Offline.\n   */\n  private watchStreamFailures = 0;\n\n  /**\n   * A timer that elapses after ONLINE_STATE_TIMEOUT_MS, at which point we\n   * transition from OnlineState.Unknown to OnlineState.Offline without waiting\n   * for the stream to actually fail (MAX_WATCH_STREAM_FAILURES times).\n   */\n  private onlineStateTimer: DelayedOperation<void> | null = null;\n\n  /**\n   * Whether the client should log a warning message if it fails to connect to\n   * the backend (initially true, cleared after a successful stream, or if we've\n   * logged the message already).\n   */\n  private shouldWarnClientIsOffline = true;\n\n  constructor(\n    private asyncQueue: AsyncQueue,\n    private onlineStateHandler: (onlineState: OnlineState) => void\n  ) {}\n\n  /**\n   * Called by RemoteStore when a watch stream is started (including on each\n   * backoff attempt).\n   *\n   * If this is the first attempt, it sets the OnlineState to Unknown and starts\n   * the onlineStateTimer.\n   */\n  handleWatchStreamStart(): void {\n    if (this.watchStreamFailures === 0) {\n      this.setAndBroadcast(OnlineState.Unknown);\n\n      debugAssert(\n        this.onlineStateTimer === null,\n        `onlineStateTimer shouldn't be started yet`\n      );\n      this.onlineStateTimer = this.asyncQueue.enqueueAfterDelay(\n        TimerId.OnlineStateTimeout,\n        ONLINE_STATE_TIMEOUT_MS,\n        () => {\n          this.onlineStateTimer = null;\n          debugAssert(\n            this.state === OnlineState.Unknown,\n            'Timer should be canceled if we transitioned to a different state.'\n          );\n          this.logClientOfflineWarningIfNecessary(\n            `Backend didn't respond within ${ONLINE_STATE_TIMEOUT_MS / 1000} ` +\n              `seconds.`\n          );\n          this.setAndBroadcast(OnlineState.Offline);\n\n          // NOTE: handleWatchStreamFailure() will continue to increment\n          // watchStreamFailures even though we are already marked Offline,\n          // but this is non-harmful.\n\n          return Promise.resolve();\n        }\n      );\n    }\n  }\n\n  /**\n   * Updates our OnlineState as appropriate after the watch stream reports a\n   * failure. The first failure moves us to the 'Unknown' state. We then may\n   * allow multiple failures (based on MAX_WATCH_STREAM_FAILURES) before we\n   * actually transition to the 'Offline' state.\n   */\n  handleWatchStreamFailure(error: FirestoreError): void {\n    if (this.state === OnlineState.Online) {\n      this.setAndBroadcast(OnlineState.Unknown);\n\n      // To get to OnlineState.Online, set() must have been called which would\n      // have reset our heuristics.\n      debugAssert(\n        this.watchStreamFailures === 0,\n        'watchStreamFailures must be 0'\n      );\n      debugAssert(\n        this.onlineStateTimer === null,\n        'onlineStateTimer must be null'\n      );\n    } else {\n      this.watchStreamFailures++;\n      if (this.watchStreamFailures >= MAX_WATCH_STREAM_FAILURES) {\n        this.clearOnlineStateTimer();\n\n        this.logClientOfflineWarningIfNecessary(\n          `Connection failed ${MAX_WATCH_STREAM_FAILURES} ` +\n            `times. Most recent error: ${error.toString()}`\n        );\n\n        this.setAndBroadcast(OnlineState.Offline);\n      }\n    }\n  }\n\n  /**\n   * Explicitly sets the OnlineState to the specified state.\n   *\n   * Note that this resets our timers / failure counters, etc. used by our\n   * Offline heuristics, so must not be used in place of\n   * handleWatchStreamStart() and handleWatchStreamFailure().\n   */\n  set(newState: OnlineState): void {\n    this.clearOnlineStateTimer();\n    this.watchStreamFailures = 0;\n\n    if (newState === OnlineState.Online) {\n      // We've connected to watch at least once. Don't warn the developer\n      // about being offline going forward.\n      this.shouldWarnClientIsOffline = false;\n    }\n\n    this.setAndBroadcast(newState);\n  }\n\n  private setAndBroadcast(newState: OnlineState): void {\n    if (newState !== this.state) {\n      this.state = newState;\n      this.onlineStateHandler(newState);\n    }\n  }\n\n  private logClientOfflineWarningIfNecessary(details: string): void {\n    const message =\n      `Could not reach Cloud Firestore backend. ${details}\\n` +\n      `This typically indicates that your device does not have a healthy ` +\n      `Internet connection at the moment. The client will operate in offline ` +\n      `mode until it is able to successfully connect to the backend.`;\n    if (this.shouldWarnClientIsOffline) {\n      logError(message);\n      this.shouldWarnClientIsOffline = false;\n    } else {\n      logDebug(LOG_TAG, message);\n    }\n  }\n\n  private clearOnlineStateTimer(): void {\n    if (this.onlineStateTimer !== null) {\n      this.onlineStateTimer.cancel();\n      this.onlineStateTimer = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { User } from '../auth/user';\nimport { SnapshotVersion } from '../core/snapshot_version';\nimport { OnlineState, TargetId } from '../core/types';\nimport { LocalStore } from '../local/local_store';\nimport {\n  localStoreGetLastRemoteSnapshotVersion,\n  localStoreGetNextMutationBatch\n} from '../local/local_store_impl';\nimport { isIndexedDbTransactionError } from '../local/simple_db';\nimport { TargetData } from '../local/target_data';\nimport { MutationResult } from '../model/mutation';\nimport { MutationBatch, MutationBatchResult } from '../model/mutation_batch';\nimport { debugAssert, debugCast } from '../util/assert';\nimport { AsyncQueue } from '../util/async_queue';\nimport { ByteString } from '../util/byte_string';\nimport { FirestoreError } from '../util/error';\nimport { logDebug } from '../util/log';\nimport { BATCHID_UNKNOWN } from '../util/types';\n\nimport { ConnectivityMonitor, NetworkStatus } from './connectivity_monitor';\nimport {\n  Datastore,\n  newPersistentWatchStream,\n  newPersistentWriteStream\n} from './datastore';\nimport { OnlineStateTracker } from './online_state_tracker';\nimport {\n  PersistentListenStream,\n  PersistentWriteStream\n} from './persistent_stream';\nimport { RemoteSyncer } from './remote_syncer';\nimport { isPermanentWriteError } from './rpc_error';\nimport {\n  DocumentWatchChange,\n  ExistenceFilterChange,\n  WatchChange,\n  WatchChangeAggregator,\n  WatchTargetChange,\n  WatchTargetChangeState\n} from './watch_change';\n\nconst LOG_TAG = 'RemoteStore';\n\n// TODO(b/35853402): Negotiate this with the stream.\nconst MAX_PENDING_WRITES = 10;\n\n/** Reasons for why the RemoteStore may be offline. */\nconst enum OfflineCause {\n  /** The user has explicitly disabled the network (via `disableNetwork()`). */\n  UserDisabled,\n  /** An IndexedDb failure occurred while persisting a stream update. */\n  IndexedDbFailed,\n  /** The tab is not the primary tab (only relevant with multi-tab). */\n  IsSecondary,\n  /** We are restarting the streams due to an Auth credential change. */\n  CredentialChange,\n  /** The connectivity state of the environment has changed. */\n  ConnectivityChange,\n  /** The RemoteStore has been shut down. */\n  Shutdown\n}\n\n/**\n * RemoteStore - An interface to remotely stored data, basically providing a\n * wrapper around the Datastore that is more reliable for the rest of the\n * system.\n *\n * RemoteStore is responsible for maintaining the connection to the server.\n * - maintaining a list of active listens.\n * - reconnecting when the connection is dropped.\n * - resuming all the active listens on reconnect.\n *\n * RemoteStore handles all incoming events from the Datastore.\n * - listening to the watch stream and repackaging the events as RemoteEvents\n * - notifying SyncEngine of any changes to the active listens.\n *\n * RemoteStore takes writes from other components and handles them reliably.\n * - pulling pending mutations from LocalStore and sending them to Datastore.\n * - retrying mutations that failed because of network problems.\n * - acking mutations to the SyncEngine once they are accepted or rejected.\n */\nexport interface RemoteStore {\n  /**\n   * SyncEngine to notify of watch and write events. This must be set\n   * immediately after construction.\n   */\n  remoteSyncer: RemoteSyncer;\n}\n\nclass RemoteStoreImpl implements RemoteStore {\n  remoteSyncer: RemoteSyncer = {};\n\n  /**\n   * A list of up to MAX_PENDING_WRITES writes that we have fetched from the\n   * LocalStore via fillWritePipeline() and have or will send to the write\n   * stream.\n   *\n   * Whenever writePipeline.length > 0 the RemoteStore will attempt to start or\n   * restart the write stream. When the stream is established the writes in the\n   * pipeline will be sent in order.\n   *\n   * Writes remain in writePipeline until they are acknowledged by the backend\n   * and thus will automatically be re-sent if the stream is interrupted /\n   * restarted before they're acknowledged.\n   *\n   * Write responses from the backend are linked to their originating request\n   * purely based on order, and so we can just shift() writes from the front of\n   * the writePipeline as we receive responses.\n   */\n  writePipeline: MutationBatch[] = [];\n\n  /**\n   * A mapping of watched targets that the client cares about tracking and the\n   * user has explicitly called a 'listen' for this target.\n   *\n   * These targets may or may not have been sent to or acknowledged by the\n   * server. On re-establishing the listen stream, these targets should be sent\n   * to the server. The targets removed with unlistens are removed eagerly\n   * without waiting for confirmation from the listen stream.\n   */\n  listenTargets = new Map<TargetId, TargetData>();\n\n  connectivityMonitor: ConnectivityMonitor;\n  watchStream?: PersistentListenStream;\n  writeStream?: PersistentWriteStream;\n  watchChangeAggregator?: WatchChangeAggregator;\n\n  /**\n   * A set of reasons for why the RemoteStore may be offline. If empty, the\n   * RemoteStore may start its network connections.\n   */\n  offlineCauses = new Set<OfflineCause>();\n\n  /**\n   * Event handlers that get called when the network is disabled or enabled.\n   *\n   * PORTING NOTE: These functions are used on the Web client to create the\n   * underlying streams (to support tree-shakeable streams). On Android and iOS,\n   * the streams are created during construction of RemoteStore.\n   */\n  onNetworkStatusChange: Array<(enabled: boolean) => Promise<void>> = [];\n\n  onlineStateTracker: OnlineStateTracker;\n\n  constructor(\n    /**\n     * The local store, used to fill the write pipeline with outbound mutations.\n     */\n    readonly localStore: LocalStore,\n    /** The client-side proxy for interacting with the backend. */\n    readonly datastore: Datastore,\n    readonly asyncQueue: AsyncQueue,\n    onlineStateHandler: (onlineState: OnlineState) => void,\n    connectivityMonitor: ConnectivityMonitor\n  ) {\n    this.connectivityMonitor = connectivityMonitor;\n    this.connectivityMonitor.addCallback((_: NetworkStatus) => {\n      asyncQueue.enqueueAndForget(async () => {\n        // Porting Note: Unlike iOS, `restartNetwork()` is called even when the\n        // network becomes unreachable as we don't have any other way to tear\n        // down our streams.\n        if (canUseNetwork(this)) {\n          logDebug(\n            LOG_TAG,\n            'Restarting streams for network reachability change.'\n          );\n          await restartNetwork(this);\n        }\n      });\n    });\n\n    this.onlineStateTracker = new OnlineStateTracker(\n      asyncQueue,\n      onlineStateHandler\n    );\n  }\n}\n\nexport function newRemoteStore(\n  localStore: LocalStore,\n  datastore: Datastore,\n  asyncQueue: AsyncQueue,\n  onlineStateHandler: (onlineState: OnlineState) => void,\n  connectivityMonitor: ConnectivityMonitor\n): RemoteStore {\n  return new RemoteStoreImpl(\n    localStore,\n    datastore,\n    asyncQueue,\n    onlineStateHandler,\n    connectivityMonitor\n  );\n}\n\n/** Re-enables the network. Idempotent. */\nexport function remoteStoreEnableNetwork(\n  remoteStore: RemoteStore\n): Promise<void> {\n  const remoteStoreImpl = debugCast(remoteStore, RemoteStoreImpl);\n  remoteStoreImpl.offlineCauses.delete(OfflineCause.UserDisabled);\n  return enableNetworkInternal(remoteStoreImpl);\n}\n\nasync function enableNetworkInternal(\n  remoteStoreImpl: RemoteStoreImpl\n): Promise<void> {\n  if (canUseNetwork(remoteStoreImpl)) {\n    for (const networkStatusHandler of remoteStoreImpl.onNetworkStatusChange) {\n      await networkStatusHandler(/* enabled= */ true);\n    }\n  }\n}\n\n/**\n * Temporarily disables the network. The network can be re-enabled using\n * enableNetwork().\n */\nexport async function remoteStoreDisableNetwork(\n  remoteStore: RemoteStore\n): Promise<void> {\n  const remoteStoreImpl = debugCast(remoteStore, RemoteStoreImpl);\n  remoteStoreImpl.offlineCauses.add(OfflineCause.UserDisabled);\n  await disableNetworkInternal(remoteStoreImpl);\n\n  // Set the OnlineState to Offline so get()s return from cache, etc.\n  remoteStoreImpl.onlineStateTracker.set(OnlineState.Offline);\n}\n\nasync function disableNetworkInternal(\n  remoteStoreImpl: RemoteStoreImpl\n): Promise<void> {\n  for (const networkStatusHandler of remoteStoreImpl.onNetworkStatusChange) {\n    await networkStatusHandler(/* enabled= */ false);\n  }\n}\n\nexport async function remoteStoreShutdown(\n  remoteStore: RemoteStore\n): Promise<void> {\n  const remoteStoreImpl = debugCast(remoteStore, RemoteStoreImpl);\n  logDebug(LOG_TAG, 'RemoteStore shutting down.');\n  remoteStoreImpl.offlineCauses.add(OfflineCause.Shutdown);\n  await disableNetworkInternal(remoteStoreImpl);\n  remoteStoreImpl.connectivityMonitor.shutdown();\n\n  // Set the OnlineState to Unknown (rather than Offline) to avoid potentially\n  // triggering spurious listener events with cached data, etc.\n  remoteStoreImpl.onlineStateTracker.set(OnlineState.Unknown);\n}\n\n/**\n * Starts new listen for the given target. Uses resume token if provided. It\n * is a no-op if the target of given `TargetData` is already being listened to.\n */\nexport function remoteStoreListen(\n  remoteStore: RemoteStore,\n  targetData: TargetData\n): void {\n  const remoteStoreImpl = debugCast(remoteStore, RemoteStoreImpl);\n\n  if (remoteStoreImpl.listenTargets.has(targetData.targetId)) {\n    return;\n  }\n\n  // Mark this as something the client is currently listening for.\n  remoteStoreImpl.listenTargets.set(targetData.targetId, targetData);\n\n  if (shouldStartWatchStream(remoteStoreImpl)) {\n    // The listen will be sent in onWatchStreamOpen\n    startWatchStream(remoteStoreImpl);\n  } else if (ensureWatchStream(remoteStoreImpl).isOpen()) {\n    sendWatchRequest(remoteStoreImpl, targetData);\n  }\n}\n\n/**\n * Removes the listen from server. It is a no-op if the given target id is\n * not being listened to.\n */\nexport function remoteStoreUnlisten(\n  remoteStore: RemoteStore,\n  targetId: TargetId\n): void {\n  const remoteStoreImpl = debugCast(remoteStore, RemoteStoreImpl);\n  const watchStream = ensureWatchStream(remoteStoreImpl);\n\n  debugAssert(\n    remoteStoreImpl.listenTargets.has(targetId),\n    `unlisten called on target no currently watched: ${targetId}`\n  );\n\n  remoteStoreImpl.listenTargets.delete(targetId);\n  if (watchStream.isOpen()) {\n    sendUnwatchRequest(remoteStoreImpl, targetId);\n  }\n\n  if (remoteStoreImpl.listenTargets.size === 0) {\n    if (watchStream.isOpen()) {\n      watchStream.markIdle();\n    } else if (canUseNetwork(remoteStoreImpl)) {\n      // Revert to OnlineState.Unknown if the watch stream is not open and we\n      // have no listeners, since without any listens to send we cannot\n      // confirm if the stream is healthy and upgrade to OnlineState.Online.\n      remoteStoreImpl.onlineStateTracker.set(OnlineState.Unknown);\n    }\n  }\n}\n\n/**\n * We need to increment the the expected number of pending responses we're due\n * from watch so we wait for the ack to process any messages from this target.\n */\nfunction sendWatchRequest(\n  remoteStoreImpl: RemoteStoreImpl,\n  targetData: TargetData\n): void {\n  remoteStoreImpl.watchChangeAggregator!.recordPendingTargetRequest(\n    targetData.targetId\n  );\n\n  if (\n    targetData.resumeToken.approximateByteSize() > 0 ||\n    targetData.snapshotVersion.compareTo(SnapshotVersion.min()) > 0\n  ) {\n    const expectedCount = remoteStoreImpl.remoteSyncer.getRemoteKeysForTarget!(\n      targetData.targetId\n    ).size;\n    targetData = targetData.withExpectedCount(expectedCount);\n  }\n\n  ensureWatchStream(remoteStoreImpl).watch(targetData);\n}\n\n/**\n * We need to increment the expected number of pending responses we're due\n * from watch so we wait for the removal on the server before we process any\n * messages from this target.\n */\nfunction sendUnwatchRequest(\n  remoteStoreImpl: RemoteStoreImpl,\n  targetId: TargetId\n): void {\n  remoteStoreImpl.watchChangeAggregator!.recordPendingTargetRequest(targetId);\n  ensureWatchStream(remoteStoreImpl).unwatch(targetId);\n}\n\nfunction startWatchStream(remoteStoreImpl: RemoteStoreImpl): void {\n  debugAssert(\n    shouldStartWatchStream(remoteStoreImpl),\n    'startWatchStream() called when shouldStartWatchStream() is false.'\n  );\n  debugAssert(\n    !!remoteStoreImpl.remoteSyncer.getRemoteKeysForTarget,\n    'getRemoteKeysForTarget() not set'\n  );\n\n  remoteStoreImpl.watchChangeAggregator = new WatchChangeAggregator({\n    getRemoteKeysForTarget: targetId =>\n      remoteStoreImpl.remoteSyncer.getRemoteKeysForTarget!(targetId),\n    getTargetDataForTarget: targetId =>\n      remoteStoreImpl.listenTargets.get(targetId) || null,\n    getDatabaseId: () => remoteStoreImpl.datastore.serializer.databaseId\n  });\n  ensureWatchStream(remoteStoreImpl).start();\n  remoteStoreImpl.onlineStateTracker.handleWatchStreamStart();\n}\n\n/**\n * Returns whether the watch stream should be started because it's necessary\n * and has not yet been started.\n */\nfunction shouldStartWatchStream(remoteStoreImpl: RemoteStoreImpl): boolean {\n  return (\n    canUseNetwork(remoteStoreImpl) &&\n    !ensureWatchStream(remoteStoreImpl).isStarted() &&\n    remoteStoreImpl.listenTargets.size > 0\n  );\n}\n\nexport function canUseNetwork(remoteStore: RemoteStore): boolean {\n  const remoteStoreImpl = debugCast(remoteStore, RemoteStoreImpl);\n  return remoteStoreImpl.offlineCauses.size === 0;\n}\n\nfunction cleanUpWatchStreamState(remoteStoreImpl: RemoteStoreImpl): void {\n  remoteStoreImpl.watchChangeAggregator = undefined;\n}\n\nasync function onWatchStreamConnected(\n  remoteStoreImpl: RemoteStoreImpl\n): Promise<void> {\n  // Mark the client as online since we got a \"connected\" notification.\n  remoteStoreImpl.onlineStateTracker.set(OnlineState.Online);\n}\n\nasync function onWatchStreamOpen(\n  remoteStoreImpl: RemoteStoreImpl\n): Promise<void> {\n  remoteStoreImpl.listenTargets.forEach((targetData, targetId) => {\n    sendWatchRequest(remoteStoreImpl, targetData);\n  });\n}\n\nasync function onWatchStreamClose(\n  remoteStoreImpl: RemoteStoreImpl,\n  error?: FirestoreError\n): Promise<void> {\n  if (error === undefined) {\n    // Graceful stop (due to stop() or idle timeout). Make sure that's\n    // desirable.\n    debugAssert(\n      !shouldStartWatchStream(remoteStoreImpl),\n      'Watch stream was stopped gracefully while still needed.'\n    );\n  }\n\n  cleanUpWatchStreamState(remoteStoreImpl);\n\n  // If we still need the watch stream, retry the connection.\n  if (shouldStartWatchStream(remoteStoreImpl)) {\n    remoteStoreImpl.onlineStateTracker.handleWatchStreamFailure(error!);\n\n    startWatchStream(remoteStoreImpl);\n  } else {\n    // No need to restart watch stream because there are no active targets.\n    // The online state is set to unknown because there is no active attempt\n    // at establishing a connection\n    remoteStoreImpl.onlineStateTracker.set(OnlineState.Unknown);\n  }\n}\n\nasync function onWatchStreamChange(\n  remoteStoreImpl: RemoteStoreImpl,\n  watchChange: WatchChange,\n  snapshotVersion: SnapshotVersion\n): Promise<void> {\n  // Mark the client as online since we got a message from the server\n  remoteStoreImpl.onlineStateTracker.set(OnlineState.Online);\n\n  if (\n    watchChange instanceof WatchTargetChange &&\n    watchChange.state === WatchTargetChangeState.Removed &&\n    watchChange.cause\n  ) {\n    // There was an error on a target, don't wait for a consistent snapshot\n    // to raise events\n    try {\n      await handleTargetError(remoteStoreImpl, watchChange);\n    } catch (e) {\n      logDebug(\n        LOG_TAG,\n        'Failed to remove targets %s: %s ',\n        watchChange.targetIds.join(','),\n        e\n      );\n      await disableNetworkUntilRecovery(remoteStoreImpl, e as FirestoreError);\n    }\n    return;\n  }\n\n  if (watchChange instanceof DocumentWatchChange) {\n    remoteStoreImpl.watchChangeAggregator!.handleDocumentChange(watchChange);\n  } else if (watchChange instanceof ExistenceFilterChange) {\n    remoteStoreImpl.watchChangeAggregator!.handleExistenceFilter(watchChange);\n  } else {\n    debugAssert(\n      watchChange instanceof WatchTargetChange,\n      'Expected watchChange to be an instance of WatchTargetChange'\n    );\n    remoteStoreImpl.watchChangeAggregator!.handleTargetChange(watchChange);\n  }\n\n  if (!snapshotVersion.isEqual(SnapshotVersion.min())) {\n    try {\n      const lastRemoteSnapshotVersion =\n        await localStoreGetLastRemoteSnapshotVersion(\n          remoteStoreImpl.localStore\n        );\n      if (snapshotVersion.compareTo(lastRemoteSnapshotVersion) >= 0) {\n        // We have received a target change with a global snapshot if the snapshot\n        // version is not equal to SnapshotVersion.min().\n        await raiseWatchSnapshot(remoteStoreImpl, snapshotVersion);\n      }\n    } catch (e) {\n      logDebug(LOG_TAG, 'Failed to raise snapshot:', e);\n      await disableNetworkUntilRecovery(remoteStoreImpl, e as FirestoreError);\n    }\n  }\n}\n\n/**\n * Recovery logic for IndexedDB errors that takes the network offline until\n * `op` succeeds. Retries are scheduled with backoff using\n * `enqueueRetryable()`. If `op()` is not provided, IndexedDB access is\n * validated via a generic operation.\n *\n * The returned Promise is resolved once the network is disabled and before\n * any retry attempt.\n */\nasync function disableNetworkUntilRecovery(\n  remoteStoreImpl: RemoteStoreImpl,\n  e: FirestoreError,\n  op?: () => Promise<unknown>\n): Promise<void> {\n  if (isIndexedDbTransactionError(e)) {\n    debugAssert(\n      !remoteStoreImpl.offlineCauses.has(OfflineCause.IndexedDbFailed),\n      'Unexpected network event when IndexedDB was marked failed.'\n    );\n    remoteStoreImpl.offlineCauses.add(OfflineCause.IndexedDbFailed);\n\n    // Disable network and raise offline snapshots\n    await disableNetworkInternal(remoteStoreImpl);\n    remoteStoreImpl.onlineStateTracker.set(OnlineState.Offline);\n\n    if (!op) {\n      // Use a simple read operation to determine if IndexedDB recovered.\n      // Ideally, we would expose a health check directly on SimpleDb, but\n      // RemoteStore only has access to persistence through LocalStore.\n      op = () =>\n        localStoreGetLastRemoteSnapshotVersion(remoteStoreImpl.localStore);\n    }\n\n    // Probe IndexedDB periodically and re-enable network\n    remoteStoreImpl.asyncQueue.enqueueRetryable(async () => {\n      logDebug(LOG_TAG, 'Retrying IndexedDB access');\n      await op!();\n      remoteStoreImpl.offlineCauses.delete(OfflineCause.IndexedDbFailed);\n      await enableNetworkInternal(remoteStoreImpl);\n    });\n  } else {\n    throw e;\n  }\n}\n\n/**\n * Executes `op`. If `op` fails, takes the network offline until `op`\n * succeeds. Returns after the first attempt.\n */\nfunction executeWithRecovery(\n  remoteStoreImpl: RemoteStoreImpl,\n  op: () => Promise<void>\n): Promise<void> {\n  return op().catch(e => disableNetworkUntilRecovery(remoteStoreImpl, e, op));\n}\n\n/**\n * Takes a batch of changes from the Datastore, repackages them as a\n * RemoteEvent, and passes that on to the listener, which is typically the\n * SyncEngine.\n */\nfunction raiseWatchSnapshot(\n  remoteStoreImpl: RemoteStoreImpl,\n  snapshotVersion: SnapshotVersion\n): Promise<void> {\n  debugAssert(\n    !snapshotVersion.isEqual(SnapshotVersion.min()),\n    \"Can't raise event for unknown SnapshotVersion\"\n  );\n  const remoteEvent =\n    remoteStoreImpl.watchChangeAggregator!.createRemoteEvent(snapshotVersion);\n\n  // Update in-memory resume tokens. LocalStore will update the\n  // persistent view of these when applying the completed RemoteEvent.\n  remoteEvent.targetChanges.forEach((change, targetId) => {\n    if (change.resumeToken.approximateByteSize() > 0) {\n      const targetData = remoteStoreImpl.listenTargets.get(targetId);\n      // A watched target might have been removed already.\n      if (targetData) {\n        remoteStoreImpl.listenTargets.set(\n          targetId,\n          targetData.withResumeToken(change.resumeToken, snapshotVersion)\n        );\n      }\n    }\n  });\n\n  // Re-establish listens for the targets that have been invalidated by\n  // existence filter mismatches.\n  remoteEvent.targetMismatches.forEach((targetId, targetPurpose) => {\n    const targetData = remoteStoreImpl.listenTargets.get(targetId);\n    if (!targetData) {\n      // A watched target might have been removed already.\n      return;\n    }\n\n    // Clear the resume token for the target, since we're in a known mismatch\n    // state.\n    remoteStoreImpl.listenTargets.set(\n      targetId,\n      targetData.withResumeToken(\n        ByteString.EMPTY_BYTE_STRING,\n        targetData.snapshotVersion\n      )\n    );\n\n    // Cause a hard reset by unwatching and rewatching immediately, but\n    // deliberately don't send a resume token so that we get a full update.\n    sendUnwatchRequest(remoteStoreImpl, targetId);\n\n    // Mark the target we send as being on behalf of an existence filter\n    // mismatch, but don't actually retain that in listenTargets. This ensures\n    // that we flag the first re-listen this way without impacting future\n    // listens of this target (that might happen e.g. on reconnect).\n    const requestTargetData = new TargetData(\n      targetData.target,\n      targetId,\n      targetPurpose,\n      targetData.sequenceNumber\n    );\n    sendWatchRequest(remoteStoreImpl, requestTargetData);\n  });\n\n  // Finally raise remote event\n  debugAssert(\n    !!remoteStoreImpl.remoteSyncer.applyRemoteEvent,\n    'applyRemoteEvent() not set'\n  );\n  return remoteStoreImpl.remoteSyncer.applyRemoteEvent(remoteEvent);\n}\n\n/** Handles an error on a target */\nasync function handleTargetError(\n  remoteStoreImpl: RemoteStoreImpl,\n  watchChange: WatchTargetChange\n): Promise<void> {\n  debugAssert(\n    !!remoteStoreImpl.remoteSyncer.rejectListen,\n    'rejectListen() not set'\n  );\n  debugAssert(!!watchChange.cause, 'Handling target error without a cause');\n  const error = watchChange.cause!;\n  for (const targetId of watchChange.targetIds) {\n    // A watched target might have been removed already.\n    if (remoteStoreImpl.listenTargets.has(targetId)) {\n      await remoteStoreImpl.remoteSyncer.rejectListen(targetId, error);\n      remoteStoreImpl.listenTargets.delete(targetId);\n      remoteStoreImpl.watchChangeAggregator!.removeTarget(targetId);\n    }\n  }\n}\n\n/**\n * Attempts to fill our write pipeline with writes from the LocalStore.\n *\n * Called internally to bootstrap or refill the write pipeline and by\n * SyncEngine whenever there are new mutations to process.\n *\n * Starts the write stream if necessary.\n */\nexport async function fillWritePipeline(\n  remoteStore: RemoteStore\n): Promise<void> {\n  const remoteStoreImpl = debugCast(remoteStore, RemoteStoreImpl);\n  const writeStream = ensureWriteStream(remoteStoreImpl);\n\n  let lastBatchIdRetrieved =\n    remoteStoreImpl.writePipeline.length > 0\n      ? remoteStoreImpl.writePipeline[remoteStoreImpl.writePipeline.length - 1]\n          .batchId\n      : BATCHID_UNKNOWN;\n\n  while (canAddToWritePipeline(remoteStoreImpl)) {\n    try {\n      const batch = await localStoreGetNextMutationBatch(\n        remoteStoreImpl.localStore,\n        lastBatchIdRetrieved\n      );\n\n      if (batch === null) {\n        if (remoteStoreImpl.writePipeline.length === 0) {\n          writeStream.markIdle();\n        }\n        break;\n      } else {\n        lastBatchIdRetrieved = batch.batchId;\n        addToWritePipeline(remoteStoreImpl, batch);\n      }\n    } catch (e) {\n      await disableNetworkUntilRecovery(remoteStoreImpl, e as FirestoreError);\n    }\n  }\n\n  if (shouldStartWriteStream(remoteStoreImpl)) {\n    startWriteStream(remoteStoreImpl);\n  }\n}\n\n/**\n * Returns true if we can add to the write pipeline (i.e. the network is\n * enabled and the write pipeline is not full).\n */\nfunction canAddToWritePipeline(remoteStoreImpl: RemoteStoreImpl): boolean {\n  return (\n    canUseNetwork(remoteStoreImpl) &&\n    remoteStoreImpl.writePipeline.length < MAX_PENDING_WRITES\n  );\n}\n\n// For testing\nexport function outstandingWrites(remoteStore: RemoteStore): number {\n  const remoteStoreImpl = debugCast(remoteStore, RemoteStoreImpl);\n  return remoteStoreImpl.writePipeline.length;\n}\n\n/**\n * Queues additional writes to be sent to the write stream, sending them\n * immediately if the write stream is established.\n */\nfunction addToWritePipeline(\n  remoteStoreImpl: RemoteStoreImpl,\n  batch: MutationBatch\n): void {\n  debugAssert(\n    canAddToWritePipeline(remoteStoreImpl),\n    'addToWritePipeline called when pipeline is full'\n  );\n  remoteStoreImpl.writePipeline.push(batch);\n\n  const writeStream = ensureWriteStream(remoteStoreImpl);\n  if (writeStream.isOpen() && writeStream.handshakeComplete) {\n    writeStream.writeMutations(batch.mutations);\n  }\n}\n\nfunction shouldStartWriteStream(remoteStoreImpl: RemoteStoreImpl): boolean {\n  return (\n    canUseNetwork(remoteStoreImpl) &&\n    !ensureWriteStream(remoteStoreImpl).isStarted() &&\n    remoteStoreImpl.writePipeline.length > 0\n  );\n}\n\nfunction startWriteStream(remoteStoreImpl: RemoteStoreImpl): void {\n  debugAssert(\n    shouldStartWriteStream(remoteStoreImpl),\n    'startWriteStream() called when shouldStartWriteStream() is false.'\n  );\n  ensureWriteStream(remoteStoreImpl).start();\n}\n\nasync function onWriteStreamOpen(\n  remoteStoreImpl: RemoteStoreImpl\n): Promise<void> {\n  ensureWriteStream(remoteStoreImpl).writeHandshake();\n}\n\nasync function onWriteHandshakeComplete(\n  remoteStoreImpl: RemoteStoreImpl\n): Promise<void> {\n  const writeStream = ensureWriteStream(remoteStoreImpl);\n  // Send the write pipeline now that the stream is established.\n  for (const batch of remoteStoreImpl.writePipeline) {\n    writeStream.writeMutations(batch.mutations);\n  }\n}\n\nasync function onMutationResult(\n  remoteStoreImpl: RemoteStoreImpl,\n  commitVersion: SnapshotVersion,\n  results: MutationResult[]\n): Promise<void> {\n  // This is a response to a write containing mutations and should be\n  // correlated to the first write in our write pipeline.\n  debugAssert(\n    remoteStoreImpl.writePipeline.length > 0,\n    'Got result for empty write pipeline'\n  );\n  const batch = remoteStoreImpl.writePipeline.shift()!;\n  const success = MutationBatchResult.from(batch, commitVersion, results);\n\n  debugAssert(\n    !!remoteStoreImpl.remoteSyncer.applySuccessfulWrite,\n    'applySuccessfulWrite() not set'\n  );\n  await executeWithRecovery(remoteStoreImpl, () =>\n    remoteStoreImpl.remoteSyncer.applySuccessfulWrite!(success)\n  );\n\n  // It's possible that with the completion of this mutation another\n  // slot has freed up.\n  await fillWritePipeline(remoteStoreImpl);\n}\n\nasync function onWriteStreamClose(\n  remoteStoreImpl: RemoteStoreImpl,\n  error?: FirestoreError\n): Promise<void> {\n  if (error === undefined) {\n    // Graceful stop (due to stop() or idle timeout). Make sure that's\n    // desirable.\n    debugAssert(\n      !shouldStartWriteStream(remoteStoreImpl),\n      'Write stream was stopped gracefully while still needed.'\n    );\n  }\n\n  // If the write stream closed after the write handshake completes, a write\n  // operation failed and we fail the pending operation.\n  if (error && ensureWriteStream(remoteStoreImpl).handshakeComplete) {\n    // This error affects the actual write.\n    await handleWriteError(remoteStoreImpl, error!);\n  }\n\n  // The write stream might have been started by refilling the write\n  // pipeline for failed writes\n  if (shouldStartWriteStream(remoteStoreImpl)) {\n    startWriteStream(remoteStoreImpl);\n  }\n}\n\nasync function handleWriteError(\n  remoteStoreImpl: RemoteStoreImpl,\n  error: FirestoreError\n): Promise<void> {\n  // Only handle permanent errors here. If it's transient, just let the retry\n  // logic kick in.\n  if (isPermanentWriteError(error.code)) {\n    // This was a permanent error, the request itself was the problem\n    // so it's not going to succeed if we resend it.\n    const batch = remoteStoreImpl.writePipeline.shift()!;\n\n    // In this case it's also unlikely that the server itself is melting\n    // down -- this was just a bad request so inhibit backoff on the next\n    // restart.\n    ensureWriteStream(remoteStoreImpl).inhibitBackoff();\n\n    debugAssert(\n      !!remoteStoreImpl.remoteSyncer.rejectFailedWrite,\n      'rejectFailedWrite() not set'\n    );\n    await executeWithRecovery(remoteStoreImpl, () =>\n      remoteStoreImpl.remoteSyncer.rejectFailedWrite!(batch.batchId, error)\n    );\n\n    // It's possible that with the completion of this mutation\n    // another slot has freed up.\n    await fillWritePipeline(remoteStoreImpl);\n  } else {\n    // Transient error, just let the retry logic kick in.\n  }\n}\n\nasync function restartNetwork(remoteStore: RemoteStore): Promise<void> {\n  const remoteStoreImpl = debugCast(remoteStore, RemoteStoreImpl);\n  remoteStoreImpl.offlineCauses.add(OfflineCause.ConnectivityChange);\n  await disableNetworkInternal(remoteStoreImpl);\n  remoteStoreImpl.onlineStateTracker.set(OnlineState.Unknown);\n  remoteStoreImpl.offlineCauses.delete(OfflineCause.ConnectivityChange);\n  await enableNetworkInternal(remoteStoreImpl);\n}\n\nexport async function remoteStoreHandleCredentialChange(\n  remoteStore: RemoteStore,\n  user: User\n): Promise<void> {\n  const remoteStoreImpl = debugCast(remoteStore, RemoteStoreImpl);\n  remoteStoreImpl.asyncQueue.verifyOperationInProgress();\n  debugAssert(\n    !!remoteStoreImpl.remoteSyncer.handleCredentialChange,\n    'handleCredentialChange() not set'\n  );\n\n  logDebug(LOG_TAG, 'RemoteStore received new credentials');\n  const usesNetwork = canUseNetwork(remoteStoreImpl);\n\n  // Tear down and re-create our network streams. This will ensure we get a\n  // fresh auth token for the new user and re-fill the write pipeline with\n  // new mutations from the LocalStore (since mutations are per-user).\n  remoteStoreImpl.offlineCauses.add(OfflineCause.CredentialChange);\n  await disableNetworkInternal(remoteStoreImpl);\n  if (usesNetwork) {\n    // Don't set the network status to Unknown if we are offline.\n    remoteStoreImpl.onlineStateTracker.set(OnlineState.Unknown);\n  }\n  await remoteStoreImpl.remoteSyncer.handleCredentialChange(user);\n  remoteStoreImpl.offlineCauses.delete(OfflineCause.CredentialChange);\n  await enableNetworkInternal(remoteStoreImpl);\n}\n\n/**\n * Toggles the network state when the client gains or loses its primary lease.\n */\nexport async function remoteStoreApplyPrimaryState(\n  remoteStore: RemoteStore,\n  isPrimary: boolean\n): Promise<void> {\n  const remoteStoreImpl = debugCast(remoteStore, RemoteStoreImpl);\n  if (isPrimary) {\n    remoteStoreImpl.offlineCauses.delete(OfflineCause.IsSecondary);\n    await enableNetworkInternal(remoteStoreImpl);\n  } else if (!isPrimary) {\n    remoteStoreImpl.offlineCauses.add(OfflineCause.IsSecondary);\n    await disableNetworkInternal(remoteStoreImpl);\n    remoteStoreImpl.onlineStateTracker.set(OnlineState.Unknown);\n  }\n}\n\n/**\n * If not yet initialized, registers the WatchStream and its network state\n * callback with `remoteStoreImpl`. Returns the existing stream if one is\n * already available.\n *\n * PORTING NOTE: On iOS and Android, the WatchStream gets registered on startup.\n * This is not done on Web to allow it to be tree-shaken.\n */\nfunction ensureWatchStream(\n  remoteStoreImpl: RemoteStoreImpl\n): PersistentListenStream {\n  if (!remoteStoreImpl.watchStream) {\n    // Create stream (but note that it is not started yet).\n    remoteStoreImpl.watchStream = newPersistentWatchStream(\n      remoteStoreImpl.datastore,\n      remoteStoreImpl.asyncQueue,\n      {\n        onConnected: onWatchStreamConnected.bind(null, remoteStoreImpl),\n        onOpen: onWatchStreamOpen.bind(null, remoteStoreImpl),\n        onClose: onWatchStreamClose.bind(null, remoteStoreImpl),\n        onWatchChange: onWatchStreamChange.bind(null, remoteStoreImpl)\n      }\n    );\n\n    remoteStoreImpl.onNetworkStatusChange.push(async enabled => {\n      if (enabled) {\n        remoteStoreImpl.watchStream!.inhibitBackoff();\n        if (shouldStartWatchStream(remoteStoreImpl)) {\n          startWatchStream(remoteStoreImpl);\n        } else {\n          remoteStoreImpl.onlineStateTracker.set(OnlineState.Unknown);\n        }\n      } else {\n        await remoteStoreImpl.watchStream!.stop();\n        cleanUpWatchStreamState(remoteStoreImpl);\n      }\n    });\n  }\n\n  return remoteStoreImpl.watchStream;\n}\n\n/**\n * If not yet initialized, registers the WriteStream and its network state\n * callback with `remoteStoreImpl`. Returns the existing stream if one is\n * already available.\n *\n * PORTING NOTE: On iOS and Android, the WriteStream gets registered on startup.\n * This is not done on Web to allow it to be tree-shaken.\n */\nfunction ensureWriteStream(\n  remoteStoreImpl: RemoteStoreImpl\n): PersistentWriteStream {\n  if (!remoteStoreImpl.writeStream) {\n    debugAssert(\n      remoteStoreImpl.writePipeline.length === 0,\n      'Should not issue writes before WriteStream is enabled'\n    );\n\n    // Create stream (but note that it is not started yet).\n    remoteStoreImpl.writeStream = newPersistentWriteStream(\n      remoteStoreImpl.datastore,\n      remoteStoreImpl.asyncQueue,\n      {\n        onConnected: () => Promise.resolve(),\n        onOpen: onWriteStreamOpen.bind(null, remoteStoreImpl),\n        onClose: onWriteStreamClose.bind(null, remoteStoreImpl),\n        onHandshakeComplete: onWriteHandshakeComplete.bind(\n          null,\n          remoteStoreImpl\n        ),\n        onMutationResult: onMutationResult.bind(null, remoteStoreImpl)\n      }\n    );\n\n    remoteStoreImpl.onNetworkStatusChange.push(async enabled => {\n      if (enabled) {\n        remoteStoreImpl.writeStream!.inhibitBackoff();\n\n        // This will start the write stream if necessary.\n        await fillWritePipeline(remoteStoreImpl);\n      } else {\n        await remoteStoreImpl.writeStream!.stop();\n\n        if (remoteStoreImpl.writePipeline.length > 0) {\n          logDebug(\n            LOG_TAG,\n            `Stopping write stream with ${remoteStoreImpl.writePipeline.length} pending writes`\n          );\n          remoteStoreImpl.writePipeline = [];\n        }\n      }\n    });\n  }\n\n  return remoteStoreImpl.writeStream;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isIndexedDbTransactionError } from '../local/simple_db';\n\nimport { Code, FirestoreError } from './error';\nimport { logError } from './log';\nimport { Deferred } from './promise';\n\nconst LOG_TAG = 'AsyncQueue';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype TimerHandle = any;\n\n/**\n * Wellknown \"timer\" IDs used when scheduling delayed operations on the\n * AsyncQueue. These IDs can then be used from tests to check for the presence\n * of operations or to run them early.\n *\n * The string values are used when encoding these timer IDs in JSON spec tests.\n */\nexport const enum TimerId {\n  /** All can be used with runDelayedOperationsEarly() to run all timers. */\n  All = 'all',\n\n  /**\n   * The following 5 timers are used in persistent_stream.ts for the listen and\n   * write streams. The \"Idle\" timer is used to close the stream due to\n   * inactivity. The \"ConnectionBackoff\" timer is used to restart a stream once\n   * the appropriate backoff delay has elapsed. The health check is used to mark\n   * a stream healthy if it has not received an error during its initial setup.\n   */\n  ListenStreamIdle = 'listen_stream_idle',\n  ListenStreamConnectionBackoff = 'listen_stream_connection_backoff',\n  WriteStreamIdle = 'write_stream_idle',\n  WriteStreamConnectionBackoff = 'write_stream_connection_backoff',\n  HealthCheckTimeout = 'health_check_timeout',\n\n  /**\n   * A timer used in online_state_tracker.ts to transition from\n   * OnlineState.Unknown to Offline after a set timeout, rather than waiting\n   * indefinitely for success or failure.\n   */\n  OnlineStateTimeout = 'online_state_timeout',\n\n  /**\n   * A timer used to update the client metadata in IndexedDb, which is used\n   * to determine the primary leaseholder.\n   */\n  ClientMetadataRefresh = 'client_metadata_refresh',\n\n  /** A timer used to periodically attempt LRU Garbage collection */\n  LruGarbageCollection = 'lru_garbage_collection',\n\n  /**\n   * A timer used to retry transactions. Since there can be multiple concurrent\n   * transactions, multiple of these may be in the queue at a given time.\n   */\n  TransactionRetry = 'transaction_retry',\n\n  /**\n   * A timer used to retry operations scheduled via retryable AsyncQueue\n   * operations.\n   */\n  AsyncQueueRetry = 'async_queue_retry',\n\n  /**\n   *  A timer used to periodically attempt index backfill.\n   */\n  IndexBackfill = 'index_backfill'\n}\n\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */\nexport class DelayedOperation<T extends unknown> implements PromiseLike<T> {\n  // handle for use with clearTimeout(), or null if the operation has been\n  // executed or canceled already.\n  private timerHandle: TimerHandle | null;\n\n  private readonly deferred = new Deferred<T>();\n\n  private constructor(\n    private readonly asyncQueue: AsyncQueue,\n    readonly timerId: TimerId,\n    readonly targetTimeMs: number,\n    private readonly op: () => Promise<T>,\n    private readonly removalCallback: (op: DelayedOperation<T>) => void\n  ) {\n    // It's normal for the deferred promise to be canceled (due to cancellation)\n    // and so we attach a dummy catch callback to avoid\n    // 'UnhandledPromiseRejectionWarning' log spam.\n    this.deferred.promise.catch(err => {});\n  }\n\n  get promise(): Promise<T> {\n    return this.deferred.promise;\n  }\n\n  /**\n   * Creates and returns a DelayedOperation that has been scheduled to be\n   * executed on the provided asyncQueue after the provided delayMs.\n   *\n   * @param asyncQueue - The queue to schedule the operation on.\n   * @param id - A Timer ID identifying the type of operation this is.\n   * @param delayMs - The delay (ms) before the operation should be scheduled.\n   * @param op - The operation to run.\n   * @param removalCallback - A callback to be called synchronously once the\n   *   operation is executed or canceled, notifying the AsyncQueue to remove it\n   *   from its delayedOperations list.\n   *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n   *   the DelayedOperation class public.\n   */\n  static createAndSchedule<R extends unknown>(\n    asyncQueue: AsyncQueue,\n    timerId: TimerId,\n    delayMs: number,\n    op: () => Promise<R>,\n    removalCallback: (op: DelayedOperation<R>) => void\n  ): DelayedOperation<R> {\n    const targetTime = Date.now() + delayMs;\n    const delayedOp = new DelayedOperation(\n      asyncQueue,\n      timerId,\n      targetTime,\n      op,\n      removalCallback\n    );\n    delayedOp.start(delayMs);\n    return delayedOp;\n  }\n\n  /**\n   * Starts the timer. This is called immediately after construction by\n   * createAndSchedule().\n   */\n  private start(delayMs: number): void {\n    this.timerHandle = setTimeout(() => this.handleDelayElapsed(), delayMs);\n  }\n\n  /**\n   * Queues the operation to run immediately (if it hasn't already been run or\n   * canceled).\n   */\n  skipDelay(): void {\n    return this.handleDelayElapsed();\n  }\n\n  /**\n   * Cancels the operation if it hasn't already been executed or canceled. The\n   * promise will be rejected.\n   *\n   * As long as the operation has not yet been run, calling cancel() provides a\n   * guarantee that the operation will not be run.\n   */\n  cancel(reason?: string): void {\n    if (this.timerHandle !== null) {\n      this.clearTimeout();\n      this.deferred.reject(\n        new FirestoreError(\n          Code.CANCELLED,\n          'Operation cancelled' + (reason ? ': ' + reason : '')\n        )\n      );\n    }\n  }\n\n  then = this.deferred.promise.then.bind(this.deferred.promise);\n\n  private handleDelayElapsed(): void {\n    this.asyncQueue.enqueueAndForget(() => {\n      if (this.timerHandle !== null) {\n        this.clearTimeout();\n        return this.op().then(result => {\n          return this.deferred.resolve(result);\n        });\n      } else {\n        return Promise.resolve();\n      }\n    });\n  }\n\n  private clearTimeout(): void {\n    if (this.timerHandle !== null) {\n      this.removalCallback(this);\n      clearTimeout(this.timerHandle);\n      this.timerHandle = null;\n    }\n  }\n}\n\nexport interface AsyncQueue {\n  // Is this AsyncQueue being shut down? If true, this instance will not enqueue\n  // any new operations, Promises from enqueue requests will not resolve.\n  readonly isShuttingDown: boolean;\n\n  /**\n   * Adds a new operation to the queue without waiting for it to complete (i.e.\n   * we ignore the Promise result).\n   */\n  enqueueAndForget<T extends unknown>(op: () => Promise<T>): void;\n\n  /**\n   * Regardless if the queue has initialized shutdown, adds a new operation to the\n   * queue without waiting for it to complete (i.e. we ignore the Promise result).\n   */\n  enqueueAndForgetEvenWhileRestricted<T extends unknown>(\n    op: () => Promise<T>\n  ): void;\n\n  /**\n   * Initialize the shutdown of this queue. Once this method is called, the\n   * only possible way to request running an operation is through\n   * `enqueueEvenWhileRestricted()`.\n   *\n   * @param purgeExistingTasks Whether already enqueued tasked should be\n   * rejected (unless enqueued wih `enqueueEvenWhileRestricted()`). Defaults\n   * to false.\n   */\n  enterRestrictedMode(purgeExistingTasks?: boolean): void;\n\n  /**\n   * Adds a new operation to the queue. Returns a promise that will be resolved\n   * when the promise returned by the new operation is (with its value).\n   */\n  enqueue<T extends unknown>(op: () => Promise<T>): Promise<T>;\n\n  /**\n   * Enqueue a retryable operation.\n   *\n   * A retryable operation is rescheduled with backoff if it fails with a\n   * IndexedDbTransactionError (the error type used by SimpleDb). All\n   * retryable operations are executed in order and only run if all prior\n   * operations were retried successfully.\n   */\n  enqueueRetryable(op: () => Promise<void>): void;\n\n  /**\n   * Schedules an operation to be queued on the AsyncQueue once the specified\n   * `delayMs` has elapsed. The returned DelayedOperation can be used to cancel\n   * or fast-forward the operation prior to its running.\n   */\n  enqueueAfterDelay<T extends unknown>(\n    timerId: TimerId,\n    delayMs: number,\n    op: () => Promise<T>\n  ): DelayedOperation<T>;\n\n  /**\n   * Verifies there's an operation currently in-progress on the AsyncQueue.\n   * Unfortunately we can't verify that the running code is in the promise chain\n   * of that operation, so this isn't a foolproof check, but it should be enough\n   * to catch some bugs.\n   */\n  verifyOperationInProgress(): void;\n}\n\n/**\n * Returns a FirestoreError that can be surfaced to the user if the provided\n * error is an IndexedDbTransactionError. Re-throws the error otherwise.\n */\nexport function wrapInUserErrorIfRecoverable(\n  e: Error,\n  msg: string\n): FirestoreError {\n  logError(LOG_TAG, `${msg}: ${e}`);\n  if (isIndexedDbTransactionError(e)) {\n    return new FirestoreError(Code.UNAVAILABLE, `${msg}: ${e}`);\n  } else {\n    throw e;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { debugAssert, debugCast } from '../util/assert';\nimport { wrapInUserErrorIfRecoverable } from '../util/async_queue';\nimport { FirestoreError } from '../util/error';\nimport { EventHandler } from '../util/misc';\nimport { ObjectMap } from '../util/obj_map';\n\nimport { canonifyQuery, Query, queryEquals, stringifyQuery } from './query';\nimport { OnlineState } from './types';\nimport { ChangeType, DocumentViewChange, ViewSnapshot } from './view_snapshot';\n\n/**\n * Holds the listeners and the last received ViewSnapshot for a query being\n * tracked by EventManager.\n */\nclass QueryListenersInfo {\n  viewSnap: ViewSnapshot | undefined = undefined;\n  listeners: QueryListener[] = [];\n\n  // Helper methods that checks if the query has listeners that listening to remote store\n  hasRemoteListeners(): boolean {\n    return this.listeners.some(listener => listener.listensToRemoteStore());\n  }\n}\n\n/**\n * Interface for handling events from the EventManager.\n */\nexport interface Observer<T> {\n  next: EventHandler<T>;\n  error: EventHandler<FirestoreError>;\n}\n\n/**\n * EventManager is responsible for mapping queries to query event emitters.\n * It handles \"fan-out\". -- Identical queries will re-use the same watch on the\n * backend.\n *\n * PORTING NOTE: On Web, EventManager `onListen` and `onUnlisten` need to be\n * assigned to SyncEngine's `listen()` and `unlisten()` API before usage. This\n * allows users to tree-shake the Watch logic.\n */\nexport interface EventManager {\n  onListen?: (\n    query: Query,\n    enableRemoteListen: boolean\n  ) => Promise<ViewSnapshot>;\n  onUnlisten?: (query: Query, disableRemoteListen: boolean) => Promise<void>;\n  onFirstRemoteStoreListen?: (query: Query) => Promise<void>;\n  onLastRemoteStoreUnlisten?: (query: Query) => Promise<void>;\n}\n\nexport function newEventManager(): EventManager {\n  return new EventManagerImpl();\n}\n\nexport class EventManagerImpl implements EventManager {\n  queries = new ObjectMap<Query, QueryListenersInfo>(\n    q => canonifyQuery(q),\n    queryEquals\n  );\n\n  onlineState = OnlineState.Unknown;\n\n  snapshotsInSyncListeners: Set<Observer<void>> = new Set();\n\n  /** Callback invoked when a Query is first listen to. */\n  onListen?: (\n    query: Query,\n    enableRemoteListen: boolean\n  ) => Promise<ViewSnapshot>;\n  /** Callback invoked once all listeners to a Query are removed. */\n  onUnlisten?: (query: Query, disableRemoteListen: boolean) => Promise<void>;\n\n  /**\n   * Callback invoked when a Query starts listening to the remote store, while\n   * already listening to the cache.\n   */\n  onFirstRemoteStoreListen?: (query: Query) => Promise<void>;\n  /**\n   * Callback invoked when a Query stops listening to the remote store, while\n   * still listening to the cache.\n   */\n  onLastRemoteStoreUnlisten?: (query: Query) => Promise<void>;\n}\n\nfunction validateEventManager(eventManagerImpl: EventManagerImpl): void {\n  debugAssert(!!eventManagerImpl.onListen, 'onListen not set');\n  debugAssert(\n    !!eventManagerImpl.onFirstRemoteStoreListen,\n    'onFirstRemoteStoreListen not set'\n  );\n  debugAssert(!!eventManagerImpl.onUnlisten, 'onUnlisten not set');\n  debugAssert(\n    !!eventManagerImpl.onLastRemoteStoreUnlisten,\n    'onLastRemoteStoreUnlisten not set'\n  );\n}\n\nconst enum ListenerSetupAction {\n  InitializeLocalListenAndRequireWatchConnection,\n  InitializeLocalListenOnly,\n  RequireWatchConnectionOnly,\n  NoActionRequired\n}\n\nconst enum ListenerRemovalAction {\n  TerminateLocalListenAndRequireWatchDisconnection,\n  TerminateLocalListenOnly,\n  RequireWatchDisconnectionOnly,\n  NoActionRequired\n}\n\nexport async function eventManagerListen(\n  eventManager: EventManager,\n  listener: QueryListener\n): Promise<void> {\n  const eventManagerImpl = debugCast(eventManager, EventManagerImpl);\n  validateEventManager(eventManagerImpl);\n\n  let listenerAction = ListenerSetupAction.NoActionRequired;\n\n  const query = listener.query;\n\n  let queryInfo = eventManagerImpl.queries.get(query);\n  if (!queryInfo) {\n    queryInfo = new QueryListenersInfo();\n    listenerAction = listener.listensToRemoteStore()\n      ? ListenerSetupAction.InitializeLocalListenAndRequireWatchConnection\n      : ListenerSetupAction.InitializeLocalListenOnly;\n  } else if (\n    !queryInfo.hasRemoteListeners() &&\n    listener.listensToRemoteStore()\n  ) {\n    // Query has been listening to local cache, and tries to add a new listener sourced from watch.\n    listenerAction = ListenerSetupAction.RequireWatchConnectionOnly;\n  }\n\n  try {\n    switch (listenerAction) {\n      case ListenerSetupAction.InitializeLocalListenAndRequireWatchConnection:\n        queryInfo.viewSnap = await eventManagerImpl.onListen!(\n          query,\n          /** enableRemoteListen= */ true\n        );\n        break;\n      case ListenerSetupAction.InitializeLocalListenOnly:\n        queryInfo.viewSnap = await eventManagerImpl.onListen!(\n          query,\n          /** enableRemoteListen= */ false\n        );\n        break;\n      case ListenerSetupAction.RequireWatchConnectionOnly:\n        await eventManagerImpl.onFirstRemoteStoreListen!(query);\n        break;\n      default:\n        break;\n    }\n  } catch (e) {\n    const firestoreError = wrapInUserErrorIfRecoverable(\n      e as Error,\n      `Initialization of query '${stringifyQuery(listener.query)}' failed`\n    );\n    listener.onError(firestoreError);\n    return;\n  }\n\n  eventManagerImpl.queries.set(query, queryInfo);\n  queryInfo.listeners.push(listener);\n\n  // Run global snapshot listeners if a consistent snapshot has been emitted.\n  const raisedEvent = listener.applyOnlineStateChange(\n    eventManagerImpl.onlineState\n  );\n  debugAssert(\n    !raisedEvent,\n    \"applyOnlineStateChange() shouldn't raise an event for brand-new listeners.\"\n  );\n\n  if (queryInfo.viewSnap) {\n    const raisedEvent = listener.onViewSnapshot(queryInfo.viewSnap);\n    if (raisedEvent) {\n      raiseSnapshotsInSyncEvent(eventManagerImpl);\n    }\n  }\n}\n\nexport async function eventManagerUnlisten(\n  eventManager: EventManager,\n  listener: QueryListener\n): Promise<void> {\n  const eventManagerImpl = debugCast(eventManager, EventManagerImpl);\n  validateEventManager(eventManagerImpl);\n\n  const query = listener.query;\n  let listenerAction = ListenerRemovalAction.NoActionRequired;\n\n  const queryInfo = eventManagerImpl.queries.get(query);\n  if (queryInfo) {\n    const i = queryInfo.listeners.indexOf(listener);\n    if (i >= 0) {\n      queryInfo.listeners.splice(i, 1);\n\n      if (queryInfo.listeners.length === 0) {\n        listenerAction = listener.listensToRemoteStore()\n          ? ListenerRemovalAction.TerminateLocalListenAndRequireWatchDisconnection\n          : ListenerRemovalAction.TerminateLocalListenOnly;\n      } else if (\n        !queryInfo.hasRemoteListeners() &&\n        listener.listensToRemoteStore()\n      ) {\n        // The removed listener is the last one that sourced from watch.\n        listenerAction = ListenerRemovalAction.RequireWatchDisconnectionOnly;\n      }\n    }\n  }\n  switch (listenerAction) {\n    case ListenerRemovalAction.TerminateLocalListenAndRequireWatchDisconnection:\n      eventManagerImpl.queries.delete(query);\n      return eventManagerImpl.onUnlisten!(\n        query,\n        /** disableRemoteListen= */ true\n      );\n    case ListenerRemovalAction.TerminateLocalListenOnly:\n      eventManagerImpl.queries.delete(query);\n      return eventManagerImpl.onUnlisten!(\n        query,\n        /** disableRemoteListen= */ false\n      );\n    case ListenerRemovalAction.RequireWatchDisconnectionOnly:\n      return eventManagerImpl.onLastRemoteStoreUnlisten!(query);\n    default:\n      return;\n  }\n}\n\nexport function eventManagerOnWatchChange(\n  eventManager: EventManager,\n  viewSnaps: ViewSnapshot[]\n): void {\n  const eventManagerImpl = debugCast(eventManager, EventManagerImpl);\n\n  let raisedEvent = false;\n  for (const viewSnap of viewSnaps) {\n    const query = viewSnap.query;\n    const queryInfo = eventManagerImpl.queries.get(query);\n    if (queryInfo) {\n      for (const listener of queryInfo.listeners) {\n        if (listener.onViewSnapshot(viewSnap)) {\n          raisedEvent = true;\n        }\n      }\n      queryInfo.viewSnap = viewSnap;\n    }\n  }\n  if (raisedEvent) {\n    raiseSnapshotsInSyncEvent(eventManagerImpl);\n  }\n}\n\nexport function eventManagerOnWatchError(\n  eventManager: EventManager,\n  query: Query,\n  error: FirestoreError\n): void {\n  const eventManagerImpl = debugCast(eventManager, EventManagerImpl);\n\n  const queryInfo = eventManagerImpl.queries.get(query);\n  if (queryInfo) {\n    for (const listener of queryInfo.listeners) {\n      listener.onError(error);\n    }\n  }\n\n  // Remove all listeners. NOTE: We don't need to call syncEngine.unlisten()\n  // after an error.\n  eventManagerImpl.queries.delete(query);\n}\n\nexport function eventManagerOnOnlineStateChange(\n  eventManager: EventManager,\n  onlineState: OnlineState\n): void {\n  const eventManagerImpl = debugCast(eventManager, EventManagerImpl);\n\n  eventManagerImpl.onlineState = onlineState;\n  let raisedEvent = false;\n  eventManagerImpl.queries.forEach((_, queryInfo) => {\n    for (const listener of queryInfo.listeners) {\n      // Run global snapshot listeners if a consistent snapshot has been emitted.\n      if (listener.applyOnlineStateChange(onlineState)) {\n        raisedEvent = true;\n      }\n    }\n  });\n  if (raisedEvent) {\n    raiseSnapshotsInSyncEvent(eventManagerImpl);\n  }\n}\n\nexport function addSnapshotsInSyncListener(\n  eventManager: EventManager,\n  observer: Observer<void>\n): void {\n  const eventManagerImpl = debugCast(eventManager, EventManagerImpl);\n\n  eventManagerImpl.snapshotsInSyncListeners.add(observer);\n  // Immediately fire an initial event, indicating all existing listeners\n  // are in-sync.\n  observer.next();\n}\n\nexport function removeSnapshotsInSyncListener(\n  eventManager: EventManager,\n  observer: Observer<void>\n): void {\n  const eventManagerImpl = debugCast(eventManager, EventManagerImpl);\n  eventManagerImpl.snapshotsInSyncListeners.delete(observer);\n}\n\n// Call all global snapshot listeners that have been set.\nfunction raiseSnapshotsInSyncEvent(eventManagerImpl: EventManagerImpl): void {\n  eventManagerImpl.snapshotsInSyncListeners.forEach(observer => {\n    observer.next();\n  });\n}\n\nexport enum ListenerDataSource {\n  /** Listen to both cache and server changes */\n  Default = 'default',\n\n  /** Listen to changes in cache only */\n  Cache = 'cache'\n}\n\nexport interface ListenOptions {\n  /** Raise events even when only the metadata changes */\n  readonly includeMetadataChanges?: boolean;\n\n  /**\n   * Wait for a sync with the server when online, but still raise events while\n   * offline.\n   */\n  readonly waitForSyncWhenOnline?: boolean;\n\n  /** Set the source events raised from. */\n  readonly source?: ListenerDataSource;\n}\n\n/**\n * QueryListener takes a series of internal view snapshots and determines\n * when to raise the event.\n *\n * It uses an Observer to dispatch events.\n */\nexport class QueryListener {\n  /**\n   * Initial snapshots (e.g. from cache) may not be propagated to the wrapped\n   * observer. This flag is set to true once we've actually raised an event.\n   */\n  private raisedInitialEvent = false;\n\n  private options: ListenOptions;\n\n  private snap: ViewSnapshot | null = null;\n\n  private onlineState = OnlineState.Unknown;\n\n  constructor(\n    readonly query: Query,\n    private queryObserver: Observer<ViewSnapshot>,\n    options?: ListenOptions\n  ) {\n    this.options = options || {};\n  }\n\n  /**\n   * Applies the new ViewSnapshot to this listener, raising a user-facing event\n   * if applicable (depending on what changed, whether the user has opted into\n   * metadata-only changes, etc.). Returns true if a user-facing event was\n   * indeed raised.\n   */\n  onViewSnapshot(snap: ViewSnapshot): boolean {\n    debugAssert(\n      snap.docChanges.length > 0 || snap.syncStateChanged,\n      'We got a new snapshot with no changes?'\n    );\n\n    if (!this.options.includeMetadataChanges) {\n      // Remove the metadata only changes.\n      const docChanges: DocumentViewChange[] = [];\n      for (const docChange of snap.docChanges) {\n        if (docChange.type !== ChangeType.Metadata) {\n          docChanges.push(docChange);\n        }\n      }\n      snap = new ViewSnapshot(\n        snap.query,\n        snap.docs,\n        snap.oldDocs,\n        docChanges,\n        snap.mutatedKeys,\n        snap.fromCache,\n        snap.syncStateChanged,\n        /* excludesMetadataChanges= */ true,\n        snap.hasCachedResults\n      );\n    }\n    let raisedEvent = false;\n    if (!this.raisedInitialEvent) {\n      if (this.shouldRaiseInitialEvent(snap, this.onlineState)) {\n        this.raiseInitialEvent(snap);\n        raisedEvent = true;\n      }\n    } else if (this.shouldRaiseEvent(snap)) {\n      this.queryObserver.next(snap);\n      raisedEvent = true;\n    }\n\n    this.snap = snap;\n    return raisedEvent;\n  }\n\n  onError(error: FirestoreError): void {\n    this.queryObserver.error(error);\n  }\n\n  /** Returns whether a snapshot was raised. */\n  applyOnlineStateChange(onlineState: OnlineState): boolean {\n    this.onlineState = onlineState;\n    let raisedEvent = false;\n    if (\n      this.snap &&\n      !this.raisedInitialEvent &&\n      this.shouldRaiseInitialEvent(this.snap, onlineState)\n    ) {\n      this.raiseInitialEvent(this.snap);\n      raisedEvent = true;\n    }\n    return raisedEvent;\n  }\n\n  private shouldRaiseInitialEvent(\n    snap: ViewSnapshot,\n    onlineState: OnlineState\n  ): boolean {\n    debugAssert(\n      !this.raisedInitialEvent,\n      'Determining whether to raise first event but already had first event'\n    );\n\n    // Always raise the first event when we're synced\n    if (!snap.fromCache) {\n      return true;\n    }\n\n    // Always raise event if listening to cache\n    if (!this.listensToRemoteStore()) {\n      return true;\n    }\n\n    // NOTE: We consider OnlineState.Unknown as online (it should become Offline\n    // or Online if we wait long enough).\n    const maybeOnline = onlineState !== OnlineState.Offline;\n    // Don't raise the event if we're online, aren't synced yet (checked\n    // above) and are waiting for a sync.\n    if (this.options.waitForSyncWhenOnline && maybeOnline) {\n      debugAssert(\n        snap.fromCache,\n        'Waiting for sync, but snapshot is not from cache'\n      );\n      return false;\n    }\n\n    // Raise data from cache if we have any documents, have cached results before,\n    // or we are offline.\n    return (\n      !snap.docs.isEmpty() ||\n      snap.hasCachedResults ||\n      onlineState === OnlineState.Offline\n    );\n  }\n\n  private shouldRaiseEvent(snap: ViewSnapshot): boolean {\n    // We don't need to handle includeDocumentMetadataChanges here because\n    // the Metadata only changes have already been stripped out if needed.\n    // At this point the only changes we will see are the ones we should\n    // propagate.\n    if (snap.docChanges.length > 0) {\n      return true;\n    }\n\n    const hasPendingWritesChanged =\n      this.snap && this.snap.hasPendingWrites !== snap.hasPendingWrites;\n    if (snap.syncStateChanged || hasPendingWritesChanged) {\n      return this.options.includeMetadataChanges === true;\n    }\n\n    // Generally we should have hit one of the cases above, but it's possible\n    // to get here if there were only metadata docChanges and they got\n    // stripped out.\n    return false;\n  }\n\n  private raiseInitialEvent(snap: ViewSnapshot): void {\n    debugAssert(\n      !this.raisedInitialEvent,\n      'Trying to raise initial events for second time'\n    );\n    snap = ViewSnapshot.fromInitialDocuments(\n      snap.query,\n      snap.docs,\n      snap.mutatedKeys,\n      snap.fromCache,\n      snap.hasCachedResults\n    );\n    this.raisedInitialEvent = true;\n    this.queryObserver.next(snap);\n  }\n\n  listensToRemoteStore(): boolean {\n    return this.options.source !== ListenerDataSource.Cache;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SortedMap } from '../util/sorted_map';\n\nimport { documentMap } from './collections';\nimport { Document } from './document';\nimport { DocumentComparator } from './document_comparator';\nimport { DocumentKey } from './document_key';\n\n/**\n * DocumentSet is an immutable (copy-on-write) collection that holds documents\n * in order specified by the provided comparator. We always add a document key\n * comparator on top of what is provided to guarantee document equality based on\n * the key.\n */\n\nexport class DocumentSet {\n  /**\n   * Returns an empty copy of the existing DocumentSet, using the same\n   * comparator.\n   */\n  static emptySet(oldSet: DocumentSet): DocumentSet {\n    return new DocumentSet(oldSet.comparator);\n  }\n\n  private comparator: DocumentComparator;\n  private keyedMap: SortedMap<DocumentKey, Document>;\n  private sortedSet: SortedMap<Document, null>;\n\n  /** The default ordering is by key if the comparator is omitted */\n  constructor(comp?: DocumentComparator) {\n    // We are adding document key comparator to the end as it's the only\n    // guaranteed unique property of a document.\n    if (comp) {\n      this.comparator = (d1: Document, d2: Document) =>\n        comp(d1, d2) || DocumentKey.comparator(d1.key, d2.key);\n    } else {\n      this.comparator = (d1: Document, d2: Document) =>\n        DocumentKey.comparator(d1.key, d2.key);\n    }\n\n    this.keyedMap = documentMap();\n    this.sortedSet = new SortedMap<Document, null>(this.comparator);\n  }\n\n  has(key: DocumentKey): boolean {\n    return this.keyedMap.get(key) != null;\n  }\n\n  get(key: DocumentKey): Document | null {\n    return this.keyedMap.get(key);\n  }\n\n  first(): Document | null {\n    return this.sortedSet.minKey();\n  }\n\n  last(): Document | null {\n    return this.sortedSet.maxKey();\n  }\n\n  isEmpty(): boolean {\n    return this.sortedSet.isEmpty();\n  }\n\n  /**\n   * Returns the index of the provided key in the document set, or -1 if the\n   * document key is not present in the set;\n   */\n  indexOf(key: DocumentKey): number {\n    const doc = this.keyedMap.get(key);\n    return doc ? this.sortedSet.indexOf(doc) : -1;\n  }\n\n  get size(): number {\n    return this.sortedSet.size;\n  }\n\n  /** Iterates documents in order defined by \"comparator\" */\n  forEach(cb: (doc: Document) => void): void {\n    this.sortedSet.inorderTraversal((k, v) => {\n      cb(k);\n      return false;\n    });\n  }\n\n  /** Inserts or updates a document with the same key */\n  add(doc: Document): DocumentSet {\n    // First remove the element if we have it.\n    const set = this.delete(doc.key);\n    return set.copy(\n      set.keyedMap.insert(doc.key, doc),\n      set.sortedSet.insert(doc, null)\n    );\n  }\n\n  /** Deletes a document with a given key */\n  delete(key: DocumentKey): DocumentSet {\n    const doc = this.get(key);\n    if (!doc) {\n      return this;\n    }\n\n    return this.copy(this.keyedMap.remove(key), this.sortedSet.remove(doc));\n  }\n\n  isEqual(other: DocumentSet | null | undefined): boolean {\n    if (!(other instanceof DocumentSet)) {\n      return false;\n    }\n    if (this.size !== other.size) {\n      return false;\n    }\n\n    const thisIt = this.sortedSet.getIterator();\n    const otherIt = other.sortedSet.getIterator();\n    while (thisIt.hasNext()) {\n      const thisDoc = thisIt.getNext().key;\n      const otherDoc = otherIt.getNext().key;\n      if (!thisDoc.isEqual(otherDoc)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  toString(): string {\n    const docStrings: string[] = [];\n    this.forEach(doc => {\n      docStrings.push(doc.toString());\n    });\n    if (docStrings.length === 0) {\n      return 'DocumentSet ()';\n    } else {\n      return 'DocumentSet (\\n  ' + docStrings.join('  \\n') + '\\n)';\n    }\n  }\n\n  private copy(\n    keyedMap: SortedMap<DocumentKey, Document>,\n    sortedSet: SortedMap<Document, null>\n  ): DocumentSet {\n    const newSet = new DocumentSet();\n    newSet.comparator = this.comparator;\n    newSet.keyedMap = keyedMap;\n    newSet.sortedSet = sortedSet;\n    return newSet;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DocumentKeySet } from '../model/collections';\nimport { Document } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { DocumentSet } from '../model/document_set';\nimport { fail } from '../util/assert';\nimport { SortedMap } from '../util/sorted_map';\n\nimport { Query, queryEquals } from './query';\n\nexport const enum ChangeType {\n  Added,\n  Removed,\n  Modified,\n  Metadata\n}\n\nexport interface DocumentViewChange {\n  type: ChangeType;\n  doc: Document;\n}\n\nexport const enum SyncState {\n  Local,\n  Synced\n}\n\n/**\n * DocumentChangeSet keeps track of a set of changes to docs in a query, merging\n * duplicate events for the same doc.\n */\nexport class DocumentChangeSet {\n  private changeMap = new SortedMap<DocumentKey, DocumentViewChange>(\n    DocumentKey.comparator\n  );\n\n  track(change: DocumentViewChange): void {\n    const key = change.doc.key;\n    const oldChange = this.changeMap.get(key);\n    if (!oldChange) {\n      this.changeMap = this.changeMap.insert(key, change);\n      return;\n    }\n\n    // Merge the new change with the existing change.\n    if (\n      change.type !== ChangeType.Added &&\n      oldChange.type === ChangeType.Metadata\n    ) {\n      this.changeMap = this.changeMap.insert(key, change);\n    } else if (\n      change.type === ChangeType.Metadata &&\n      oldChange.type !== ChangeType.Removed\n    ) {\n      this.changeMap = this.changeMap.insert(key, {\n        type: oldChange.type,\n        doc: change.doc\n      });\n    } else if (\n      change.type === ChangeType.Modified &&\n      oldChange.type === ChangeType.Modified\n    ) {\n      this.changeMap = this.changeMap.insert(key, {\n        type: ChangeType.Modified,\n        doc: change.doc\n      });\n    } else if (\n      change.type === ChangeType.Modified &&\n      oldChange.type === ChangeType.Added\n    ) {\n      this.changeMap = this.changeMap.insert(key, {\n        type: ChangeType.Added,\n        doc: change.doc\n      });\n    } else if (\n      change.type === ChangeType.Removed &&\n      oldChange.type === ChangeType.Added\n    ) {\n      this.changeMap = this.changeMap.remove(key);\n    } else if (\n      change.type === ChangeType.Removed &&\n      oldChange.type === ChangeType.Modified\n    ) {\n      this.changeMap = this.changeMap.insert(key, {\n        type: ChangeType.Removed,\n        doc: oldChange.doc\n      });\n    } else if (\n      change.type === ChangeType.Added &&\n      oldChange.type === ChangeType.Removed\n    ) {\n      this.changeMap = this.changeMap.insert(key, {\n        type: ChangeType.Modified,\n        doc: change.doc\n      });\n    } else {\n      // This includes these cases, which don't make sense:\n      // Added->Added\n      // Removed->Removed\n      // Modified->Added\n      // Removed->Modified\n      // Metadata->Added\n      // Removed->Metadata\n      fail(\n        'unsupported combination of changes: ' +\n          JSON.stringify(change) +\n          ' after ' +\n          JSON.stringify(oldChange)\n      );\n    }\n  }\n\n  getChanges(): DocumentViewChange[] {\n    const changes: DocumentViewChange[] = [];\n    this.changeMap.inorderTraversal(\n      (key: DocumentKey, change: DocumentViewChange) => {\n        changes.push(change);\n      }\n    );\n    return changes;\n  }\n}\n\nexport class ViewSnapshot {\n  constructor(\n    readonly query: Query,\n    readonly docs: DocumentSet,\n    readonly oldDocs: DocumentSet,\n    readonly docChanges: DocumentViewChange[],\n    readonly mutatedKeys: DocumentKeySet,\n    readonly fromCache: boolean,\n    readonly syncStateChanged: boolean,\n    readonly excludesMetadataChanges: boolean,\n    readonly hasCachedResults: boolean\n  ) {}\n\n  /** Returns a view snapshot as if all documents in the snapshot were added. */\n  static fromInitialDocuments(\n    query: Query,\n    documents: DocumentSet,\n    mutatedKeys: DocumentKeySet,\n    fromCache: boolean,\n    hasCachedResults: boolean\n  ): ViewSnapshot {\n    const changes: DocumentViewChange[] = [];\n    documents.forEach(doc => {\n      changes.push({ type: ChangeType.Added, doc });\n    });\n\n    return new ViewSnapshot(\n      query,\n      documents,\n      DocumentSet.emptySet(documents),\n      changes,\n      mutatedKeys,\n      fromCache,\n      /* syncStateChanged= */ true,\n      /* excludesMetadataChanges= */ false,\n      hasCachedResults\n    );\n  }\n\n  get hasPendingWrites(): boolean {\n    return !this.mutatedKeys.isEmpty();\n  }\n\n  isEqual(other: ViewSnapshot): boolean {\n    if (\n      this.fromCache !== other.fromCache ||\n      this.hasCachedResults !== other.hasCachedResults ||\n      this.syncStateChanged !== other.syncStateChanged ||\n      !this.mutatedKeys.isEqual(other.mutatedKeys) ||\n      !queryEquals(this.query, other.query) ||\n      !this.docs.isEqual(other.docs) ||\n      !this.oldDocs.isEqual(other.oldDocs)\n    ) {\n      return false;\n    }\n    const changes: DocumentViewChange[] = this.docChanges;\n    const otherChanges: DocumentViewChange[] = other.docChanges;\n    if (changes.length !== otherChanges.length) {\n      return false;\n    }\n    for (let i = 0; i < changes.length; i++) {\n      if (\n        changes[i].type !== otherChanges[i].type ||\n        !changes[i].doc.isEqual(otherChanges[i].doc)\n      ) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { QueryResult } from '../local/local_store_impl';\nimport {\n  documentKeySet,\n  DocumentKeySet,\n  DocumentMap\n} from '../model/collections';\nimport { Document } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { DocumentSet } from '../model/document_set';\nimport { TargetChange } from '../remote/remote_event';\nimport { debugAssert, fail } from '../util/assert';\n\nimport { LimitType, newQueryComparator, Query, queryMatches } from './query';\nimport { OnlineState } from './types';\nimport {\n  ChangeType,\n  DocumentChangeSet,\n  SyncState,\n  ViewSnapshot\n} from './view_snapshot';\n\nexport type LimboDocumentChange = AddedLimboDocument | RemovedLimboDocument;\nexport class AddedLimboDocument {\n  constructor(public key: DocumentKey) {}\n}\nexport class RemovedLimboDocument {\n  constructor(public key: DocumentKey) {}\n}\n\n/** The result of applying a set of doc changes to a view. */\nexport interface ViewDocumentChanges {\n  /** The new set of docs that should be in the view. */\n  documentSet: DocumentSet;\n  /** The diff of these docs with the previous set of docs. */\n  changeSet: DocumentChangeSet;\n  /**\n   * Whether the set of documents passed in was not sufficient to calculate the\n   * new state of the view and there needs to be another pass based on the\n   * local cache.\n   */\n  needsRefill: boolean;\n\n  mutatedKeys: DocumentKeySet;\n}\n\nexport interface ViewChange {\n  snapshot?: ViewSnapshot;\n  limboChanges: LimboDocumentChange[];\n}\n\n/**\n * View is responsible for computing the final merged truth of what docs are in\n * a query. It gets notified of local and remote changes to docs, and applies\n * the query filters and limits to determine the most correct possible results.\n */\nexport class View {\n  private syncState: SyncState | null = null;\n  private hasCachedResults: boolean = false;\n  /**\n   * A flag whether the view is current with the backend. A view is considered\n   * current after it has seen the current flag from the backend and did not\n   * lose consistency within the watch stream (e.g. because of an existence\n   * filter mismatch).\n   */\n  private current = false;\n  private documentSet: DocumentSet;\n  /** Documents in the view but not in the remote target */\n  private limboDocuments = documentKeySet();\n  /** Document Keys that have local changes */\n  private mutatedKeys = documentKeySet();\n  /** Query comparator that defines the document order in this view. */\n  private docComparator: (d1: Document, d2: Document) => number;\n\n  constructor(\n    private query: Query,\n    /** Documents included in the remote target */\n    private _syncedDocuments: DocumentKeySet\n  ) {\n    this.docComparator = newQueryComparator(query);\n    this.documentSet = new DocumentSet(this.docComparator);\n  }\n\n  /**\n   * The set of remote documents that the server has told us belongs to the target associated with\n   * this view.\n   */\n  get syncedDocuments(): DocumentKeySet {\n    return this._syncedDocuments;\n  }\n\n  /**\n   * Iterates over a set of doc changes, applies the query limit, and computes\n   * what the new results should be, what the changes were, and whether we may\n   * need to go back to the local cache for more results. Does not make any\n   * changes to the view.\n   * @param docChanges - The doc changes to apply to this view.\n   * @param previousChanges - If this is being called with a refill, then start\n   *        with this set of docs and changes instead of the current view.\n   * @returns a new set of docs, changes, and refill flag.\n   */\n  computeDocChanges(\n    docChanges: DocumentMap,\n    previousChanges?: ViewDocumentChanges\n  ): ViewDocumentChanges {\n    const changeSet = previousChanges\n      ? previousChanges.changeSet\n      : new DocumentChangeSet();\n    const oldDocumentSet = previousChanges\n      ? previousChanges.documentSet\n      : this.documentSet;\n    let newMutatedKeys = previousChanges\n      ? previousChanges.mutatedKeys\n      : this.mutatedKeys;\n    let newDocumentSet = oldDocumentSet;\n    let needsRefill = false;\n\n    // Track the last doc in a (full) limit. This is necessary, because some\n    // update (a delete, or an update moving a doc past the old limit) might\n    // mean there is some other document in the local cache that either should\n    // come (1) between the old last limit doc and the new last document, in the\n    // case of updates, or (2) after the new last document, in the case of\n    // deletes. So we keep this doc at the old limit to compare the updates to.\n    //\n    // Note that this should never get used in a refill (when previousChanges is\n    // set), because there will only be adds -- no deletes or updates.\n    const lastDocInLimit =\n      this.query.limitType === LimitType.First &&\n      oldDocumentSet.size === this.query.limit\n        ? oldDocumentSet.last()\n        : null;\n    const firstDocInLimit =\n      this.query.limitType === LimitType.Last &&\n      oldDocumentSet.size === this.query.limit\n        ? oldDocumentSet.first()\n        : null;\n\n    docChanges.inorderTraversal((key, entry) => {\n      const oldDoc = oldDocumentSet.get(key);\n      const newDoc = queryMatches(this.query, entry) ? entry : null;\n\n      const oldDocHadPendingMutations = oldDoc\n        ? this.mutatedKeys.has(oldDoc.key)\n        : false;\n      const newDocHasPendingMutations = newDoc\n        ? newDoc.hasLocalMutations ||\n          // We only consider committed mutations for documents that were\n          // mutated during the lifetime of the view.\n          (this.mutatedKeys.has(newDoc.key) && newDoc.hasCommittedMutations)\n        : false;\n\n      let changeApplied = false;\n\n      // Calculate change\n      if (oldDoc && newDoc) {\n        const docsEqual = oldDoc.data.isEqual(newDoc.data);\n        if (!docsEqual) {\n          if (!this.shouldWaitForSyncedDocument(oldDoc, newDoc)) {\n            changeSet.track({\n              type: ChangeType.Modified,\n              doc: newDoc\n            });\n            changeApplied = true;\n\n            if (\n              (lastDocInLimit &&\n                this.docComparator(newDoc, lastDocInLimit) > 0) ||\n              (firstDocInLimit &&\n                this.docComparator(newDoc, firstDocInLimit) < 0)\n            ) {\n              // This doc moved from inside the limit to outside the limit.\n              // That means there may be some other doc in the local cache\n              // that should be included instead.\n              needsRefill = true;\n            }\n          }\n        } else if (oldDocHadPendingMutations !== newDocHasPendingMutations) {\n          changeSet.track({ type: ChangeType.Metadata, doc: newDoc });\n          changeApplied = true;\n        }\n      } else if (!oldDoc && newDoc) {\n        changeSet.track({ type: ChangeType.Added, doc: newDoc });\n        changeApplied = true;\n      } else if (oldDoc && !newDoc) {\n        changeSet.track({ type: ChangeType.Removed, doc: oldDoc });\n        changeApplied = true;\n\n        if (lastDocInLimit || firstDocInLimit) {\n          // A doc was removed from a full limit query. We'll need to\n          // requery from the local cache to see if we know about some other\n          // doc that should be in the results.\n          needsRefill = true;\n        }\n      }\n\n      if (changeApplied) {\n        if (newDoc) {\n          newDocumentSet = newDocumentSet.add(newDoc);\n          if (newDocHasPendingMutations) {\n            newMutatedKeys = newMutatedKeys.add(key);\n          } else {\n            newMutatedKeys = newMutatedKeys.delete(key);\n          }\n        } else {\n          newDocumentSet = newDocumentSet.delete(key);\n          newMutatedKeys = newMutatedKeys.delete(key);\n        }\n      }\n    });\n\n    // Drop documents out to meet limit/limitToLast requirement.\n    if (this.query.limit !== null) {\n      while (newDocumentSet.size > this.query.limit!) {\n        const oldDoc =\n          this.query.limitType === LimitType.First\n            ? newDocumentSet.last()\n            : newDocumentSet.first();\n        newDocumentSet = newDocumentSet.delete(oldDoc!.key);\n        newMutatedKeys = newMutatedKeys.delete(oldDoc!.key);\n        changeSet.track({ type: ChangeType.Removed, doc: oldDoc! });\n      }\n    }\n\n    debugAssert(\n      !needsRefill || !previousChanges,\n      'View was refilled using docs that themselves needed refilling.'\n    );\n    return {\n      documentSet: newDocumentSet,\n      changeSet,\n      needsRefill,\n      mutatedKeys: newMutatedKeys\n    };\n  }\n\n  private shouldWaitForSyncedDocument(\n    oldDoc: Document,\n    newDoc: Document\n  ): boolean {\n    // We suppress the initial change event for documents that were modified as\n    // part of a write acknowledgment (e.g. when the value of a server transform\n    // is applied) as Watch will send us the same document again.\n    // By suppressing the event, we only raise two user visible events (one with\n    // `hasPendingWrites` and the final state of the document) instead of three\n    // (one with `hasPendingWrites`, the modified document with\n    // `hasPendingWrites` and the final state of the document).\n    return (\n      oldDoc.hasLocalMutations &&\n      newDoc.hasCommittedMutations &&\n      !newDoc.hasLocalMutations\n    );\n  }\n\n  /**\n   * Updates the view with the given ViewDocumentChanges and optionally updates\n   * limbo docs and sync state from the provided target change.\n   * @param docChanges - The set of changes to make to the view's docs.\n   * @param limboResolutionEnabled - Whether to update limbo documents based on\n   *        this change.\n   * @param targetChange - A target change to apply for computing limbo docs and\n   *        sync state.\n   * @param targetIsPendingReset - Whether the target is pending to reset due to\n   *        existence filter mismatch. If not explicitly specified, it is treated\n   *        equivalently to `false`.\n   * @returns A new ViewChange with the given docs, changes, and sync state.\n   */\n  // PORTING NOTE: The iOS/Android clients always compute limbo document changes.\n  applyChanges(\n    docChanges: ViewDocumentChanges,\n    limboResolutionEnabled: boolean,\n    targetChange?: TargetChange,\n    targetIsPendingReset?: boolean\n  ): ViewChange {\n    debugAssert(\n      !docChanges.needsRefill,\n      'Cannot apply changes that need a refill'\n    );\n    const oldDocs = this.documentSet;\n    this.documentSet = docChanges.documentSet;\n    this.mutatedKeys = docChanges.mutatedKeys;\n    // Sort changes based on type and query comparator\n    const changes = docChanges.changeSet.getChanges();\n    changes.sort((c1, c2) => {\n      return (\n        compareChangeType(c1.type, c2.type) ||\n        this.docComparator(c1.doc, c2.doc)\n      );\n    });\n\n    this.applyTargetChange(targetChange);\n\n    targetIsPendingReset = targetIsPendingReset ?? false;\n    const limboChanges =\n      limboResolutionEnabled && !targetIsPendingReset\n        ? this.updateLimboDocuments()\n        : [];\n\n    // We are at synced state if there is no limbo docs are waiting to be resolved, view is current\n    // with the backend, and the query is not pending to reset due to existence filter mismatch.\n    const synced =\n      this.limboDocuments.size === 0 && this.current && !targetIsPendingReset;\n\n    const newSyncState = synced ? SyncState.Synced : SyncState.Local;\n    const syncStateChanged = newSyncState !== this.syncState;\n    this.syncState = newSyncState;\n\n    if (changes.length === 0 && !syncStateChanged) {\n      // no changes\n      return { limboChanges };\n    } else {\n      const snap: ViewSnapshot = new ViewSnapshot(\n        this.query,\n        docChanges.documentSet,\n        oldDocs,\n        changes,\n        docChanges.mutatedKeys,\n        newSyncState === SyncState.Local,\n        syncStateChanged,\n        /* excludesMetadataChanges= */ false,\n        targetChange\n          ? targetChange.resumeToken.approximateByteSize() > 0\n          : false\n      );\n      return {\n        snapshot: snap,\n        limboChanges\n      };\n    }\n  }\n\n  /**\n   * Applies an OnlineState change to the view, potentially generating a\n   * ViewChange if the view's syncState changes as a result.\n   */\n  applyOnlineStateChange(onlineState: OnlineState): ViewChange {\n    if (this.current && onlineState === OnlineState.Offline) {\n      // If we're offline, set `current` to false and then call applyChanges()\n      // to refresh our syncState and generate a ViewChange as appropriate. We\n      // are guaranteed to get a new TargetChange that sets `current` back to\n      // true once the client is back online.\n      this.current = false;\n      return this.applyChanges(\n        {\n          documentSet: this.documentSet,\n          changeSet: new DocumentChangeSet(),\n          mutatedKeys: this.mutatedKeys,\n          needsRefill: false\n        },\n        /* limboResolutionEnabled= */ false\n      );\n    } else {\n      // No effect, just return a no-op ViewChange.\n      return { limboChanges: [] };\n    }\n  }\n\n  /**\n   * Returns whether the doc for the given key should be in limbo.\n   */\n  private shouldBeInLimbo(key: DocumentKey): boolean {\n    // If the remote end says it's part of this query, it's not in limbo.\n    if (this._syncedDocuments.has(key)) {\n      return false;\n    }\n    // The local store doesn't think it's a result, so it shouldn't be in limbo.\n    if (!this.documentSet.has(key)) {\n      return false;\n    }\n    // If there are local changes to the doc, they might explain why the server\n    // doesn't know that it's part of the query. So don't put it in limbo.\n    // TODO(klimt): Ideally, we would only consider changes that might actually\n    // affect this specific query.\n    if (this.documentSet.get(key)!.hasLocalMutations) {\n      return false;\n    }\n    // Everything else is in limbo.\n    return true;\n  }\n\n  /**\n   * Updates syncedDocuments, current, and limbo docs based on the given change.\n   * Returns the list of changes to which docs are in limbo.\n   */\n  private applyTargetChange(targetChange?: TargetChange): void {\n    if (targetChange) {\n      targetChange.addedDocuments.forEach(\n        key => (this._syncedDocuments = this._syncedDocuments.add(key))\n      );\n      targetChange.modifiedDocuments.forEach(key => {\n        debugAssert(\n          this._syncedDocuments.has(key),\n          `Modified document ${key} not found in view.`\n        );\n      });\n      targetChange.removedDocuments.forEach(\n        key => (this._syncedDocuments = this._syncedDocuments.delete(key))\n      );\n      this.current = targetChange.current;\n    }\n  }\n\n  private updateLimboDocuments(): LimboDocumentChange[] {\n    // We can only determine limbo documents when we're in-sync with the server.\n    if (!this.current) {\n      return [];\n    }\n\n    // TODO(klimt): Do this incrementally so that it's not quadratic when\n    // updating many documents.\n    const oldLimboDocuments = this.limboDocuments;\n    this.limboDocuments = documentKeySet();\n    this.documentSet.forEach(doc => {\n      if (this.shouldBeInLimbo(doc.key)) {\n        this.limboDocuments = this.limboDocuments.add(doc.key);\n      }\n    });\n\n    // Diff the new limbo docs with the old limbo docs.\n    const changes: LimboDocumentChange[] = [];\n    oldLimboDocuments.forEach(key => {\n      if (!this.limboDocuments.has(key)) {\n        changes.push(new RemovedLimboDocument(key));\n      }\n    });\n    this.limboDocuments.forEach(key => {\n      if (!oldLimboDocuments.has(key)) {\n        changes.push(new AddedLimboDocument(key));\n      }\n    });\n    return changes;\n  }\n\n  /**\n   * Update the in-memory state of the current view with the state read from\n   * persistence.\n   *\n   * We update the query view whenever a client's primary status changes:\n   * - When a client transitions from primary to secondary, it can miss\n   *   LocalStorage updates and its query views may temporarily not be\n   *   synchronized with the state on disk.\n   * - For secondary to primary transitions, the client needs to update the list\n   *   of `syncedDocuments` since secondary clients update their query views\n   *   based purely on synthesized RemoteEvents.\n   *\n   * @param queryResult.documents - The documents that match the query according\n   * to the LocalStore.\n   * @param queryResult.remoteKeys - The keys of the documents that match the\n   * query according to the backend.\n   *\n   * @returns The ViewChange that resulted from this synchronization.\n   */\n  // PORTING NOTE: Multi-tab only.\n  synchronizeWithPersistedState(queryResult: QueryResult): ViewChange {\n    this._syncedDocuments = queryResult.remoteKeys;\n    this.limboDocuments = documentKeySet();\n    const docChanges = this.computeDocChanges(queryResult.documents);\n    return this.applyChanges(docChanges, /* limboResolutionEnabled= */ true);\n  }\n\n  /**\n   * Returns a view snapshot as if this query was just listened to. Contains\n   * a document add for every existing document and the `fromCache` and\n   * `hasPendingWrites` status of the already established view.\n   */\n  // PORTING NOTE: Multi-tab only.\n  computeInitialSnapshot(): ViewSnapshot {\n    return ViewSnapshot.fromInitialDocuments(\n      this.query,\n      this.documentSet,\n      this.mutatedKeys,\n      this.syncState === SyncState.Local,\n      this.hasCachedResults\n    );\n  }\n}\n\nfunction compareChangeType(c1: ChangeType, c2: ChangeType): number {\n  const order = (change: ChangeType): 0 | 1 | 2 => {\n    switch (change) {\n      case ChangeType.Added:\n        return 1;\n      case ChangeType.Modified:\n        return 2;\n      case ChangeType.Metadata:\n        // A metadata change is converted to a modified change at the public\n        // api layer.  Since we sort by document key and then change type,\n        // metadata and modified changes must be sorted equivalently.\n        return 2;\n      case ChangeType.Removed:\n        return 0;\n      default:\n        return fail('Unknown ChangeType: ' + change);\n    }\n  };\n\n  return order(c1) - order(c2);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LoadBundleTask } from '../api/bundle';\nimport { User } from '../auth/user';\nimport { ignoreIfPrimaryLeaseLoss, LocalStore } from '../local/local_store';\nimport {\n  localStoreAcknowledgeBatch,\n  localStoreAllocateTarget,\n  localStoreApplyRemoteEventToLocalCache,\n  localStoreExecuteQuery,\n  localStoreGetActiveClients,\n  localStoreGetCachedTarget,\n  localStoreGetHighestUnacknowledgedBatchId,\n  localStoreGetNewDocumentChanges,\n  localStoreHandleUserChange,\n  localStoreHasNewerBundle,\n  localStoreLookupMutationDocuments,\n  localStoreNotifyLocalViewChanges,\n  localStoreRejectBatch,\n  localStoreReleaseTarget,\n  localStoreRemoveCachedMutationBatchMetadata,\n  localStoreSaveBundle,\n  localStoreWriteLocally\n} from '../local/local_store_impl';\nimport { LocalViewChanges } from '../local/local_view_changes';\nimport { ReferenceSet } from '../local/reference_set';\nimport { ClientId, SharedClientState } from '../local/shared_client_state';\nimport { QueryTargetState } from '../local/shared_client_state_syncer';\nimport { TargetData, TargetPurpose } from '../local/target_data';\nimport {\n  DocumentKeySet,\n  documentKeySet,\n  DocumentMap\n} from '../model/collections';\nimport { MutableDocument } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { Mutation } from '../model/mutation';\nimport { MutationBatchResult } from '../model/mutation_batch';\nimport { ResourcePath } from '../model/path';\nimport { RemoteEvent, TargetChange } from '../remote/remote_event';\nimport {\n  canUseNetwork,\n  fillWritePipeline,\n  RemoteStore,\n  remoteStoreApplyPrimaryState,\n  remoteStoreListen,\n  remoteStoreUnlisten\n} from '../remote/remote_store';\nimport { debugAssert, debugCast, fail, hardAssert } from '../util/assert';\nimport { wrapInUserErrorIfRecoverable } from '../util/async_queue';\nimport { BundleReader } from '../util/bundle_reader';\nimport { ByteString } from '../util/byte_string';\nimport { Code, FirestoreError } from '../util/error';\nimport { logDebug, logWarn } from '../util/log';\nimport { primitiveComparator } from '../util/misc';\nimport { ObjectMap } from '../util/obj_map';\nimport { Deferred } from '../util/promise';\nimport { SortedMap } from '../util/sorted_map';\nimport { BATCHID_UNKNOWN } from '../util/types';\n\nimport {\n  bundleInitialProgress,\n  BundleLoader,\n  bundleSuccessProgress\n} from './bundle_impl';\nimport {\n  EventManager,\n  eventManagerOnOnlineStateChange,\n  eventManagerOnWatchChange,\n  eventManagerOnWatchError\n} from './event_manager';\nimport { ListenSequence } from './listen_sequence';\nimport {\n  canonifyQuery,\n  LimitType,\n  newQuery,\n  newQueryForPath,\n  Query,\n  queryEquals,\n  queryCollectionGroup,\n  queryToTarget,\n  stringifyQuery\n} from './query';\nimport { SnapshotVersion } from './snapshot_version';\nimport { SyncEngine } from './sync_engine';\nimport { Target } from './target';\nimport { TargetIdGenerator } from './target_id_generator';\nimport {\n  BatchId,\n  MutationBatchState,\n  OnlineState,\n  OnlineStateSource,\n  TargetId\n} from './types';\nimport {\n  AddedLimboDocument,\n  LimboDocumentChange,\n  RemovedLimboDocument,\n  View,\n  ViewChange\n} from './view';\nimport { ViewSnapshot } from './view_snapshot';\n\nconst LOG_TAG = 'SyncEngine';\n\n/**\n * QueryView contains all of the data that SyncEngine needs to keep track of for\n * a particular query.\n */\nclass QueryView {\n  constructor(\n    /**\n     * The query itself.\n     */\n    public query: Query,\n    /**\n     * The target number created by the client that is used in the watch\n     * stream to identify this query.\n     */\n    public targetId: TargetId,\n    /**\n     * The view is responsible for computing the final merged truth of what\n     * docs are in the query. It gets notified of local and remote changes,\n     * and applies the query filters and limits to determine the most correct\n     * possible results.\n     */\n    public view: View\n  ) {}\n}\n\n/** Tracks a limbo resolution. */\nclass LimboResolution {\n  constructor(public key: DocumentKey) {}\n\n  /**\n   * Set to true once we've received a document. This is used in\n   * getRemoteKeysForTarget() and ultimately used by WatchChangeAggregator to\n   * decide whether it needs to manufacture a delete event for the target once\n   * the target is CURRENT.\n   */\n  receivedDocument: boolean = false;\n}\n\n/**\n * A function that updates a QueryView with a set of document changes (and a\n * remote event if applicable).\n */\ntype ApplyDocChangesHandler = (\n  queryView: QueryView,\n  changes: DocumentMap,\n  remoteEvent?: RemoteEvent\n) => Promise<ViewSnapshot | undefined>;\n\n/**\n * Callbacks implemented by EventManager to handle notifications from\n * SyncEngine.\n */\ninterface SyncEngineListener {\n  /** Handles new view snapshots. */\n  onWatchChange?(snapshots: ViewSnapshot[]): void;\n\n  /** Handles the failure of a query. */\n  onWatchError?(query: Query, error: FirestoreError): void;\n}\n\n/**\n * An implementation of `SyncEngine` coordinating with other parts of SDK.\n *\n * The parts of SyncEngine that act as a callback to RemoteStore need to be\n * registered individually. This is done in `syncEngineWrite()` and\n * `syncEngineListen()` (as well as `applyPrimaryState()`) as these methods\n * serve as entry points to RemoteStore's functionality.\n *\n * Note: some field defined in this class might have public access level, but\n * the class is not exported so they are only accessible from this module.\n * This is useful to implement optional features (like bundles) in free\n * functions, such that they are tree-shakeable.\n */\nclass SyncEngineImpl implements SyncEngine {\n  syncEngineListener: SyncEngineListener = {};\n\n  /**\n   * A callback that updates the QueryView based on the provided change.\n   *\n   * PORTING NOTE: On other platforms, this logic lives in\n   * `emitNewSnapshotsAndNotifyLocalStore()`, but on Web it is extracted to\n   *  ensure that all view logic only exists in bundles that include views.\n   */\n  applyDocChanges?: ApplyDocChangesHandler;\n\n  queryViewsByQuery = new ObjectMap<Query, QueryView>(\n    q => canonifyQuery(q),\n    queryEquals\n  );\n  queriesByTarget = new Map<TargetId, Query[]>();\n  /**\n   * The keys of documents that are in limbo for which we haven't yet started a\n   * limbo resolution query. The strings in this set are the result of calling\n   * `key.path.canonicalString()` where `key` is a `DocumentKey` object.\n   *\n   * The `Set` type was chosen because it provides efficient lookup and removal\n   * of arbitrary elements and it also maintains insertion order, providing the\n   * desired queue-like FIFO semantics.\n   */\n  enqueuedLimboResolutions = new Set<string>();\n  /**\n   * Keeps track of the target ID for each document that is in limbo with an\n   * active target.\n   */\n  activeLimboTargetsByKey = new SortedMap<DocumentKey, TargetId>(\n    DocumentKey.comparator\n  );\n  /**\n   * Keeps track of the information about an active limbo resolution for each\n   * active target ID that was started for the purpose of limbo resolution.\n   */\n  activeLimboResolutionsByTarget = new Map<TargetId, LimboResolution>();\n  limboDocumentRefs = new ReferenceSet();\n  /** Stores user completion handlers, indexed by User and BatchId. */\n  mutationUserCallbacks = {} as {\n    [uidKey: string]: SortedMap<BatchId, Deferred<void>>;\n  };\n  /** Stores user callbacks waiting for all pending writes to be acknowledged. */\n  pendingWritesCallbacks = new Map<BatchId, Array<Deferred<void>>>();\n  limboTargetIdGenerator = TargetIdGenerator.forSyncEngine();\n\n  onlineState = OnlineState.Unknown;\n\n  // The primary state is set to `true` or `false` immediately after Firestore\n  // startup. In the interim, a client should only be considered primary if\n  // `isPrimary` is true.\n  _isPrimaryClient: undefined | boolean = undefined;\n\n  constructor(\n    readonly localStore: LocalStore,\n    readonly remoteStore: RemoteStore,\n    readonly eventManager: EventManager,\n    // PORTING NOTE: Manages state synchronization in multi-tab environments.\n    readonly sharedClientState: SharedClientState,\n    public currentUser: User,\n    readonly maxConcurrentLimboResolutions: number\n  ) {}\n\n  get isPrimaryClient(): boolean {\n    return this._isPrimaryClient === true;\n  }\n}\n\nexport function newSyncEngine(\n  localStore: LocalStore,\n  remoteStore: RemoteStore,\n  eventManager: EventManager,\n  // PORTING NOTE: Manages state synchronization in multi-tab environments.\n  sharedClientState: SharedClientState,\n  currentUser: User,\n  maxConcurrentLimboResolutions: number,\n  isPrimary: boolean\n): SyncEngine {\n  const syncEngine = new SyncEngineImpl(\n    localStore,\n    remoteStore,\n    eventManager,\n    sharedClientState,\n    currentUser,\n    maxConcurrentLimboResolutions\n  );\n  if (isPrimary) {\n    syncEngine._isPrimaryClient = true;\n  }\n  return syncEngine;\n}\n\n/**\n * Initiates the new listen, resolves promise when listen enqueued to the\n * server. All the subsequent view snapshots or errors are sent to the\n * subscribed handlers. Returns the initial snapshot.\n */\nexport async function syncEngineListen(\n  syncEngine: SyncEngine,\n  query: Query,\n  shouldListenToRemote: boolean = true\n): Promise<ViewSnapshot> {\n  const syncEngineImpl = ensureWatchCallbacks(syncEngine);\n\n  let viewSnapshot;\n\n  const queryView = syncEngineImpl.queryViewsByQuery.get(query);\n  if (queryView) {\n    // PORTING NOTE: With Multi-Tab Web, it is possible that a query view\n    // already exists when EventManager calls us for the first time. This\n    // happens when the primary tab is already listening to this query on\n    // behalf of another tab and the user of the primary also starts listening\n    // to the query. EventManager will not have an assigned target ID in this\n    // case and calls `listen` to obtain this ID.\n    syncEngineImpl.sharedClientState.addLocalQueryTarget(queryView.targetId);\n    viewSnapshot = queryView.view.computeInitialSnapshot();\n  } else {\n    viewSnapshot = await allocateTargetAndMaybeListen(\n      syncEngineImpl,\n      query,\n      shouldListenToRemote,\n      /** shouldInitializeView= */ true\n    );\n    debugAssert(!!viewSnapshot, 'viewSnapshot is not initialized');\n  }\n\n  return viewSnapshot;\n}\n\n/** Query has been listening to the cache, and tries to initiate the remote store listen */\nexport async function triggerRemoteStoreListen(\n  syncEngine: SyncEngine,\n  query: Query\n): Promise<void> {\n  const syncEngineImpl = ensureWatchCallbacks(syncEngine);\n  await allocateTargetAndMaybeListen(\n    syncEngineImpl,\n    query,\n    /** shouldListenToRemote= */ true,\n    /** shouldInitializeView= */ false\n  );\n}\n\nasync function allocateTargetAndMaybeListen(\n  syncEngineImpl: SyncEngineImpl,\n  query: Query,\n  shouldListenToRemote: boolean,\n  shouldInitializeView: boolean\n): Promise<ViewSnapshot | undefined> {\n  const targetData = await localStoreAllocateTarget(\n    syncEngineImpl.localStore,\n    queryToTarget(query)\n  );\n\n  const targetId = targetData.targetId;\n\n  // PORTING NOTE: When the query is listening to cache only, we skip sending it over to Watch by\n  // not registering it in shared client state, and directly calculate initial snapshots and\n  // subsequent updates from cache. Otherwise, register the target ID with local Firestore client\n  // as active watch target.\n  const status: QueryTargetState = shouldListenToRemote\n    ? syncEngineImpl.sharedClientState.addLocalQueryTarget(targetId)\n    : 'not-current';\n\n  let viewSnapshot;\n  if (shouldInitializeView) {\n    viewSnapshot = await initializeViewAndComputeSnapshot(\n      syncEngineImpl,\n      query,\n      targetId,\n      status === 'current',\n      targetData.resumeToken\n    );\n  }\n\n  if (syncEngineImpl.isPrimaryClient && shouldListenToRemote) {\n    remoteStoreListen(syncEngineImpl.remoteStore, targetData);\n  }\n\n  return viewSnapshot;\n}\n\n/**\n * Registers a view for a previously unknown query and computes its initial\n * snapshot.\n */\nasync function initializeViewAndComputeSnapshot(\n  syncEngineImpl: SyncEngineImpl,\n  query: Query,\n  targetId: TargetId,\n  current: boolean,\n  resumeToken: ByteString\n): Promise<ViewSnapshot> {\n  // PORTING NOTE: On Web only, we inject the code that registers new Limbo\n  // targets based on view changes. This allows us to only depend on Limbo\n  // changes when user code includes queries.\n  syncEngineImpl.applyDocChanges = (queryView, changes, remoteEvent) =>\n    applyDocChanges(syncEngineImpl, queryView, changes, remoteEvent);\n\n  const queryResult = await localStoreExecuteQuery(\n    syncEngineImpl.localStore,\n    query,\n    /* usePreviousResults= */ true\n  );\n  const view = new View(query, queryResult.remoteKeys);\n  const viewDocChanges = view.computeDocChanges(queryResult.documents);\n  const synthesizedTargetChange =\n    TargetChange.createSynthesizedTargetChangeForCurrentChange(\n      targetId,\n      current && syncEngineImpl.onlineState !== OnlineState.Offline,\n      resumeToken\n    );\n  const viewChange = view.applyChanges(\n    viewDocChanges,\n    /* limboResolutionEnabled= */ syncEngineImpl.isPrimaryClient,\n    synthesizedTargetChange\n  );\n  updateTrackedLimbos(syncEngineImpl, targetId, viewChange.limboChanges);\n\n  debugAssert(\n    !!viewChange.snapshot,\n    'applyChanges for new view should always return a snapshot'\n  );\n\n  const data = new QueryView(query, targetId, view);\n\n  syncEngineImpl.queryViewsByQuery.set(query, data);\n  if (syncEngineImpl.queriesByTarget.has(targetId)) {\n    syncEngineImpl.queriesByTarget.get(targetId)!.push(query);\n  } else {\n    syncEngineImpl.queriesByTarget.set(targetId, [query]);\n  }\n\n  return viewChange.snapshot;\n}\n\n/** Stops listening to the query. */\nexport async function syncEngineUnlisten(\n  syncEngine: SyncEngine,\n  query: Query,\n  shouldUnlistenToRemote: boolean\n): Promise<void> {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  const queryView = syncEngineImpl.queryViewsByQuery.get(query)!;\n  debugAssert(\n    !!queryView,\n    'Trying to unlisten on query not found:' + stringifyQuery(query)\n  );\n\n  // Only clean up the query view and target if this is the only query mapped\n  // to the target.\n  const queries = syncEngineImpl.queriesByTarget.get(queryView.targetId)!;\n  if (queries.length > 1) {\n    syncEngineImpl.queriesByTarget.set(\n      queryView.targetId,\n      queries.filter(q => !queryEquals(q, query))\n    );\n    syncEngineImpl.queryViewsByQuery.delete(query);\n    return;\n  }\n\n  // No other queries are mapped to the target, clean up the query and the target.\n  if (syncEngineImpl.isPrimaryClient) {\n    // We need to remove the local query target first to allow us to verify\n    // whether any other client is still interested in this target.\n    syncEngineImpl.sharedClientState.removeLocalQueryTarget(queryView.targetId);\n    const targetRemainsActive =\n      syncEngineImpl.sharedClientState.isActiveQueryTarget(queryView.targetId);\n\n    if (!targetRemainsActive) {\n      await localStoreReleaseTarget(\n        syncEngineImpl.localStore,\n        queryView.targetId,\n        /*keepPersistedTargetData=*/ false\n      )\n        .then(() => {\n          syncEngineImpl.sharedClientState.clearQueryState(queryView.targetId);\n          if (shouldUnlistenToRemote) {\n            remoteStoreUnlisten(syncEngineImpl.remoteStore, queryView.targetId);\n          }\n          removeAndCleanupTarget(syncEngineImpl, queryView.targetId);\n        })\n        .catch(ignoreIfPrimaryLeaseLoss);\n    }\n  } else {\n    removeAndCleanupTarget(syncEngineImpl, queryView.targetId);\n    await localStoreReleaseTarget(\n      syncEngineImpl.localStore,\n      queryView.targetId,\n      /*keepPersistedTargetData=*/ true\n    );\n  }\n}\n\n/** Unlistens to the remote store while still listening to the cache. */\nexport async function triggerRemoteStoreUnlisten(\n  syncEngine: SyncEngine,\n  query: Query\n): Promise<void> {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  const queryView = syncEngineImpl.queryViewsByQuery.get(query)!;\n  debugAssert(\n    !!queryView,\n    'Trying to unlisten on query not found:' + stringifyQuery(query)\n  );\n  const queries = syncEngineImpl.queriesByTarget.get(queryView.targetId)!;\n\n  if (syncEngineImpl.isPrimaryClient && queries.length === 1) {\n    // PORTING NOTE: Unregister the target ID with local Firestore client as\n    // watch target.\n    syncEngineImpl.sharedClientState.removeLocalQueryTarget(queryView.targetId);\n\n    remoteStoreUnlisten(syncEngineImpl.remoteStore, queryView.targetId);\n  }\n}\n\n/**\n * Initiates the write of local mutation batch which involves adding the\n * writes to the mutation queue, notifying the remote store about new\n * mutations and raising events for any changes this write caused.\n *\n * The promise returned by this call is resolved when the above steps\n * have completed, *not* when the write was acked by the backend. The\n * userCallback is resolved once the write was acked/rejected by the\n * backend (or failed locally for any other reason).\n */\nexport async function syncEngineWrite(\n  syncEngine: SyncEngine,\n  batch: Mutation[],\n  userCallback: Deferred<void>\n): Promise<void> {\n  const syncEngineImpl = syncEngineEnsureWriteCallbacks(syncEngine);\n\n  try {\n    const result = await localStoreWriteLocally(\n      syncEngineImpl.localStore,\n      batch\n    );\n    syncEngineImpl.sharedClientState.addPendingMutation(result.batchId);\n    addMutationCallback(syncEngineImpl, result.batchId, userCallback);\n    await syncEngineEmitNewSnapsAndNotifyLocalStore(\n      syncEngineImpl,\n      result.changes\n    );\n    await fillWritePipeline(syncEngineImpl.remoteStore);\n  } catch (e) {\n    // If we can't persist the mutation, we reject the user callback and\n    // don't send the mutation. The user can then retry the write.\n    const error = wrapInUserErrorIfRecoverable(\n      e as Error,\n      `Failed to persist write`\n    );\n    userCallback.reject(error);\n  }\n}\n\n/**\n * Applies one remote event to the sync engine, notifying any views of the\n * changes, and releasing any pending mutation batches that would become\n * visible because of the snapshot version the remote event contains.\n */\nexport async function syncEngineApplyRemoteEvent(\n  syncEngine: SyncEngine,\n  remoteEvent: RemoteEvent\n): Promise<void> {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n\n  try {\n    const changes = await localStoreApplyRemoteEventToLocalCache(\n      syncEngineImpl.localStore,\n      remoteEvent\n    );\n    // Update `receivedDocument` as appropriate for any limbo targets.\n    remoteEvent.targetChanges.forEach((targetChange, targetId) => {\n      const limboResolution =\n        syncEngineImpl.activeLimboResolutionsByTarget.get(targetId);\n      if (limboResolution) {\n        // Since this is a limbo resolution lookup, it's for a single document\n        // and it could be added, modified, or removed, but not a combination.\n        hardAssert(\n          targetChange.addedDocuments.size +\n            targetChange.modifiedDocuments.size +\n            targetChange.removedDocuments.size <=\n            1,\n          'Limbo resolution for single document contains multiple changes.'\n        );\n        if (targetChange.addedDocuments.size > 0) {\n          limboResolution.receivedDocument = true;\n        } else if (targetChange.modifiedDocuments.size > 0) {\n          hardAssert(\n            limboResolution.receivedDocument,\n            'Received change for limbo target document without add.'\n          );\n        } else if (targetChange.removedDocuments.size > 0) {\n          hardAssert(\n            limboResolution.receivedDocument,\n            'Received remove for limbo target document without add.'\n          );\n          limboResolution.receivedDocument = false;\n        } else {\n          // This was probably just a CURRENT targetChange or similar.\n        }\n      }\n    });\n    await syncEngineEmitNewSnapsAndNotifyLocalStore(\n      syncEngineImpl,\n      changes,\n      remoteEvent\n    );\n  } catch (error) {\n    await ignoreIfPrimaryLeaseLoss(error as FirestoreError);\n  }\n}\n\n/**\n * Applies an OnlineState change to the sync engine and notifies any views of\n * the change.\n */\nexport function syncEngineApplyOnlineStateChange(\n  syncEngine: SyncEngine,\n  onlineState: OnlineState,\n  source: OnlineStateSource\n): void {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  // If we are the secondary client, we explicitly ignore the remote store's\n  // online state (the local client may go offline, even though the primary\n  // tab remains online) and only apply the primary tab's online state from\n  // SharedClientState.\n  if (\n    (syncEngineImpl.isPrimaryClient &&\n      source === OnlineStateSource.RemoteStore) ||\n    (!syncEngineImpl.isPrimaryClient &&\n      source === OnlineStateSource.SharedClientState)\n  ) {\n    const newViewSnapshots = [] as ViewSnapshot[];\n    syncEngineImpl.queryViewsByQuery.forEach((query, queryView) => {\n      const viewChange = queryView.view.applyOnlineStateChange(onlineState);\n      debugAssert(\n        viewChange.limboChanges.length === 0,\n        'OnlineState should not affect limbo documents.'\n      );\n      if (viewChange.snapshot) {\n        newViewSnapshots.push(viewChange.snapshot);\n      }\n    });\n\n    eventManagerOnOnlineStateChange(syncEngineImpl.eventManager, onlineState);\n\n    if (newViewSnapshots.length) {\n      debugAssert(\n        !!syncEngineImpl.syncEngineListener.onWatchChange,\n        'Active views but EventManager callbacks are not assigned'\n      );\n      syncEngineImpl.syncEngineListener.onWatchChange(newViewSnapshots);\n    }\n\n    syncEngineImpl.onlineState = onlineState;\n    if (syncEngineImpl.isPrimaryClient) {\n      syncEngineImpl.sharedClientState.setOnlineState(onlineState);\n    }\n  }\n}\n\n/**\n * Rejects the listen for the given targetID. This can be triggered by the\n * backend for any active target.\n *\n * @param syncEngine - The sync engine implementation.\n * @param targetId - The targetID corresponds to one previously initiated by the\n * user as part of TargetData passed to listen() on RemoteStore.\n * @param err - A description of the condition that has forced the rejection.\n * Nearly always this will be an indication that the user is no longer\n * authorized to see the data matching the target.\n */\nexport async function syncEngineRejectListen(\n  syncEngine: SyncEngine,\n  targetId: TargetId,\n  err: FirestoreError\n): Promise<void> {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n\n  // PORTING NOTE: Multi-tab only.\n  syncEngineImpl.sharedClientState.updateQueryState(targetId, 'rejected', err);\n\n  const limboResolution =\n    syncEngineImpl.activeLimboResolutionsByTarget.get(targetId);\n  const limboKey = limboResolution && limboResolution.key;\n  if (limboKey) {\n    // TODO(klimt): We really only should do the following on permission\n    // denied errors, but we don't have the cause code here.\n\n    // It's a limbo doc. Create a synthetic event saying it was deleted.\n    // This is kind of a hack. Ideally, we would have a method in the local\n    // store to purge a document. However, it would be tricky to keep all of\n    // the local store's invariants with another method.\n    let documentUpdates = new SortedMap<DocumentKey, MutableDocument>(\n      DocumentKey.comparator\n    );\n    // TODO(b/217189216): This limbo document should ideally have a read time,\n    // so that it is picked up by any read-time based scans. The backend,\n    // however, does not send a read time for target removals.\n    documentUpdates = documentUpdates.insert(\n      limboKey,\n      MutableDocument.newNoDocument(limboKey, SnapshotVersion.min())\n    );\n    const resolvedLimboDocuments = documentKeySet().add(limboKey);\n    const event = new RemoteEvent(\n      SnapshotVersion.min(),\n      /* targetChanges= */ new Map<TargetId, TargetChange>(),\n      /* targetMismatches= */ new SortedMap<TargetId, TargetPurpose>(\n        primitiveComparator\n      ),\n      documentUpdates,\n      resolvedLimboDocuments\n    );\n\n    await syncEngineApplyRemoteEvent(syncEngineImpl, event);\n\n    // Since this query failed, we won't want to manually unlisten to it.\n    // We only remove it from bookkeeping after we successfully applied the\n    // RemoteEvent. If `applyRemoteEvent()` throws, we want to re-listen to\n    // this query when the RemoteStore restarts the Watch stream, which should\n    // re-trigger the target failure.\n    syncEngineImpl.activeLimboTargetsByKey =\n      syncEngineImpl.activeLimboTargetsByKey.remove(limboKey);\n    syncEngineImpl.activeLimboResolutionsByTarget.delete(targetId);\n    pumpEnqueuedLimboResolutions(syncEngineImpl);\n  } else {\n    await localStoreReleaseTarget(\n      syncEngineImpl.localStore,\n      targetId,\n      /* keepPersistedTargetData */ false\n    )\n      .then(() => removeAndCleanupTarget(syncEngineImpl, targetId, err))\n      .catch(ignoreIfPrimaryLeaseLoss);\n  }\n}\n\nexport async function syncEngineApplySuccessfulWrite(\n  syncEngine: SyncEngine,\n  mutationBatchResult: MutationBatchResult\n): Promise<void> {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  const batchId = mutationBatchResult.batch.batchId;\n\n  try {\n    const changes = await localStoreAcknowledgeBatch(\n      syncEngineImpl.localStore,\n      mutationBatchResult\n    );\n\n    // The local store may or may not be able to apply the write result and\n    // raise events immediately (depending on whether the watcher is caught\n    // up), so we raise user callbacks first so that they consistently happen\n    // before listen events.\n    processUserCallback(syncEngineImpl, batchId, /*error=*/ null);\n    triggerPendingWritesCallbacks(syncEngineImpl, batchId);\n\n    syncEngineImpl.sharedClientState.updateMutationState(\n      batchId,\n      'acknowledged'\n    );\n    await syncEngineEmitNewSnapsAndNotifyLocalStore(syncEngineImpl, changes);\n  } catch (error) {\n    await ignoreIfPrimaryLeaseLoss(error as FirestoreError);\n  }\n}\n\nexport async function syncEngineRejectFailedWrite(\n  syncEngine: SyncEngine,\n  batchId: BatchId,\n  error: FirestoreError\n): Promise<void> {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n\n  try {\n    const changes = await localStoreRejectBatch(\n      syncEngineImpl.localStore,\n      batchId\n    );\n\n    // The local store may or may not be able to apply the write result and\n    // raise events immediately (depending on whether the watcher is caught up),\n    // so we raise user callbacks first so that they consistently happen before\n    // listen events.\n    processUserCallback(syncEngineImpl, batchId, error);\n    triggerPendingWritesCallbacks(syncEngineImpl, batchId);\n\n    syncEngineImpl.sharedClientState.updateMutationState(\n      batchId,\n      'rejected',\n      error\n    );\n    await syncEngineEmitNewSnapsAndNotifyLocalStore(syncEngineImpl, changes);\n  } catch (error) {\n    await ignoreIfPrimaryLeaseLoss(error as FirestoreError);\n  }\n}\n\n/**\n * Registers a user callback that resolves when all pending mutations at the moment of calling\n * are acknowledged .\n */\nexport async function syncEngineRegisterPendingWritesCallback(\n  syncEngine: SyncEngine,\n  callback: Deferred<void>\n): Promise<void> {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  if (!canUseNetwork(syncEngineImpl.remoteStore)) {\n    logDebug(\n      LOG_TAG,\n      'The network is disabled. The task returned by ' +\n        \"'awaitPendingWrites()' will not complete until the network is enabled.\"\n    );\n  }\n\n  try {\n    const highestBatchId = await localStoreGetHighestUnacknowledgedBatchId(\n      syncEngineImpl.localStore\n    );\n    if (highestBatchId === BATCHID_UNKNOWN) {\n      // Trigger the callback right away if there is no pending writes at the moment.\n      callback.resolve();\n      return;\n    }\n\n    const callbacks =\n      syncEngineImpl.pendingWritesCallbacks.get(highestBatchId) || [];\n    callbacks.push(callback);\n    syncEngineImpl.pendingWritesCallbacks.set(highestBatchId, callbacks);\n  } catch (e) {\n    const firestoreError = wrapInUserErrorIfRecoverable(\n      e as Error,\n      'Initialization of waitForPendingWrites() operation failed'\n    );\n    callback.reject(firestoreError);\n  }\n}\n\n/**\n * Triggers the callbacks that are waiting for this batch id to get acknowledged by server,\n * if there are any.\n */\nfunction triggerPendingWritesCallbacks(\n  syncEngineImpl: SyncEngineImpl,\n  batchId: BatchId\n): void {\n  (syncEngineImpl.pendingWritesCallbacks.get(batchId) || []).forEach(\n    callback => {\n      callback.resolve();\n    }\n  );\n\n  syncEngineImpl.pendingWritesCallbacks.delete(batchId);\n}\n\n/** Reject all outstanding callbacks waiting for pending writes to complete. */\nfunction rejectOutstandingPendingWritesCallbacks(\n  syncEngineImpl: SyncEngineImpl,\n  errorMessage: string\n): void {\n  syncEngineImpl.pendingWritesCallbacks.forEach(callbacks => {\n    callbacks.forEach(callback => {\n      callback.reject(new FirestoreError(Code.CANCELLED, errorMessage));\n    });\n  });\n\n  syncEngineImpl.pendingWritesCallbacks.clear();\n}\n\nfunction addMutationCallback(\n  syncEngineImpl: SyncEngineImpl,\n  batchId: BatchId,\n  callback: Deferred<void>\n): void {\n  let newCallbacks =\n    syncEngineImpl.mutationUserCallbacks[syncEngineImpl.currentUser.toKey()];\n  if (!newCallbacks) {\n    newCallbacks = new SortedMap<BatchId, Deferred<void>>(primitiveComparator);\n  }\n  newCallbacks = newCallbacks.insert(batchId, callback);\n  syncEngineImpl.mutationUserCallbacks[syncEngineImpl.currentUser.toKey()] =\n    newCallbacks;\n}\n\n/**\n * Resolves or rejects the user callback for the given batch and then discards\n * it.\n */\nfunction processUserCallback(\n  syncEngine: SyncEngine,\n  batchId: BatchId,\n  error: FirestoreError | null\n): void {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  let newCallbacks =\n    syncEngineImpl.mutationUserCallbacks[syncEngineImpl.currentUser.toKey()];\n\n  // NOTE: Mutations restored from persistence won't have callbacks, so it's\n  // okay for there to be no callback for this ID.\n  if (newCallbacks) {\n    const callback = newCallbacks.get(batchId);\n    if (callback) {\n      debugAssert(\n        batchId === newCallbacks.minKey(),\n        'Mutation callbacks processed out-of-order?'\n      );\n      if (error) {\n        callback.reject(error);\n      } else {\n        callback.resolve();\n      }\n      newCallbacks = newCallbacks.remove(batchId);\n    }\n    syncEngineImpl.mutationUserCallbacks[syncEngineImpl.currentUser.toKey()] =\n      newCallbacks;\n  }\n}\n\nfunction removeAndCleanupTarget(\n  syncEngineImpl: SyncEngineImpl,\n  targetId: number,\n  error: FirestoreError | null = null\n): void {\n  syncEngineImpl.sharedClientState.removeLocalQueryTarget(targetId);\n\n  debugAssert(\n    syncEngineImpl.queriesByTarget.has(targetId) &&\n      syncEngineImpl.queriesByTarget.get(targetId)!.length !== 0,\n    `There are no queries mapped to target id ${targetId}`\n  );\n\n  for (const query of syncEngineImpl.queriesByTarget.get(targetId)!) {\n    syncEngineImpl.queryViewsByQuery.delete(query);\n    if (error) {\n      syncEngineImpl.syncEngineListener.onWatchError!(query, error);\n    }\n  }\n\n  syncEngineImpl.queriesByTarget.delete(targetId);\n\n  if (syncEngineImpl.isPrimaryClient) {\n    const limboKeys =\n      syncEngineImpl.limboDocumentRefs.removeReferencesForId(targetId);\n    limboKeys.forEach(limboKey => {\n      const isReferenced =\n        syncEngineImpl.limboDocumentRefs.containsKey(limboKey);\n      if (!isReferenced) {\n        // We removed the last reference for this key\n        removeLimboTarget(syncEngineImpl, limboKey);\n      }\n    });\n  }\n}\n\nfunction removeLimboTarget(\n  syncEngineImpl: SyncEngineImpl,\n  key: DocumentKey\n): void {\n  syncEngineImpl.enqueuedLimboResolutions.delete(key.path.canonicalString());\n\n  // It's possible that the target already got removed because the query failed. In that case,\n  // the key won't exist in `limboTargetsByKey`. Only do the cleanup if we still have the target.\n  const limboTargetId = syncEngineImpl.activeLimboTargetsByKey.get(key);\n  if (limboTargetId === null) {\n    // This target already got removed, because the query failed.\n    return;\n  }\n\n  remoteStoreUnlisten(syncEngineImpl.remoteStore, limboTargetId);\n  syncEngineImpl.activeLimboTargetsByKey =\n    syncEngineImpl.activeLimboTargetsByKey.remove(key);\n  syncEngineImpl.activeLimboResolutionsByTarget.delete(limboTargetId);\n  pumpEnqueuedLimboResolutions(syncEngineImpl);\n}\n\nfunction updateTrackedLimbos(\n  syncEngineImpl: SyncEngineImpl,\n  targetId: TargetId,\n  limboChanges: LimboDocumentChange[]\n): void {\n  for (const limboChange of limboChanges) {\n    if (limboChange instanceof AddedLimboDocument) {\n      syncEngineImpl.limboDocumentRefs.addReference(limboChange.key, targetId);\n      trackLimboChange(syncEngineImpl, limboChange);\n    } else if (limboChange instanceof RemovedLimboDocument) {\n      logDebug(LOG_TAG, 'Document no longer in limbo: ' + limboChange.key);\n      syncEngineImpl.limboDocumentRefs.removeReference(\n        limboChange.key,\n        targetId\n      );\n      const isReferenced = syncEngineImpl.limboDocumentRefs.containsKey(\n        limboChange.key\n      );\n      if (!isReferenced) {\n        // We removed the last reference for this key\n        removeLimboTarget(syncEngineImpl, limboChange.key);\n      }\n    } else {\n      fail('Unknown limbo change: ' + JSON.stringify(limboChange));\n    }\n  }\n}\n\nfunction trackLimboChange(\n  syncEngineImpl: SyncEngineImpl,\n  limboChange: AddedLimboDocument\n): void {\n  const key = limboChange.key;\n  const keyString = key.path.canonicalString();\n  if (\n    !syncEngineImpl.activeLimboTargetsByKey.get(key) &&\n    !syncEngineImpl.enqueuedLimboResolutions.has(keyString)\n  ) {\n    logDebug(LOG_TAG, 'New document in limbo: ' + key);\n    syncEngineImpl.enqueuedLimboResolutions.add(keyString);\n    pumpEnqueuedLimboResolutions(syncEngineImpl);\n  }\n}\n\n/**\n * Starts listens for documents in limbo that are enqueued for resolution,\n * subject to a maximum number of concurrent resolutions.\n *\n * Without bounding the number of concurrent resolutions, the server can fail\n * with \"resource exhausted\" errors which can lead to pathological client\n * behavior as seen in https://github.com/firebase/firebase-js-sdk/issues/2683.\n */\nfunction pumpEnqueuedLimboResolutions(syncEngineImpl: SyncEngineImpl): void {\n  while (\n    syncEngineImpl.enqueuedLimboResolutions.size > 0 &&\n    syncEngineImpl.activeLimboTargetsByKey.size <\n      syncEngineImpl.maxConcurrentLimboResolutions\n  ) {\n    const keyString = syncEngineImpl.enqueuedLimboResolutions\n      .values()\n      .next().value;\n    syncEngineImpl.enqueuedLimboResolutions.delete(keyString);\n    const key = new DocumentKey(ResourcePath.fromString(keyString));\n    const limboTargetId = syncEngineImpl.limboTargetIdGenerator.next();\n    syncEngineImpl.activeLimboResolutionsByTarget.set(\n      limboTargetId,\n      new LimboResolution(key)\n    );\n    syncEngineImpl.activeLimboTargetsByKey =\n      syncEngineImpl.activeLimboTargetsByKey.insert(key, limboTargetId);\n    remoteStoreListen(\n      syncEngineImpl.remoteStore,\n      new TargetData(\n        queryToTarget(newQueryForPath(key.path)),\n        limboTargetId,\n        TargetPurpose.LimboResolution,\n        ListenSequence.INVALID\n      )\n    );\n  }\n}\n\n// Visible for testing\nexport function syncEngineGetActiveLimboDocumentResolutions(\n  syncEngine: SyncEngine\n): SortedMap<DocumentKey, TargetId> {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  return syncEngineImpl.activeLimboTargetsByKey;\n}\n\n// Visible for testing\nexport function syncEngineGetEnqueuedLimboDocumentResolutions(\n  syncEngine: SyncEngine\n): Set<string> {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  return syncEngineImpl.enqueuedLimboResolutions;\n}\n\nexport async function syncEngineEmitNewSnapsAndNotifyLocalStore(\n  syncEngine: SyncEngine,\n  changes: DocumentMap,\n  remoteEvent?: RemoteEvent\n): Promise<void> {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  const newSnaps: ViewSnapshot[] = [];\n  const docChangesInAllViews: LocalViewChanges[] = [];\n  const queriesProcessed: Array<Promise<void>> = [];\n\n  if (syncEngineImpl.queryViewsByQuery.isEmpty()) {\n    // Return early since `onWatchChange()` might not have been assigned yet.\n    return;\n  }\n\n  syncEngineImpl.queryViewsByQuery.forEach((_, queryView) => {\n    debugAssert(\n      !!syncEngineImpl.applyDocChanges,\n      'ApplyDocChangesHandler not set'\n    );\n    queriesProcessed.push(\n      syncEngineImpl\n        .applyDocChanges(queryView, changes, remoteEvent)\n        .then(viewSnapshot => {\n          // If there are changes, or we are handling a global snapshot, notify\n          // secondary clients to update query state.\n          if (viewSnapshot || remoteEvent) {\n            if (syncEngineImpl.isPrimaryClient) {\n              syncEngineImpl.sharedClientState.updateQueryState(\n                queryView.targetId,\n                viewSnapshot?.fromCache ? 'not-current' : 'current'\n              );\n            }\n          }\n\n          // Update views if there are actual changes.\n          if (!!viewSnapshot) {\n            newSnaps.push(viewSnapshot);\n            const docChanges = LocalViewChanges.fromSnapshot(\n              queryView.targetId,\n              viewSnapshot\n            );\n            docChangesInAllViews.push(docChanges);\n          }\n        })\n    );\n  });\n\n  await Promise.all(queriesProcessed);\n  syncEngineImpl.syncEngineListener.onWatchChange!(newSnaps);\n  await localStoreNotifyLocalViewChanges(\n    syncEngineImpl.localStore,\n    docChangesInAllViews\n  );\n}\n\nasync function applyDocChanges(\n  syncEngineImpl: SyncEngineImpl,\n  queryView: QueryView,\n  changes: DocumentMap,\n  remoteEvent?: RemoteEvent\n): Promise<ViewSnapshot | undefined> {\n  let viewDocChanges = queryView.view.computeDocChanges(changes);\n  if (viewDocChanges.needsRefill) {\n    // The query has a limit and some docs were removed, so we need\n    // to re-run the query against the local store to make sure we\n    // didn't lose any good docs that had been past the limit.\n    viewDocChanges = await localStoreExecuteQuery(\n      syncEngineImpl.localStore,\n      queryView.query,\n      /* usePreviousResults= */ false\n    ).then(({ documents }) => {\n      return queryView.view.computeDocChanges(documents, viewDocChanges);\n    });\n  }\n\n  const targetChange =\n    remoteEvent && remoteEvent.targetChanges.get(queryView.targetId);\n  const targetIsPendingReset =\n    remoteEvent && remoteEvent.targetMismatches.get(queryView.targetId) != null;\n  const viewChange = queryView.view.applyChanges(\n    viewDocChanges,\n    /* limboResolutionEnabled= */ syncEngineImpl.isPrimaryClient,\n    targetChange,\n    targetIsPendingReset\n  );\n  updateTrackedLimbos(\n    syncEngineImpl,\n    queryView.targetId,\n    viewChange.limboChanges\n  );\n  return viewChange.snapshot;\n}\n\nexport async function syncEngineHandleCredentialChange(\n  syncEngine: SyncEngine,\n  user: User\n): Promise<void> {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  const userChanged = !syncEngineImpl.currentUser.isEqual(user);\n\n  if (userChanged) {\n    logDebug(LOG_TAG, 'User change. New user:', user.toKey());\n\n    const result = await localStoreHandleUserChange(\n      syncEngineImpl.localStore,\n      user\n    );\n    syncEngineImpl.currentUser = user;\n\n    // Fails tasks waiting for pending writes requested by previous user.\n    rejectOutstandingPendingWritesCallbacks(\n      syncEngineImpl,\n      \"'waitForPendingWrites' promise is rejected due to a user change.\"\n    );\n    // TODO(b/114226417): Consider calling this only in the primary tab.\n    syncEngineImpl.sharedClientState.handleUserChange(\n      user,\n      result.removedBatchIds,\n      result.addedBatchIds\n    );\n    await syncEngineEmitNewSnapsAndNotifyLocalStore(\n      syncEngineImpl,\n      result.affectedDocuments\n    );\n  }\n}\n\nexport function syncEngineGetRemoteKeysForTarget(\n  syncEngine: SyncEngine,\n  targetId: TargetId\n): DocumentKeySet {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  const limboResolution =\n    syncEngineImpl.activeLimboResolutionsByTarget.get(targetId);\n  if (limboResolution && limboResolution.receivedDocument) {\n    return documentKeySet().add(limboResolution.key);\n  } else {\n    let keySet = documentKeySet();\n    const queries = syncEngineImpl.queriesByTarget.get(targetId);\n    if (!queries) {\n      return keySet;\n    }\n    for (const query of queries) {\n      const queryView = syncEngineImpl.queryViewsByQuery.get(query);\n      debugAssert(\n        !!queryView,\n        `No query view found for ${stringifyQuery(query)}`\n      );\n      keySet = keySet.unionWith(queryView.view.syncedDocuments);\n    }\n    return keySet;\n  }\n}\n\n/**\n * Reconcile the list of synced documents in an existing view with those\n * from persistence.\n */\nasync function synchronizeViewAndComputeSnapshot(\n  syncEngine: SyncEngine,\n  queryView: QueryView\n): Promise<ViewChange> {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  const queryResult = await localStoreExecuteQuery(\n    syncEngineImpl.localStore,\n    queryView.query,\n    /* usePreviousResults= */ true\n  );\n  const viewSnapshot =\n    queryView.view.synchronizeWithPersistedState(queryResult);\n  if (syncEngineImpl.isPrimaryClient) {\n    updateTrackedLimbos(\n      syncEngineImpl,\n      queryView.targetId,\n      viewSnapshot.limboChanges\n    );\n  }\n  return viewSnapshot;\n}\n\n/**\n * Retrieves newly changed documents from remote document cache and raises\n * snapshots if needed.\n */\n// PORTING NOTE: Multi-Tab only.\nexport async function syncEngineSynchronizeWithChangedDocuments(\n  syncEngine: SyncEngine,\n  collectionGroup: string\n): Promise<void> {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n\n  return localStoreGetNewDocumentChanges(\n    syncEngineImpl.localStore,\n    collectionGroup\n  ).then(changes =>\n    syncEngineEmitNewSnapsAndNotifyLocalStore(syncEngineImpl, changes)\n  );\n}\n\n/** Applies a mutation state to an existing batch.  */\n// PORTING NOTE: Multi-Tab only.\nexport async function syncEngineApplyBatchState(\n  syncEngine: SyncEngine,\n  batchId: BatchId,\n  batchState: MutationBatchState,\n  error?: FirestoreError\n): Promise<void> {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  const documents = await localStoreLookupMutationDocuments(\n    syncEngineImpl.localStore,\n    batchId\n  );\n\n  if (documents === null) {\n    // A throttled tab may not have seen the mutation before it was completed\n    // and removed from the mutation queue, in which case we won't have cached\n    // the affected documents. In this case we can safely ignore the update\n    // since that means we didn't apply the mutation locally at all (if we\n    // had, we would have cached the affected documents), and so we will just\n    // see any resulting document changes via normal remote document updates\n    // as applicable.\n    logDebug(LOG_TAG, 'Cannot apply mutation batch with id: ' + batchId);\n    return;\n  }\n\n  if (batchState === 'pending') {\n    // If we are the primary client, we need to send this write to the\n    // backend. Secondary clients will ignore these writes since their remote\n    // connection is disabled.\n    await fillWritePipeline(syncEngineImpl.remoteStore);\n  } else if (batchState === 'acknowledged' || batchState === 'rejected') {\n    // NOTE: Both these methods are no-ops for batches that originated from\n    // other clients.\n    processUserCallback(syncEngineImpl, batchId, error ? error : null);\n    triggerPendingWritesCallbacks(syncEngineImpl, batchId);\n    localStoreRemoveCachedMutationBatchMetadata(\n      syncEngineImpl.localStore,\n      batchId\n    );\n  } else {\n    fail(`Unknown batchState: ${batchState}`);\n  }\n\n  await syncEngineEmitNewSnapsAndNotifyLocalStore(syncEngineImpl, documents);\n}\n\n/** Applies a query target change from a different tab. */\n// PORTING NOTE: Multi-Tab only.\nexport async function syncEngineApplyPrimaryState(\n  syncEngine: SyncEngine,\n  isPrimary: boolean\n): Promise<void> {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  ensureWatchCallbacks(syncEngineImpl);\n  syncEngineEnsureWriteCallbacks(syncEngineImpl);\n  if (isPrimary === true && syncEngineImpl._isPrimaryClient !== true) {\n    // Secondary tabs only maintain Views for their local listeners and the\n    // Views internal state may not be 100% populated (in particular\n    // secondary tabs don't track syncedDocuments, the set of documents the\n    // server considers to be in the target). So when a secondary becomes\n    // primary, we need to need to make sure that all views for all targets\n    // match the state on disk.\n    const activeTargets =\n      syncEngineImpl.sharedClientState.getAllActiveQueryTargets();\n    const activeQueries = await synchronizeQueryViewsAndRaiseSnapshots(\n      syncEngineImpl,\n      activeTargets.toArray(),\n      /*transitionToPrimary=*/ true\n    );\n    syncEngineImpl._isPrimaryClient = true;\n    await remoteStoreApplyPrimaryState(syncEngineImpl.remoteStore, true);\n    for (const targetData of activeQueries) {\n      remoteStoreListen(syncEngineImpl.remoteStore, targetData);\n    }\n  } else if (isPrimary === false && syncEngineImpl._isPrimaryClient !== false) {\n    const activeTargets: TargetId[] = [];\n\n    let p = Promise.resolve();\n    syncEngineImpl.queriesByTarget.forEach((_, targetId) => {\n      if (syncEngineImpl.sharedClientState.isLocalQueryTarget(targetId)) {\n        activeTargets.push(targetId);\n      } else {\n        p = p.then(() => {\n          removeAndCleanupTarget(syncEngineImpl, targetId);\n          return localStoreReleaseTarget(\n            syncEngineImpl.localStore,\n            targetId,\n            /*keepPersistedTargetData=*/ true\n          );\n        });\n      }\n      remoteStoreUnlisten(syncEngineImpl.remoteStore, targetId);\n    });\n    await p;\n\n    await synchronizeQueryViewsAndRaiseSnapshots(\n      syncEngineImpl,\n      activeTargets,\n      /*transitionToPrimary=*/ false\n    );\n    resetLimboDocuments(syncEngineImpl);\n    syncEngineImpl._isPrimaryClient = false;\n    await remoteStoreApplyPrimaryState(syncEngineImpl.remoteStore, false);\n  }\n}\n\n// PORTING NOTE: Multi-Tab only.\nfunction resetLimboDocuments(syncEngine: SyncEngine): void {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  syncEngineImpl.activeLimboResolutionsByTarget.forEach((_, targetId) => {\n    remoteStoreUnlisten(syncEngineImpl.remoteStore, targetId);\n  });\n  syncEngineImpl.limboDocumentRefs.removeAllReferences();\n  syncEngineImpl.activeLimboResolutionsByTarget = new Map<\n    TargetId,\n    LimboResolution\n  >();\n  syncEngineImpl.activeLimboTargetsByKey = new SortedMap<DocumentKey, TargetId>(\n    DocumentKey.comparator\n  );\n}\n\n/**\n * Reconcile the query views of the provided query targets with the state from\n * persistence. Raises snapshots for any changes that affect the local\n * client and returns the updated state of all target's query data.\n *\n * @param syncEngine - The sync engine implementation\n * @param targets - the list of targets with views that need to be recomputed\n * @param transitionToPrimary - `true` iff the tab transitions from a secondary\n * tab to a primary tab\n */\n// PORTING NOTE: Multi-Tab only.\nasync function synchronizeQueryViewsAndRaiseSnapshots(\n  syncEngine: SyncEngine,\n  targets: TargetId[],\n  transitionToPrimary: boolean\n): Promise<TargetData[]> {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  const activeQueries: TargetData[] = [];\n  const newViewSnapshots: ViewSnapshot[] = [];\n  for (const targetId of targets) {\n    let targetData: TargetData;\n    const queries = syncEngineImpl.queriesByTarget.get(targetId);\n\n    if (queries && queries.length !== 0) {\n      // For queries that have a local View, we fetch their current state\n      // from LocalStore (as the resume token and the snapshot version\n      // might have changed) and reconcile their views with the persisted\n      // state (the list of syncedDocuments may have gotten out of sync).\n      targetData = await localStoreAllocateTarget(\n        syncEngineImpl.localStore,\n        queryToTarget(queries[0])\n      );\n\n      for (const query of queries) {\n        const queryView = syncEngineImpl.queryViewsByQuery.get(query);\n        debugAssert(\n          !!queryView,\n          `No query view found for ${stringifyQuery(query)}`\n        );\n\n        const viewChange = await synchronizeViewAndComputeSnapshot(\n          syncEngineImpl,\n          queryView\n        );\n        if (viewChange.snapshot) {\n          newViewSnapshots.push(viewChange.snapshot);\n        }\n      }\n    } else {\n      debugAssert(\n        transitionToPrimary,\n        'A secondary tab should never have an active view without an active target.'\n      );\n      // For queries that never executed on this client, we need to\n      // allocate the target in LocalStore and initialize a new View.\n      const target = await localStoreGetCachedTarget(\n        syncEngineImpl.localStore,\n        targetId\n      );\n      debugAssert(!!target, `Target for id ${targetId} not found`);\n      targetData = await localStoreAllocateTarget(\n        syncEngineImpl.localStore,\n        target\n      );\n      await initializeViewAndComputeSnapshot(\n        syncEngineImpl,\n        synthesizeTargetToQuery(target!),\n        targetId,\n        /*current=*/ false,\n        targetData.resumeToken\n      );\n    }\n\n    activeQueries.push(targetData!);\n  }\n\n  syncEngineImpl.syncEngineListener.onWatchChange!(newViewSnapshots);\n  return activeQueries;\n}\n\n/**\n * Creates a `Query` object from the specified `Target`. There is no way to\n * obtain the original `Query`, so we synthesize a `Query` from the `Target`\n * object.\n *\n * The synthesized result might be different from the original `Query`, but\n * since the synthesized `Query` should return the same results as the\n * original one (only the presentation of results might differ), the potential\n * difference will not cause issues.\n */\n// PORTING NOTE: Multi-Tab only.\nfunction synthesizeTargetToQuery(target: Target): Query {\n  return newQuery(\n    target.path,\n    target.collectionGroup,\n    target.orderBy,\n    target.filters,\n    target.limit,\n    LimitType.First,\n    target.startAt,\n    target.endAt\n  );\n}\n\n/** Returns the IDs of the clients that are currently active. */\n// PORTING NOTE: Multi-Tab only.\nexport function syncEngineGetActiveClients(\n  syncEngine: SyncEngine\n): Promise<ClientId[]> {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  return localStoreGetActiveClients(syncEngineImpl.localStore);\n}\n\n/** Applies a query target change from a different tab. */\n// PORTING NOTE: Multi-Tab only.\nexport async function syncEngineApplyTargetState(\n  syncEngine: SyncEngine,\n  targetId: TargetId,\n  state: QueryTargetState,\n  error?: FirestoreError\n): Promise<void> {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  if (syncEngineImpl._isPrimaryClient) {\n    // If we receive a target state notification via WebStorage, we are\n    // either already secondary or another tab has taken the primary lease.\n    logDebug(LOG_TAG, 'Ignoring unexpected query state notification.');\n    return;\n  }\n\n  const query = syncEngineImpl.queriesByTarget.get(targetId);\n  if (query && query.length > 0) {\n    switch (state) {\n      case 'current':\n      case 'not-current': {\n        const changes = await localStoreGetNewDocumentChanges(\n          syncEngineImpl.localStore,\n          queryCollectionGroup(query[0])\n        );\n        const synthesizedRemoteEvent =\n          RemoteEvent.createSynthesizedRemoteEventForCurrentChange(\n            targetId,\n            state === 'current',\n            ByteString.EMPTY_BYTE_STRING\n          );\n        await syncEngineEmitNewSnapsAndNotifyLocalStore(\n          syncEngineImpl,\n          changes,\n          synthesizedRemoteEvent\n        );\n        break;\n      }\n      case 'rejected': {\n        await localStoreReleaseTarget(\n          syncEngineImpl.localStore,\n          targetId,\n          /* keepPersistedTargetData */ true\n        );\n        removeAndCleanupTarget(syncEngineImpl, targetId, error);\n        break;\n      }\n      default:\n        fail('Unexpected target state: ' + state);\n    }\n  }\n}\n\n/** Adds or removes Watch targets for queries from different tabs. */\nexport async function syncEngineApplyActiveTargetsChange(\n  syncEngine: SyncEngine,\n  added: TargetId[],\n  removed: TargetId[]\n): Promise<void> {\n  const syncEngineImpl = ensureWatchCallbacks(syncEngine);\n  if (!syncEngineImpl._isPrimaryClient) {\n    return;\n  }\n\n  for (const targetId of added) {\n    // A target is already listening to remote store if it is already registered to\n    // sharedClientState.\n    const targetAlreadyListeningToRemoteStore =\n      syncEngineImpl.queriesByTarget.has(targetId) &&\n      syncEngineImpl.sharedClientState.isActiveQueryTarget(targetId);\n    if (targetAlreadyListeningToRemoteStore) {\n      logDebug(LOG_TAG, 'Adding an already active target ' + targetId);\n      continue;\n    }\n\n    const target = await localStoreGetCachedTarget(\n      syncEngineImpl.localStore,\n      targetId\n    );\n    debugAssert(!!target, `Query data for active target ${targetId} not found`);\n    const targetData = await localStoreAllocateTarget(\n      syncEngineImpl.localStore,\n      target\n    );\n    await initializeViewAndComputeSnapshot(\n      syncEngineImpl,\n      synthesizeTargetToQuery(target),\n      targetData.targetId,\n      /*current=*/ false,\n      targetData.resumeToken\n    );\n    remoteStoreListen(syncEngineImpl.remoteStore, targetData);\n  }\n\n  for (const targetId of removed) {\n    // Check that the target is still active since the target might have been\n    // removed if it has been rejected by the backend.\n    if (!syncEngineImpl.queriesByTarget.has(targetId)) {\n      continue;\n    }\n\n    // Release queries that are still active.\n    await localStoreReleaseTarget(\n      syncEngineImpl.localStore,\n      targetId,\n      /* keepPersistedTargetData */ false\n    )\n      .then(() => {\n        remoteStoreUnlisten(syncEngineImpl.remoteStore, targetId);\n        removeAndCleanupTarget(syncEngineImpl, targetId);\n      })\n      .catch(ignoreIfPrimaryLeaseLoss);\n  }\n}\n\nfunction ensureWatchCallbacks(syncEngine: SyncEngine): SyncEngineImpl {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  syncEngineImpl.remoteStore.remoteSyncer.applyRemoteEvent =\n    syncEngineApplyRemoteEvent.bind(null, syncEngineImpl);\n  syncEngineImpl.remoteStore.remoteSyncer.getRemoteKeysForTarget =\n    syncEngineGetRemoteKeysForTarget.bind(null, syncEngineImpl);\n  syncEngineImpl.remoteStore.remoteSyncer.rejectListen =\n    syncEngineRejectListen.bind(null, syncEngineImpl);\n  syncEngineImpl.syncEngineListener.onWatchChange =\n    eventManagerOnWatchChange.bind(null, syncEngineImpl.eventManager);\n  syncEngineImpl.syncEngineListener.onWatchError =\n    eventManagerOnWatchError.bind(null, syncEngineImpl.eventManager);\n  return syncEngineImpl;\n}\n\nexport function syncEngineEnsureWriteCallbacks(\n  syncEngine: SyncEngine\n): SyncEngineImpl {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n  syncEngineImpl.remoteStore.remoteSyncer.applySuccessfulWrite =\n    syncEngineApplySuccessfulWrite.bind(null, syncEngineImpl);\n  syncEngineImpl.remoteStore.remoteSyncer.rejectFailedWrite =\n    syncEngineRejectFailedWrite.bind(null, syncEngineImpl);\n  return syncEngineImpl;\n}\n\n/**\n * Loads a Firestore bundle into the SDK. The returned promise resolves when\n * the bundle finished loading.\n *\n * @param syncEngine - SyncEngine to use.\n * @param bundleReader - Bundle to load into the SDK.\n * @param task - LoadBundleTask used to update the loading progress to public API.\n */\nexport function syncEngineLoadBundle(\n  syncEngine: SyncEngine,\n  bundleReader: BundleReader,\n  task: LoadBundleTask\n): void {\n  const syncEngineImpl = debugCast(syncEngine, SyncEngineImpl);\n\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  loadBundleImpl(syncEngineImpl, bundleReader, task).then(collectionGroups => {\n    syncEngineImpl.sharedClientState.notifyBundleLoaded(collectionGroups);\n  });\n}\n\n/** Loads a bundle and returns the list of affected collection groups. */\nasync function loadBundleImpl(\n  syncEngine: SyncEngineImpl,\n  reader: BundleReader,\n  task: LoadBundleTask\n): Promise<Set<string>> {\n  try {\n    const metadata = await reader.getMetadata();\n    const skip = await localStoreHasNewerBundle(\n      syncEngine.localStore,\n      metadata\n    );\n    if (skip) {\n      await reader.close();\n      task._completeWith(bundleSuccessProgress(metadata));\n      return Promise.resolve(new Set<string>());\n    }\n\n    task._updateProgress(bundleInitialProgress(metadata));\n\n    const loader = new BundleLoader(\n      metadata,\n      syncEngine.localStore,\n      reader.serializer\n    );\n    let element = await reader.nextElement();\n    while (element) {\n      debugAssert(\n        !element.payload.metadata,\n        'Unexpected BundleMetadata element.'\n      );\n      const progress = await loader.addSizedElement(element);\n      if (progress) {\n        task._updateProgress(progress);\n      }\n\n      element = await reader.nextElement();\n    }\n\n    const result = await loader.complete();\n    await syncEngineEmitNewSnapsAndNotifyLocalStore(\n      syncEngine,\n      result.changedDocs,\n      /* remoteEvent */ undefined\n    );\n\n    // Save metadata, so loading the same bundle will skip.\n    await localStoreSaveBundle(syncEngine.localStore, metadata);\n    task._completeWith(result.progress);\n    return Promise.resolve(result.changedCollectionGroups);\n  } catch (e) {\n    logWarn(LOG_TAG, `Loading bundle failed with ${e}`);\n    task._failWith(e as FirestoreError);\n    return Promise.resolve(new Set<string>());\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CredentialsProvider } from '../api/credentials';\nimport { User } from '../auth/user';\nimport {\n  IndexBackfiller,\n  IndexBackfillerScheduler\n} from '../local/index_backfiller';\nimport {\n  indexedDbStoragePrefix,\n  IndexedDbPersistence\n} from '../local/indexeddb_persistence';\nimport { LocalStore } from '../local/local_store';\nimport { newLocalStore } from '../local/local_store_impl';\nimport { LruParams } from '../local/lru_garbage_collector';\nimport { LruScheduler } from '../local/lru_garbage_collector_impl';\nimport {\n  MemoryEagerDelegate,\n  MemoryLruDelegate,\n  MemoryPersistence\n} from '../local/memory_persistence';\nimport { Scheduler, Persistence } from '../local/persistence';\nimport { QueryEngine } from '../local/query_engine';\nimport {\n  ClientId,\n  MemorySharedClientState,\n  SharedClientState,\n  WebStorageSharedClientState\n} from '../local/shared_client_state';\nimport { newConnection, newConnectivityMonitor } from '../platform/connection';\nimport { getDocument, getWindow } from '../platform/dom';\nimport { newSerializer } from '../platform/serializer';\nimport { Datastore, newDatastore } from '../remote/datastore';\nimport {\n  fillWritePipeline,\n  newRemoteStore,\n  RemoteStore,\n  remoteStoreApplyPrimaryState,\n  remoteStoreShutdown\n} from '../remote/remote_store';\nimport { JsonProtoSerializer } from '../remote/serializer';\nimport { hardAssert } from '../util/assert';\nimport { AsyncQueue } from '../util/async_queue';\nimport { Code, FirestoreError } from '../util/error';\n\nimport { DatabaseInfo } from './database_info';\nimport { EventManager, newEventManager } from './event_manager';\nimport { SyncEngine } from './sync_engine';\nimport {\n  newSyncEngine,\n  syncEngineApplyActiveTargetsChange,\n  syncEngineApplyBatchState,\n  syncEngineApplyOnlineStateChange,\n  syncEngineApplyPrimaryState,\n  syncEngineApplyTargetState,\n  syncEngineEnsureWriteCallbacks,\n  syncEngineGetActiveClients,\n  syncEngineHandleCredentialChange,\n  syncEngineSynchronizeWithChangedDocuments\n} from './sync_engine_impl';\nimport { OnlineStateSource } from './types';\n\nexport interface ComponentConfiguration {\n  asyncQueue: AsyncQueue;\n  databaseInfo: DatabaseInfo;\n  authCredentials: CredentialsProvider<User>;\n  appCheckCredentials: CredentialsProvider<string>;\n  clientId: ClientId;\n  initialUser: User;\n  maxConcurrentLimboResolutions: number;\n}\n\n/**\n * Initializes and wires components that are needed to interface with the local\n * cache. Implementations override `initialize()` to provide all components.\n */\nexport interface OfflineComponentProvider {\n  persistence: Persistence;\n  sharedClientState: SharedClientState;\n  localStore: LocalStore;\n  gcScheduler: Scheduler | null;\n  indexBackfillerScheduler: Scheduler | null;\n  synchronizeTabs: boolean;\n\n  initialize(cfg: ComponentConfiguration): Promise<void>;\n\n  terminate(): Promise<void>;\n}\n\n/**\n * Provides all components needed for Firestore with in-memory persistence.\n * Uses EagerGC garbage collection.\n */\nexport class MemoryOfflineComponentProvider\n  implements OfflineComponentProvider\n{\n  persistence!: Persistence;\n  sharedClientState!: SharedClientState;\n  localStore!: LocalStore;\n  gcScheduler!: Scheduler | null;\n  indexBackfillerScheduler!: Scheduler | null;\n  synchronizeTabs = false;\n\n  serializer!: JsonProtoSerializer;\n\n  async initialize(cfg: ComponentConfiguration): Promise<void> {\n    this.serializer = newSerializer(cfg.databaseInfo.databaseId);\n    this.sharedClientState = this.createSharedClientState(cfg);\n    this.persistence = this.createPersistence(cfg);\n    await this.persistence.start();\n    this.localStore = this.createLocalStore(cfg);\n    this.gcScheduler = this.createGarbageCollectionScheduler(\n      cfg,\n      this.localStore\n    );\n    this.indexBackfillerScheduler = this.createIndexBackfillerScheduler(\n      cfg,\n      this.localStore\n    );\n  }\n\n  createGarbageCollectionScheduler(\n    cfg: ComponentConfiguration,\n    localStore: LocalStore\n  ): Scheduler | null {\n    return null;\n  }\n\n  createIndexBackfillerScheduler(\n    cfg: ComponentConfiguration,\n    localStore: LocalStore\n  ): Scheduler | null {\n    return null;\n  }\n\n  createLocalStore(cfg: ComponentConfiguration): LocalStore {\n    return newLocalStore(\n      this.persistence,\n      new QueryEngine(),\n      cfg.initialUser,\n      this.serializer\n    );\n  }\n\n  createPersistence(cfg: ComponentConfiguration): Persistence {\n    return new MemoryPersistence(MemoryEagerDelegate.factory, this.serializer);\n  }\n\n  createSharedClientState(cfg: ComponentConfiguration): SharedClientState {\n    return new MemorySharedClientState();\n  }\n\n  async terminate(): Promise<void> {\n    this.gcScheduler?.stop();\n    this.indexBackfillerScheduler?.stop();\n    this.sharedClientState.shutdown();\n    await this.persistence.shutdown();\n  }\n}\n\nexport class LruGcMemoryOfflineComponentProvider extends MemoryOfflineComponentProvider {\n  constructor(protected readonly cacheSizeBytes: number | undefined) {\n    super();\n  }\n\n  createGarbageCollectionScheduler(\n    cfg: ComponentConfiguration,\n    localStore: LocalStore\n  ): Scheduler | null {\n    hardAssert(\n      this.persistence.referenceDelegate instanceof MemoryLruDelegate,\n      'referenceDelegate is expected to be an instance of MemoryLruDelegate.'\n    );\n\n    const garbageCollector =\n      this.persistence.referenceDelegate.garbageCollector;\n    return new LruScheduler(garbageCollector, cfg.asyncQueue, localStore);\n  }\n\n  createPersistence(cfg: ComponentConfiguration): Persistence {\n    const lruParams =\n      this.cacheSizeBytes !== undefined\n        ? LruParams.withCacheSize(this.cacheSizeBytes)\n        : LruParams.DEFAULT;\n    return new MemoryPersistence(\n      p => MemoryLruDelegate.factory(p, lruParams),\n      this.serializer\n    );\n  }\n}\n\n/**\n * Provides all components needed for Firestore with IndexedDB persistence.\n */\nexport class IndexedDbOfflineComponentProvider extends MemoryOfflineComponentProvider {\n  persistence!: IndexedDbPersistence;\n  sharedClientState!: SharedClientState;\n  localStore!: LocalStore;\n  gcScheduler!: Scheduler | null;\n  indexBackfillerScheduler!: Scheduler | null;\n  synchronizeTabs = false;\n\n  constructor(\n    protected readonly onlineComponentProvider: OnlineComponentProvider,\n    protected readonly cacheSizeBytes: number | undefined,\n    protected readonly forceOwnership: boolean | undefined\n  ) {\n    super();\n  }\n\n  async initialize(cfg: ComponentConfiguration): Promise<void> {\n    await super.initialize(cfg);\n\n    await this.onlineComponentProvider.initialize(this, cfg);\n\n    // Enqueue writes from a previous session\n    await syncEngineEnsureWriteCallbacks(\n      this.onlineComponentProvider.syncEngine\n    );\n    await fillWritePipeline(this.onlineComponentProvider.remoteStore);\n\n    // NOTE: This will immediately call the listener, so we make sure to\n    // set it after localStore / remoteStore are started.\n    await this.persistence.setPrimaryStateListener(() => {\n      if (this.gcScheduler && !this.gcScheduler.started) {\n        this.gcScheduler.start();\n      }\n      if (\n        this.indexBackfillerScheduler &&\n        !this.indexBackfillerScheduler.started\n      ) {\n        this.indexBackfillerScheduler.start();\n      }\n      return Promise.resolve();\n    });\n  }\n\n  createLocalStore(cfg: ComponentConfiguration): LocalStore {\n    return newLocalStore(\n      this.persistence,\n      new QueryEngine(),\n      cfg.initialUser,\n      this.serializer\n    );\n  }\n\n  createGarbageCollectionScheduler(\n    cfg: ComponentConfiguration,\n    localStore: LocalStore\n  ): Scheduler | null {\n    const garbageCollector =\n      this.persistence.referenceDelegate.garbageCollector;\n    return new LruScheduler(garbageCollector, cfg.asyncQueue, localStore);\n  }\n\n  createIndexBackfillerScheduler(\n    cfg: ComponentConfiguration,\n    localStore: LocalStore\n  ): Scheduler | null {\n    const indexBackfiller = new IndexBackfiller(localStore, this.persistence);\n    return new IndexBackfillerScheduler(cfg.asyncQueue, indexBackfiller);\n  }\n\n  createPersistence(cfg: ComponentConfiguration): IndexedDbPersistence {\n    const persistenceKey = indexedDbStoragePrefix(\n      cfg.databaseInfo.databaseId,\n      cfg.databaseInfo.persistenceKey\n    );\n    const lruParams =\n      this.cacheSizeBytes !== undefined\n        ? LruParams.withCacheSize(this.cacheSizeBytes)\n        : LruParams.DEFAULT;\n\n    return new IndexedDbPersistence(\n      this.synchronizeTabs,\n      persistenceKey,\n      cfg.clientId,\n      lruParams,\n      cfg.asyncQueue,\n      getWindow(),\n      getDocument(),\n      this.serializer,\n      this.sharedClientState,\n      !!this.forceOwnership\n    );\n  }\n\n  createSharedClientState(cfg: ComponentConfiguration): SharedClientState {\n    return new MemorySharedClientState();\n  }\n}\n\n/**\n * Provides all components needed for Firestore with multi-tab IndexedDB\n * persistence.\n *\n * In the legacy client, this provider is used to provide both multi-tab and\n * non-multi-tab persistence since we cannot tell at build time whether\n * `synchronizeTabs` will be enabled.\n */\nexport class MultiTabOfflineComponentProvider extends IndexedDbOfflineComponentProvider {\n  synchronizeTabs = true;\n\n  constructor(\n    protected readonly onlineComponentProvider: OnlineComponentProvider,\n    protected readonly cacheSizeBytes: number | undefined\n  ) {\n    super(onlineComponentProvider, cacheSizeBytes, /* forceOwnership= */ false);\n  }\n\n  async initialize(cfg: ComponentConfiguration): Promise<void> {\n    await super.initialize(cfg);\n\n    const syncEngine = this.onlineComponentProvider.syncEngine;\n\n    if (this.sharedClientState instanceof WebStorageSharedClientState) {\n      this.sharedClientState.syncEngine = {\n        applyBatchState: syncEngineApplyBatchState.bind(null, syncEngine),\n        applyTargetState: syncEngineApplyTargetState.bind(null, syncEngine),\n        applyActiveTargetsChange: syncEngineApplyActiveTargetsChange.bind(\n          null,\n          syncEngine\n        ),\n        getActiveClients: syncEngineGetActiveClients.bind(null, syncEngine),\n        synchronizeWithChangedDocuments:\n          syncEngineSynchronizeWithChangedDocuments.bind(null, syncEngine)\n      };\n      await this.sharedClientState.start();\n    }\n\n    // NOTE: This will immediately call the listener, so we make sure to\n    // set it after localStore / remoteStore are started.\n    await this.persistence.setPrimaryStateListener(async isPrimary => {\n      await syncEngineApplyPrimaryState(\n        this.onlineComponentProvider.syncEngine,\n        isPrimary\n      );\n      if (this.gcScheduler) {\n        if (isPrimary && !this.gcScheduler.started) {\n          this.gcScheduler.start();\n        } else if (!isPrimary) {\n          this.gcScheduler.stop();\n        }\n      }\n      if (this.indexBackfillerScheduler) {\n        if (isPrimary && !this.indexBackfillerScheduler.started) {\n          this.indexBackfillerScheduler.start();\n        } else if (!isPrimary) {\n          this.indexBackfillerScheduler.stop();\n        }\n      }\n    });\n  }\n\n  createSharedClientState(cfg: ComponentConfiguration): SharedClientState {\n    const window = getWindow();\n    if (!WebStorageSharedClientState.isAvailable(window)) {\n      throw new FirestoreError(\n        Code.UNIMPLEMENTED,\n        'IndexedDB persistence is only available on platforms that support LocalStorage.'\n      );\n    }\n    const persistenceKey = indexedDbStoragePrefix(\n      cfg.databaseInfo.databaseId,\n      cfg.databaseInfo.persistenceKey\n    );\n    return new WebStorageSharedClientState(\n      window,\n      cfg.asyncQueue,\n      persistenceKey,\n      cfg.clientId,\n      cfg.initialUser\n    );\n  }\n}\n\n/**\n * Initializes and wires the components that are needed to interface with the\n * network.\n */\nexport class OnlineComponentProvider {\n  protected localStore!: LocalStore;\n  protected sharedClientState!: SharedClientState;\n  datastore!: Datastore;\n  eventManager!: EventManager;\n  remoteStore!: RemoteStore;\n  syncEngine!: SyncEngine;\n\n  async initialize(\n    offlineComponentProvider: OfflineComponentProvider,\n    cfg: ComponentConfiguration\n  ): Promise<void> {\n    if (this.localStore) {\n      // OnlineComponentProvider may get initialized multiple times if\n      // multi-tab persistence is used.\n      return;\n    }\n\n    this.localStore = offlineComponentProvider.localStore;\n    this.sharedClientState = offlineComponentProvider.sharedClientState;\n    this.datastore = this.createDatastore(cfg);\n    this.remoteStore = this.createRemoteStore(cfg);\n    this.eventManager = this.createEventManager(cfg);\n    this.syncEngine = this.createSyncEngine(\n      cfg,\n      /* startAsPrimary=*/ !offlineComponentProvider.synchronizeTabs\n    );\n\n    this.sharedClientState.onlineStateHandler = onlineState =>\n      syncEngineApplyOnlineStateChange(\n        this.syncEngine,\n        onlineState,\n        OnlineStateSource.SharedClientState\n      );\n\n    this.remoteStore.remoteSyncer.handleCredentialChange =\n      syncEngineHandleCredentialChange.bind(null, this.syncEngine);\n\n    await remoteStoreApplyPrimaryState(\n      this.remoteStore,\n      this.syncEngine.isPrimaryClient\n    );\n  }\n\n  createEventManager(cfg: ComponentConfiguration): EventManager {\n    return newEventManager();\n  }\n\n  createDatastore(cfg: ComponentConfiguration): Datastore {\n    const serializer = newSerializer(cfg.databaseInfo.databaseId);\n    const connection = newConnection(cfg.databaseInfo);\n    return newDatastore(\n      cfg.authCredentials,\n      cfg.appCheckCredentials,\n      connection,\n      serializer\n    );\n  }\n\n  createRemoteStore(cfg: ComponentConfiguration): RemoteStore {\n    return newRemoteStore(\n      this.localStore,\n      this.datastore,\n      cfg.asyncQueue,\n      onlineState =>\n        syncEngineApplyOnlineStateChange(\n          this.syncEngine,\n          onlineState,\n          OnlineStateSource.RemoteStore\n        ),\n      newConnectivityMonitor()\n    );\n  }\n\n  createSyncEngine(\n    cfg: ComponentConfiguration,\n    startAsPrimary: boolean\n  ): SyncEngine {\n    return newSyncEngine(\n      this.localStore,\n      this.remoteStore,\n      this.eventManager,\n      this.sharedClientState,\n      cfg.initialUser,\n      cfg.maxConcurrentLimboResolutions,\n      startAsPrimary\n    );\n  }\n\n  async terminate(): Promise<void> {\n    await remoteStoreShutdown(this.remoteStore);\n    this.datastore?.terminate();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DatabaseInfo } from '../../core/database_info';\nimport { Connection } from '../../remote/connection';\nimport { ConnectivityMonitor } from '../../remote/connectivity_monitor';\nimport { NoopConnectivityMonitor } from '../../remote/connectivity_monitor_noop';\n\nimport { BrowserConnectivityMonitor } from './connectivity_monitor';\nimport { WebChannelConnection } from './webchannel_connection';\n\n/** Initializes the WebChannelConnection for the browser. */\nexport function newConnection(databaseInfo: DatabaseInfo): Connection {\n  return new WebChannelConnection(databaseInfo);\n}\n\n/** Return the Platform-specific connectivity monitor. */\nexport function newConnectivityMonitor(): ConnectivityMonitor {\n  if (BrowserConnectivityMonitor.isAvailable()) {\n    return new BrowserConnectivityMonitor();\n  } else {\n    return new NoopConnectivityMonitor();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Observer } from '../core/event_manager';\n\nimport { FirestoreError } from './error';\nimport { logError } from './log';\nimport { EventHandler } from './misc';\n\n/*\n * A wrapper implementation of Observer<T> that will dispatch events\n * asynchronously. To allow immediate silencing, a mute call is added which\n * causes events scheduled to no longer be raised.\n */\nexport class AsyncObserver<T> implements Observer<T> {\n  /**\n   * When set to true, will not raise future events. Necessary to deal with\n   * async detachment of listener.\n   */\n  private muted = false;\n\n  constructor(private observer: Partial<Observer<T>>) {}\n\n  next(value: T): void {\n    if (this.observer.next) {\n      this.scheduleEvent(this.observer.next, value);\n    }\n  }\n\n  error(error: FirestoreError): void {\n    if (this.observer.error) {\n      this.scheduleEvent(this.observer.error, error);\n    } else {\n      logError('Uncaught Error in snapshot listener:', error.toString());\n    }\n  }\n\n  mute(): void {\n    this.muted = true;\n  }\n\n  private scheduleEvent<E>(eventHandler: EventHandler<E>, event: E): void {\n    if (!this.muted) {\n      setTimeout(() => {\n        if (!this.muted) {\n          eventHandler(event);\n        }\n      }, 0);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GetOptions } from '@firebase/firestore-types';\n\nimport { LoadBundleTask } from '../api/bundle';\nimport {\n  CredentialChangeListener,\n  CredentialsProvider\n} from '../api/credentials';\nimport { User } from '../auth/user';\nimport { LocalStore } from '../local/local_store';\nimport {\n  localStoreConfigureFieldIndexes,\n  localStoreDeleteAllFieldIndexes,\n  localStoreExecuteQuery,\n  localStoreGetNamedQuery,\n  localStoreHandleUserChange,\n  localStoreReadDocument,\n  localStoreSetIndexAutoCreationEnabled\n} from '../local/local_store_impl';\nimport { Persistence } from '../local/persistence';\nimport { Document } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { FieldIndex } from '../model/field_index';\nimport { Mutation } from '../model/mutation';\nimport { toByteStreamReader } from '../platform/byte_stream_reader';\nimport { newSerializer } from '../platform/serializer';\nimport { newTextEncoder } from '../platform/text_serializer';\nimport { ApiClientObjectMap, Value } from '../protos/firestore_proto_api';\nimport { Datastore, invokeRunAggregationQueryRpc } from '../remote/datastore';\nimport {\n  RemoteStore,\n  remoteStoreDisableNetwork,\n  remoteStoreEnableNetwork,\n  remoteStoreHandleCredentialChange\n} from '../remote/remote_store';\nimport { JsonProtoSerializer } from '../remote/serializer';\nimport { debugAssert } from '../util/assert';\nimport { AsyncObserver } from '../util/async_observer';\nimport { AsyncQueue, wrapInUserErrorIfRecoverable } from '../util/async_queue';\nimport { BundleReader } from '../util/bundle_reader';\nimport { newBundleReader } from '../util/bundle_reader_impl';\nimport { Code, FirestoreError } from '../util/error';\nimport { logDebug, logWarn } from '../util/log';\nimport { AutoId } from '../util/misc';\nimport { Deferred } from '../util/promise';\n\nimport { Aggregate } from './aggregate';\nimport { NamedQuery } from './bundle';\nimport {\n  ComponentConfiguration,\n  MemoryOfflineComponentProvider,\n  OfflineComponentProvider,\n  OnlineComponentProvider\n} from './component_provider';\nimport { DatabaseId, DatabaseInfo } from './database_info';\nimport {\n  addSnapshotsInSyncListener,\n  EventManager,\n  eventManagerListen,\n  eventManagerUnlisten,\n  ListenOptions,\n  Observer,\n  QueryListener,\n  removeSnapshotsInSyncListener\n} from './event_manager';\nimport { newQueryForPath, Query } from './query';\nimport { SyncEngine } from './sync_engine';\nimport {\n  syncEngineListen,\n  syncEngineLoadBundle,\n  syncEngineRegisterPendingWritesCallback,\n  syncEngineUnlisten,\n  syncEngineWrite,\n  triggerRemoteStoreListen,\n  triggerRemoteStoreUnlisten\n} from './sync_engine_impl';\nimport { Transaction } from './transaction';\nimport { TransactionOptions } from './transaction_options';\nimport { TransactionRunner } from './transaction_runner';\nimport { View } from './view';\nimport { ViewSnapshot } from './view_snapshot';\n\nconst LOG_TAG = 'FirestoreClient';\nexport const MAX_CONCURRENT_LIMBO_RESOLUTIONS = 100;\n\n/** DOMException error code constants. */\nconst DOM_EXCEPTION_INVALID_STATE = 11;\nconst DOM_EXCEPTION_ABORTED = 20;\nconst DOM_EXCEPTION_QUOTA_EXCEEDED = 22;\n\n/**\n * FirestoreClient is a top-level class that constructs and owns all of the //\n * pieces of the client SDK architecture. It is responsible for creating the //\n * async queue that is shared by all of the other components in the system. //\n */\nexport class FirestoreClient {\n  private user = User.UNAUTHENTICATED;\n  private readonly clientId = AutoId.newId();\n  private authCredentialListener: CredentialChangeListener<User> = () =>\n    Promise.resolve();\n  private appCheckCredentialListener: (\n    appCheckToken: string,\n    user: User\n  ) => Promise<void> = () => Promise.resolve();\n  _uninitializedComponentsProvider?: {\n    _offline: OfflineComponentProvider;\n    _offlineKind: 'memory' | 'persistent';\n    _online: OnlineComponentProvider;\n  };\n\n  _offlineComponents?: OfflineComponentProvider;\n  _onlineComponents?: OnlineComponentProvider;\n\n  constructor(\n    private authCredentials: CredentialsProvider<User>,\n    private appCheckCredentials: CredentialsProvider<string>,\n    /**\n     * Asynchronous queue responsible for all of our internal processing. When\n     * we get incoming work from the user (via public API) or the network\n     * (incoming GRPC messages), we should always schedule onto this queue.\n     * This ensures all of our work is properly serialized (e.g. we don't\n     * start processing a new operation while the previous one is waiting for\n     * an async I/O to complete).\n     */\n    public asyncQueue: AsyncQueue,\n    private databaseInfo: DatabaseInfo\n  ) {\n    this.authCredentials.start(asyncQueue, async user => {\n      logDebug(LOG_TAG, 'Received user=', user.uid);\n      await this.authCredentialListener(user);\n      this.user = user;\n    });\n    this.appCheckCredentials.start(asyncQueue, newAppCheckToken => {\n      logDebug(LOG_TAG, 'Received new app check token=', newAppCheckToken);\n      return this.appCheckCredentialListener(newAppCheckToken, this.user);\n    });\n  }\n\n  get configuration(): ComponentConfiguration {\n    return {\n      asyncQueue: this.asyncQueue,\n      databaseInfo: this.databaseInfo,\n      clientId: this.clientId,\n      authCredentials: this.authCredentials,\n      appCheckCredentials: this.appCheckCredentials,\n      initialUser: this.user,\n      maxConcurrentLimboResolutions: MAX_CONCURRENT_LIMBO_RESOLUTIONS\n    };\n  }\n\n  setCredentialChangeListener(listener: (user: User) => Promise<void>): void {\n    this.authCredentialListener = listener;\n  }\n\n  setAppCheckTokenChangeListener(\n    listener: (appCheckToken: string, user: User) => Promise<void>\n  ): void {\n    this.appCheckCredentialListener = listener;\n  }\n\n  /**\n   * Checks that the client has not been terminated. Ensures that other methods on //\n   * this class cannot be called after the client is terminated. //\n   */\n  verifyNotTerminated(): void {\n    if (this.asyncQueue.isShuttingDown) {\n      throw new FirestoreError(\n        Code.FAILED_PRECONDITION,\n        'The client has already been terminated.'\n      );\n    }\n  }\n\n  terminate(): Promise<void> {\n    this.asyncQueue.enterRestrictedMode();\n    const deferred = new Deferred();\n    this.asyncQueue.enqueueAndForgetEvenWhileRestricted(async () => {\n      try {\n        if (this._onlineComponents) {\n          await this._onlineComponents.terminate();\n        }\n        if (this._offlineComponents) {\n          await this._offlineComponents.terminate();\n        }\n\n        // The credentials provider must be terminated after shutting down the\n        // RemoteStore as it will prevent the RemoteStore from retrieving auth\n        // tokens.\n        this.authCredentials.shutdown();\n        this.appCheckCredentials.shutdown();\n        deferred.resolve();\n      } catch (e) {\n        const firestoreError = wrapInUserErrorIfRecoverable(\n          e as Error,\n          `Failed to shutdown persistence`\n        );\n        deferred.reject(firestoreError);\n      }\n    });\n    return deferred.promise;\n  }\n}\n\nexport async function setOfflineComponentProvider(\n  client: FirestoreClient,\n  offlineComponentProvider: OfflineComponentProvider\n): Promise<void> {\n  client.asyncQueue.verifyOperationInProgress();\n\n  logDebug(LOG_TAG, 'Initializing OfflineComponentProvider');\n  const configuration = client.configuration;\n  await offlineComponentProvider.initialize(configuration);\n\n  let currentUser = configuration.initialUser;\n  client.setCredentialChangeListener(async user => {\n    if (!currentUser.isEqual(user)) {\n      await localStoreHandleUserChange(\n        offlineComponentProvider.localStore,\n        user\n      );\n      currentUser = user;\n    }\n  });\n\n  // When a user calls clearPersistence() in one client, all other clients\n  // need to be terminated to allow the delete to succeed.\n  offlineComponentProvider.persistence.setDatabaseDeletedListener(() =>\n    client.terminate()\n  );\n\n  client._offlineComponents = offlineComponentProvider;\n}\n\nexport async function setOnlineComponentProvider(\n  client: FirestoreClient,\n  onlineComponentProvider: OnlineComponentProvider\n): Promise<void> {\n  client.asyncQueue.verifyOperationInProgress();\n\n  const offlineComponentProvider = await ensureOfflineComponents(client);\n\n  logDebug(LOG_TAG, 'Initializing OnlineComponentProvider');\n  await onlineComponentProvider.initialize(\n    offlineComponentProvider,\n    client.configuration\n  );\n  // The CredentialChangeListener of the online component provider takes\n  // precedence over the offline component provider.\n  client.setCredentialChangeListener(user =>\n    remoteStoreHandleCredentialChange(onlineComponentProvider.remoteStore, user)\n  );\n  client.setAppCheckTokenChangeListener((_, user) =>\n    remoteStoreHandleCredentialChange(onlineComponentProvider.remoteStore, user)\n  );\n  client._onlineComponents = onlineComponentProvider;\n}\n\n/**\n * Decides whether the provided error allows us to gracefully disable\n * persistence (as opposed to crashing the client).\n */\nexport function canFallbackFromIndexedDbError(\n  error: FirestoreError | DOMException\n): boolean {\n  if (error.name === 'FirebaseError') {\n    return (\n      error.code === Code.FAILED_PRECONDITION ||\n      error.code === Code.UNIMPLEMENTED\n    );\n  } else if (\n    typeof DOMException !== 'undefined' &&\n    error instanceof DOMException\n  ) {\n    // There are a few known circumstances where we can open IndexedDb but\n    // trying to read/write will fail (e.g. quota exceeded). For\n    // well-understood cases, we attempt to detect these and then gracefully\n    // fall back to memory persistence.\n    // NOTE: Rather than continue to add to this list, we could decide to\n    // always fall back, with the risk that we might accidentally hide errors\n    // representing actual SDK bugs.\n    return (\n      // When the browser is out of quota we could get either quota exceeded\n      // or an aborted error depending on whether the error happened during\n      // schema migration.\n      error.code === DOM_EXCEPTION_QUOTA_EXCEEDED ||\n      error.code === DOM_EXCEPTION_ABORTED ||\n      // Firefox Private Browsing mode disables IndexedDb and returns\n      // INVALID_STATE for any usage.\n      error.code === DOM_EXCEPTION_INVALID_STATE\n    );\n  }\n\n  return true;\n}\n\nasync function ensureOfflineComponents(\n  client: FirestoreClient\n): Promise<OfflineComponentProvider> {\n  if (!client._offlineComponents) {\n    if (client._uninitializedComponentsProvider) {\n      logDebug(LOG_TAG, 'Using user provided OfflineComponentProvider');\n      try {\n        await setOfflineComponentProvider(\n          client,\n          client._uninitializedComponentsProvider._offline\n        );\n      } catch (e) {\n        const error = e as FirestoreError | DOMException;\n        if (!canFallbackFromIndexedDbError(error)) {\n          throw error;\n        }\n        logWarn(\n          'Error using user provided cache. Falling back to ' +\n            'memory cache: ' +\n            error\n        );\n        await setOfflineComponentProvider(\n          client,\n          new MemoryOfflineComponentProvider()\n        );\n      }\n    } else {\n      logDebug(LOG_TAG, 'Using default OfflineComponentProvider');\n      await setOfflineComponentProvider(\n        client,\n        new MemoryOfflineComponentProvider()\n      );\n    }\n  }\n\n  return client._offlineComponents!;\n}\n\nasync function ensureOnlineComponents(\n  client: FirestoreClient\n): Promise<OnlineComponentProvider> {\n  if (!client._onlineComponents) {\n    if (client._uninitializedComponentsProvider) {\n      logDebug(LOG_TAG, 'Using user provided OnlineComponentProvider');\n      await setOnlineComponentProvider(\n        client,\n        client._uninitializedComponentsProvider._online\n      );\n    } else {\n      logDebug(LOG_TAG, 'Using default OnlineComponentProvider');\n      await setOnlineComponentProvider(client, new OnlineComponentProvider());\n    }\n  }\n\n  return client._onlineComponents!;\n}\n\nfunction getPersistence(client: FirestoreClient): Promise<Persistence> {\n  return ensureOfflineComponents(client).then(c => c.persistence);\n}\n\nexport function getLocalStore(client: FirestoreClient): Promise<LocalStore> {\n  return ensureOfflineComponents(client).then(c => c.localStore);\n}\n\nfunction getRemoteStore(client: FirestoreClient): Promise<RemoteStore> {\n  return ensureOnlineComponents(client).then(c => c.remoteStore);\n}\n\nexport function getSyncEngine(client: FirestoreClient): Promise<SyncEngine> {\n  return ensureOnlineComponents(client).then(c => c.syncEngine);\n}\n\nfunction getDatastore(client: FirestoreClient): Promise<Datastore> {\n  return ensureOnlineComponents(client).then(c => c.datastore);\n}\n\nexport async function getEventManager(\n  client: FirestoreClient\n): Promise<EventManager> {\n  const onlineComponentProvider = await ensureOnlineComponents(client);\n  const eventManager = onlineComponentProvider.eventManager;\n  eventManager.onListen = syncEngineListen.bind(\n    null,\n    onlineComponentProvider.syncEngine\n  );\n  eventManager.onUnlisten = syncEngineUnlisten.bind(\n    null,\n    onlineComponentProvider.syncEngine\n  );\n  eventManager.onFirstRemoteStoreListen = triggerRemoteStoreListen.bind(\n    null,\n    onlineComponentProvider.syncEngine\n  );\n  eventManager.onLastRemoteStoreUnlisten = triggerRemoteStoreUnlisten.bind(\n    null,\n    onlineComponentProvider.syncEngine\n  );\n  return eventManager;\n}\n\n/** Enables the network connection and re-enqueues all pending operations. */\nexport function firestoreClientEnableNetwork(\n  client: FirestoreClient\n): Promise<void> {\n  return client.asyncQueue.enqueue(async () => {\n    const persistence = await getPersistence(client);\n    const remoteStore = await getRemoteStore(client);\n    persistence.setNetworkEnabled(true);\n    return remoteStoreEnableNetwork(remoteStore);\n  });\n}\n\n/** Disables the network connection. Pending operations will not complete. */\nexport function firestoreClientDisableNetwork(\n  client: FirestoreClient\n): Promise<void> {\n  return client.asyncQueue.enqueue(async () => {\n    const persistence = await getPersistence(client);\n    const remoteStore = await getRemoteStore(client);\n    persistence.setNetworkEnabled(false);\n    return remoteStoreDisableNetwork(remoteStore);\n  });\n}\n\n/**\n * Returns a Promise that resolves when all writes that were pending at the time\n * this method was called received server acknowledgement. An acknowledgement\n * can be either acceptance or rejection.\n */\nexport function firestoreClientWaitForPendingWrites(\n  client: FirestoreClient\n): Promise<void> {\n  const deferred = new Deferred<void>();\n  client.asyncQueue.enqueueAndForget(async () => {\n    const syncEngine = await getSyncEngine(client);\n    return syncEngineRegisterPendingWritesCallback(syncEngine, deferred);\n  });\n  return deferred.promise;\n}\n\nexport function firestoreClientListen(\n  client: FirestoreClient,\n  query: Query,\n  options: ListenOptions,\n  observer: Partial<Observer<ViewSnapshot>>\n): () => void {\n  const wrappedObserver = new AsyncObserver(observer);\n  const listener = new QueryListener(query, wrappedObserver, options);\n  client.asyncQueue.enqueueAndForget(async () => {\n    const eventManager = await getEventManager(client);\n    return eventManagerListen(eventManager, listener);\n  });\n  return () => {\n    wrappedObserver.mute();\n    client.asyncQueue.enqueueAndForget(async () => {\n      const eventManager = await getEventManager(client);\n      return eventManagerUnlisten(eventManager, listener);\n    });\n  };\n}\n\nexport function firestoreClientGetDocumentFromLocalCache(\n  client: FirestoreClient,\n  docKey: DocumentKey\n): Promise<Document | null> {\n  const deferred = new Deferred<Document | null>();\n  client.asyncQueue.enqueueAndForget(async () => {\n    const localStore = await getLocalStore(client);\n    return readDocumentFromCache(localStore, docKey, deferred);\n  });\n  return deferred.promise;\n}\n\nexport function firestoreClientGetDocumentViaSnapshotListener(\n  client: FirestoreClient,\n  key: DocumentKey,\n  options: GetOptions = {}\n): Promise<ViewSnapshot> {\n  const deferred = new Deferred<ViewSnapshot>();\n  client.asyncQueue.enqueueAndForget(async () => {\n    const eventManager = await getEventManager(client);\n    return readDocumentViaSnapshotListener(\n      eventManager,\n      client.asyncQueue,\n      key,\n      options,\n      deferred\n    );\n  });\n  return deferred.promise;\n}\n\nexport function firestoreClientGetDocumentsFromLocalCache(\n  client: FirestoreClient,\n  query: Query\n): Promise<ViewSnapshot> {\n  const deferred = new Deferred<ViewSnapshot>();\n  client.asyncQueue.enqueueAndForget(async () => {\n    const localStore = await getLocalStore(client);\n    return executeQueryFromCache(localStore, query, deferred);\n  });\n  return deferred.promise;\n}\n\nexport function firestoreClientGetDocumentsViaSnapshotListener(\n  client: FirestoreClient,\n  query: Query,\n  options: GetOptions = {}\n): Promise<ViewSnapshot> {\n  const deferred = new Deferred<ViewSnapshot>();\n  client.asyncQueue.enqueueAndForget(async () => {\n    const eventManager = await getEventManager(client);\n    return executeQueryViaSnapshotListener(\n      eventManager,\n      client.asyncQueue,\n      query,\n      options,\n      deferred\n    );\n  });\n  return deferred.promise;\n}\n\nexport function firestoreClientRunAggregateQuery(\n  client: FirestoreClient,\n  query: Query,\n  aggregates: Aggregate[]\n): Promise<ApiClientObjectMap<Value>> {\n  const deferred = new Deferred<ApiClientObjectMap<Value>>();\n\n  client.asyncQueue.enqueueAndForget(async () => {\n    // Implement and call executeAggregateQueryViaSnapshotListener, similar\n    // to the implementation in firestoreClientGetDocumentsViaSnapshotListener\n    // above\n    try {\n      // TODO(b/277628384): check `canUseNetwork()` and handle multi-tab.\n      const datastore = await getDatastore(client);\n      deferred.resolve(\n        invokeRunAggregationQueryRpc(datastore, query, aggregates)\n      );\n    } catch (e) {\n      deferred.reject(e as Error);\n    }\n  });\n  return deferred.promise;\n}\n\nexport function firestoreClientWrite(\n  client: FirestoreClient,\n  mutations: Mutation[]\n): Promise<void> {\n  const deferred = new Deferred<void>();\n  client.asyncQueue.enqueueAndForget(async () => {\n    const syncEngine = await getSyncEngine(client);\n    return syncEngineWrite(syncEngine, mutations, deferred);\n  });\n  return deferred.promise;\n}\n\nexport function firestoreClientAddSnapshotsInSyncListener(\n  client: FirestoreClient,\n  observer: Partial<Observer<void>>\n): () => void {\n  const wrappedObserver = new AsyncObserver(observer);\n  client.asyncQueue.enqueueAndForget(async () => {\n    const eventManager = await getEventManager(client);\n    return addSnapshotsInSyncListener(eventManager, wrappedObserver);\n  });\n  return () => {\n    wrappedObserver.mute();\n    client.asyncQueue.enqueueAndForget(async () => {\n      const eventManager = await getEventManager(client);\n      return removeSnapshotsInSyncListener(eventManager, wrappedObserver);\n    });\n  };\n}\n\n/**\n * Takes an updateFunction in which a set of reads and writes can be performed\n * atomically. In the updateFunction, the client can read and write values\n * using the supplied transaction object. After the updateFunction, all\n * changes will be committed. If a retryable error occurs (ex: some other\n * client has changed any of the data referenced), then the updateFunction\n * will be called again after a backoff. If the updateFunction still fails\n * after all retries, then the transaction will be rejected.\n *\n * The transaction object passed to the updateFunction contains methods for\n * accessing documents and collections. Unlike other datastore access, data\n * accessed with the transaction will not reflect local changes that have not\n * been committed. For this reason, it is required that all reads are\n * performed before any writes. Transactions must be performed while online.\n */\nexport function firestoreClientTransaction<T>(\n  client: FirestoreClient,\n  updateFunction: (transaction: Transaction) => Promise<T>,\n  options: TransactionOptions\n): Promise<T> {\n  const deferred = new Deferred<T>();\n  client.asyncQueue.enqueueAndForget(async () => {\n    const datastore = await getDatastore(client);\n    new TransactionRunner<T>(\n      client.asyncQueue,\n      datastore,\n      options,\n      updateFunction,\n      deferred\n    ).run();\n  });\n  return deferred.promise;\n}\n\nasync function readDocumentFromCache(\n  localStore: LocalStore,\n  docKey: DocumentKey,\n  result: Deferred<Document | null>\n): Promise<void> {\n  try {\n    const document = await localStoreReadDocument(localStore, docKey);\n    if (document.isFoundDocument()) {\n      result.resolve(document);\n    } else if (document.isNoDocument()) {\n      result.resolve(null);\n    } else {\n      result.reject(\n        new FirestoreError(\n          Code.UNAVAILABLE,\n          'Failed to get document from cache. (However, this document may ' +\n            \"exist on the server. Run again without setting 'source' in \" +\n            'the GetOptions to attempt to retrieve the document from the ' +\n            'server.)'\n        )\n      );\n    }\n  } catch (e) {\n    const firestoreError = wrapInUserErrorIfRecoverable(\n      e as Error,\n      `Failed to get document '${docKey} from cache`\n    );\n    result.reject(firestoreError);\n  }\n}\n\n/**\n * Retrieves a latency-compensated document from the backend via a\n * SnapshotListener.\n */\nfunction readDocumentViaSnapshotListener(\n  eventManager: EventManager,\n  asyncQueue: AsyncQueue,\n  key: DocumentKey,\n  options: GetOptions,\n  result: Deferred<ViewSnapshot>\n): Promise<void> {\n  const wrappedObserver = new AsyncObserver({\n    next: (snap: ViewSnapshot) => {\n      // Remove query first before passing event to user to avoid\n      // user actions affecting the now stale query.\n      asyncQueue.enqueueAndForget(() =>\n        eventManagerUnlisten(eventManager, listener)\n      );\n\n      const exists = snap.docs.has(key);\n      if (!exists && snap.fromCache) {\n        // TODO(dimond): If we're online and the document doesn't\n        // exist then we resolve with a doc.exists set to false. If\n        // we're offline however, we reject the Promise in this\n        // case. Two options: 1) Cache the negative response from\n        // the server so we can deliver that even when you're\n        // offline 2) Actually reject the Promise in the online case\n        // if the document doesn't exist.\n        result.reject(\n          new FirestoreError(\n            Code.UNAVAILABLE,\n            'Failed to get document because the client is offline.'\n          )\n        );\n      } else if (\n        exists &&\n        snap.fromCache &&\n        options &&\n        options.source === 'server'\n      ) {\n        result.reject(\n          new FirestoreError(\n            Code.UNAVAILABLE,\n            'Failed to get document from server. (However, this ' +\n              'document does exist in the local cache. Run again ' +\n              'without setting source to \"server\" to ' +\n              'retrieve the cached document.)'\n          )\n        );\n      } else {\n        debugAssert(\n          snap.docs.size <= 1,\n          'Expected zero or a single result on a document-only query'\n        );\n        result.resolve(snap);\n      }\n    },\n    error: e => result.reject(e)\n  });\n\n  const listener = new QueryListener(\n    newQueryForPath(key.path),\n    wrappedObserver,\n    {\n      includeMetadataChanges: true,\n      waitForSyncWhenOnline: true\n    }\n  );\n  return eventManagerListen(eventManager, listener);\n}\n\nasync function executeQueryFromCache(\n  localStore: LocalStore,\n  query: Query,\n  result: Deferred<ViewSnapshot>\n): Promise<void> {\n  try {\n    const queryResult = await localStoreExecuteQuery(\n      localStore,\n      query,\n      /* usePreviousResults= */ true\n    );\n    const view = new View(query, queryResult.remoteKeys);\n    const viewDocChanges = view.computeDocChanges(queryResult.documents);\n    const viewChange = view.applyChanges(\n      viewDocChanges,\n      /* limboResolutionEnabled= */ false\n    );\n    result.resolve(viewChange.snapshot!);\n  } catch (e) {\n    const firestoreError = wrapInUserErrorIfRecoverable(\n      e as Error,\n      `Failed to execute query '${query} against cache`\n    );\n    result.reject(firestoreError);\n  }\n}\n\n/**\n * Retrieves a latency-compensated query snapshot from the backend via a\n * SnapshotListener.\n */\nfunction executeQueryViaSnapshotListener(\n  eventManager: EventManager,\n  asyncQueue: AsyncQueue,\n  query: Query,\n  options: GetOptions,\n  result: Deferred<ViewSnapshot>\n): Promise<void> {\n  const wrappedObserver = new AsyncObserver<ViewSnapshot>({\n    next: snapshot => {\n      // Remove query first before passing event to user to avoid\n      // user actions affecting the now stale query.\n      asyncQueue.enqueueAndForget(() =>\n        eventManagerUnlisten(eventManager, listener)\n      );\n\n      if (snapshot.fromCache && options.source === 'server') {\n        result.reject(\n          new FirestoreError(\n            Code.UNAVAILABLE,\n            'Failed to get documents from server. (However, these ' +\n              'documents may exist in the local cache. Run again ' +\n              'without setting source to \"server\" to ' +\n              'retrieve the cached documents.)'\n          )\n        );\n      } else {\n        result.resolve(snapshot);\n      }\n    },\n    error: e => result.reject(e)\n  });\n\n  const listener = new QueryListener(query, wrappedObserver, {\n    includeMetadataChanges: true,\n    waitForSyncWhenOnline: true\n  });\n  return eventManagerListen(eventManager, listener);\n}\n\nexport function firestoreClientLoadBundle(\n  client: FirestoreClient,\n  databaseId: DatabaseId,\n  data: ReadableStream<Uint8Array> | ArrayBuffer | string,\n  resultTask: LoadBundleTask\n): void {\n  const reader = createBundleReader(data, newSerializer(databaseId));\n  client.asyncQueue.enqueueAndForget(async () => {\n    syncEngineLoadBundle(await getSyncEngine(client), reader, resultTask);\n  });\n}\n\nexport function firestoreClientGetNamedQuery(\n  client: FirestoreClient,\n  queryName: string\n): Promise<NamedQuery | undefined> {\n  return client.asyncQueue.enqueue(async () =>\n    localStoreGetNamedQuery(await getLocalStore(client), queryName)\n  );\n}\n\nfunction createBundleReader(\n  data: ReadableStream<Uint8Array> | ArrayBuffer | string,\n  serializer: JsonProtoSerializer\n): BundleReader {\n  let content: ReadableStream<Uint8Array> | ArrayBuffer;\n  if (typeof data === 'string') {\n    content = newTextEncoder().encode(data);\n  } else {\n    content = data;\n  }\n  return newBundleReader(toByteStreamReader(content), serializer);\n}\n\nexport function firestoreClientSetIndexConfiguration(\n  client: FirestoreClient,\n  indexes: FieldIndex[]\n): Promise<void> {\n  return client.asyncQueue.enqueue(async () => {\n    return localStoreConfigureFieldIndexes(\n      await getLocalStore(client),\n      indexes\n    );\n  });\n}\n\nexport function firestoreClientSetPersistentCacheIndexAutoCreationEnabled(\n  client: FirestoreClient,\n  isEnabled: boolean\n): Promise<void> {\n  return client.asyncQueue.enqueue(async () => {\n    return localStoreSetIndexAutoCreationEnabled(\n      await getLocalStore(client),\n      isEnabled\n    );\n  });\n}\n\nexport function firestoreClientDeleteAllFieldIndexes(\n  client: FirestoreClient\n): Promise<void> {\n  return client.asyncQueue.enqueue(async () => {\n    return localStoreDeleteAllFieldIndexes(await getLocalStore(client));\n  });\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Options that configure the SDK’s underlying network transport (WebChannel)\n * when long-polling is used.\n *\n * Note: This interface is \"experimental\" and is subject to change.\n *\n * See `FirestoreSettings.experimentalAutoDetectLongPolling`,\n * `FirestoreSettings.experimentalForceLongPolling`, and\n * `FirestoreSettings.experimentalLongPollingOptions`.\n */\nexport interface ExperimentalLongPollingOptions {\n  /**\n   * The desired maximum timeout interval, in seconds, to complete a\n   * long-polling GET response. Valid values are between 5 and 30, inclusive.\n   * Floating point values are allowed and will be rounded to the nearest\n   * millisecond.\n   *\n   * By default, when long-polling is used the \"hanging GET\" request sent by\n   * the client times out after 30 seconds. To request a different timeout\n   * from the server, set this setting with the desired timeout.\n   *\n   * Changing the default timeout may be useful, for example, if the buffering\n   * proxy that necessitated enabling long-polling in the first place has a\n   * shorter timeout for hanging GET requests, in which case setting the\n   * long-polling timeout to a shorter value, such as 25 seconds, may fix\n   * prematurely-closed hanging GET requests.\n   * For example, see https://github.com/firebase/firebase-js-sdk/issues/6987.\n   */\n  timeoutSeconds?: number;\n}\n\n/**\n * Compares two `ExperimentalLongPollingOptions` objects for equality.\n */\nexport function longPollingOptionsEqual(\n  options1: ExperimentalLongPollingOptions,\n  options2: ExperimentalLongPollingOptions\n): boolean {\n  return options1.timeoutSeconds === options2.timeoutSeconds;\n}\n\n/**\n * Creates and returns a new `ExperimentalLongPollingOptions` with the same\n * option values as the given instance.\n */\nexport function cloneLongPollingOptions(\n  options: ExperimentalLongPollingOptions\n): ExperimentalLongPollingOptions {\n  const clone: ExperimentalLongPollingOptions = {};\n\n  if (options.timeoutSeconds !== undefined) {\n    clone.timeoutSeconds = options.timeoutSeconds;\n  }\n\n  return clone;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { _FirebaseService } from '@firebase/app';\n\nimport { CredentialsProvider } from '../api/credentials';\nimport { cloneLongPollingOptions } from '../api/long_polling_options';\nimport { User } from '../auth/user';\nimport { DatabaseId, DatabaseInfo } from '../core/database_info';\nimport { newConnection } from '../platform/connection';\nimport { newSerializer } from '../platform/serializer';\nimport { Datastore, newDatastore } from '../remote/datastore';\nimport { Code, FirestoreError } from '../util/error';\nimport { logDebug } from '../util/log';\n\nimport { FirestoreSettingsImpl } from './settings';\n\nexport const LOG_TAG = 'ComponentProvider';\n\n// The components module manages the lifetime of dependencies of the Firestore\n// client. Dependencies can be lazily constructed and only one exists per\n// Firestore instance.\n\n/**\n * An interface implemented by FirebaseFirestore that provides compatibility\n * with the usage in this file.\n *\n * This interface mainly exists to remove a cyclic dependency.\n */\nexport interface FirestoreService extends _FirebaseService {\n  _authCredentials: CredentialsProvider<User>;\n  _appCheckCredentials: CredentialsProvider<string>;\n  _persistenceKey: string;\n  _databaseId: DatabaseId;\n  _terminated: boolean;\n\n  _freezeSettings(): FirestoreSettingsImpl;\n}\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\nconst datastoreInstances = new Map<FirestoreService, Datastore>();\n\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\nexport function getDatastore(firestore: FirestoreService): Datastore {\n  if (firestore._terminated) {\n    throw new FirestoreError(\n      Code.FAILED_PRECONDITION,\n      'The client has already been terminated.'\n    );\n  }\n  if (!datastoreInstances.has(firestore)) {\n    logDebug(LOG_TAG, 'Initializing Datastore');\n    const databaseInfo = makeDatabaseInfo(\n      firestore._databaseId,\n      firestore.app.options.appId || '',\n      firestore._persistenceKey,\n      firestore._freezeSettings()\n    );\n    const connection = newConnection(databaseInfo);\n    const serializer = newSerializer(firestore._databaseId);\n    const datastore = newDatastore(\n      firestore._authCredentials,\n      firestore._appCheckCredentials,\n      connection,\n      serializer\n    );\n\n    datastoreInstances.set(firestore, datastore);\n  }\n  return datastoreInstances.get(firestore)!;\n}\n\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\nexport function removeComponents(firestore: FirestoreService): void {\n  const datastore = datastoreInstances.get(firestore);\n  if (datastore) {\n    logDebug(LOG_TAG, 'Removing Datastore');\n    datastoreInstances.delete(firestore);\n    datastore.terminate();\n  }\n}\n\nexport function makeDatabaseInfo(\n  databaseId: DatabaseId,\n  appId: string,\n  persistenceKey: string,\n  settings: FirestoreSettingsImpl\n): DatabaseInfo {\n  return new DatabaseInfo(\n    databaseId,\n    appId,\n    persistenceKey,\n    settings.host,\n    settings.ssl,\n    settings.experimentalForceLongPolling,\n    settings.experimentalAutoDetectLongPolling,\n    cloneLongPollingOptions(settings.experimentalLongPollingOptions),\n    settings.useFetchStreams\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DocumentKey } from '../model/document_key';\nimport { ResourcePath } from '../model/path';\n\nimport { fail } from './assert';\nimport { Code, FirestoreError } from './error';\n\n/** Types accepted by validateType() and related methods for validation. */\nexport type ValidationType =\n  | 'undefined'\n  | 'object'\n  | 'function'\n  | 'boolean'\n  | 'number'\n  | 'string'\n  | 'non-empty string';\n\nexport function validateNonEmptyArgument(\n  functionName: string,\n  argumentName: string,\n  argument?: string\n): asserts argument is string {\n  if (!argument) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      `Function ${functionName}() cannot be called with an empty ${argumentName}.`\n    );\n  }\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\nexport function validateIsNotUsedTogether(\n  optionName1: string,\n  argument1: boolean | undefined,\n  optionName2: string,\n  argument2: boolean | undefined\n): void {\n  if (argument1 === true && argument2 === true) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      `${optionName1} and ${optionName2} cannot be used together.`\n    );\n  }\n}\n\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\nexport function validateDocumentPath(path: ResourcePath): void {\n  if (!DocumentKey.isDocumentKey(path)) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      `Invalid document reference. Document references must have an even number of segments, but ${path} has ${path.length}.`\n    );\n  }\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */\nexport function validateCollectionPath(path: ResourcePath): void {\n  if (DocumentKey.isDocumentKey(path)) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      `Invalid collection reference. Collection references must have an odd number of segments, but ${path} has ${path.length}.`\n    );\n  }\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\nexport function isPlainObject(input: unknown): boolean {\n  return (\n    typeof input === 'object' &&\n    input !== null &&\n    (Object.getPrototypeOf(input) === Object.prototype ||\n      Object.getPrototypeOf(input) === null)\n  );\n}\n\n/** Returns a string describing the type / value of the provided input. */\nexport function valueDescription(input: unknown): string {\n  if (input === undefined) {\n    return 'undefined';\n  } else if (input === null) {\n    return 'null';\n  } else if (typeof input === 'string') {\n    if (input.length > 20) {\n      input = `${input.substring(0, 20)}...`;\n    }\n    return JSON.stringify(input);\n  } else if (typeof input === 'number' || typeof input === 'boolean') {\n    return '' + input;\n  } else if (typeof input === 'object') {\n    if (input instanceof Array) {\n      return 'an array';\n    } else {\n      const customObjectName = tryGetCustomObjectType(input!);\n      if (customObjectName) {\n        return `a custom ${customObjectName} object`;\n      } else {\n        return 'an object';\n      }\n    }\n  } else if (typeof input === 'function') {\n    return 'a function';\n  } else {\n    return fail('Unknown wrong type: ' + typeof input);\n  }\n}\n\n/** try to get the constructor name for an object. */\nexport function tryGetCustomObjectType(input: object): string | null {\n  if (input.constructor) {\n    return input.constructor.name;\n  }\n  return null;\n}\n\n/**\n * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n * underlying instance. Throws if  `obj` is not an instance of `T`.\n *\n * This cast is used in the Lite and Full SDK to verify instance types for\n * arguments passed to the public API.\n * @internal\n */\nexport function cast<T>(\n  obj: object,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor: { new (...args: any[]): T }\n): T | never {\n  if ('_delegate' in obj) {\n    // Unwrap Compat types\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    obj = (obj as any)._delegate;\n  }\n\n  if (!(obj instanceof constructor)) {\n    if (constructor.name === obj.constructor.name) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'Type does not match the expected instance. Did you pass a ' +\n          `reference from a different Firestore SDK?`\n      );\n    } else {\n      const description = valueDescription(obj);\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        `Expected type '${constructor.name}', but it was: ${description}`\n      );\n    }\n  }\n  return obj as T;\n}\n\nexport function validatePositiveNumber(functionName: string, n: number): void {\n  if (n <= 0) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      `Function ${functionName}() requires a positive number, but it was: ${n}.`\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirestoreLocalCache } from '../api/cache_config';\nimport { CredentialsSettings } from '../api/credentials';\nimport {\n  ExperimentalLongPollingOptions,\n  cloneLongPollingOptions,\n  longPollingOptionsEqual\n} from '../api/long_polling_options';\nimport {\n  LRU_COLLECTION_DISABLED,\n  LRU_DEFAULT_CACHE_SIZE_BYTES\n} from '../local/lru_garbage_collector';\nimport { LRU_MINIMUM_CACHE_SIZE_BYTES } from '../local/lru_garbage_collector_impl';\nimport { Code, FirestoreError } from '../util/error';\nimport { validateIsNotUsedTogether } from '../util/input_validation';\n\n// settings() defaults:\nexport const DEFAULT_HOST = 'firestore.googleapis.com';\nexport const DEFAULT_SSL = true;\n\n// The minimum long-polling timeout is hardcoded on the server. The value here\n// should be kept in sync with the value used by the server, as the server will\n// silently ignore a value below the minimum and fall back to the default.\n// Googlers see b/266868871 for relevant discussion.\nconst MIN_LONG_POLLING_TIMEOUT_SECONDS = 5;\n\n// No maximum long-polling timeout is configured in the server, and defaults to\n// 30 seconds, which is what Watch appears to use.\n// Googlers see b/266868871 for relevant discussion.\nconst MAX_LONG_POLLING_TIMEOUT_SECONDS = 30;\n\n// Whether long-polling auto-detected is enabled by default.\nconst DEFAULT_AUTO_DETECT_LONG_POLLING = true;\n\n/**\n * Specifies custom configurations for your Cloud Firestore instance.\n * You must set these before invoking any other methods.\n */\nexport interface FirestoreSettings {\n  /** The hostname to connect to. */\n  host?: string;\n\n  /** Whether to use SSL when connecting. */\n  ssl?: boolean;\n\n  /**\n   * Whether to skip nested properties that are set to `undefined` during\n   * object serialization. If set to `true`, these properties are skipped\n   * and not written to Firestore. If set to `false` or omitted, the SDK\n   * throws an exception when it encounters properties of type `undefined`.\n   */\n  ignoreUndefinedProperties?: boolean;\n}\n\n/**\n * @internal\n * Undocumented, private additional settings not exposed in our public API.\n */\nexport interface PrivateSettings extends FirestoreSettings {\n  // Can be a google-auth-library or gapi client.\n  credentials?: CredentialsSettings;\n  cacheSizeBytes?: number;\n  experimentalForceLongPolling?: boolean;\n  experimentalAutoDetectLongPolling?: boolean;\n  experimentalLongPollingOptions?: ExperimentalLongPollingOptions;\n  useFetchStreams?: boolean;\n\n  localCache?: FirestoreLocalCache;\n}\n\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nexport class FirestoreSettingsImpl {\n  /** The hostname to connect to. */\n  readonly host: string;\n\n  /** Whether to use SSL when connecting. */\n  readonly ssl: boolean;\n\n  readonly cacheSizeBytes: number;\n\n  readonly experimentalForceLongPolling: boolean;\n\n  readonly experimentalAutoDetectLongPolling: boolean;\n\n  readonly experimentalLongPollingOptions: ExperimentalLongPollingOptions;\n\n  readonly ignoreUndefinedProperties: boolean;\n\n  readonly useFetchStreams: boolean;\n  readonly localCache?: FirestoreLocalCache;\n\n  // Can be a google-auth-library or gapi client.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  credentials?: any;\n\n  constructor(settings: PrivateSettings) {\n    if (settings.host === undefined) {\n      if (settings.ssl !== undefined) {\n        throw new FirestoreError(\n          Code.INVALID_ARGUMENT,\n          \"Can't provide ssl option if host option is not set\"\n        );\n      }\n      this.host = DEFAULT_HOST;\n      this.ssl = DEFAULT_SSL;\n    } else {\n      this.host = settings.host;\n      this.ssl = settings.ssl ?? DEFAULT_SSL;\n    }\n\n    this.credentials = settings.credentials;\n    this.ignoreUndefinedProperties = !!settings.ignoreUndefinedProperties;\n    this.localCache = settings.localCache;\n\n    if (settings.cacheSizeBytes === undefined) {\n      this.cacheSizeBytes = LRU_DEFAULT_CACHE_SIZE_BYTES;\n    } else {\n      if (\n        settings.cacheSizeBytes !== LRU_COLLECTION_DISABLED &&\n        settings.cacheSizeBytes < LRU_MINIMUM_CACHE_SIZE_BYTES\n      ) {\n        throw new FirestoreError(\n          Code.INVALID_ARGUMENT,\n          `cacheSizeBytes must be at least ${LRU_MINIMUM_CACHE_SIZE_BYTES}`\n        );\n      } else {\n        this.cacheSizeBytes = settings.cacheSizeBytes;\n      }\n    }\n\n    validateIsNotUsedTogether(\n      'experimentalForceLongPolling',\n      settings.experimentalForceLongPolling,\n      'experimentalAutoDetectLongPolling',\n      settings.experimentalAutoDetectLongPolling\n    );\n\n    this.experimentalForceLongPolling = !!settings.experimentalForceLongPolling;\n\n    if (this.experimentalForceLongPolling) {\n      this.experimentalAutoDetectLongPolling = false;\n    } else if (settings.experimentalAutoDetectLongPolling === undefined) {\n      this.experimentalAutoDetectLongPolling = DEFAULT_AUTO_DETECT_LONG_POLLING;\n    } else {\n      // For backwards compatibility, coerce the value to boolean even though\n      // the TypeScript compiler has narrowed the type to boolean already.\n      // noinspection PointlessBooleanExpressionJS\n      this.experimentalAutoDetectLongPolling =\n        !!settings.experimentalAutoDetectLongPolling;\n    }\n\n    this.experimentalLongPollingOptions = cloneLongPollingOptions(\n      settings.experimentalLongPollingOptions ?? {}\n    );\n    validateLongPollingOptions(this.experimentalLongPollingOptions);\n\n    this.useFetchStreams = !!settings.useFetchStreams;\n  }\n\n  isEqual(other: FirestoreSettingsImpl): boolean {\n    return (\n      this.host === other.host &&\n      this.ssl === other.ssl &&\n      this.credentials === other.credentials &&\n      this.cacheSizeBytes === other.cacheSizeBytes &&\n      this.experimentalForceLongPolling ===\n        other.experimentalForceLongPolling &&\n      this.experimentalAutoDetectLongPolling ===\n        other.experimentalAutoDetectLongPolling &&\n      longPollingOptionsEqual(\n        this.experimentalLongPollingOptions,\n        other.experimentalLongPollingOptions\n      ) &&\n      this.ignoreUndefinedProperties === other.ignoreUndefinedProperties &&\n      this.useFetchStreams === other.useFetchStreams\n    );\n  }\n}\n\nfunction validateLongPollingOptions(\n  options: ExperimentalLongPollingOptions\n): void {\n  if (options.timeoutSeconds !== undefined) {\n    if (isNaN(options.timeoutSeconds)) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        `invalid long polling timeout: ` +\n          `${options.timeoutSeconds} (must not be NaN)`\n      );\n    }\n    if (options.timeoutSeconds < MIN_LONG_POLLING_TIMEOUT_SECONDS) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        `invalid long polling timeout: ${options.timeoutSeconds} ` +\n          `(minimum allowed value is ${MIN_LONG_POLLING_TIMEOUT_SECONDS})`\n      );\n    }\n    if (options.timeoutSeconds > MAX_LONG_POLLING_TIMEOUT_SECONDS) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        `invalid long polling timeout: ${options.timeoutSeconds} ` +\n          `(maximum allowed value is ${MAX_LONG_POLLING_TIMEOUT_SECONDS})`\n      );\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirestoreError } from '../api';\nimport { ListenSequence } from '../core/listen_sequence';\nimport { ListenSequenceNumber } from '../core/types';\nimport { debugAssert } from '../util/assert';\nimport { AsyncQueue, DelayedOperation, TimerId } from '../util/async_queue';\nimport { getLogLevel, logDebug, LogLevel } from '../util/log';\nimport { primitiveComparator } from '../util/misc';\nimport { SortedSet } from '../util/sorted_set';\n\nimport { ignoreIfPrimaryLeaseLoss, LocalStore } from './local_store';\nimport {\n  ActiveTargets,\n  GC_DID_NOT_RUN,\n  LRU_COLLECTION_DISABLED,\n  LruDelegate,\n  LruGarbageCollector,\n  LruParams,\n  LruResults\n} from './lru_garbage_collector';\nimport { Scheduler } from './persistence';\nimport { PersistencePromise } from './persistence_promise';\nimport { PersistenceTransaction } from './persistence_transaction';\nimport { isIndexedDbTransactionError } from './simple_db';\n\nconst LOG_TAG = 'LruGarbageCollector';\n\nexport const LRU_MINIMUM_CACHE_SIZE_BYTES = 1 * 1024 * 1024;\n\n/** How long we wait to try running LRU GC after SDK initialization. */\nconst INITIAL_GC_DELAY_MS = 1 * 60 * 1000;\n/** Minimum amount of time between GC checks, after the first one. */\nconst REGULAR_GC_DELAY_MS = 5 * 60 * 1000;\n\n// The type and comparator for the items contained in the SortedSet used in\n// place of a priority queue for the RollingSequenceNumberBuffer.\ntype BufferEntry = [ListenSequenceNumber, number];\n\nfunction bufferEntryComparator(\n  [aSequence, aIndex]: BufferEntry,\n  [bSequence, bIndex]: BufferEntry\n): number {\n  const seqCmp = primitiveComparator(aSequence, bSequence);\n  if (seqCmp === 0) {\n    // This order doesn't matter, but we can bias against churn by sorting\n    // entries created earlier as less than newer entries.\n    return primitiveComparator(aIndex, bIndex);\n  } else {\n    return seqCmp;\n  }\n}\n\n/**\n * Used to calculate the nth sequence number. Keeps a rolling buffer of the\n * lowest n values passed to `addElement`, and finally reports the largest of\n * them in `maxValue`.\n */\nclass RollingSequenceNumberBuffer {\n  private buffer: SortedSet<BufferEntry> = new SortedSet<BufferEntry>(\n    bufferEntryComparator\n  );\n\n  private previousIndex = 0;\n\n  constructor(private readonly maxElements: number) {}\n\n  private nextIndex(): number {\n    return ++this.previousIndex;\n  }\n\n  addElement(sequenceNumber: ListenSequenceNumber): void {\n    const entry: BufferEntry = [sequenceNumber, this.nextIndex()];\n    if (this.buffer.size < this.maxElements) {\n      this.buffer = this.buffer.add(entry);\n    } else {\n      const highestValue = this.buffer.last()!;\n      if (bufferEntryComparator(entry, highestValue) < 0) {\n        this.buffer = this.buffer.delete(highestValue).add(entry);\n      }\n    }\n  }\n\n  get maxValue(): ListenSequenceNumber {\n    // Guaranteed to be non-empty. If we decide we are not collecting any\n    // sequence numbers, nthSequenceNumber below short-circuits. If we have\n    // decided that we are collecting n sequence numbers, it's because n is some\n    // percentage of the existing sequence numbers. That means we should never\n    // be in a situation where we are collecting sequence numbers but don't\n    // actually have any.\n    return this.buffer.last()![0];\n  }\n}\n\n/**\n * This class is responsible for the scheduling of LRU garbage collection. It handles checking\n * whether or not GC is enabled, as well as which delay to use before the next run.\n */\nexport class LruScheduler implements Scheduler {\n  private gcTask: DelayedOperation<void> | null;\n\n  constructor(\n    private readonly garbageCollector: LruGarbageCollector,\n    private readonly asyncQueue: AsyncQueue,\n    private readonly localStore: LocalStore\n  ) {\n    this.gcTask = null;\n  }\n\n  start(): void {\n    debugAssert(\n      this.gcTask === null,\n      'Cannot start an already started LruScheduler'\n    );\n    if (\n      this.garbageCollector.params.cacheSizeCollectionThreshold !==\n      LRU_COLLECTION_DISABLED\n    ) {\n      this.scheduleGC(INITIAL_GC_DELAY_MS);\n    }\n  }\n\n  stop(): void {\n    if (this.gcTask) {\n      this.gcTask.cancel();\n      this.gcTask = null;\n    }\n  }\n\n  get started(): boolean {\n    return this.gcTask !== null;\n  }\n\n  private scheduleGC(delay: number): void {\n    debugAssert(\n      this.gcTask === null,\n      'Cannot schedule GC while a task is pending'\n    );\n    logDebug(LOG_TAG, `Garbage collection scheduled in ${delay}ms`);\n    this.gcTask = this.asyncQueue.enqueueAfterDelay(\n      TimerId.LruGarbageCollection,\n      delay,\n      async () => {\n        this.gcTask = null;\n        try {\n          await this.localStore.collectGarbage(this.garbageCollector);\n        } catch (e) {\n          if (isIndexedDbTransactionError(e as Error)) {\n            logDebug(\n              LOG_TAG,\n              'Ignoring IndexedDB error during garbage collection: ',\n              e\n            );\n          } else {\n            await ignoreIfPrimaryLeaseLoss(e as FirestoreError);\n          }\n        }\n        await this.scheduleGC(REGULAR_GC_DELAY_MS);\n      }\n    );\n  }\n}\n\n/**\n * Implements the steps for LRU garbage collection.\n */\nclass LruGarbageCollectorImpl implements LruGarbageCollector {\n  constructor(\n    private readonly delegate: LruDelegate,\n    readonly params: LruParams\n  ) {}\n\n  calculateTargetCount(\n    txn: PersistenceTransaction,\n    percentile: number\n  ): PersistencePromise<number> {\n    return this.delegate.getSequenceNumberCount(txn).next(targetCount => {\n      return Math.floor((percentile / 100.0) * targetCount);\n    });\n  }\n\n  nthSequenceNumber(\n    txn: PersistenceTransaction,\n    n: number\n  ): PersistencePromise<ListenSequenceNumber> {\n    if (n === 0) {\n      return PersistencePromise.resolve(ListenSequence.INVALID);\n    }\n\n    const buffer = new RollingSequenceNumberBuffer(n);\n    return this.delegate\n      .forEachTarget(txn, target => buffer.addElement(target.sequenceNumber))\n      .next(() => {\n        return this.delegate.forEachOrphanedDocumentSequenceNumber(\n          txn,\n          sequenceNumber => buffer.addElement(sequenceNumber)\n        );\n      })\n      .next(() => buffer.maxValue);\n  }\n\n  removeTargets(\n    txn: PersistenceTransaction,\n    upperBound: ListenSequenceNumber,\n    activeTargetIds: ActiveTargets\n  ): PersistencePromise<number> {\n    return this.delegate.removeTargets(txn, upperBound, activeTargetIds);\n  }\n\n  removeOrphanedDocuments(\n    txn: PersistenceTransaction,\n    upperBound: ListenSequenceNumber\n  ): PersistencePromise<number> {\n    return this.delegate.removeOrphanedDocuments(txn, upperBound);\n  }\n\n  collect(\n    txn: PersistenceTransaction,\n    activeTargetIds: ActiveTargets\n  ): PersistencePromise<LruResults> {\n    if (this.params.cacheSizeCollectionThreshold === LRU_COLLECTION_DISABLED) {\n      logDebug('LruGarbageCollector', 'Garbage collection skipped; disabled');\n      return PersistencePromise.resolve(GC_DID_NOT_RUN);\n    }\n\n    return this.getCacheSize(txn).next(cacheSize => {\n      if (cacheSize < this.params.cacheSizeCollectionThreshold) {\n        logDebug(\n          'LruGarbageCollector',\n          `Garbage collection skipped; Cache size ${cacheSize} ` +\n            `is lower than threshold ${this.params.cacheSizeCollectionThreshold}`\n        );\n        return GC_DID_NOT_RUN;\n      } else {\n        return this.runGarbageCollection(txn, activeTargetIds);\n      }\n    });\n  }\n\n  getCacheSize(txn: PersistenceTransaction): PersistencePromise<number> {\n    return this.delegate.getCacheSize(txn);\n  }\n\n  private runGarbageCollection(\n    txn: PersistenceTransaction,\n    activeTargetIds: ActiveTargets\n  ): PersistencePromise<LruResults> {\n    let upperBoundSequenceNumber: number;\n    let sequenceNumbersToCollect: number, targetsRemoved: number;\n    // Timestamps for various pieces of the process\n    let countedTargetsTs: number,\n      foundUpperBoundTs: number,\n      removedTargetsTs: number,\n      removedDocumentsTs: number;\n    const startTs = Date.now();\n    return this.calculateTargetCount(txn, this.params.percentileToCollect)\n      .next(sequenceNumbers => {\n        // Cap at the configured max\n        if (sequenceNumbers > this.params.maximumSequenceNumbersToCollect) {\n          logDebug(\n            'LruGarbageCollector',\n            'Capping sequence numbers to collect down ' +\n              `to the maximum of ${this.params.maximumSequenceNumbersToCollect} ` +\n              `from ${sequenceNumbers}`\n          );\n          sequenceNumbersToCollect =\n            this.params.maximumSequenceNumbersToCollect;\n        } else {\n          sequenceNumbersToCollect = sequenceNumbers;\n        }\n        countedTargetsTs = Date.now();\n\n        return this.nthSequenceNumber(txn, sequenceNumbersToCollect);\n      })\n      .next(upperBound => {\n        upperBoundSequenceNumber = upperBound;\n        foundUpperBoundTs = Date.now();\n\n        return this.removeTargets(\n          txn,\n          upperBoundSequenceNumber,\n          activeTargetIds\n        );\n      })\n      .next(numTargetsRemoved => {\n        targetsRemoved = numTargetsRemoved;\n        removedTargetsTs = Date.now();\n\n        return this.removeOrphanedDocuments(txn, upperBoundSequenceNumber);\n      })\n      .next(documentsRemoved => {\n        removedDocumentsTs = Date.now();\n\n        if (getLogLevel() <= LogLevel.DEBUG) {\n          const desc =\n            'LRU Garbage Collection\\n' +\n            `\\tCounted targets in ${countedTargetsTs - startTs}ms\\n` +\n            `\\tDetermined least recently used ${sequenceNumbersToCollect} in ` +\n            `${foundUpperBoundTs - countedTargetsTs}ms\\n` +\n            `\\tRemoved ${targetsRemoved} targets in ` +\n            `${removedTargetsTs - foundUpperBoundTs}ms\\n` +\n            `\\tRemoved ${documentsRemoved} documents in ` +\n            `${removedDocumentsTs - removedTargetsTs}ms\\n` +\n            `Total Duration: ${removedDocumentsTs - startTs}ms`;\n          logDebug('LruGarbageCollector', desc);\n        }\n\n        return PersistencePromise.resolve<LruResults>({\n          didRun: true,\n          sequenceNumbersCollected: sequenceNumbersToCollect,\n          targetsRemoved,\n          documentsRemoved\n        });\n      });\n  }\n}\n\nexport function newLruGarbageCollector(\n  delegate: LruDelegate,\n  params: LruParams\n): LruGarbageCollector {\n  return new LruGarbageCollectorImpl(delegate, params);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _getProvider,\n  _removeServiceInstance,\n  FirebaseApp,\n  getApp\n} from '@firebase/app';\nimport {\n  createMockUserToken,\n  EmulatorMockTokenOptions,\n  getDefaultEmulatorHostnameAndPort\n} from '@firebase/util';\n\nimport {\n  CredentialsProvider,\n  EmulatorAuthCredentialsProvider,\n  makeAuthCredentialsProvider,\n  OAuthToken\n} from '../api/credentials';\nimport { User } from '../auth/user';\nimport { DatabaseId, DEFAULT_DATABASE_NAME } from '../core/database_info';\nimport { Code, FirestoreError } from '../util/error';\nimport { cast } from '../util/input_validation';\nimport { logWarn } from '../util/log';\n\nimport { FirestoreService, removeComponents } from './components';\nimport {\n  DEFAULT_HOST,\n  FirestoreSettingsImpl,\n  PrivateSettings,\n  FirestoreSettings\n} from './settings';\n\nexport { EmulatorMockTokenOptions } from '@firebase/util';\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'firestore/lite': Firestore;\n  }\n}\n\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link (getFirestore:1)}.\n */\nexport class Firestore implements FirestoreService {\n  /**\n   * Whether it's a Firestore or Firestore Lite instance.\n   */\n  type: 'firestore-lite' | 'firestore' = 'firestore-lite';\n\n  readonly _persistenceKey: string = '(lite)';\n\n  private _settings = new FirestoreSettingsImpl({});\n  private _settingsFrozen = false;\n\n  // A task that is assigned when the terminate() is invoked and resolved when\n  // all components have shut down.\n  private _terminateTask?: Promise<void>;\n\n  /** @hideconstructor */\n  constructor(\n    public _authCredentials: CredentialsProvider<User>,\n    public _appCheckCredentials: CredentialsProvider<string>,\n    readonly _databaseId: DatabaseId,\n    readonly _app?: FirebaseApp\n  ) {}\n\n  /**\n   * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n   * instance.\n   */\n  get app(): FirebaseApp {\n    if (!this._app) {\n      throw new FirestoreError(\n        Code.FAILED_PRECONDITION,\n        \"Firestore was not initialized using the Firebase SDK. 'app' is \" +\n          'not available'\n      );\n    }\n    return this._app;\n  }\n\n  get _initialized(): boolean {\n    return this._settingsFrozen;\n  }\n\n  get _terminated(): boolean {\n    return this._terminateTask !== undefined;\n  }\n\n  _setSettings(settings: PrivateSettings): void {\n    if (this._settingsFrozen) {\n      throw new FirestoreError(\n        Code.FAILED_PRECONDITION,\n        'Firestore has already been started and its settings can no longer ' +\n          'be changed. You can only modify settings before calling any other ' +\n          'methods on a Firestore object.'\n      );\n    }\n    this._settings = new FirestoreSettingsImpl(settings);\n    if (settings.credentials !== undefined) {\n      this._authCredentials = makeAuthCredentialsProvider(settings.credentials);\n    }\n  }\n\n  _getSettings(): FirestoreSettingsImpl {\n    return this._settings;\n  }\n\n  _freezeSettings(): FirestoreSettingsImpl {\n    this._settingsFrozen = true;\n    return this._settings;\n  }\n\n  _delete(): Promise<void> {\n    if (!this._terminateTask) {\n      this._terminateTask = this._terminate();\n    }\n    return this._terminateTask;\n  }\n\n  /** Returns a JSON-serializable representation of this `Firestore` instance. */\n  toJSON(): object {\n    return {\n      app: this._app,\n      databaseId: this._databaseId,\n      settings: this._settings\n    };\n  }\n\n  /**\n   * Terminates all components used by this client. Subclasses can override\n   * this method to clean up their own dependencies, but must also call this\n   * method.\n   *\n   * Only ever called once.\n   */\n  protected _terminate(): Promise<void> {\n    removeComponents(this);\n    return Promise.resolve();\n  }\n}\n\n/**\n * Initializes a new instance of Cloud Firestore with the provided settings.\n * Can only be called before any other functions, including\n * {@link (getFirestore:1)}. If the custom settings are empty, this function is\n * equivalent to calling {@link (getFirestore:1)}.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} with which the `Firestore` instance will\n * be associated.\n * @param settings - A settings object to configure the `Firestore` instance.\n * @returns A newly initialized `Firestore` instance.\n */\nexport function initializeFirestore(\n  app: FirebaseApp,\n  settings: FirestoreSettings\n): Firestore;\n/**\n * Initializes a new instance of Cloud Firestore with the provided settings.\n * Can only be called before any other functions, including\n * {@link (getFirestore:1)}. If the custom settings are empty, this function is\n * equivalent to calling {@link (getFirestore:1)}.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} with which the `Firestore` instance will\n * be associated.\n * @param settings - A settings object to configure the `Firestore` instance.\n * @param databaseId - The name of the database.\n * @returns A newly initialized `Firestore` instance.\n * @beta\n */\nexport function initializeFirestore(\n  app: FirebaseApp,\n  settings: FirestoreSettings,\n  databaseId?: string\n): Firestore;\nexport function initializeFirestore(\n  app: FirebaseApp,\n  settings: FirestoreSettings,\n  databaseId?: string\n): Firestore {\n  if (!databaseId) {\n    databaseId = DEFAULT_DATABASE_NAME;\n  }\n  const provider = _getProvider(app, 'firestore/lite');\n\n  if (provider.isInitialized(databaseId)) {\n    throw new FirestoreError(\n      Code.FAILED_PRECONDITION,\n      'Firestore can only be initialized once per app.'\n    );\n  }\n\n  return provider.initialize({\n    options: settings,\n    instanceIdentifier: databaseId\n  });\n}\n\n/**\n * Returns the existing default {@link Firestore} instance that is associated with the\n * default {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new\n * instance with default settings.\n *\n * @returns The {@link Firestore} instance of the provided app.\n */\nexport function getFirestore(): Firestore;\n/**\n * Returns the existing default {@link Firestore} instance that is associated with the\n * provided {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new\n * instance with default settings.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned {@link Firestore}\n * instance is associated with.\n * @returns The {@link Firestore} instance of the provided app.\n */\nexport function getFirestore(app: FirebaseApp): Firestore;\n/**\n * Returns the existing {@link Firestore} instance that is associated with the\n * default {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new\n * instance with default settings.\n *\n * @param databaseId - The name of the database.\n * @returns The {@link Firestore} instance of the provided app.\n * @beta\n */\nexport function getFirestore(databaseId: string): Firestore;\n/**\n * Returns the existing {@link Firestore} instance that is associated with the\n * provided {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new\n * instance with default settings.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned {@link Firestore}\n * instance is associated with.\n * @param databaseId - The name of the database.\n * @returns The {@link Firestore} instance of the provided app.\n * @beta\n */\nexport function getFirestore(app: FirebaseApp, databaseId: string): Firestore;\nexport function getFirestore(\n  appOrDatabaseId?: FirebaseApp | string,\n  optionalDatabaseId?: string\n): Firestore {\n  const app: FirebaseApp =\n    typeof appOrDatabaseId === 'object' ? appOrDatabaseId : getApp();\n  const databaseId =\n    typeof appOrDatabaseId === 'string'\n      ? appOrDatabaseId\n      : optionalDatabaseId || '(default)';\n  const db = _getProvider(app, 'firestore/lite').getImmediate({\n    identifier: databaseId\n  }) as Firestore;\n  if (!db._initialized) {\n    const emulator = getDefaultEmulatorHostnameAndPort('firestore');\n    if (emulator) {\n      connectFirestoreEmulator(db, ...emulator);\n    }\n  }\n  return db;\n}\n\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */\nexport function connectFirestoreEmulator(\n  firestore: Firestore,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  firestore = cast(firestore, Firestore);\n  const settings = firestore._getSettings();\n  const newHostSetting = `${host}:${port}`;\n\n  if (settings.host !== DEFAULT_HOST && settings.host !== newHostSetting) {\n    logWarn(\n      'Host has been set in both settings() and connectFirestoreEmulator(), emulator host ' +\n        'will be used.'\n    );\n  }\n\n  firestore._setSettings({\n    ...settings,\n    host: newHostSetting,\n    ssl: false\n  });\n\n  if (options.mockUserToken) {\n    let token: string;\n    let user: User;\n    if (typeof options.mockUserToken === 'string') {\n      token = options.mockUserToken;\n      user = User.MOCK_USER;\n    } else {\n      // Let createMockUserToken validate first (catches common mistakes like\n      // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n      token = createMockUserToken(\n        options.mockUserToken,\n        firestore._app?.options.projectId\n      );\n      const uid = options.mockUserToken.sub || options.mockUserToken.user_id;\n      if (!uid) {\n        throw new FirestoreError(\n          Code.INVALID_ARGUMENT,\n          \"mockUserToken must contain 'sub' or 'user_id' field!\"\n        );\n      }\n      user = new User(uid);\n    }\n\n    firestore._authCredentials = new EmulatorAuthCredentialsProvider(\n      new OAuthToken(token, user)\n    );\n  }\n}\n\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link (getFirestore:1)}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */\nexport function terminate(firestore: Firestore): Promise<void> {\n  firestore = cast(firestore, Firestore);\n  _removeServiceInstance(firestore.app, 'firestore/lite');\n  return firestore._delete();\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getModularInstance } from '@firebase/util';\n\nimport {\n  newQueryForCollectionGroup,\n  newQueryForPath,\n  Query as InternalQuery,\n  queryEquals\n} from '../core/query';\nimport { DocumentKey } from '../model/document_key';\nimport { ResourcePath } from '../model/path';\nimport { Code, FirestoreError } from '../util/error';\nimport {\n  cast,\n  validateCollectionPath,\n  validateDocumentPath,\n  validateNonEmptyArgument\n} from '../util/input_validation';\nimport { AutoId } from '../util/misc';\n\nimport { Firestore } from './database';\nimport { FieldPath } from './field_path';\nimport { FieldValue } from './field_value';\nimport { FirestoreDataConverter } from './snapshot';\nimport { NestedUpdateFields, Primitive } from './types';\n\n/**\n * Document data (for use with {@link @firebase/firestore/lite#(setDoc:1)}) consists of fields mapped to\n * values.\n */\nexport interface DocumentData {\n  /** A mapping between a field and its value. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [field: string]: any;\n}\n\n/**\n * Similar to Typescript's `Partial<T>`, but allows nested fields to be\n * omitted and FieldValues to be passed in as property values.\n */\nexport type PartialWithFieldValue<T> =\n  | Partial<T>\n  | (T extends Primitive\n      ? T\n      : T extends {}\n      ? { [K in keyof T]?: PartialWithFieldValue<T[K]> | FieldValue }\n      : never);\n\n/**\n * Allows FieldValues to be passed in as a property value while maintaining\n * type safety.\n */\nexport type WithFieldValue<T> =\n  | T\n  | (T extends Primitive\n      ? T\n      : T extends {}\n      ? { [K in keyof T]: WithFieldValue<T[K]> | FieldValue }\n      : never);\n\n/**\n * Update data (for use with {@link (updateDoc:1)}) that consists of field paths\n * (e.g. 'foo' or 'foo.baz') mapped to values. Fields that contain dots\n * reference nested fields within the document. FieldValues can be passed in\n * as property values.\n */\nexport type UpdateData<T> = T extends Primitive\n  ? T\n  : T extends {}\n  ? { [K in keyof T]?: UpdateData<T[K]> | FieldValue } & NestedUpdateFields<T>\n  : Partial<T>;\n/**\n * An options object that configures the behavior of {@link @firebase/firestore/lite#(setDoc:1)}, {@link\n * @firebase/firestore/lite#(WriteBatch.set:1)} and {@link @firebase/firestore/lite#(Transaction.set:1)} calls. These calls can be\n * configured to perform granular merges instead of overwriting the target\n * documents in their entirety by providing a `SetOptions` with `merge: true`.\n *\n * @param merge - Changes the behavior of a `setDoc()` call to only replace the\n * values specified in its data argument. Fields omitted from the `setDoc()`\n * call remain untouched. If your input sets any field to an empty map, all\n * nested fields are overwritten.\n * @param mergeFields - Changes the behavior of `setDoc()` calls to only replace\n * the specified field paths. Any field path that is not specified is ignored\n * and remains untouched. If your input sets any field to an empty map, all\n * nested fields are overwritten.\n */\nexport type SetOptions =\n  | {\n      readonly merge?: boolean;\n    }\n  | {\n      readonly mergeFields?: Array<string | FieldPath>;\n    };\n\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */\nexport class Query<\n  AppModelType = DocumentData,\n  DbModelType extends DocumentData = DocumentData\n> {\n  /** The type of this Firestore reference. */\n  readonly type: 'query' | 'collection' = 'query';\n\n  /**\n   * The `Firestore` instance for the Firestore database (useful for performing\n   * transactions, etc.).\n   */\n  readonly firestore: Firestore;\n\n  // This is the lite version of the Query class in the main SDK.\n\n  /** @hideconstructor protected */\n  constructor(\n    firestore: Firestore,\n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    readonly converter: FirestoreDataConverter<\n      AppModelType,\n      DbModelType\n    > | null,\n    readonly _query: InternalQuery\n  ) {\n    this.firestore = firestore;\n  }\n\n  /**\n   * Removes the current converter.\n   *\n   * @param converter - `null` removes the current converter.\n   * @returns A `Query<DocumentData, DocumentData>` that does not use a\n   * converter.\n   */\n  withConverter(converter: null): Query<DocumentData, DocumentData>;\n  /**\n   * Applies a custom data converter to this query, allowing you to use your own\n   * custom model objects with Firestore. When you call {@link getDocs} with\n   * the returned query, the provided converter will convert between Firestore\n   * data of type `NewDbModelType` and your custom type `NewAppModelType`.\n   *\n   * @param converter - Converts objects to and from Firestore.\n   * @returns A `Query` that uses the provided converter.\n   */\n  withConverter<\n    NewAppModelType,\n    NewDbModelType extends DocumentData = DocumentData\n  >(\n    converter: FirestoreDataConverter<NewAppModelType, NewDbModelType>\n  ): Query<NewAppModelType, NewDbModelType>;\n  withConverter<\n    NewAppModelType,\n    NewDbModelType extends DocumentData = DocumentData\n  >(\n    converter: FirestoreDataConverter<NewAppModelType, NewDbModelType> | null\n  ): Query<NewAppModelType, NewDbModelType> {\n    return new Query<NewAppModelType, NewDbModelType>(\n      this.firestore,\n      converter,\n      this._query\n    );\n  }\n}\n\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */\nexport class DocumentReference<\n  AppModelType = DocumentData,\n  DbModelType extends DocumentData = DocumentData\n> {\n  /** The type of this Firestore reference. */\n  readonly type = 'document';\n\n  /**\n   * The {@link Firestore} instance the document is in.\n   * This is useful for performing transactions, for example.\n   */\n  readonly firestore: Firestore;\n\n  /** @hideconstructor */\n  constructor(\n    firestore: Firestore,\n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    readonly converter: FirestoreDataConverter<\n      AppModelType,\n      DbModelType\n    > | null,\n    readonly _key: DocumentKey\n  ) {\n    this.firestore = firestore;\n  }\n\n  get _path(): ResourcePath {\n    return this._key.path;\n  }\n\n  /**\n   * The document's identifier within its collection.\n   */\n  get id(): string {\n    return this._key.path.lastSegment();\n  }\n\n  /**\n   * A string representing the path of the referenced document (relative\n   * to the root of the database).\n   */\n  get path(): string {\n    return this._key.path.canonicalString();\n  }\n\n  /**\n   * The collection this `DocumentReference` belongs to.\n   */\n  get parent(): CollectionReference<AppModelType, DbModelType> {\n    return new CollectionReference<AppModelType, DbModelType>(\n      this.firestore,\n      this.converter,\n      this._key.path.popLast()\n    );\n  }\n\n  /**\n   * Applies a custom data converter to this `DocumentReference`, allowing you\n   * to use your own custom model objects with Firestore. When you call {@link\n   * @firebase/firestore/lite#(setDoc:1)}, {@link @firebase/firestore/lite#getDoc}, etc. with the returned `DocumentReference`\n   * instance, the provided converter will convert between Firestore data of\n   * type `NewDbModelType` and your custom type `NewAppModelType`.\n   *\n   * @param converter - Converts objects to and from Firestore.\n   * @returns A `DocumentReference` that uses the provided converter.\n   */\n  withConverter<\n    NewAppModelType,\n    NewDbModelType extends DocumentData = DocumentData\n  >(\n    converter: FirestoreDataConverter<NewAppModelType, NewDbModelType>\n  ): DocumentReference<NewAppModelType, NewDbModelType>;\n  /**\n   * Removes the current converter.\n   *\n   * @param converter - `null` removes the current converter.\n   * @returns A `DocumentReference<DocumentData, DocumentData>` that does not\n   * use a converter.\n   */\n  withConverter(converter: null): DocumentReference<DocumentData, DocumentData>;\n  withConverter<\n    NewAppModelType,\n    NewDbModelType extends DocumentData = DocumentData\n  >(\n    converter: FirestoreDataConverter<NewAppModelType, NewDbModelType> | null\n  ): DocumentReference<NewAppModelType, NewDbModelType> {\n    return new DocumentReference<NewAppModelType, NewDbModelType>(\n      this.firestore,\n      converter,\n      this._key\n    );\n  }\n}\n\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link (query:1)}).\n */\nexport class CollectionReference<\n  AppModelType = DocumentData,\n  DbModelType extends DocumentData = DocumentData\n> extends Query<AppModelType, DbModelType> {\n  /** The type of this Firestore reference. */\n  readonly type = 'collection';\n\n  /** @hideconstructor */\n  constructor(\n    firestore: Firestore,\n    converter: FirestoreDataConverter<AppModelType, DbModelType> | null,\n    readonly _path: ResourcePath\n  ) {\n    super(firestore, converter, newQueryForPath(_path));\n  }\n\n  /** The collection's identifier. */\n  get id(): string {\n    return this._query.path.lastSegment();\n  }\n\n  /**\n   * A string representing the path of the referenced collection (relative\n   * to the root of the database).\n   */\n  get path(): string {\n    return this._query.path.canonicalString();\n  }\n\n  /**\n   * A reference to the containing `DocumentReference` if this is a\n   * subcollection. If this isn't a subcollection, the reference is null.\n   */\n  get parent(): DocumentReference<DocumentData, DocumentData> | null {\n    const parentPath = this._path.popLast();\n    if (parentPath.isEmpty()) {\n      return null;\n    } else {\n      return new DocumentReference(\n        this.firestore,\n        /* converter= */ null,\n        new DocumentKey(parentPath)\n      );\n    }\n  }\n\n  /**\n   * Applies a custom data converter to this `CollectionReference`, allowing you\n   * to use your own custom model objects with Firestore. When you call {@link\n   * addDoc} with the returned `CollectionReference` instance, the provided\n   * converter will convert between Firestore data of type `NewDbModelType` and\n   * your custom type `NewAppModelType`.\n   *\n   * @param converter - Converts objects to and from Firestore.\n   * @returns A `CollectionReference` that uses the provided converter.\n   */\n  withConverter<\n    NewAppModelType,\n    NewDbModelType extends DocumentData = DocumentData\n  >(\n    converter: FirestoreDataConverter<NewAppModelType, NewDbModelType>\n  ): CollectionReference<NewAppModelType, NewDbModelType>;\n  /**\n   * Removes the current converter.\n   *\n   * @param converter - `null` removes the current converter.\n   * @returns A `CollectionReference<DocumentData, DocumentData>` that does not\n   * use a converter.\n   */\n  withConverter(\n    converter: null\n  ): CollectionReference<DocumentData, DocumentData>;\n  withConverter<\n    NewAppModelType,\n    NewDbModelType extends DocumentData = DocumentData\n  >(\n    converter: FirestoreDataConverter<NewAppModelType, NewDbModelType> | null\n  ): CollectionReference<NewAppModelType, NewDbModelType> {\n    return new CollectionReference<NewAppModelType, NewDbModelType>(\n      this.firestore,\n      converter,\n      this._path\n    );\n  }\n}\n\n/**\n * Gets a `CollectionReference` instance that refers to the collection at\n * the specified absolute path.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param path - A slash-separated path to a collection.\n * @param pathSegments - Additional path segments to apply relative to the first\n * argument.\n * @throws If the final path has an even number of segments and does not point\n * to a collection.\n * @returns The `CollectionReference` instance.\n */\nexport function collection(\n  firestore: Firestore,\n  path: string,\n  ...pathSegments: string[]\n): CollectionReference<DocumentData, DocumentData>;\n/**\n * Gets a `CollectionReference` instance that refers to a subcollection of\n * `reference` at the the specified relative path.\n *\n * @param reference - A reference to a collection.\n * @param path - A slash-separated path to a collection.\n * @param pathSegments - Additional path segments to apply relative to the first\n * argument.\n * @throws If the final path has an even number of segments and does not point\n * to a collection.\n * @returns The `CollectionReference` instance.\n */\nexport function collection<AppModelType, DbModelType extends DocumentData>(\n  reference: CollectionReference<AppModelType, DbModelType>,\n  path: string,\n  ...pathSegments: string[]\n): CollectionReference<DocumentData, DocumentData>;\n/**\n * Gets a `CollectionReference` instance that refers to a subcollection of\n * `reference` at the the specified relative path.\n *\n * @param reference - A reference to a Firestore document.\n * @param path - A slash-separated path to a collection.\n * @param pathSegments - Additional path segments that will be applied relative\n * to the first argument.\n * @throws If the final path has an even number of segments and does not point\n * to a collection.\n * @returns The `CollectionReference` instance.\n */\nexport function collection<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>,\n  path: string,\n  ...pathSegments: string[]\n): CollectionReference<DocumentData, DocumentData>;\nexport function collection<AppModelType, DbModelType extends DocumentData>(\n  parent:\n    | Firestore\n    | DocumentReference<AppModelType, DbModelType>\n    | CollectionReference<AppModelType, DbModelType>,\n  path: string,\n  ...pathSegments: string[]\n): CollectionReference<DocumentData, DocumentData> {\n  parent = getModularInstance(parent);\n\n  validateNonEmptyArgument('collection', 'path', path);\n  if (parent instanceof Firestore) {\n    const absolutePath = ResourcePath.fromString(path, ...pathSegments);\n    validateCollectionPath(absolutePath);\n    return new CollectionReference(parent, /* converter= */ null, absolutePath);\n  } else {\n    if (\n      !(parent instanceof DocumentReference) &&\n      !(parent instanceof CollectionReference)\n    ) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'Expected first argument to collection() to be a CollectionReference, ' +\n          'a DocumentReference or FirebaseFirestore'\n      );\n    }\n    const absolutePath = parent._path.child(\n      ResourcePath.fromString(path, ...pathSegments)\n    );\n    validateCollectionPath(absolutePath);\n    return new CollectionReference(\n      parent.firestore,\n      /* converter= */ null,\n      absolutePath\n    );\n  }\n}\n\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */\nexport function collectionGroup(\n  firestore: Firestore,\n  collectionId: string\n): Query<DocumentData, DocumentData> {\n  firestore = cast(firestore, Firestore);\n\n  validateNonEmptyArgument('collectionGroup', 'collection id', collectionId);\n  if (collectionId.indexOf('/') >= 0) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      `Invalid collection ID '${collectionId}' passed to function ` +\n        `collectionGroup(). Collection IDs must not contain '/'.`\n    );\n  }\n\n  return new Query(\n    firestore,\n    /* converter= */ null,\n    newQueryForCollectionGroup(collectionId)\n  );\n}\n\n/**\n * Gets a `DocumentReference` instance that refers to the document at the\n * specified absolute path.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param path - A slash-separated path to a document.\n * @param pathSegments - Additional path segments that will be applied relative\n * to the first argument.\n * @throws If the final path has an odd number of segments and does not point to\n * a document.\n * @returns The `DocumentReference` instance.\n */\nexport function doc(\n  firestore: Firestore,\n  path: string,\n  ...pathSegments: string[]\n): DocumentReference<DocumentData, DocumentData>;\n/**\n * Gets a `DocumentReference` instance that refers to a document within\n * `reference` at the specified relative path. If no path is specified, an\n * automatically-generated unique ID will be used for the returned\n * `DocumentReference`.\n *\n * @param reference - A reference to a collection.\n * @param path - A slash-separated path to a document. Has to be omitted to use\n * auto-genrated IDs.\n * @param pathSegments - Additional path segments that will be applied relative\n * to the first argument.\n * @throws If the final path has an odd number of segments and does not point to\n * a document.\n * @returns The `DocumentReference` instance.\n */\nexport function doc<AppModelType, DbModelType extends DocumentData>(\n  reference: CollectionReference<AppModelType, DbModelType>,\n  path?: string,\n  ...pathSegments: string[]\n): DocumentReference<AppModelType, DbModelType>;\n/**\n * Gets a `DocumentReference` instance that refers to a document within\n * `reference` at the specified relative path.\n *\n * @param reference - A reference to a Firestore document.\n * @param path - A slash-separated path to a document.\n * @param pathSegments - Additional path segments that will be applied relative\n * to the first argument.\n * @throws If the final path has an odd number of segments and does not point to\n * a document.\n * @returns The `DocumentReference` instance.\n */\nexport function doc<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>,\n  path: string,\n  ...pathSegments: string[]\n): DocumentReference<DocumentData, DocumentData>;\nexport function doc<AppModelType, DbModelType extends DocumentData>(\n  parent:\n    | Firestore\n    | CollectionReference<AppModelType, DbModelType>\n    | DocumentReference<AppModelType, DbModelType>,\n  path?: string,\n  ...pathSegments: string[]\n): DocumentReference<AppModelType, DbModelType> {\n  parent = getModularInstance(parent);\n\n  // We allow omission of 'pathString' but explicitly prohibit passing in both\n  // 'undefined' and 'null'.\n  if (arguments.length === 1) {\n    path = AutoId.newId();\n  }\n  validateNonEmptyArgument('doc', 'path', path);\n\n  if (parent instanceof Firestore) {\n    const absolutePath = ResourcePath.fromString(path, ...pathSegments);\n    validateDocumentPath(absolutePath);\n    return new DocumentReference(\n      parent,\n      /* converter= */ null,\n      new DocumentKey(absolutePath)\n    );\n  } else {\n    if (\n      !(parent instanceof DocumentReference) &&\n      !(parent instanceof CollectionReference)\n    ) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'Expected first argument to collection() to be a CollectionReference, ' +\n          'a DocumentReference or FirebaseFirestore'\n      );\n    }\n    const absolutePath = parent._path.child(\n      ResourcePath.fromString(path, ...pathSegments)\n    );\n    validateDocumentPath(absolutePath);\n    return new DocumentReference<AppModelType, DbModelType>(\n      parent.firestore,\n      parent instanceof CollectionReference ? parent.converter : null,\n      new DocumentKey(absolutePath)\n    );\n  }\n}\n\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */\nexport function refEqual<AppModelType, DbModelType extends DocumentData>(\n  left:\n    | DocumentReference<AppModelType, DbModelType>\n    | CollectionReference<AppModelType, DbModelType>,\n  right:\n    | DocumentReference<AppModelType, DbModelType>\n    | CollectionReference<AppModelType, DbModelType>\n): boolean {\n  left = getModularInstance(left);\n  right = getModularInstance(right);\n\n  if (\n    (left instanceof DocumentReference ||\n      left instanceof CollectionReference) &&\n    (right instanceof DocumentReference || right instanceof CollectionReference)\n  ) {\n    return (\n      left.firestore === right.firestore &&\n      left.path === right.path &&\n      left.converter === right.converter\n    );\n  }\n  return false;\n}\n\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */\nexport function queryEqual<AppModelType, DbModelType extends DocumentData>(\n  left: Query<AppModelType, DbModelType>,\n  right: Query<AppModelType, DbModelType>\n): boolean {\n  left = getModularInstance(left);\n  right = getModularInstance(right);\n\n  if (left instanceof Query && right instanceof Query) {\n    return (\n      left.firestore === right.firestore &&\n      queryEquals(left._query, right._query) &&\n      left.converter === right.converter\n    );\n  }\n  return false;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isIndexedDbTransactionError } from '../local/simple_db';\nimport { getDocument } from '../platform/dom';\nimport { ExponentialBackoff } from '../remote/backoff';\n\nimport { debugAssert, fail } from './assert';\nimport { AsyncQueue, DelayedOperation, TimerId } from './async_queue';\nimport { FirestoreError } from './error';\nimport { logDebug, logError } from './log';\nimport { Deferred } from './promise';\n\nconst LOG_TAG = 'AsyncQueue';\n\nexport class AsyncQueueImpl implements AsyncQueue {\n  // The last promise in the queue.\n  private tail: Promise<unknown> = Promise.resolve();\n\n  // A list of retryable operations. Retryable operations are run in order and\n  // retried with backoff.\n  private retryableOps: Array<() => Promise<void>> = [];\n\n  // Is this AsyncQueue being shut down? Once it is set to true, it will not\n  // be changed again.\n  private _isShuttingDown: boolean = false;\n\n  // Operations scheduled to be queued in the future. Operations are\n  // automatically removed after they are run or canceled.\n  private delayedOperations: Array<DelayedOperation<unknown>> = [];\n\n  // visible for testing\n  failure: FirestoreError | null = null;\n\n  // Flag set while there's an outstanding AsyncQueue operation, used for\n  // assertion sanity-checks.\n  private operationInProgress = false;\n\n  // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n  private skipNonRestrictedTasks = false;\n\n  // List of TimerIds to fast-forward delays for.\n  private timerIdsToSkip: TimerId[] = [];\n\n  // Backoff timer used to schedule retries for retryable operations\n  private backoff = new ExponentialBackoff(this, TimerId.AsyncQueueRetry);\n\n  // Visibility handler that triggers an immediate retry of all retryable\n  // operations. Meant to speed up recovery when we regain file system access\n  // after page comes into foreground.\n  private visibilityHandler: () => void = () => {\n    const document = getDocument();\n    if (document) {\n      logDebug(\n        LOG_TAG,\n        'Visibility state changed to ' + document.visibilityState\n      );\n    }\n    this.backoff.skipBackoff();\n  };\n\n  constructor() {\n    const document = getDocument();\n    if (document && typeof document.addEventListener === 'function') {\n      document.addEventListener('visibilitychange', this.visibilityHandler);\n    }\n  }\n\n  get isShuttingDown(): boolean {\n    return this._isShuttingDown;\n  }\n\n  /**\n   * Adds a new operation to the queue without waiting for it to complete (i.e.\n   * we ignore the Promise result).\n   */\n  enqueueAndForget<T extends unknown>(op: () => Promise<T>): void {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.enqueue(op);\n  }\n\n  enqueueAndForgetEvenWhileRestricted<T extends unknown>(\n    op: () => Promise<T>\n  ): void {\n    this.verifyNotFailed();\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.enqueueInternal(op);\n  }\n\n  enterRestrictedMode(purgeExistingTasks?: boolean): void {\n    if (!this._isShuttingDown) {\n      this._isShuttingDown = true;\n      this.skipNonRestrictedTasks = purgeExistingTasks || false;\n      const document = getDocument();\n      if (document && typeof document.removeEventListener === 'function') {\n        document.removeEventListener(\n          'visibilitychange',\n          this.visibilityHandler\n        );\n      }\n    }\n  }\n\n  enqueue<T extends unknown>(op: () => Promise<T>): Promise<T> {\n    this.verifyNotFailed();\n    if (this._isShuttingDown) {\n      // Return a Promise which never resolves.\n      return new Promise<T>(() => {});\n    }\n\n    // Create a deferred Promise that we can return to the callee. This\n    // allows us to return a \"hanging Promise\" only to the callee and still\n    // advance the queue even when the operation is not run.\n    const task = new Deferred<T>();\n    return this.enqueueInternal<unknown>(() => {\n      if (this._isShuttingDown && this.skipNonRestrictedTasks) {\n        // We do not resolve 'task'\n        return Promise.resolve();\n      }\n\n      op().then(task.resolve, task.reject);\n      return task.promise;\n    }).then(() => task.promise);\n  }\n\n  enqueueRetryable(op: () => Promise<void>): void {\n    this.enqueueAndForget(() => {\n      this.retryableOps.push(op);\n      return this.retryNextOp();\n    });\n  }\n\n  /**\n   * Runs the next operation from the retryable queue. If the operation fails,\n   * reschedules with backoff.\n   */\n  private async retryNextOp(): Promise<void> {\n    if (this.retryableOps.length === 0) {\n      return;\n    }\n\n    try {\n      await this.retryableOps[0]();\n      this.retryableOps.shift();\n      this.backoff.reset();\n    } catch (e) {\n      if (isIndexedDbTransactionError(e as Error)) {\n        logDebug(LOG_TAG, 'Operation failed with retryable error: ' + e);\n      } else {\n        throw e; // Failure will be handled by AsyncQueue\n      }\n    }\n\n    if (this.retryableOps.length > 0) {\n      // If there are additional operations, we re-schedule `retryNextOp()`.\n      // This is necessary to run retryable operations that failed during\n      // their initial attempt since we don't know whether they are already\n      // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n      // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n      // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n      // call scheduled here.\n      // Since `backoffAndRun()` cancels an existing backoff and schedules a\n      // new backoff on every call, there is only ever a single additional\n      // operation in the queue.\n      this.backoff.backoffAndRun(() => this.retryNextOp());\n    }\n  }\n\n  private enqueueInternal<T extends unknown>(op: () => Promise<T>): Promise<T> {\n    const newTail = this.tail.then(() => {\n      this.operationInProgress = true;\n      return op()\n        .catch((error: FirestoreError) => {\n          this.failure = error;\n          this.operationInProgress = false;\n          const message = getMessageOrStack(error);\n          logError('INTERNAL UNHANDLED ERROR: ', message);\n\n          // Re-throw the error so that this.tail becomes a rejected Promise and\n          // all further attempts to chain (via .then) will just short-circuit\n          // and return the rejected Promise.\n          throw error;\n        })\n        .then(result => {\n          this.operationInProgress = false;\n          return result;\n        });\n    });\n    this.tail = newTail;\n    return newTail;\n  }\n\n  enqueueAfterDelay<T extends unknown>(\n    timerId: TimerId,\n    delayMs: number,\n    op: () => Promise<T>\n  ): DelayedOperation<T> {\n    this.verifyNotFailed();\n\n    debugAssert(\n      delayMs >= 0,\n      `Attempted to schedule an operation with a negative delay of ${delayMs}`\n    );\n\n    // Fast-forward delays for timerIds that have been overriden.\n    if (this.timerIdsToSkip.indexOf(timerId) > -1) {\n      delayMs = 0;\n    }\n\n    const delayedOp = DelayedOperation.createAndSchedule<T>(\n      this,\n      timerId,\n      delayMs,\n      op,\n      removedOp =>\n        this.removeDelayedOperation(removedOp as DelayedOperation<unknown>)\n    );\n    this.delayedOperations.push(delayedOp as DelayedOperation<unknown>);\n    return delayedOp;\n  }\n\n  private verifyNotFailed(): void {\n    if (this.failure) {\n      fail('AsyncQueue is already failed: ' + getMessageOrStack(this.failure));\n    }\n  }\n\n  verifyOperationInProgress(): void {\n    debugAssert(\n      this.operationInProgress,\n      'verifyOpInProgress() called when no op in progress on this queue.'\n    );\n  }\n\n  /**\n   * Waits until all currently queued tasks are finished executing. Delayed\n   * operations are not run.\n   */\n  async drain(): Promise<void> {\n    // Operations in the queue prior to draining may have enqueued additional\n    // operations. Keep draining the queue until the tail is no longer advanced,\n    // which indicates that no more new operations were enqueued and that all\n    // operations were executed.\n    let currentTail: Promise<unknown>;\n    do {\n      currentTail = this.tail;\n      await currentTail;\n    } while (currentTail !== this.tail);\n  }\n\n  /**\n   * For Tests: Determine if a delayed operation with a particular TimerId\n   * exists.\n   */\n  containsDelayedOperation(timerId: TimerId): boolean {\n    for (const op of this.delayedOperations) {\n      if (op.timerId === timerId) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * For Tests: Runs some or all delayed operations early.\n   *\n   * @param lastTimerId - Delayed operations up to and including this TimerId\n   * will be drained. Pass TimerId.All to run all delayed operations.\n   * @returns a Promise that resolves once all operations have been run.\n   */\n  runAllDelayedOperationsUntil(lastTimerId: TimerId): Promise<void> {\n    // Note that draining may generate more delayed ops, so we do that first.\n    return this.drain().then(() => {\n      // Run ops in the same order they'd run if they ran naturally.\n      this.delayedOperations.sort((a, b) => a.targetTimeMs - b.targetTimeMs);\n\n      for (const op of this.delayedOperations) {\n        op.skipDelay();\n        if (lastTimerId !== TimerId.All && op.timerId === lastTimerId) {\n          break;\n        }\n      }\n\n      return this.drain();\n    });\n  }\n\n  /**\n   * For Tests: Skip all subsequent delays for a timer id.\n   */\n  skipDelaysForTimerId(timerId: TimerId): void {\n    this.timerIdsToSkip.push(timerId);\n  }\n\n  /** Called once a DelayedOperation is run or canceled. */\n  private removeDelayedOperation(op: DelayedOperation<unknown>): void {\n    // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n    const index = this.delayedOperations.indexOf(op);\n    debugAssert(index >= 0, 'Delayed operation not found.');\n    this.delayedOperations.splice(index, 1);\n  }\n}\n\nexport function newAsyncQueue(): AsyncQueue {\n  return new AsyncQueueImpl();\n}\n\n/**\n * Chrome includes Error.message in Error.stack. Other browsers do not.\n * This returns expected output of message + stack when available.\n * @param error - Error or FirestoreError\n */\nfunction getMessageOrStack(error: Error): string {\n  let message = error.message || '';\n  if (error.stack) {\n    if (error.stack.includes(error.message)) {\n      message = error.stack;\n    } else {\n      message = error.message + '\\n' + error.stack;\n    }\n  }\n  return message;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  _getProvider,\n  _removeServiceInstance,\n  FirebaseApp,\n  getApp\n} from '@firebase/app';\nimport { deepEqual, getDefaultEmulatorHostnameAndPort } from '@firebase/util';\n\nimport { User } from '../auth/user';\nimport {\n  IndexedDbOfflineComponentProvider,\n  MultiTabOfflineComponentProvider,\n  OfflineComponentProvider,\n  OnlineComponentProvider\n} from '../core/component_provider';\nimport { DatabaseId, DEFAULT_DATABASE_NAME } from '../core/database_info';\nimport {\n  canFallbackFromIndexedDbError,\n  FirestoreClient,\n  firestoreClientDisableNetwork,\n  firestoreClientEnableNetwork,\n  firestoreClientGetNamedQuery,\n  firestoreClientLoadBundle,\n  firestoreClientWaitForPendingWrites,\n  setOfflineComponentProvider,\n  setOnlineComponentProvider\n} from '../core/firestore_client';\nimport { makeDatabaseInfo } from '../lite-api/components';\nimport {\n  Firestore as LiteFirestore,\n  connectFirestoreEmulator\n} from '../lite-api/database';\nimport { Query } from '../lite-api/reference';\nimport {\n  indexedDbClearPersistence,\n  indexedDbStoragePrefix\n} from '../local/indexeddb_persistence';\nimport { LRU_COLLECTION_DISABLED } from '../local/lru_garbage_collector';\nimport { LRU_MINIMUM_CACHE_SIZE_BYTES } from '../local/lru_garbage_collector_impl';\nimport { debugAssert } from '../util/assert';\nimport { AsyncQueue } from '../util/async_queue';\nimport { newAsyncQueue } from '../util/async_queue_impl';\nimport { Code, FirestoreError } from '../util/error';\nimport { cast } from '../util/input_validation';\nimport { logWarn } from '../util/log';\nimport { Deferred } from '../util/promise';\n\nimport { LoadBundleTask } from './bundle';\nimport { CredentialsProvider } from './credentials';\nimport { PersistenceSettings, FirestoreSettings } from './settings';\nexport {\n  connectFirestoreEmulator,\n  EmulatorMockTokenOptions\n} from '../lite-api/database';\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'firestore': Firestore;\n  }\n}\n\n/**\n * Constant used to indicate the LRU garbage collection should be disabled.\n * Set this value as the `cacheSizeBytes` on the settings passed to the\n * {@link Firestore} instance.\n */\nexport const CACHE_SIZE_UNLIMITED = LRU_COLLECTION_DISABLED;\n\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link (getFirestore:1)}.\n */\nexport class Firestore extends LiteFirestore {\n  /**\n   * Whether it's a {@link Firestore} or Firestore Lite instance.\n   */\n  type: 'firestore-lite' | 'firestore' = 'firestore';\n\n  readonly _queue: AsyncQueue = newAsyncQueue();\n  readonly _persistenceKey: string;\n\n  _firestoreClient: FirestoreClient | undefined;\n\n  /** @hideconstructor */\n  constructor(\n    authCredentialsProvider: CredentialsProvider<User>,\n    appCheckCredentialsProvider: CredentialsProvider<string>,\n    databaseId: DatabaseId,\n    app?: FirebaseApp\n  ) {\n    super(\n      authCredentialsProvider,\n      appCheckCredentialsProvider,\n      databaseId,\n      app\n    );\n    this._persistenceKey = app?.name || '[DEFAULT]';\n  }\n\n  _terminate(): Promise<void> {\n    if (!this._firestoreClient) {\n      // The client must be initialized to ensure that all subsequent API\n      // usage throws an exception.\n      configureFirestore(this);\n    }\n    return this._firestoreClient!.terminate();\n  }\n}\n\n/**\n * Initializes a new instance of {@link Firestore} with the provided settings.\n * Can only be called before any other function, including\n * {@link (getFirestore:1)}. If the custom settings are empty, this function is\n * equivalent to calling {@link (getFirestore:1)}.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} with which the {@link Firestore} instance will\n * be associated.\n * @param settings - A settings object to configure the {@link Firestore} instance.\n * @param databaseId - The name of the database.\n * @returns A newly initialized {@link Firestore} instance.\n */\nexport function initializeFirestore(\n  app: FirebaseApp,\n  settings: FirestoreSettings,\n  databaseId?: string\n): Firestore {\n  if (!databaseId) {\n    databaseId = DEFAULT_DATABASE_NAME;\n  }\n  const provider = _getProvider(app, 'firestore');\n\n  if (provider.isInitialized(databaseId)) {\n    const existingInstance = provider.getImmediate({\n      identifier: databaseId\n    });\n    const initialSettings = provider.getOptions(\n      databaseId\n    ) as FirestoreSettings;\n    if (deepEqual(initialSettings, settings)) {\n      return existingInstance;\n    } else {\n      throw new FirestoreError(\n        Code.FAILED_PRECONDITION,\n        'initializeFirestore() has already been called with ' +\n          'different options. To avoid this error, call initializeFirestore() with the ' +\n          'same options as when it was originally called, or call getFirestore() to return the' +\n          ' already initialized instance.'\n      );\n    }\n  }\n\n  if (\n    settings.cacheSizeBytes !== undefined &&\n    settings.localCache !== undefined\n  ) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      `cache and cacheSizeBytes cannot be specified at the same time as cacheSizeBytes will` +\n        `be deprecated. Instead, specify the cache size in the cache object`\n    );\n  }\n\n  if (\n    settings.cacheSizeBytes !== undefined &&\n    settings.cacheSizeBytes !== CACHE_SIZE_UNLIMITED &&\n    settings.cacheSizeBytes < LRU_MINIMUM_CACHE_SIZE_BYTES\n  ) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      `cacheSizeBytes must be at least ${LRU_MINIMUM_CACHE_SIZE_BYTES}`\n    );\n  }\n\n  return provider.initialize({\n    options: settings,\n    instanceIdentifier: databaseId\n  });\n}\n\n/**\n * Returns the existing default {@link Firestore} instance that is associated with the\n * default {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new\n * instance with default settings.\n *\n * @returns The default {@link Firestore} instance of the default app.\n */\nexport function getFirestore(): Firestore;\n/**\n * Returns the existing default {@link Firestore} instance that is associated with the\n * provided {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new\n * instance with default settings.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned {@link Firestore}\n * instance is associated with.\n * @returns The default {@link Firestore} instance of the provided app.\n */\nexport function getFirestore(app: FirebaseApp): Firestore;\n/**\n * Returns the existing named {@link Firestore} instance that is associated with the\n * default {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new\n * instance with default settings.\n *\n * @param databaseId - The name of the database.\n * @returns The named {@link Firestore} instance of the default app.\n * @beta\n */\nexport function getFirestore(databaseId: string): Firestore;\n/**\n * Returns the existing named {@link Firestore} instance that is associated with the\n * provided {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new\n * instance with default settings.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned {@link Firestore}\n * instance is associated with.\n * @param databaseId - The name of the database.\n * @returns The named {@link Firestore} instance of the provided app.\n * @beta\n */\nexport function getFirestore(app: FirebaseApp, databaseId: string): Firestore;\nexport function getFirestore(\n  appOrDatabaseId?: FirebaseApp | string,\n  optionalDatabaseId?: string\n): Firestore {\n  const app: FirebaseApp =\n    typeof appOrDatabaseId === 'object' ? appOrDatabaseId : getApp();\n  const databaseId =\n    typeof appOrDatabaseId === 'string'\n      ? appOrDatabaseId\n      : optionalDatabaseId || DEFAULT_DATABASE_NAME;\n  const db = _getProvider(app, 'firestore').getImmediate({\n    identifier: databaseId\n  }) as Firestore;\n  if (!db._initialized) {\n    const emulator = getDefaultEmulatorHostnameAndPort('firestore');\n    if (emulator) {\n      connectFirestoreEmulator(db, ...emulator);\n    }\n  }\n  return db;\n}\n\n/**\n * @internal\n */\nexport function ensureFirestoreConfigured(\n  firestore: Firestore\n): FirestoreClient {\n  if (!firestore._firestoreClient) {\n    configureFirestore(firestore);\n  }\n  firestore._firestoreClient!.verifyNotTerminated();\n  return firestore._firestoreClient as FirestoreClient;\n}\n\nexport function configureFirestore(firestore: Firestore): void {\n  const settings = firestore._freezeSettings();\n  debugAssert(!!settings.host, 'FirestoreSettings.host is not set');\n  debugAssert(\n    !firestore._firestoreClient,\n    'configureFirestore() called multiple times'\n  );\n\n  const databaseInfo = makeDatabaseInfo(\n    firestore._databaseId,\n    firestore._app?.options.appId || '',\n    firestore._persistenceKey,\n    settings\n  );\n  firestore._firestoreClient = new FirestoreClient(\n    firestore._authCredentials,\n    firestore._appCheckCredentials,\n    firestore._queue,\n    databaseInfo\n  );\n  if (\n    settings.localCache?._offlineComponentProvider &&\n    settings.localCache?._onlineComponentProvider\n  ) {\n    firestore._firestoreClient._uninitializedComponentsProvider = {\n      _offlineKind: settings.localCache.kind,\n      _offline: settings.localCache._offlineComponentProvider,\n      _online: settings.localCache._onlineComponentProvider\n    };\n  }\n}\n\n/**\n * Attempts to enable persistent storage, if possible.\n *\n * On failure, `enableIndexedDbPersistence()` will reject the promise or\n * throw an exception. There are several reasons why this can fail, which can be\n * identified by the `code` on the error.\n *\n *   * failed-precondition: The app is already open in another browser tab.\n *   * unimplemented: The browser is incompatible with the offline persistence\n *     implementation.\n *\n * Note that even after a failure, the {@link Firestore} instance will remain\n * usable, however offline persistence will be disabled.\n *\n * Note: `enableIndexedDbPersistence()` must be called before any other functions\n * (other than {@link initializeFirestore}, {@link (getFirestore:1)} or\n * {@link clearIndexedDbPersistence}.\n *\n * Persistence cannot be used in a Node.js environment.\n *\n * @param firestore - The {@link Firestore} instance to enable persistence for.\n * @param persistenceSettings - Optional settings object to configure\n * persistence.\n * @returns A `Promise` that represents successfully enabling persistent storage.\n * @deprecated This function will be removed in a future major release. Instead, set\n * `FirestoreSettings.localCache` to an instance of `PersistentLocalCache` to\n * turn on IndexedDb cache. Calling this function when `FirestoreSettings.localCache`\n * is already specified will throw an exception.\n */\nexport function enableIndexedDbPersistence(\n  firestore: Firestore,\n  persistenceSettings?: PersistenceSettings\n): Promise<void> {\n  firestore = cast(firestore, Firestore);\n  verifyNotInitialized(firestore);\n\n  const client = ensureFirestoreConfigured(firestore);\n  if (client._uninitializedComponentsProvider) {\n    throw new FirestoreError(\n      Code.FAILED_PRECONDITION,\n      'SDK cache is already specified.'\n    );\n  }\n\n  logWarn(\n    'enableIndexedDbPersistence() will be deprecated in the future, ' +\n      'you can use `FirestoreSettings.cache` instead.'\n  );\n  const settings = firestore._freezeSettings();\n\n  const onlineComponentProvider = new OnlineComponentProvider();\n  const offlineComponentProvider = new IndexedDbOfflineComponentProvider(\n    onlineComponentProvider,\n    settings.cacheSizeBytes,\n    persistenceSettings?.forceOwnership\n  );\n  return setPersistenceProviders(\n    client,\n    onlineComponentProvider,\n    offlineComponentProvider\n  );\n}\n\n/**\n * Attempts to enable multi-tab persistent storage, if possible. If enabled\n * across all tabs, all operations share access to local persistence, including\n * shared execution of queries and latency-compensated local document updates\n * across all connected instances.\n *\n * On failure, `enableMultiTabIndexedDbPersistence()` will reject the promise or\n * throw an exception. There are several reasons why this can fail, which can be\n * identified by the `code` on the error.\n *\n *   * failed-precondition: The app is already open in another browser tab and\n *     multi-tab is not enabled.\n *   * unimplemented: The browser is incompatible with the offline persistence\n *     implementation.\n *\n * Note that even after a failure, the {@link Firestore} instance will remain\n * usable, however offline persistence will be disabled.\n *\n * @param firestore - The {@link Firestore} instance to enable persistence for.\n * @returns A `Promise` that represents successfully enabling persistent\n * storage.\n * @deprecated This function will be removed in a future major release. Instead, set\n * `FirestoreSettings.localCache` to an instance of `PersistentLocalCache` to\n * turn on indexeddb cache. Calling this function when `FirestoreSettings.localCache`\n * is already specified will throw an exception.\n */\nexport function enableMultiTabIndexedDbPersistence(\n  firestore: Firestore\n): Promise<void> {\n  firestore = cast(firestore, Firestore);\n  verifyNotInitialized(firestore);\n\n  const client = ensureFirestoreConfigured(firestore);\n  if (client._uninitializedComponentsProvider) {\n    throw new FirestoreError(\n      Code.FAILED_PRECONDITION,\n      'SDK cache is already specified.'\n    );\n  }\n\n  logWarn(\n    'enableMultiTabIndexedDbPersistence() will be deprecated in the future, ' +\n      'you can use `FirestoreSettings.cache` instead.'\n  );\n  const settings = firestore._freezeSettings();\n\n  const onlineComponentProvider = new OnlineComponentProvider();\n  const offlineComponentProvider = new MultiTabOfflineComponentProvider(\n    onlineComponentProvider,\n    settings.cacheSizeBytes\n  );\n  return setPersistenceProviders(\n    client,\n    onlineComponentProvider,\n    offlineComponentProvider\n  );\n}\n\n/**\n * Registers both the `OfflineComponentProvider` and `OnlineComponentProvider`.\n * If the operation fails with a recoverable error (see\n * `canRecoverFromIndexedDbError()` below), the returned Promise is rejected\n * but the client remains usable.\n */\nfunction setPersistenceProviders(\n  client: FirestoreClient,\n  onlineComponentProvider: OnlineComponentProvider,\n  offlineComponentProvider: OfflineComponentProvider\n): Promise<void> {\n  const persistenceResult = new Deferred();\n  return client.asyncQueue\n    .enqueue(async () => {\n      try {\n        await setOfflineComponentProvider(client, offlineComponentProvider);\n        await setOnlineComponentProvider(client, onlineComponentProvider);\n        persistenceResult.resolve();\n      } catch (e) {\n        const error = e as FirestoreError | DOMException;\n        if (!canFallbackFromIndexedDbError(error)) {\n          throw error;\n        }\n        logWarn(\n          'Error enabling indexeddb cache. Falling back to ' +\n            'memory cache: ' +\n            error\n        );\n        persistenceResult.reject(error);\n      }\n    })\n    .then(() => persistenceResult.promise);\n}\n\n/**\n * Clears the persistent storage. This includes pending writes and cached\n * documents.\n *\n * Must be called while the {@link Firestore} instance is not started (after the app is\n * terminated or when the app is first initialized). On startup, this function\n * must be called before other functions (other than {@link\n * initializeFirestore} or {@link (getFirestore:1)})). If the {@link Firestore}\n * instance is still running, the promise will be rejected with the error code\n * of `failed-precondition`.\n *\n * Note: `clearIndexedDbPersistence()` is primarily intended to help write\n * reliable tests that use Cloud Firestore. It uses an efficient mechanism for\n * dropping existing data but does not attempt to securely overwrite or\n * otherwise make cached data unrecoverable. For applications that are sensitive\n * to the disclosure of cached data in between user sessions, we strongly\n * recommend not enabling persistence at all.\n *\n * @param firestore - The {@link Firestore} instance to clear persistence for.\n * @returns A `Promise` that is resolved when the persistent storage is\n * cleared. Otherwise, the promise is rejected with an error.\n */\nexport function clearIndexedDbPersistence(firestore: Firestore): Promise<void> {\n  if (firestore._initialized && !firestore._terminated) {\n    throw new FirestoreError(\n      Code.FAILED_PRECONDITION,\n      'Persistence can only be cleared before a Firestore instance is ' +\n        'initialized or after it is terminated.'\n    );\n  }\n\n  const deferred = new Deferred<void>();\n  firestore._queue.enqueueAndForgetEvenWhileRestricted(async () => {\n    try {\n      await indexedDbClearPersistence(\n        indexedDbStoragePrefix(firestore._databaseId, firestore._persistenceKey)\n      );\n      deferred.resolve();\n    } catch (e) {\n      deferred.reject(e as Error | undefined);\n    }\n  });\n  return deferred.promise;\n}\n\n/**\n * Waits until all currently pending writes for the active user have been\n * acknowledged by the backend.\n *\n * The returned promise resolves immediately if there are no outstanding writes.\n * Otherwise, the promise waits for all previously issued writes (including\n * those written in a previous app session), but it does not wait for writes\n * that were added after the function is called. If you want to wait for\n * additional writes, call `waitForPendingWrites()` again.\n *\n * Any outstanding `waitForPendingWrites()` promises are rejected during user\n * changes.\n *\n * @returns A `Promise` which resolves when all currently pending writes have been\n * acknowledged by the backend.\n */\nexport function waitForPendingWrites(firestore: Firestore): Promise<void> {\n  firestore = cast(firestore, Firestore);\n  const client = ensureFirestoreConfigured(firestore);\n  return firestoreClientWaitForPendingWrites(client);\n}\n\n/**\n * Re-enables use of the network for this {@link Firestore} instance after a prior\n * call to {@link disableNetwork}.\n *\n * @returns A `Promise` that is resolved once the network has been enabled.\n */\nexport function enableNetwork(firestore: Firestore): Promise<void> {\n  firestore = cast(firestore, Firestore);\n  const client = ensureFirestoreConfigured(firestore);\n  return firestoreClientEnableNetwork(client);\n}\n\n/**\n * Disables network usage for this instance. It can be re-enabled via {@link\n * enableNetwork}. While the network is disabled, any snapshot listeners,\n * `getDoc()` or `getDocs()` calls will return results from cache, and any write\n * operations will be queued until the network is restored.\n *\n * @returns A `Promise` that is resolved once the network has been disabled.\n */\nexport function disableNetwork(firestore: Firestore): Promise<void> {\n  firestore = cast(firestore, Firestore);\n  const client = ensureFirestoreConfigured(firestore);\n  return firestoreClientDisableNetwork(client);\n}\n\n/**\n * Terminates the provided {@link Firestore} instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` function\n * may be used. Any other function will throw a `FirestoreError`.\n *\n * To restart after termination, create a new instance of FirebaseFirestore with\n * {@link (getFirestore:1)}.\n *\n * Termination does not cancel any pending writes, and any promises that are\n * awaiting a response from the server will not be resolved. If you have\n * persistence enabled, the next time you start this instance, it will resume\n * sending these writes to the server.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all\n * of its resources or in combination with `clearIndexedDbPersistence()` to\n * ensure that all local state is destroyed between test runs.\n *\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */\nexport function terminate(firestore: Firestore): Promise<void> {\n  _removeServiceInstance(\n    firestore.app,\n    'firestore',\n    firestore._databaseId.database\n  );\n  return firestore._delete();\n}\n\n/**\n * Loads a Firestore bundle into the local cache.\n *\n * @param firestore - The {@link Firestore} instance to load bundles for.\n * @param bundleData - An object representing the bundle to be loaded. Valid\n * objects are `ArrayBuffer`, `ReadableStream<Uint8Array>` or `string`.\n *\n * @returns A `LoadBundleTask` object, which notifies callers with progress\n * updates, and completion or error events. It can be used as a\n * `Promise<LoadBundleTaskProgress>`.\n */\nexport function loadBundle(\n  firestore: Firestore,\n  bundleData: ReadableStream<Uint8Array> | ArrayBuffer | string\n): LoadBundleTask {\n  firestore = cast(firestore, Firestore);\n  const client = ensureFirestoreConfigured(firestore);\n  const resultTask = new LoadBundleTask();\n  firestoreClientLoadBundle(\n    client,\n    firestore._databaseId,\n    bundleData,\n    resultTask\n  );\n  return resultTask;\n}\n\n/**\n * Reads a Firestore {@link Query} from local cache, identified by the given\n * name.\n *\n * The named queries are packaged  into bundles on the server side (along\n * with resulting documents), and loaded to local cache using `loadBundle`. Once\n * in local cache, use this method to extract a {@link Query} by name.\n *\n * @param firestore - The {@link Firestore} instance to read the query from.\n * @param name - The name of the query.\n * @returns A `Promise` that is resolved with the Query or `null`.\n */\nexport function namedQuery(\n  firestore: Firestore,\n  name: string\n): Promise<Query | null> {\n  firestore = cast(firestore, Firestore);\n  const client = ensureFirestoreConfigured(firestore);\n  return firestoreClientGetNamedQuery(client, name).then(namedQuery => {\n    if (!namedQuery) {\n      return null;\n    }\n\n    return new Query(firestore, null, namedQuery.query);\n  });\n}\n\nfunction verifyNotInitialized(firestore: Firestore): void {\n  if (firestore._initialized || firestore._terminated) {\n    throw new FirestoreError(\n      Code.FAILED_PRECONDITION,\n      'Firestore has already been started and persistence can no longer be ' +\n        'enabled. You can only enable persistence before calling any other ' +\n        'methods on a Firestore object.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ByteString } from '../util/byte_string';\nimport { Code, FirestoreError } from '../util/error';\n\n/**\n * An immutable object representing an array of bytes.\n */\nexport class Bytes {\n  _byteString: ByteString;\n\n  /** @hideconstructor */\n  constructor(byteString: ByteString) {\n    this._byteString = byteString;\n  }\n\n  /**\n   * Creates a new `Bytes` object from the given Base64 string, converting it to\n   * bytes.\n   *\n   * @param base64 - The Base64 string used to create the `Bytes` object.\n   */\n  static fromBase64String(base64: string): Bytes {\n    try {\n      return new Bytes(ByteString.fromBase64String(base64));\n    } catch (e) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'Failed to construct data from Base64 string: ' + e\n      );\n    }\n  }\n\n  /**\n   * Creates a new `Bytes` object from the given Uint8Array.\n   *\n   * @param array - The Uint8Array used to create the `Bytes` object.\n   */\n  static fromUint8Array(array: Uint8Array): Bytes {\n    return new Bytes(ByteString.fromUint8Array(array));\n  }\n\n  /**\n   * Returns the underlying bytes as a Base64-encoded string.\n   *\n   * @returns The Base64-encoded string created from the `Bytes` object.\n   */\n  toBase64(): string {\n    return this._byteString.toBase64();\n  }\n\n  /**\n   * Returns the underlying bytes in a new `Uint8Array`.\n   *\n   * @returns The Uint8Array created from the `Bytes` object.\n   */\n  toUint8Array(): Uint8Array {\n    return this._byteString.toUint8Array();\n  }\n\n  /**\n   * Returns a string representation of the `Bytes` object.\n   *\n   * @returns A string representation of the `Bytes` object.\n   */\n  toString(): string {\n    return 'Bytes(base64: ' + this.toBase64() + ')';\n  }\n\n  /**\n   * Returns true if this `Bytes` object is equal to the provided one.\n   *\n   * @param other - The `Bytes` object to compare against.\n   * @returns true if this `Bytes` object is equal to the provided one.\n   */\n  isEqual(other: Bytes): boolean {\n    return this._byteString.isEqual(other._byteString);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DOCUMENT_KEY_NAME,\n  FieldPath as InternalFieldPath\n} from '../model/path';\nimport { Code, FirestoreError } from '../util/error';\n\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */\nexport class FieldPath {\n  /** Internal representation of a Firestore field path. */\n  readonly _internalPath: InternalFieldPath;\n\n  /**\n   * Creates a `FieldPath` from the provided field names. If more than one field\n   * name is provided, the path will point to a nested field in a document.\n   *\n   * @param fieldNames - A list of field names.\n   */\n  constructor(...fieldNames: string[]) {\n    for (let i = 0; i < fieldNames.length; ++i) {\n      if (fieldNames[i].length === 0) {\n        throw new FirestoreError(\n          Code.INVALID_ARGUMENT,\n          `Invalid field name at argument $(i + 1). ` +\n            'Field names must not be empty.'\n        );\n      }\n    }\n\n    this._internalPath = new InternalFieldPath(fieldNames);\n  }\n\n  /**\n   * Returns true if this `FieldPath` is equal to the provided one.\n   *\n   * @param other - The `FieldPath` to compare against.\n   * @returns true if this `FieldPath` is equal to the provided one.\n   */\n  isEqual(other: FieldPath): boolean {\n    return this._internalPath.isEqual(other._internalPath);\n  }\n}\n\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */\nexport function documentId(): FieldPath {\n  return new FieldPath(DOCUMENT_KEY_NAME);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ParseContext } from '../api/parse_context';\nimport { FieldTransform } from '../model/mutation';\n\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */\nexport abstract class FieldValue {\n  /**\n   * @param _methodName - The public API endpoint that returns this class.\n   * @hideconstructor\n   */\n  constructor(public _methodName: string) {}\n\n  /** Compares `FieldValue`s for equality. */\n  abstract isEqual(other: FieldValue): boolean;\n  abstract _toFieldTransform(context: ParseContext): FieldTransform | null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Code, FirestoreError } from '../util/error';\nimport { primitiveComparator } from '../util/misc';\n\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */\nexport class GeoPoint {\n  // Prefix with underscore to signal this is a private variable in JS and\n  // prevent it showing up for autocompletion when typing latitude or longitude.\n  private _lat: number;\n  private _long: number;\n\n  /**\n   * Creates a new immutable `GeoPoint` object with the provided latitude and\n   * longitude values.\n   * @param latitude - The latitude as number between -90 and 90.\n   * @param longitude - The longitude as number between -180 and 180.\n   */\n  constructor(latitude: number, longitude: number) {\n    if (!isFinite(latitude) || latitude < -90 || latitude > 90) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'Latitude must be a number between -90 and 90, but was: ' + latitude\n      );\n    }\n    if (!isFinite(longitude) || longitude < -180 || longitude > 180) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'Longitude must be a number between -180 and 180, but was: ' + longitude\n      );\n    }\n\n    this._lat = latitude;\n    this._long = longitude;\n  }\n\n  /**\n   * The latitude of this `GeoPoint` instance.\n   */\n  get latitude(): number {\n    return this._lat;\n  }\n\n  /**\n   * The longitude of this `GeoPoint` instance.\n   */\n  get longitude(): number {\n    return this._long;\n  }\n\n  /**\n   * Returns true if this `GeoPoint` is equal to the provided one.\n   *\n   * @param other - The `GeoPoint` to compare against.\n   * @returns true if this `GeoPoint` is equal to the provided one.\n   */\n  isEqual(other: GeoPoint): boolean {\n    return this._lat === other._lat && this._long === other._long;\n  }\n\n  /** Returns a JSON-serializable representation of this GeoPoint. */\n  toJSON(): { latitude: number; longitude: number } {\n    return { latitude: this._lat, longitude: this._long };\n  }\n\n  /**\n   * Actually private to JS consumers of our API, so this function is prefixed\n   * with an underscore.\n   */\n  _compareTo(other: GeoPoint): number {\n    return (\n      primitiveComparator(this._lat, other._lat) ||\n      primitiveComparator(this._long, other._long)\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DocumentData,\n  FieldPath as PublicFieldPath,\n  SetOptions\n} from '@firebase/firestore-types';\nimport { Compat, deepEqual, getModularInstance } from '@firebase/util';\n\nimport { ParseContext } from '../api/parse_context';\nimport { DatabaseId } from '../core/database_info';\nimport { DocumentKey } from '../model/document_key';\nimport { FieldMask } from '../model/field_mask';\nimport {\n  FieldTransform,\n  Mutation,\n  PatchMutation,\n  Precondition,\n  SetMutation\n} from '../model/mutation';\nimport { ObjectValue } from '../model/object_value';\nimport { FieldPath as InternalFieldPath } from '../model/path';\nimport {\n  ArrayRemoveTransformOperation,\n  ArrayUnionTransformOperation,\n  NumericIncrementTransformOperation,\n  ServerTimestampTransform\n} from '../model/transform_operation';\nimport { newSerializer } from '../platform/serializer';\nimport {\n  MapValue as ProtoMapValue,\n  Value as ProtoValue\n} from '../protos/firestore_proto_api';\nimport { toNumber } from '../remote/number_serializer';\nimport {\n  JsonProtoSerializer,\n  toBytes,\n  toResourceName,\n  toTimestamp\n} from '../remote/serializer';\nimport { debugAssert, fail } from '../util/assert';\nimport { Code, FirestoreError } from '../util/error';\nimport { isPlainObject, valueDescription } from '../util/input_validation';\nimport { Dict, forEach, isEmpty } from '../util/obj';\n\nimport { Bytes } from './bytes';\nimport { Firestore } from './database';\nimport { FieldPath } from './field_path';\nimport { FieldValue } from './field_value';\nimport { GeoPoint } from './geo_point';\nimport {\n  DocumentReference,\n  PartialWithFieldValue,\n  WithFieldValue\n} from './reference';\nimport { Timestamp } from './timestamp';\n\nconst RESERVED_FIELD_REGEX = /^__.*__$/;\n\n/**\n * An untyped Firestore Data Converter interface that is shared between the\n * lite, firestore-exp and classic SDK.\n */\nexport interface UntypedFirestoreDataConverter<\n  AppModelType,\n  DbModelType extends DocumentData = DocumentData\n> {\n  toFirestore(\n    modelObject: WithFieldValue<AppModelType>\n  ): WithFieldValue<DbModelType>;\n  toFirestore(\n    modelObject: PartialWithFieldValue<AppModelType>,\n    options: SetOptions\n  ): PartialWithFieldValue<DbModelType>;\n  fromFirestore(snapshot: unknown, options?: unknown): AppModelType;\n}\n\n/** The result of parsing document data (e.g. for a setData call). */\nexport class ParsedSetData {\n  constructor(\n    readonly data: ObjectValue,\n    readonly fieldMask: FieldMask | null,\n    readonly fieldTransforms: FieldTransform[]\n  ) {}\n\n  toMutation(key: DocumentKey, precondition: Precondition): Mutation {\n    if (this.fieldMask !== null) {\n      return new PatchMutation(\n        key,\n        this.data,\n        this.fieldMask,\n        precondition,\n        this.fieldTransforms\n      );\n    } else {\n      return new SetMutation(\n        key,\n        this.data,\n        precondition,\n        this.fieldTransforms\n      );\n    }\n  }\n}\n\n/** The result of parsing \"update\" data (i.e. for an updateData call). */\nexport class ParsedUpdateData {\n  constructor(\n    readonly data: ObjectValue,\n    // The fieldMask does not include document transforms.\n    readonly fieldMask: FieldMask,\n    readonly fieldTransforms: FieldTransform[]\n  ) {}\n\n  toMutation(key: DocumentKey, precondition: Precondition): Mutation {\n    return new PatchMutation(\n      key,\n      this.data,\n      this.fieldMask,\n      precondition,\n      this.fieldTransforms\n    );\n  }\n}\n\n/*\n * Represents what type of API method provided the data being parsed; useful\n * for determining which error conditions apply during parsing and providing\n * better error messages.\n */\nexport const enum UserDataSource {\n  Set,\n  Update,\n  MergeSet,\n  /**\n   * Indicates the source is a where clause, cursor bound, arrayUnion()\n   * element, etc. Of note, isWrite(source) will return false.\n   */\n  Argument,\n  /**\n   * Indicates that the source is an Argument that may directly contain nested\n   * arrays (e.g. the operand of an `in` query).\n   */\n  ArrayArgument\n}\n\nfunction isWrite(dataSource: UserDataSource): boolean {\n  switch (dataSource) {\n    case UserDataSource.Set: // fall through\n    case UserDataSource.MergeSet: // fall through\n    case UserDataSource.Update:\n      return true;\n    case UserDataSource.Argument:\n    case UserDataSource.ArrayArgument:\n      return false;\n    default:\n      throw fail(`Unexpected case for UserDataSource: ${dataSource}`);\n  }\n}\n\n/** Contains the settings that are mutated as we parse user data. */\ninterface ContextSettings {\n  /** Indicates what kind of API method this data came from. */\n  readonly dataSource: UserDataSource;\n  /** The name of the method the user called to create the ParseContext. */\n  readonly methodName: string;\n  /** The document the user is attempting to modify, if that applies. */\n  readonly targetDoc?: DocumentKey;\n  /**\n   * A path within the object being parsed. This could be an empty path (in\n   * which case the context represents the root of the data being parsed), or a\n   * nonempty path (indicating the context represents a nested location within\n   * the data).\n   */\n  readonly path?: InternalFieldPath;\n  /**\n   * Whether or not this context corresponds to an element of an array.\n   * If not set, elements are treated as if they were outside of arrays.\n   */\n  readonly arrayElement?: boolean;\n  /**\n   * Whether or not a converter was specified in this context. If true, error\n   * messages will reference the converter when invalid data is provided.\n   */\n  readonly hasConverter?: boolean;\n}\n\n/** A \"context\" object passed around while parsing user data. */\nclass ParseContextImpl implements ParseContext {\n  readonly fieldTransforms: FieldTransform[];\n  readonly fieldMask: InternalFieldPath[];\n  /**\n   * Initializes a ParseContext with the given source and path.\n   *\n   * @param settings - The settings for the parser.\n   * @param databaseId - The database ID of the Firestore instance.\n   * @param serializer - The serializer to use to generate the Value proto.\n   * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n   * rather than throw.\n   * @param fieldTransforms - A mutable list of field transforms encountered\n   * while parsing the data.\n   * @param fieldMask - A mutable list of field paths encountered while parsing\n   * the data.\n   *\n   * TODO(b/34871131): We don't support array paths right now, so path can be\n   * null to indicate the context represents any location within an array (in\n   * which case certain features will not work and errors will be somewhat\n   * compromised).\n   */\n  constructor(\n    readonly settings: ContextSettings,\n    readonly databaseId: DatabaseId,\n    readonly serializer: JsonProtoSerializer,\n    readonly ignoreUndefinedProperties: boolean,\n    fieldTransforms?: FieldTransform[],\n    fieldMask?: InternalFieldPath[]\n  ) {\n    // Minor hack: If fieldTransforms is undefined, we assume this is an\n    // external call and we need to validate the entire path.\n    if (fieldTransforms === undefined) {\n      this.validatePath();\n    }\n    this.fieldTransforms = fieldTransforms || [];\n    this.fieldMask = fieldMask || [];\n  }\n\n  get path(): InternalFieldPath | undefined {\n    return this.settings.path;\n  }\n\n  get dataSource(): UserDataSource {\n    return this.settings.dataSource;\n  }\n\n  /** Returns a new context with the specified settings overwritten. */\n  contextWith(configuration: Partial<ContextSettings>): ParseContextImpl {\n    return new ParseContextImpl(\n      { ...this.settings, ...configuration },\n      this.databaseId,\n      this.serializer,\n      this.ignoreUndefinedProperties,\n      this.fieldTransforms,\n      this.fieldMask\n    );\n  }\n\n  childContextForField(field: string): ParseContextImpl {\n    const childPath = this.path?.child(field);\n    const context = this.contextWith({ path: childPath, arrayElement: false });\n    context.validatePathSegment(field);\n    return context;\n  }\n\n  childContextForFieldPath(field: InternalFieldPath): ParseContextImpl {\n    const childPath = this.path?.child(field);\n    const context = this.contextWith({ path: childPath, arrayElement: false });\n    context.validatePath();\n    return context;\n  }\n\n  childContextForArray(index: number): ParseContextImpl {\n    // TODO(b/34871131): We don't support array paths right now; so make path\n    // undefined.\n    return this.contextWith({ path: undefined, arrayElement: true });\n  }\n\n  createError(reason: string): FirestoreError {\n    return createError(\n      reason,\n      this.settings.methodName,\n      this.settings.hasConverter || false,\n      this.path,\n      this.settings.targetDoc\n    );\n  }\n\n  /** Returns 'true' if 'fieldPath' was traversed when creating this context. */\n  contains(fieldPath: InternalFieldPath): boolean {\n    return (\n      this.fieldMask.find(field => fieldPath.isPrefixOf(field)) !== undefined ||\n      this.fieldTransforms.find(transform =>\n        fieldPath.isPrefixOf(transform.field)\n      ) !== undefined\n    );\n  }\n\n  private validatePath(): void {\n    // TODO(b/34871131): Remove null check once we have proper paths for fields\n    // within arrays.\n    if (!this.path) {\n      return;\n    }\n    for (let i = 0; i < this.path.length; i++) {\n      this.validatePathSegment(this.path.get(i));\n    }\n  }\n\n  private validatePathSegment(segment: string): void {\n    if (segment.length === 0) {\n      throw this.createError('Document fields must not be empty');\n    }\n    if (isWrite(this.dataSource) && RESERVED_FIELD_REGEX.test(segment)) {\n      throw this.createError('Document fields cannot begin and end with \"__\"');\n    }\n  }\n}\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */\nexport class UserDataReader {\n  private readonly serializer: JsonProtoSerializer;\n\n  constructor(\n    private readonly databaseId: DatabaseId,\n    private readonly ignoreUndefinedProperties: boolean,\n    serializer?: JsonProtoSerializer\n  ) {\n    this.serializer = serializer || newSerializer(databaseId);\n  }\n\n  /** Creates a new top-level parse context. */\n  createContext(\n    dataSource: UserDataSource,\n    methodName: string,\n    targetDoc?: DocumentKey,\n    hasConverter = false\n  ): ParseContextImpl {\n    return new ParseContextImpl(\n      {\n        dataSource,\n        methodName,\n        targetDoc,\n        path: InternalFieldPath.emptyPath(),\n        arrayElement: false,\n        hasConverter\n      },\n      this.databaseId,\n      this.serializer,\n      this.ignoreUndefinedProperties\n    );\n  }\n}\n\nexport function newUserDataReader(firestore: Firestore): UserDataReader {\n  const settings = firestore._freezeSettings();\n  const serializer = newSerializer(firestore._databaseId);\n  return new UserDataReader(\n    firestore._databaseId,\n    !!settings.ignoreUndefinedProperties,\n    serializer\n  );\n}\n\n/** Parse document data from a set() call. */\nexport function parseSetData(\n  userDataReader: UserDataReader,\n  methodName: string,\n  targetDoc: DocumentKey,\n  input: unknown,\n  hasConverter: boolean,\n  options: SetOptions = {}\n): ParsedSetData {\n  const context = userDataReader.createContext(\n    options.merge || options.mergeFields\n      ? UserDataSource.MergeSet\n      : UserDataSource.Set,\n    methodName,\n    targetDoc,\n    hasConverter\n  );\n  validatePlainObject('Data must be an object, but it was:', context, input);\n  const updateData = parseObject(input, context)!;\n\n  let fieldMask: FieldMask | null;\n  let fieldTransforms: FieldTransform[];\n\n  if (options.merge) {\n    fieldMask = new FieldMask(context.fieldMask);\n    fieldTransforms = context.fieldTransforms;\n  } else if (options.mergeFields) {\n    const validatedFieldPaths: InternalFieldPath[] = [];\n\n    for (const stringOrFieldPath of options.mergeFields) {\n      const fieldPath = fieldPathFromArgument(\n        methodName,\n        stringOrFieldPath,\n        targetDoc\n      );\n      if (!context.contains(fieldPath)) {\n        throw new FirestoreError(\n          Code.INVALID_ARGUMENT,\n          `Field '${fieldPath}' is specified in your field mask but missing from your input data.`\n        );\n      }\n\n      if (!fieldMaskContains(validatedFieldPaths, fieldPath)) {\n        validatedFieldPaths.push(fieldPath);\n      }\n    }\n\n    fieldMask = new FieldMask(validatedFieldPaths);\n    fieldTransforms = context.fieldTransforms.filter(transform =>\n      fieldMask!.covers(transform.field)\n    );\n  } else {\n    fieldMask = null;\n    fieldTransforms = context.fieldTransforms;\n  }\n\n  return new ParsedSetData(\n    new ObjectValue(updateData),\n    fieldMask,\n    fieldTransforms\n  );\n}\n\nexport class DeleteFieldValueImpl extends FieldValue {\n  _toFieldTransform(context: ParseContextImpl): null {\n    if (context.dataSource === UserDataSource.MergeSet) {\n      // No transform to add for a delete, but we need to add it to our\n      // fieldMask so it gets deleted.\n      context.fieldMask.push(context.path!);\n    } else if (context.dataSource === UserDataSource.Update) {\n      debugAssert(\n        context.path!.length > 0,\n        `${this._methodName}() at the top level should have already ` +\n          'been handled.'\n      );\n      throw context.createError(\n        `${this._methodName}() can only appear at the top level ` +\n          'of your update data'\n      );\n    } else {\n      // We shouldn't encounter delete sentinels for queries or non-merge set() calls.\n      throw context.createError(\n        `${this._methodName}() cannot be used with set() unless you pass ` +\n          '{merge:true}'\n      );\n    }\n    return null;\n  }\n\n  isEqual(other: FieldValue): boolean {\n    return other instanceof DeleteFieldValueImpl;\n  }\n}\n\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */\nfunction createSentinelChildContext(\n  fieldValue: FieldValue,\n  context: ParseContextImpl,\n  arrayElement: boolean\n): ParseContextImpl {\n  return new ParseContextImpl(\n    {\n      dataSource: UserDataSource.Argument,\n      targetDoc: context.settings.targetDoc,\n      methodName: fieldValue._methodName,\n      arrayElement\n    },\n    context.databaseId,\n    context.serializer,\n    context.ignoreUndefinedProperties\n  );\n}\n\nexport class ServerTimestampFieldValueImpl extends FieldValue {\n  _toFieldTransform(context: ParseContextImpl): FieldTransform {\n    return new FieldTransform(context.path!, new ServerTimestampTransform());\n  }\n\n  isEqual(other: FieldValue): boolean {\n    return other instanceof ServerTimestampFieldValueImpl;\n  }\n}\n\nexport class ArrayUnionFieldValueImpl extends FieldValue {\n  constructor(methodName: string, private readonly _elements: unknown[]) {\n    super(methodName);\n  }\n\n  _toFieldTransform(context: ParseContextImpl): FieldTransform {\n    const parseContext = createSentinelChildContext(\n      this,\n      context,\n      /*array=*/ true\n    );\n    const parsedElements = this._elements.map(\n      element => parseData(element, parseContext)!\n    );\n    const arrayUnion = new ArrayUnionTransformOperation(parsedElements);\n    return new FieldTransform(context.path!, arrayUnion);\n  }\n\n  isEqual(other: FieldValue): boolean {\n    return (\n      other instanceof ArrayUnionFieldValueImpl &&\n      deepEqual(this._elements, other._elements)\n    );\n  }\n}\n\nexport class ArrayRemoveFieldValueImpl extends FieldValue {\n  constructor(methodName: string, private readonly _elements: unknown[]) {\n    super(methodName);\n  }\n\n  _toFieldTransform(context: ParseContextImpl): FieldTransform {\n    const parseContext = createSentinelChildContext(\n      this,\n      context,\n      /*array=*/ true\n    );\n    const parsedElements = this._elements.map(\n      element => parseData(element, parseContext)!\n    );\n    const arrayUnion = new ArrayRemoveTransformOperation(parsedElements);\n    return new FieldTransform(context.path!, arrayUnion);\n  }\n\n  isEqual(other: FieldValue): boolean {\n    return (\n      other instanceof ArrayRemoveFieldValueImpl &&\n      deepEqual(this._elements, other._elements)\n    );\n  }\n}\n\nexport class NumericIncrementFieldValueImpl extends FieldValue {\n  constructor(methodName: string, private readonly _operand: number) {\n    super(methodName);\n  }\n\n  _toFieldTransform(context: ParseContextImpl): FieldTransform {\n    const numericIncrement = new NumericIncrementTransformOperation(\n      context.serializer,\n      toNumber(context.serializer, this._operand)\n    );\n    return new FieldTransform(context.path!, numericIncrement);\n  }\n\n  isEqual(other: FieldValue): boolean {\n    return (\n      other instanceof NumericIncrementFieldValueImpl &&\n      this._operand === other._operand\n    );\n  }\n}\n\n/** Parse update data from an update() call. */\nexport function parseUpdateData(\n  userDataReader: UserDataReader,\n  methodName: string,\n  targetDoc: DocumentKey,\n  input: unknown\n): ParsedUpdateData {\n  const context = userDataReader.createContext(\n    UserDataSource.Update,\n    methodName,\n    targetDoc\n  );\n  validatePlainObject('Data must be an object, but it was:', context, input);\n\n  const fieldMaskPaths: InternalFieldPath[] = [];\n  const updateData = ObjectValue.empty();\n  forEach(input as Dict<unknown>, (key, value) => {\n    const path = fieldPathFromDotSeparatedString(methodName, key, targetDoc);\n\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n    value = getModularInstance(value);\n\n    const childContext = context.childContextForFieldPath(path);\n    if (value instanceof DeleteFieldValueImpl) {\n      // Add it to the field mask, but don't add anything to updateData.\n      fieldMaskPaths.push(path);\n    } else {\n      const parsedValue = parseData(value, childContext);\n      if (parsedValue != null) {\n        fieldMaskPaths.push(path);\n        updateData.set(path, parsedValue);\n      }\n    }\n  });\n\n  const mask = new FieldMask(fieldMaskPaths);\n  return new ParsedUpdateData(updateData, mask, context.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */\nexport function parseUpdateVarargs(\n  userDataReader: UserDataReader,\n  methodName: string,\n  targetDoc: DocumentKey,\n  field: string | PublicFieldPath | Compat<PublicFieldPath>,\n  value: unknown,\n  moreFieldsAndValues: unknown[]\n): ParsedUpdateData {\n  const context = userDataReader.createContext(\n    UserDataSource.Update,\n    methodName,\n    targetDoc\n  );\n  const keys = [fieldPathFromArgument(methodName, field, targetDoc)];\n  const values = [value];\n\n  if (moreFieldsAndValues.length % 2 !== 0) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      `Function ${methodName}() needs to be called with an even number ` +\n        'of arguments that alternate between field names and values.'\n    );\n  }\n\n  for (let i = 0; i < moreFieldsAndValues.length; i += 2) {\n    keys.push(\n      fieldPathFromArgument(\n        methodName,\n        moreFieldsAndValues[i] as string | PublicFieldPath\n      )\n    );\n    values.push(moreFieldsAndValues[i + 1]);\n  }\n\n  const fieldMaskPaths: InternalFieldPath[] = [];\n  const updateData = ObjectValue.empty();\n\n  // We iterate in reverse order to pick the last value for a field if the\n  // user specified the field multiple times.\n  for (let i = keys.length - 1; i >= 0; --i) {\n    if (!fieldMaskContains(fieldMaskPaths, keys[i])) {\n      const path = keys[i];\n      let value = values[i];\n\n      // For Compat types, we have to \"extract\" the underlying types before\n      // performing validation.\n      value = getModularInstance(value);\n\n      const childContext = context.childContextForFieldPath(path);\n      if (value instanceof DeleteFieldValueImpl) {\n        // Add it to the field mask, but don't add anything to updateData.\n        fieldMaskPaths.push(path);\n      } else {\n        const parsedValue = parseData(value, childContext);\n        if (parsedValue != null) {\n          fieldMaskPaths.push(path);\n          updateData.set(path, parsedValue);\n        }\n      }\n    }\n  }\n\n  const mask = new FieldMask(fieldMaskPaths);\n  return new ParsedUpdateData(updateData, mask, context.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */\nexport function parseQueryValue(\n  userDataReader: UserDataReader,\n  methodName: string,\n  input: unknown,\n  allowArrays = false\n): ProtoValue {\n  const context = userDataReader.createContext(\n    allowArrays ? UserDataSource.ArrayArgument : UserDataSource.Argument,\n    methodName\n  );\n  const parsed = parseData(input, context);\n  debugAssert(parsed != null, 'Parsed data should not be null.');\n  debugAssert(\n    context.fieldTransforms.length === 0,\n    'Field transforms should have been disallowed.'\n  );\n  return parsed;\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */\nexport function parseData(\n  input: unknown,\n  context: ParseContextImpl\n): ProtoValue | null {\n  // Unwrap the API type from the Compat SDK. This will return the API type\n  // from firestore-exp.\n  input = getModularInstance(input);\n\n  if (looksLikeJsonObject(input)) {\n    validatePlainObject('Unsupported field value:', context, input);\n    return parseObject(input, context);\n  } else if (input instanceof FieldValue) {\n    // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    parseSentinelFieldValue(input, context);\n    return null;\n  } else if (input === undefined && context.ignoreUndefinedProperties) {\n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n  } else {\n    // If context.path is null we are inside an array and we don't support\n    // field mask paths more granular than the top-level array.\n    if (context.path) {\n      context.fieldMask.push(context.path);\n    }\n\n    if (input instanceof Array) {\n      // TODO(b/34871131): Include the path containing the array in the error\n      // message.\n      // In the case of IN queries, the parsed data is an array (representing\n      // the set of values to be included for the IN query) that may directly\n      // contain additional arrays (each representing an individual field\n      // value), so we disable this validation.\n      if (\n        context.settings.arrayElement &&\n        context.dataSource !== UserDataSource.ArrayArgument\n      ) {\n        throw context.createError('Nested arrays are not supported');\n      }\n      return parseArray(input as unknown[], context);\n    } else {\n      return parseScalarValue(input, context);\n    }\n  }\n}\n\nfunction parseObject(\n  obj: Dict<unknown>,\n  context: ParseContextImpl\n): { mapValue: ProtoMapValue } {\n  const fields: Dict<ProtoValue> = {};\n\n  if (isEmpty(obj)) {\n    // If we encounter an empty object, we explicitly add it to the update\n    // mask to ensure that the server creates a map entry.\n    if (context.path && context.path.length > 0) {\n      context.fieldMask.push(context.path);\n    }\n  } else {\n    forEach(obj, (key: string, val: unknown) => {\n      const parsedValue = parseData(val, context.childContextForField(key));\n      if (parsedValue != null) {\n        fields[key] = parsedValue;\n      }\n    });\n  }\n\n  return { mapValue: { fields } };\n}\n\nfunction parseArray(array: unknown[], context: ParseContextImpl): ProtoValue {\n  const values: ProtoValue[] = [];\n  let entryIndex = 0;\n  for (const entry of array) {\n    let parsedEntry = parseData(\n      entry,\n      context.childContextForArray(entryIndex)\n    );\n    if (parsedEntry == null) {\n      // Just include nulls in the array for fields being replaced with a\n      // sentinel.\n      parsedEntry = { nullValue: 'NULL_VALUE' };\n    }\n    values.push(parsedEntry);\n    entryIndex++;\n  }\n  return { arrayValue: { values } };\n}\n\n/**\n * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n * context.fieldTransforms.\n */\nfunction parseSentinelFieldValue(\n  value: FieldValue,\n  context: ParseContextImpl\n): void {\n  // Sentinels are only supported with writes, and not within arrays.\n  if (!isWrite(context.dataSource)) {\n    throw context.createError(\n      `${value._methodName}() can only be used with update() and set()`\n    );\n  }\n  if (!context.path) {\n    throw context.createError(\n      `${value._methodName}() is not currently supported inside arrays`\n    );\n  }\n\n  const fieldTransform = value._toFieldTransform(context);\n  if (fieldTransform) {\n    context.fieldTransforms.push(fieldTransform);\n  }\n}\n\n/**\n * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n *\n * @returns The parsed value\n */\nfunction parseScalarValue(\n  value: unknown,\n  context: ParseContextImpl\n): ProtoValue | null {\n  value = getModularInstance(value);\n\n  if (value === null) {\n    return { nullValue: 'NULL_VALUE' };\n  } else if (typeof value === 'number') {\n    return toNumber(context.serializer, value);\n  } else if (typeof value === 'boolean') {\n    return { booleanValue: value };\n  } else if (typeof value === 'string') {\n    return { stringValue: value };\n  } else if (value instanceof Date) {\n    const timestamp = Timestamp.fromDate(value);\n    return {\n      timestampValue: toTimestamp(context.serializer, timestamp)\n    };\n  } else if (value instanceof Timestamp) {\n    // Firestore backend truncates precision down to microseconds. To ensure\n    // offline mode works the same with regards to truncation, perform the\n    // truncation immediately without waiting for the backend to do that.\n    const timestamp = new Timestamp(\n      value.seconds,\n      Math.floor(value.nanoseconds / 1000) * 1000\n    );\n    return {\n      timestampValue: toTimestamp(context.serializer, timestamp)\n    };\n  } else if (value instanceof GeoPoint) {\n    return {\n      geoPointValue: {\n        latitude: value.latitude,\n        longitude: value.longitude\n      }\n    };\n  } else if (value instanceof Bytes) {\n    return { bytesValue: toBytes(context.serializer, value._byteString) };\n  } else if (value instanceof DocumentReference) {\n    const thisDb = context.databaseId;\n    const otherDb = value.firestore._databaseId;\n    if (!otherDb.isEqual(thisDb)) {\n      throw context.createError(\n        'Document reference is for database ' +\n          `${otherDb.projectId}/${otherDb.database} but should be ` +\n          `for database ${thisDb.projectId}/${thisDb.database}`\n      );\n    }\n    return {\n      referenceValue: toResourceName(\n        value.firestore._databaseId || context.databaseId,\n        value._key.path\n      )\n    };\n  } else {\n    throw context.createError(\n      `Unsupported field value: ${valueDescription(value)}`\n    );\n  }\n}\n\n/**\n * Checks whether an object looks like a JSON object that should be converted\n * into a struct. Normal class/prototype instances are considered to look like\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\n * GeoPoints, etc. are not considered to look like JSON objects since they map\n * to specific FieldValue types other than ObjectValue.\n */\nfunction looksLikeJsonObject(input: unknown): boolean {\n  return (\n    typeof input === 'object' &&\n    input !== null &&\n    !(input instanceof Array) &&\n    !(input instanceof Date) &&\n    !(input instanceof Timestamp) &&\n    !(input instanceof GeoPoint) &&\n    !(input instanceof Bytes) &&\n    !(input instanceof DocumentReference) &&\n    !(input instanceof FieldValue)\n  );\n}\n\nfunction validatePlainObject(\n  message: string,\n  context: ParseContextImpl,\n  input: unknown\n): asserts input is Dict<unknown> {\n  if (!looksLikeJsonObject(input) || !isPlainObject(input)) {\n    const description = valueDescription(input);\n    if (description === 'an object') {\n      // Massage the error if it was an object.\n      throw context.createError(message + ' a custom object');\n    } else {\n      throw context.createError(message + ' ' + description);\n    }\n  }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */\nexport function fieldPathFromArgument(\n  methodName: string,\n  path: string | PublicFieldPath | Compat<PublicFieldPath>,\n  targetDoc?: DocumentKey\n): InternalFieldPath {\n  // If required, replace the FieldPath Compat class with with the firestore-exp\n  // FieldPath.\n  path = getModularInstance(path);\n\n  if (path instanceof FieldPath) {\n    return path._internalPath;\n  } else if (typeof path === 'string') {\n    return fieldPathFromDotSeparatedString(methodName, path);\n  } else {\n    const message = 'Field path arguments must be of type string or ';\n    throw createError(\n      message,\n      methodName,\n      /* hasConverter= */ false,\n      /* path= */ undefined,\n      targetDoc\n    );\n  }\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */\nconst FIELD_PATH_RESERVED = new RegExp('[~\\\\*/\\\\[\\\\]]');\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */\nexport function fieldPathFromDotSeparatedString(\n  methodName: string,\n  path: string,\n  targetDoc?: DocumentKey\n): InternalFieldPath {\n  const found = path.search(FIELD_PATH_RESERVED);\n  if (found >= 0) {\n    throw createError(\n      `Invalid field path (${path}). Paths must not contain ` +\n        `'~', '*', '/', '[', or ']'`,\n      methodName,\n      /* hasConverter= */ false,\n      /* path= */ undefined,\n      targetDoc\n    );\n  }\n\n  try {\n    return new FieldPath(...path.split('.'))._internalPath;\n  } catch (e) {\n    throw createError(\n      `Invalid field path (${path}). Paths must not be empty, ` +\n        `begin with '.', end with '.', or contain '..'`,\n      methodName,\n      /* hasConverter= */ false,\n      /* path= */ undefined,\n      targetDoc\n    );\n  }\n}\n\nfunction createError(\n  reason: string,\n  methodName: string,\n  hasConverter: boolean,\n  path?: InternalFieldPath,\n  targetDoc?: DocumentKey\n): FirestoreError {\n  const hasPath = path && !path.isEmpty();\n  const hasDocument = targetDoc !== undefined;\n  let message = `Function ${methodName}() called with invalid data`;\n  if (hasConverter) {\n    message += ' (via `toFirestore()`)';\n  }\n  message += '. ';\n\n  let description = '';\n  if (hasPath || hasDocument) {\n    description += ' (found';\n\n    if (hasPath) {\n      description += ` in field ${path}`;\n    }\n    if (hasDocument) {\n      description += ` in document ${targetDoc}`;\n    }\n    description += ')';\n  }\n\n  return new FirestoreError(\n    Code.INVALID_ARGUMENT,\n    message + reason + description\n  );\n}\n\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */\nfunction fieldMaskContains(\n  haystack: InternalFieldPath[],\n  needle: InternalFieldPath\n): boolean {\n  return haystack.some(v => v.isEqual(needle));\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Compat, getModularInstance } from '@firebase/util';\n\nimport { Document } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { FieldPath as InternalFieldPath } from '../model/path';\nimport { arrayEquals } from '../util/misc';\n\nimport { Firestore } from './database';\nimport { FieldPath } from './field_path';\nimport {\n  DocumentData,\n  DocumentReference,\n  PartialWithFieldValue,\n  Query,\n  queryEqual,\n  SetOptions,\n  WithFieldValue\n} from './reference';\nimport {\n  fieldPathFromDotSeparatedString,\n  UntypedFirestoreDataConverter\n} from './user_data_reader';\nimport { AbstractUserDataWriter } from './user_data_writer';\n\n/**\n * Converter used by `withConverter()` to transform user objects of type\n * `AppModelType` into Firestore data of type `DbModelType`.\n *\n * Using the converter allows you to specify generic type arguments when\n * storing and retrieving objects from Firestore.\n *\n * In this context, an \"AppModel\" is a class that is used in an application to\n * package together related information and functionality. Such a class could,\n * for example, have properties with complex, nested data types, properties used\n * for memoization, properties of types not supported by Firestore (such as\n * `symbol` and `bigint`), and helper functions that perform compound\n * operations. Such classes are not suitable and/or possible to store into a\n * Firestore database. Instead, instances of such classes need to be converted\n * to \"plain old JavaScript objects\" (POJOs) with exclusively primitive\n * properties, potentially nested inside other POJOs or arrays of POJOs. In this\n * context, this type is referred to as the \"DbModel\" and would be an object\n * suitable for persisting into Firestore. For convenience, applications can\n * implement `FirestoreDataConverter` and register the converter with Firestore\n * objects, such as `DocumentReference` or `Query`, to automatically convert\n * `AppModel` to `DbModel` when storing into Firestore, and convert `DbModel`\n * to `AppModel` when retrieving from Firestore.\n *\n * @example\n *\n * Simple Example\n *\n * ```typescript\n * const numberConverter = {\n *     toFirestore(value: WithFieldValue<number>) {\n *         return { value };\n *     },\n *     fromFirestore(snapshot: QueryDocumentSnapshot, options: SnapshotOptions) {\n *         return snapshot.data(options).value as number;\n *     }\n * };\n *\n * async function simpleDemo(db: Firestore): Promise<void> {\n *     const documentRef = doc(db, 'values/value123').withConverter(numberConverter);\n *\n *     // converters are used with `setDoc`, `addDoc`, and `getDoc`\n *     await setDoc(documentRef, 42);\n *     const snapshot1 = await getDoc(documentRef);\n *     assertEqual(snapshot1.data(), 42);\n *\n *     // converters are not used when writing data with `updateDoc`\n *     await updateDoc(documentRef, { value: 999 });\n *     const snapshot2 = await getDoc(documentRef);\n *     assertEqual(snapshot2.data(), 999);\n * }\n * ```\n *\n * Advanced Example\n *\n * ```typescript\n * // The Post class is a model that is used by our application.\n * // This class may have properties and methods that are specific\n * // to our application execution, which do not need to be persisted\n * // to Firestore.\n * class Post {\n *     constructor(\n *         readonly title: string,\n *         readonly author: string,\n *         readonly lastUpdatedMillis: number\n *     ) {}\n *     toString(): string {\n *         return `${this.title} by ${this.author}`;\n *     }\n * }\n *\n * // The PostDbModel represents how we want our posts to be stored\n * // in Firestore. This DbModel has different properties (`ttl`,\n * // `aut`, and `lut`) from the Post class we use in our application.\n * interface PostDbModel {\n *     ttl: string;\n *     aut: { firstName: string; lastName: string };\n *     lut: Timestamp;\n * }\n *\n * // The `PostConverter` implements `FirestoreDataConverter` and specifies\n * // how the Firestore SDK can convert `Post` objects to `PostDbModel`\n * // objects and vice versa.\n * class PostConverter implements FirestoreDataConverter<Post, PostDbModel> {\n *     toFirestore(post: WithFieldValue<Post>): WithFieldValue<PostDbModel> {\n *         return {\n *             ttl: post.title,\n *             aut: this._autFromAuthor(post.author),\n *             lut: this._lutFromLastUpdatedMillis(post.lastUpdatedMillis)\n *         };\n *     }\n *\n *     fromFirestore(snapshot: QueryDocumentSnapshot, options: SnapshotOptions): Post {\n *         const data = snapshot.data(options) as PostDbModel;\n *         const author = `${data.aut.firstName} ${data.aut.lastName}`;\n *         return new Post(data.ttl, author, data.lut.toMillis());\n *     }\n *\n *     _autFromAuthor(\n *         author: string | FieldValue\n *     ): { firstName: string; lastName: string } | FieldValue {\n *         if (typeof author !== 'string') {\n *             // `author` is a FieldValue, so just return it.\n *             return author;\n *         }\n *         const [firstName, lastName] = author.split(' ');\n *         return {firstName, lastName};\n *     }\n *\n *     _lutFromLastUpdatedMillis(\n *         lastUpdatedMillis: number | FieldValue\n *     ): Timestamp | FieldValue {\n *         if (typeof lastUpdatedMillis !== 'number') {\n *             // `lastUpdatedMillis` must be a FieldValue, so just return it.\n *             return lastUpdatedMillis;\n *         }\n *         return Timestamp.fromMillis(lastUpdatedMillis);\n *     }\n * }\n *\n * async function advancedDemo(db: Firestore): Promise<void> {\n *     // Create a `DocumentReference` with a `FirestoreDataConverter`.\n *     const documentRef = doc(db, 'posts/post123').withConverter(new PostConverter());\n *\n *     // The `data` argument specified to `setDoc()` is type checked by the\n *     // TypeScript compiler to be compatible with `Post`. Since the `data`\n *     // argument is typed as `WithFieldValue<Post>` rather than just `Post`,\n *     // this allows properties of the `data` argument to also be special\n *     // Firestore values that perform server-side mutations, such as\n *     // `arrayRemove()`, `deleteField()`, and `serverTimestamp()`.\n *     await setDoc(documentRef, {\n *         title: 'My Life',\n *         author: 'Foo Bar',\n *         lastUpdatedMillis: serverTimestamp()\n *     });\n *\n *     // The TypeScript compiler will fail to compile if the `data` argument to\n *     // `setDoc()` is _not_ compatible with `WithFieldValue<Post>`. This\n *     // type checking prevents the caller from specifying objects with incorrect\n *     // properties or property values.\n *     // @ts-expect-error \"Argument of type { ttl: string; } is not assignable\n *     // to parameter of type WithFieldValue<Post>\"\n *     await setDoc(documentRef, { ttl: 'The Title' });\n *\n *     // When retrieving a document with `getDoc()` the `DocumentSnapshot`\n *     // object's `data()` method returns a `Post`, rather than a generic object,\n *     // which would have been returned if the `DocumentReference` did _not_ have a\n *     // `FirestoreDataConverter` attached to it.\n *     const snapshot1: DocumentSnapshot<Post> = await getDoc(documentRef);\n *     const post1: Post = snapshot1.data()!;\n *     if (post1) {\n *         assertEqual(post1.title, 'My Life');\n *         assertEqual(post1.author, 'Foo Bar');\n *     }\n *\n *     // The `data` argument specified to `updateDoc()` is type checked by the\n *     // TypeScript compiler to be compatible with `PostDbModel`. Note that\n *     // unlike `setDoc()`, whose `data` argument must be compatible with `Post`,\n *     // the `data` argument to `updateDoc()` must be compatible with\n *     // `PostDbModel`. Similar to `setDoc()`, since the `data` argument is typed\n *     // as `WithFieldValue<PostDbModel>` rather than just `PostDbModel`, this\n *     // allows properties of the `data` argument to also be those special\n *     // Firestore values, like `arrayRemove()`, `deleteField()`, and\n *     // `serverTimestamp()`.\n *     await updateDoc(documentRef, {\n *         'aut.firstName': 'NewFirstName',\n *         lut: serverTimestamp()\n *     });\n *\n *     // The TypeScript compiler will fail to compile if the `data` argument to\n *     // `updateDoc()` is _not_ compatible with `WithFieldValue<PostDbModel>`.\n *     // This type checking prevents the caller from specifying objects with\n *     // incorrect properties or property values.\n *     // @ts-expect-error \"Argument of type { title: string; } is not assignable\n *     // to parameter of type WithFieldValue<PostDbModel>\"\n *     await updateDoc(documentRef, { title: 'New Title' });\n *     const snapshot2: DocumentSnapshot<Post> = await getDoc(documentRef);\n *     const post2: Post = snapshot2.data()!;\n *     if (post2) {\n *         assertEqual(post2.title, 'My Life');\n *         assertEqual(post2.author, 'NewFirstName Bar');\n *     }\n * }\n * ```\n */\nexport interface FirestoreDataConverter<\n  AppModelType,\n  DbModelType extends DocumentData = DocumentData\n> {\n  /**\n   * Called by the Firestore SDK to convert a custom model object of type\n   * `AppModelType` into a plain Javascript object (suitable for writing\n   * directly to the Firestore database) of type `DbModelType`. Used with\n   * {@link @firebase/firestore/lite#(setDoc:1)},\n   * {@link @firebase/firestore/lite#(WriteBatch.set:1)} and\n   * {@link @firebase/firestore/lite#(Transaction.set:1)}.\n   *\n   * The `WithFieldValue<T>` type extends `T` to also allow FieldValues such as\n   * {@link (deleteField:1)} to be used as property values.\n   */\n  toFirestore(\n    modelObject: WithFieldValue<AppModelType>\n  ): WithFieldValue<DbModelType>;\n\n  /**\n   * Called by the Firestore SDK to convert a custom model object of type\n   * `AppModelType` into a plain Javascript object (suitable for writing\n   * directly to the Firestore database) of type `DbModelType`. Used with\n   * {@link @firebase/firestore/lite#(setDoc:1)},\n   * {@link @firebase/firestore/lite#(WriteBatch.set:1)} and\n   * {@link @firebase/firestore/lite#(Transaction.set:1)} with `merge:true`\n   * or `mergeFields`.\n   *\n   * The `PartialWithFieldValue<T>` type extends `Partial<T>` to allow\n   * FieldValues such as {@link (arrayUnion:1)} to be used as property values.\n   * It also supports nested `Partial` by allowing nested fields to be\n   * omitted.\n   */\n  toFirestore(\n    modelObject: PartialWithFieldValue<AppModelType>,\n    options: SetOptions\n  ): PartialWithFieldValue<DbModelType>;\n\n  /**\n   * Called by the Firestore SDK to convert Firestore data into an object of\n   * type `AppModelType`. You can access your data by calling:\n   * `snapshot.data()`.\n   *\n   *\n   * Generally, the data returned from `snapshot.data()` can be cast to\n   * `DbModelType`; however, this is not guaranteed because Firestore does not\n   * enforce a schema on the database. For example, writes from a previous\n   * version of the application or writes from another client that did not use a\n   * type converter could have written data with different properties and/or\n   * property types. The implementation will need to choose whether to\n   * gracefully recover from non-conforming data or throw an error.\n   *\n   * @param snapshot - A `QueryDocumentSnapshot` containing your data and\n   * metadata.\n   */\n  fromFirestore(\n    snapshot: QueryDocumentSnapshot<DocumentData, DocumentData>\n  ): AppModelType;\n}\n\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */\nexport class DocumentSnapshot<\n  AppModelType = DocumentData,\n  DbModelType extends DocumentData = DocumentData\n> {\n  // Note: This class is stripped down version of the DocumentSnapshot in\n  // the legacy SDK. The changes are:\n  // - No support for SnapshotMetadata.\n  // - No support for SnapshotOptions.\n\n  /** @hideconstructor protected */\n  constructor(\n    public _firestore: Firestore,\n    public _userDataWriter: AbstractUserDataWriter,\n    public _key: DocumentKey,\n    public _document: Document | null,\n    public _converter: UntypedFirestoreDataConverter<\n      AppModelType,\n      DbModelType\n    > | null\n  ) {}\n\n  /** Property of the `DocumentSnapshot` that provides the document's ID. */\n  get id(): string {\n    return this._key.path.lastSegment();\n  }\n\n  /**\n   * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n   */\n  get ref(): DocumentReference<AppModelType, DbModelType> {\n    return new DocumentReference<AppModelType, DbModelType>(\n      this._firestore,\n      this._converter,\n      this._key\n    );\n  }\n\n  /**\n   * Signals whether or not the document at the snapshot's location exists.\n   *\n   * @returns true if the document exists.\n   */\n  exists(): this is QueryDocumentSnapshot<AppModelType, DbModelType> {\n    return this._document !== null;\n  }\n\n  /**\n   * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n   * the document doesn't exist.\n   *\n   * @returns An `Object` containing all fields in the document or `undefined`\n   * if the document doesn't exist.\n   */\n  data(): AppModelType | undefined {\n    if (!this._document) {\n      return undefined;\n    } else if (this._converter) {\n      // We only want to use the converter and create a new DocumentSnapshot\n      // if a converter has been provided.\n      const snapshot = new QueryDocumentSnapshot(\n        this._firestore,\n        this._userDataWriter,\n        this._key,\n        this._document,\n        /* converter= */ null\n      );\n      return this._converter.fromFirestore(snapshot);\n    } else {\n      return this._userDataWriter.convertValue(\n        this._document.data.value\n      ) as AppModelType;\n    }\n  }\n\n  /**\n   * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n   * document or field doesn't exist.\n   *\n   * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n   * field.\n   * @returns The data at the specified field location or undefined if no such\n   * field exists in the document.\n   */\n  // We are using `any` here to avoid an explicit cast by our users.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  get(fieldPath: string | FieldPath): any {\n    if (this._document) {\n      const value = this._document.data.field(\n        fieldPathFromArgument('DocumentSnapshot.get', fieldPath)\n      );\n      if (value !== null) {\n        return this._userDataWriter.convertValue(value);\n      }\n    }\n    return undefined;\n  }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */\nexport class QueryDocumentSnapshot<\n  AppModelType = DocumentData,\n  DbModelType extends DocumentData = DocumentData\n> extends DocumentSnapshot<AppModelType, DbModelType> {\n  /**\n   * Retrieves all fields in the document as an `Object`.\n   *\n   * @override\n   * @returns An `Object` containing all fields in the document.\n   */\n  data(): AppModelType {\n    return super.data() as AppModelType;\n  }\n}\n\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */\nexport class QuerySnapshot<\n  AppModelType = DocumentData,\n  DbModelType extends DocumentData = DocumentData\n> {\n  /**\n   * The query on which you called {@link getDocs} in order to get this\n   * `QuerySnapshot`.\n   */\n  readonly query: Query<AppModelType, DbModelType>;\n\n  /** @hideconstructor */\n  constructor(\n    _query: Query<AppModelType, DbModelType>,\n    readonly _docs: Array<QueryDocumentSnapshot<AppModelType, DbModelType>>\n  ) {\n    this.query = _query;\n  }\n\n  /** An array of all the documents in the `QuerySnapshot`. */\n  get docs(): Array<QueryDocumentSnapshot<AppModelType, DbModelType>> {\n    return [...this._docs];\n  }\n\n  /** The number of documents in the `QuerySnapshot`. */\n  get size(): number {\n    return this.docs.length;\n  }\n\n  /** True if there are no documents in the `QuerySnapshot`. */\n  get empty(): boolean {\n    return this.docs.length === 0;\n  }\n\n  /**\n   * Enumerates all of the documents in the `QuerySnapshot`.\n   *\n   * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n   * each document in the snapshot.\n   * @param thisArg - The `this` binding for the callback.\n   */\n  forEach(\n    callback: (\n      result: QueryDocumentSnapshot<AppModelType, DbModelType>\n    ) => void,\n    thisArg?: unknown\n  ): void {\n    this._docs.forEach(callback, thisArg);\n  }\n}\n\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */\nexport function snapshotEqual<AppModelType, DbModelType extends DocumentData>(\n  left:\n    | DocumentSnapshot<AppModelType, DbModelType>\n    | QuerySnapshot<AppModelType, DbModelType>,\n  right:\n    | DocumentSnapshot<AppModelType, DbModelType>\n    | QuerySnapshot<AppModelType, DbModelType>\n): boolean {\n  left = getModularInstance(left);\n  right = getModularInstance(right);\n\n  if (left instanceof DocumentSnapshot && right instanceof DocumentSnapshot) {\n    return (\n      left._firestore === right._firestore &&\n      left._key.isEqual(right._key) &&\n      (left._document === null\n        ? right._document === null\n        : left._document.isEqual(right._document)) &&\n      left._converter === right._converter\n    );\n  } else if (left instanceof QuerySnapshot && right instanceof QuerySnapshot) {\n    return (\n      queryEqual(left.query, right.query) &&\n      arrayEquals(left.docs, right.docs, snapshotEqual)\n    );\n  }\n\n  return false;\n}\n\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */\nexport function fieldPathFromArgument(\n  methodName: string,\n  arg: string | FieldPath | Compat<FieldPath>\n): InternalFieldPath {\n  if (typeof arg === 'string') {\n    return fieldPathFromDotSeparatedString(methodName, arg);\n  } else if (arg instanceof FieldPath) {\n    return arg._internalPath;\n  } else {\n    return arg._delegate._internalPath;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getModularInstance } from '@firebase/util';\n\nimport { Bound } from '../core/bound';\nimport { DatabaseId } from '../core/database_info';\nimport {\n  CompositeFilter,\n  CompositeOperator,\n  FieldFilter,\n  Filter,\n  Operator\n} from '../core/filter';\nimport { Direction, OrderBy } from '../core/order_by';\nimport {\n  isCollectionGroupQuery,\n  LimitType,\n  Query as InternalQuery,\n  queryNormalizedOrderBy,\n  queryWithAddedFilter,\n  queryWithAddedOrderBy,\n  queryWithEndAt,\n  queryWithLimit,\n  queryWithStartAt\n} from '../core/query';\nimport { Document } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { FieldPath as InternalFieldPath, ResourcePath } from '../model/path';\nimport { isServerTimestamp } from '../model/server_timestamps';\nimport { refValue } from '../model/values';\nimport { Value as ProtoValue } from '../protos/firestore_proto_api';\nimport { Code, FirestoreError } from '../util/error';\nimport {\n  validatePositiveNumber,\n  valueDescription\n} from '../util/input_validation';\n\nimport { FieldPath } from './field_path';\nimport { DocumentData, DocumentReference, Query } from './reference';\nimport { DocumentSnapshot, fieldPathFromArgument } from './snapshot';\nimport {\n  newUserDataReader,\n  parseQueryValue,\n  UserDataReader\n} from './user_data_reader';\n\nexport function validateHasExplicitOrderByForLimitToLast(\n  query: InternalQuery\n): void {\n  if (\n    query.limitType === LimitType.Last &&\n    query.explicitOrderBy.length === 0\n  ) {\n    throw new FirestoreError(\n      Code.UNIMPLEMENTED,\n      'limitToLast() queries require specifying at least one orderBy() clause'\n    );\n  }\n}\n\n/** Describes the different query constraints available in this SDK. */\nexport type QueryConstraintType =\n  | 'where'\n  | 'orderBy'\n  | 'limit'\n  | 'limitToLast'\n  | 'startAt'\n  | 'startAfter'\n  | 'endAt'\n  | 'endBefore';\n\n/**\n * An `AppliableConstraint` is an abstraction of a constraint that can be applied\n * to a Firestore query.\n */\nexport abstract class AppliableConstraint {\n  /**\n   * Takes the provided {@link Query} and returns a copy of the {@link Query} with this\n   * {@link AppliableConstraint} applied.\n   */\n  abstract _apply<AppModelType, DbModelType extends DocumentData>(\n    query: Query<AppModelType, DbModelType>\n  ): Query<AppModelType, DbModelType>;\n}\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link (startAt:1)}, {@link (startAfter:1)}, {@link\n * (endBefore:1)}, {@link (endAt:1)}, {@link limit}, {@link limitToLast} and\n * can then be passed to {@link (query:1)} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nexport abstract class QueryConstraint extends AppliableConstraint {\n  /** The type of this query constraint */\n  abstract readonly type: QueryConstraintType;\n\n  /**\n   * Takes the provided {@link Query} and returns a copy of the {@link Query} with this\n   * {@link AppliableConstraint} applied.\n   */\n  abstract _apply<AppModelType, DbModelType extends DocumentData>(\n    query: Query<AppModelType, DbModelType>\n  ): Query<AppModelType, DbModelType>;\n}\n\n/**\n * Creates a new immutable instance of {@link Query} that is extended to also\n * include additional query constraints.\n *\n * @param query - The {@link Query} instance to use as a base for the new\n * constraints.\n * @param compositeFilter - The {@link QueryCompositeFilterConstraint} to\n * apply. Create {@link QueryCompositeFilterConstraint} using {@link and} or\n * {@link or}.\n * @param queryConstraints - Additional {@link QueryNonFilterConstraint}s to\n * apply (e.g. {@link orderBy}, {@link limit}).\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */\nexport function query<AppModelType, DbModelType extends DocumentData>(\n  query: Query<AppModelType, DbModelType>,\n  compositeFilter: QueryCompositeFilterConstraint,\n  ...queryConstraints: QueryNonFilterConstraint[]\n): Query<AppModelType, DbModelType>;\n\n/**\n * Creates a new immutable instance of {@link Query} that is extended to also\n * include additional query constraints.\n *\n * @param query - The {@link Query} instance to use as a base for the new\n * constraints.\n * @param queryConstraints - The list of {@link QueryConstraint}s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */\nexport function query<AppModelType, DbModelType extends DocumentData>(\n  query: Query<AppModelType, DbModelType>,\n  ...queryConstraints: QueryConstraint[]\n): Query<AppModelType, DbModelType>;\n\nexport function query<AppModelType, DbModelType extends DocumentData>(\n  query: Query<AppModelType, DbModelType>,\n  queryConstraint: QueryCompositeFilterConstraint | QueryConstraint | undefined,\n  ...additionalQueryConstraints: Array<\n    QueryConstraint | QueryNonFilterConstraint\n  >\n): Query<AppModelType, DbModelType> {\n  let queryConstraints: AppliableConstraint[] = [];\n\n  if (queryConstraint instanceof AppliableConstraint) {\n    queryConstraints.push(queryConstraint);\n  }\n\n  queryConstraints = queryConstraints.concat(additionalQueryConstraints);\n\n  validateQueryConstraintArray(queryConstraints);\n\n  for (const constraint of queryConstraints) {\n    query = constraint._apply(query);\n  }\n  return query;\n}\n\n/**\n * A `QueryFieldFilterConstraint` is used to narrow the set of documents returned by\n * a Firestore query by filtering on one or more document fields.\n * `QueryFieldFilterConstraint`s are created by invoking {@link where} and can then\n * be passed to {@link (query:1)} to create a new query instance that also contains\n * this `QueryFieldFilterConstraint`.\n */\nexport class QueryFieldFilterConstraint extends QueryConstraint {\n  /** The type of this query constraint */\n  readonly type = 'where';\n\n  /**\n   * @internal\n   */\n  protected constructor(\n    private readonly _field: InternalFieldPath,\n    private _op: Operator,\n    private _value: unknown\n  ) {\n    super();\n  }\n\n  static _create(\n    _field: InternalFieldPath,\n    _op: Operator,\n    _value: unknown\n  ): QueryFieldFilterConstraint {\n    return new QueryFieldFilterConstraint(_field, _op, _value);\n  }\n\n  _apply<AppModelType, DbModelType extends DocumentData>(\n    query: Query<AppModelType, DbModelType>\n  ): Query<AppModelType, DbModelType> {\n    const filter = this._parse(query);\n    validateNewFieldFilter(query._query, filter);\n    return new Query(\n      query.firestore,\n      query.converter,\n      queryWithAddedFilter(query._query, filter)\n    );\n  }\n\n  _parse<AppModelType, DbModelType extends DocumentData>(\n    query: Query<AppModelType, DbModelType>\n  ): FieldFilter {\n    const reader = newUserDataReader(query.firestore);\n    const filter = newQueryFilter(\n      query._query,\n      'where',\n      reader,\n      query.firestore._databaseId,\n      this._field,\n      this._op,\n      this._value\n    );\n    return filter;\n  }\n}\n\n/**\n * Filter conditions in a {@link where} clause are specified using the\n * strings '&lt;', '&lt;=', '==', '!=', '&gt;=', '&gt;', 'array-contains', 'in',\n * 'array-contains-any', and 'not-in'.\n */\nexport type WhereFilterOp =\n  | '<'\n  | '<='\n  | '=='\n  | '!='\n  | '>='\n  | '>'\n  | 'array-contains'\n  | 'in'\n  | 'array-contains-any'\n  | 'not-in';\n\n/**\n * Creates a {@link QueryFieldFilterConstraint} that enforces that documents\n * must contain the specified field and that the value should satisfy the\n * relation constraint provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link QueryFieldFilterConstraint}.\n */\nexport function where(\n  fieldPath: string | FieldPath,\n  opStr: WhereFilterOp,\n  value: unknown\n): QueryFieldFilterConstraint {\n  const op = opStr as Operator;\n  const field = fieldPathFromArgument('where', fieldPath);\n  return QueryFieldFilterConstraint._create(field, op, value);\n}\n\n/**\n * A `QueryCompositeFilterConstraint` is used to narrow the set of documents\n * returned by a Firestore query by performing the logical OR or AND of multiple\n * {@link QueryFieldFilterConstraint}s or {@link QueryCompositeFilterConstraint}s.\n * `QueryCompositeFilterConstraint`s are created by invoking {@link or} or\n * {@link and} and can then be passed to {@link (query:1)} to create a new query\n * instance that also contains the `QueryCompositeFilterConstraint`.\n */\nexport class QueryCompositeFilterConstraint extends AppliableConstraint {\n  /**\n   * @internal\n   */\n  protected constructor(\n    /** The type of this query constraint */\n    readonly type: 'or' | 'and',\n    private readonly _queryConstraints: QueryFilterConstraint[]\n  ) {\n    super();\n  }\n\n  static _create(\n    type: 'or' | 'and',\n    _queryConstraints: QueryFilterConstraint[]\n  ): QueryCompositeFilterConstraint {\n    return new QueryCompositeFilterConstraint(type, _queryConstraints);\n  }\n\n  _parse<AppModelType, DbModelType extends DocumentData>(\n    query: Query<AppModelType, DbModelType>\n  ): Filter {\n    const parsedFilters = this._queryConstraints\n      .map(queryConstraint => {\n        return queryConstraint._parse(query);\n      })\n      .filter(parsedFilter => parsedFilter.getFilters().length > 0);\n\n    if (parsedFilters.length === 1) {\n      return parsedFilters[0];\n    }\n\n    return CompositeFilter.create(parsedFilters, this._getOperator());\n  }\n\n  _apply<AppModelType, DbModelType extends DocumentData>(\n    query: Query<AppModelType, DbModelType>\n  ): Query<AppModelType, DbModelType> {\n    const parsedFilter = this._parse(query);\n    if (parsedFilter.getFilters().length === 0) {\n      // Return the existing query if not adding any more filters (e.g. an empty\n      // composite filter).\n      return query;\n    }\n    validateNewFilter(query._query, parsedFilter);\n\n    return new Query(\n      query.firestore,\n      query.converter,\n      queryWithAddedFilter(query._query, parsedFilter)\n    );\n  }\n\n  _getQueryConstraints(): readonly AppliableConstraint[] {\n    return this._queryConstraints;\n  }\n\n  _getOperator(): CompositeOperator {\n    return this.type === 'and' ? CompositeOperator.AND : CompositeOperator.OR;\n  }\n}\n\n/**\n * `QueryNonFilterConstraint` is a helper union type that represents\n * QueryConstraints which are used to narrow or order the set of documents,\n * but that do not explicitly filter on a document field.\n * `QueryNonFilterConstraint`s are created by invoking {@link orderBy},\n * {@link (startAt:1)}, {@link (startAfter:1)}, {@link (endBefore:1)}, {@link (endAt:1)},\n * {@link limit} or {@link limitToLast} and can then be passed to {@link (query:1)}\n * to create a new query instance that also contains the `QueryConstraint`.\n */\nexport type QueryNonFilterConstraint =\n  | QueryOrderByConstraint\n  | QueryLimitConstraint\n  | QueryStartAtConstraint\n  | QueryEndAtConstraint;\n\n/**\n * `QueryFilterConstraint` is a helper union type that represents\n * {@link QueryFieldFilterConstraint} and {@link QueryCompositeFilterConstraint}.\n */\nexport type QueryFilterConstraint =\n  | QueryFieldFilterConstraint\n  | QueryCompositeFilterConstraint;\n\n/**\n * Creates a new {@link QueryCompositeFilterConstraint} that is a disjunction of\n * the given filter constraints. A disjunction filter includes a document if it\n * satisfies any of the given filters.\n *\n * @param queryConstraints - Optional. The list of\n * {@link QueryFilterConstraint}s to perform a disjunction for. These must be\n * created with calls to {@link where}, {@link or}, or {@link and}.\n * @returns The newly created {@link QueryCompositeFilterConstraint}.\n */\nexport function or(\n  ...queryConstraints: QueryFilterConstraint[]\n): QueryCompositeFilterConstraint {\n  // Only support QueryFilterConstraints\n  queryConstraints.forEach(queryConstraint =>\n    validateQueryFilterConstraint('or', queryConstraint)\n  );\n\n  return QueryCompositeFilterConstraint._create(\n    CompositeOperator.OR,\n    queryConstraints as QueryFilterConstraint[]\n  );\n}\n\n/**\n * Creates a new {@link QueryCompositeFilterConstraint} that is a conjunction of\n * the given filter constraints. A conjunction filter includes a document if it\n * satisfies all of the given filters.\n *\n * @param queryConstraints - Optional. The list of\n * {@link QueryFilterConstraint}s to perform a conjunction for. These must be\n * created with calls to {@link where}, {@link or}, or {@link and}.\n * @returns The newly created {@link QueryCompositeFilterConstraint}.\n */\nexport function and(\n  ...queryConstraints: QueryFilterConstraint[]\n): QueryCompositeFilterConstraint {\n  // Only support QueryFilterConstraints\n  queryConstraints.forEach(queryConstraint =>\n    validateQueryFilterConstraint('and', queryConstraint)\n  );\n\n  return QueryCompositeFilterConstraint._create(\n    CompositeOperator.AND,\n    queryConstraints as QueryFilterConstraint[]\n  );\n}\n\n/**\n * A `QueryOrderByConstraint` is used to sort the set of documents returned by a\n * Firestore query. `QueryOrderByConstraint`s are created by invoking\n * {@link orderBy} and can then be passed to {@link (query:1)} to create a new query\n * instance that also contains this `QueryOrderByConstraint`.\n *\n * Note: Documents that do not contain the orderBy field will not be present in\n * the query result.\n */\nexport class QueryOrderByConstraint extends QueryConstraint {\n  /** The type of this query constraint */\n  readonly type = 'orderBy';\n\n  /**\n   * @internal\n   */\n  protected constructor(\n    private readonly _field: InternalFieldPath,\n    private _direction: Direction\n  ) {\n    super();\n  }\n\n  static _create(\n    _field: InternalFieldPath,\n    _direction: Direction\n  ): QueryOrderByConstraint {\n    return new QueryOrderByConstraint(_field, _direction);\n  }\n\n  _apply<AppModelType, DbModelType extends DocumentData>(\n    query: Query<AppModelType, DbModelType>\n  ): Query<AppModelType, DbModelType> {\n    const orderBy = newQueryOrderBy(query._query, this._field, this._direction);\n    return new Query(\n      query.firestore,\n      query.converter,\n      queryWithAddedOrderBy(query._query, orderBy)\n    );\n  }\n}\n\n/**\n * The direction of a {@link orderBy} clause is specified as 'desc' or 'asc'\n * (descending or ascending).\n */\nexport type OrderByDirection = 'desc' | 'asc';\n\n/**\n * Creates a {@link QueryOrderByConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * Note: Documents that do not contain the specified field will not be present\n * in the query result.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link QueryOrderByConstraint}.\n */\nexport function orderBy(\n  fieldPath: string | FieldPath,\n  directionStr: OrderByDirection = 'asc'\n): QueryOrderByConstraint {\n  const direction = directionStr as Direction;\n  const path = fieldPathFromArgument('orderBy', fieldPath);\n  return QueryOrderByConstraint._create(path, direction);\n}\n\n/**\n * A `QueryLimitConstraint` is used to limit the number of documents returned by\n * a Firestore query.\n * `QueryLimitConstraint`s are created by invoking {@link limit} or\n * {@link limitToLast} and can then be passed to {@link (query:1)} to create a new\n * query instance that also contains this `QueryLimitConstraint`.\n */\nexport class QueryLimitConstraint extends QueryConstraint {\n  /**\n   * @internal\n   */\n  protected constructor(\n    /** The type of this query constraint */\n    readonly type: 'limit' | 'limitToLast',\n    private readonly _limit: number,\n    private readonly _limitType: LimitType\n  ) {\n    super();\n  }\n\n  static _create(\n    type: 'limit' | 'limitToLast',\n    _limit: number,\n    _limitType: LimitType\n  ): QueryLimitConstraint {\n    return new QueryLimitConstraint(type, _limit, _limitType);\n  }\n\n  _apply<AppModelType, DbModelType extends DocumentData>(\n    query: Query<AppModelType, DbModelType>\n  ): Query<AppModelType, DbModelType> {\n    return new Query(\n      query.firestore,\n      query.converter,\n      queryWithLimit(query._query, this._limit, this._limitType)\n    );\n  }\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the first matching\n * documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */\nexport function limit(limit: number): QueryLimitConstraint {\n  validatePositiveNumber('limit', limit);\n  return QueryLimitConstraint._create('limit', limit, LimitType.First);\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the last matching\n * documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */\nexport function limitToLast(limit: number): QueryLimitConstraint {\n  validatePositiveNumber('limitToLast', limit);\n  return QueryLimitConstraint._create('limitToLast', limit, LimitType.Last);\n}\n\n/**\n * A `QueryStartAtConstraint` is used to exclude documents from the start of a\n * result set returned by a Firestore query.\n * `QueryStartAtConstraint`s are created by invoking {@link (startAt:1)} or\n * {@link (startAfter:1)} and can then be passed to {@link (query:1)} to create a\n * new query instance that also contains this `QueryStartAtConstraint`.\n */\nexport class QueryStartAtConstraint extends QueryConstraint {\n  /**\n   * @internal\n   */\n  protected constructor(\n    /** The type of this query constraint */\n    readonly type: 'startAt' | 'startAfter',\n    private readonly _docOrFields: Array<unknown | DocumentSnapshot<unknown>>,\n    private readonly _inclusive: boolean\n  ) {\n    super();\n  }\n\n  static _create(\n    type: 'startAt' | 'startAfter',\n    _docOrFields: Array<unknown | DocumentSnapshot<unknown>>,\n    _inclusive: boolean\n  ): QueryStartAtConstraint {\n    return new QueryStartAtConstraint(type, _docOrFields, _inclusive);\n  }\n\n  _apply<AppModelType, DbModelType extends DocumentData>(\n    query: Query<AppModelType, DbModelType>\n  ): Query<AppModelType, DbModelType> {\n    const bound = newQueryBoundFromDocOrFields(\n      query,\n      this.type,\n      this._docOrFields,\n      this._inclusive\n    );\n    return new Query<AppModelType, DbModelType>(\n      query.firestore,\n      query.converter,\n      queryWithStartAt(query._query, bound)\n    );\n  }\n}\n\n/**\n * Creates a {@link QueryStartAtConstraint} that modifies the result set to\n * start at the provided document (inclusive). The starting position is relative\n * to the order of the query. The document must contain all of the fields\n * provided in the `orderBy` of this query.\n *\n * @param snapshot - The snapshot of the document to start at.\n * @returns A {@link QueryStartAtConstraint} to pass to `query()`.\n */\nexport function startAt<AppModelType, DbModelType extends DocumentData>(\n  snapshot: DocumentSnapshot<AppModelType, DbModelType>\n): QueryStartAtConstraint;\n/**\n * Creates a {@link QueryStartAtConstraint} that modifies the result set to\n * start at the provided fields relative to the order of the query. The order of\n * the field values must match the order of the order by clauses of the query.\n *\n * @param fieldValues - The field values to start this query at, in order\n * of the query's order by.\n * @returns A {@link QueryStartAtConstraint} to pass to `query()`.\n */\nexport function startAt(...fieldValues: unknown[]): QueryStartAtConstraint;\nexport function startAt<AppModelType, DbModelType extends DocumentData>(\n  ...docOrFields: Array<unknown | DocumentSnapshot<AppModelType, DbModelType>>\n): QueryStartAtConstraint {\n  return QueryStartAtConstraint._create(\n    'startAt',\n    docOrFields,\n    /*inclusive=*/ true\n  );\n}\n\n/**\n * Creates a {@link QueryStartAtConstraint} that modifies the result set to\n * start after the provided document (exclusive). The starting position is\n * relative to the order of the query. The document must contain all of the\n * fields provided in the orderBy of the query.\n *\n * @param snapshot - The snapshot of the document to start after.\n * @returns A {@link QueryStartAtConstraint} to pass to `query()`\n */\nexport function startAfter<AppModelType, DbModelType extends DocumentData>(\n  snapshot: DocumentSnapshot<AppModelType, DbModelType>\n): QueryStartAtConstraint;\n/**\n * Creates a {@link QueryStartAtConstraint} that modifies the result set to\n * start after the provided fields relative to the order of the query. The order\n * of the field values must match the order of the order by clauses of the query.\n *\n * @param fieldValues - The field values to start this query after, in order\n * of the query's order by.\n * @returns A {@link QueryStartAtConstraint} to pass to `query()`\n */\nexport function startAfter(...fieldValues: unknown[]): QueryStartAtConstraint;\nexport function startAfter<AppModelType, DbModelType extends DocumentData>(\n  ...docOrFields: Array<unknown | DocumentSnapshot<AppModelType, DbModelType>>\n): QueryStartAtConstraint {\n  return QueryStartAtConstraint._create(\n    'startAfter',\n    docOrFields,\n    /*inclusive=*/ false\n  );\n}\n\n/**\n * A `QueryEndAtConstraint` is used to exclude documents from the end of a\n * result set returned by a Firestore query.\n * `QueryEndAtConstraint`s are created by invoking {@link (endAt:1)} or\n * {@link (endBefore:1)} and can then be passed to {@link (query:1)} to create a new\n * query instance that also contains this `QueryEndAtConstraint`.\n */\nexport class QueryEndAtConstraint extends QueryConstraint {\n  /**\n   * @internal\n   */\n  protected constructor(\n    /** The type of this query constraint */\n    readonly type: 'endBefore' | 'endAt',\n    private readonly _docOrFields: Array<unknown | DocumentSnapshot<unknown>>,\n    private readonly _inclusive: boolean\n  ) {\n    super();\n  }\n\n  static _create(\n    type: 'endBefore' | 'endAt',\n    _docOrFields: Array<unknown | DocumentSnapshot<unknown>>,\n    _inclusive: boolean\n  ): QueryEndAtConstraint {\n    return new QueryEndAtConstraint(type, _docOrFields, _inclusive);\n  }\n\n  _apply<AppModelType, DbModelType extends DocumentData>(\n    query: Query<AppModelType, DbModelType>\n  ): Query<AppModelType, DbModelType> {\n    const bound = newQueryBoundFromDocOrFields(\n      query,\n      this.type,\n      this._docOrFields,\n      this._inclusive\n    );\n    return new Query(\n      query.firestore,\n      query.converter,\n      queryWithEndAt(query._query, bound)\n    );\n  }\n}\n\n/**\n * Creates a {@link QueryEndAtConstraint} that modifies the result set to end\n * before the provided document (exclusive). The end position is relative to the\n * order of the query. The document must contain all of the fields provided in\n * the orderBy of the query.\n *\n * @param snapshot - The snapshot of the document to end before.\n * @returns A {@link QueryEndAtConstraint} to pass to `query()`\n */\nexport function endBefore<AppModelType, DbModelType extends DocumentData>(\n  snapshot: DocumentSnapshot<AppModelType, DbModelType>\n): QueryEndAtConstraint;\n/**\n * Creates a {@link QueryEndAtConstraint} that modifies the result set to end\n * before the provided fields relative to the order of the query. The order of\n * the field values must match the order of the order by clauses of the query.\n *\n * @param fieldValues - The field values to end this query before, in order\n * of the query's order by.\n * @returns A {@link QueryEndAtConstraint} to pass to `query()`\n */\nexport function endBefore(...fieldValues: unknown[]): QueryEndAtConstraint;\nexport function endBefore<AppModelType, DbModelType extends DocumentData>(\n  ...docOrFields: Array<unknown | DocumentSnapshot<AppModelType, DbModelType>>\n): QueryEndAtConstraint {\n  return QueryEndAtConstraint._create(\n    'endBefore',\n    docOrFields,\n    /*inclusive=*/ false\n  );\n}\n\n/**\n * Creates a {@link QueryEndAtConstraint} that modifies the result set to end at\n * the provided document (inclusive). The end position is relative to the order\n * of the query. The document must contain all of the fields provided in the\n * orderBy of the query.\n *\n * @param snapshot - The snapshot of the document to end at.\n * @returns A {@link QueryEndAtConstraint} to pass to `query()`\n */\nexport function endAt<AppModelType, DbModelType extends DocumentData>(\n  snapshot: DocumentSnapshot<AppModelType, DbModelType>\n): QueryEndAtConstraint;\n/**\n * Creates a {@link QueryEndAtConstraint} that modifies the result set to end at\n * the provided fields relative to the order of the query. The order of the field\n * values must match the order of the order by clauses of the query.\n *\n * @param fieldValues - The field values to end this query at, in order\n * of the query's order by.\n * @returns A {@link QueryEndAtConstraint} to pass to `query()`\n */\nexport function endAt(...fieldValues: unknown[]): QueryEndAtConstraint;\nexport function endAt<AppModelType, DbModelType extends DocumentData>(\n  ...docOrFields: Array<unknown | DocumentSnapshot<AppModelType, DbModelType>>\n): QueryEndAtConstraint {\n  return QueryEndAtConstraint._create(\n    'endAt',\n    docOrFields,\n    /*inclusive=*/ true\n  );\n}\n\n/** Helper function to create a bound from a document or fields */\nfunction newQueryBoundFromDocOrFields<\n  AppModelType,\n  DbModelType extends DocumentData\n>(\n  query: Query<AppModelType, DbModelType>,\n  methodName: string,\n  docOrFields: Array<unknown | DocumentSnapshot<AppModelType, DbModelType>>,\n  inclusive: boolean\n): Bound {\n  docOrFields[0] = getModularInstance(docOrFields[0]);\n\n  if (docOrFields[0] instanceof DocumentSnapshot) {\n    return newQueryBoundFromDocument(\n      query._query,\n      query.firestore._databaseId,\n      methodName,\n      docOrFields[0]._document,\n      inclusive\n    );\n  } else {\n    const reader = newUserDataReader(query.firestore);\n    return newQueryBoundFromFields(\n      query._query,\n      query.firestore._databaseId,\n      reader,\n      methodName,\n      docOrFields,\n      inclusive\n    );\n  }\n}\n\nexport function newQueryFilter(\n  query: InternalQuery,\n  methodName: string,\n  dataReader: UserDataReader,\n  databaseId: DatabaseId,\n  fieldPath: InternalFieldPath,\n  op: Operator,\n  value: unknown\n): FieldFilter {\n  let fieldValue: ProtoValue;\n  if (fieldPath.isKeyField()) {\n    if (op === Operator.ARRAY_CONTAINS || op === Operator.ARRAY_CONTAINS_ANY) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        `Invalid Query. You can't perform '${op}' queries on documentId().`\n      );\n    } else if (op === Operator.IN || op === Operator.NOT_IN) {\n      validateDisjunctiveFilterElements(value, op);\n      const referenceList: ProtoValue[] = [];\n      for (const arrayValue of value as ProtoValue[]) {\n        referenceList.push(parseDocumentIdValue(databaseId, query, arrayValue));\n      }\n      fieldValue = { arrayValue: { values: referenceList } };\n    } else {\n      fieldValue = parseDocumentIdValue(databaseId, query, value);\n    }\n  } else {\n    if (\n      op === Operator.IN ||\n      op === Operator.NOT_IN ||\n      op === Operator.ARRAY_CONTAINS_ANY\n    ) {\n      validateDisjunctiveFilterElements(value, op);\n    }\n    fieldValue = parseQueryValue(\n      dataReader,\n      methodName,\n      value,\n      /* allowArrays= */ op === Operator.IN || op === Operator.NOT_IN\n    );\n  }\n  const filter = FieldFilter.create(fieldPath, op, fieldValue);\n  return filter;\n}\n\nexport function newQueryOrderBy(\n  query: InternalQuery,\n  fieldPath: InternalFieldPath,\n  direction: Direction\n): OrderBy {\n  if (query.startAt !== null) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      'Invalid query. You must not call startAt() or startAfter() before ' +\n        'calling orderBy().'\n    );\n  }\n  if (query.endAt !== null) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      'Invalid query. You must not call endAt() or endBefore() before ' +\n        'calling orderBy().'\n    );\n  }\n  const orderBy = new OrderBy(fieldPath, direction);\n  return orderBy;\n}\n\n/**\n * Create a `Bound` from a query and a document.\n *\n * Note that the `Bound` will always include the key of the document\n * and so only the provided document will compare equal to the returned\n * position.\n *\n * Will throw if the document does not contain all fields of the order by\n * of the query or if any of the fields in the order by are an uncommitted\n * server timestamp.\n */\nexport function newQueryBoundFromDocument(\n  query: InternalQuery,\n  databaseId: DatabaseId,\n  methodName: string,\n  doc: Document | null,\n  inclusive: boolean\n): Bound {\n  if (!doc) {\n    throw new FirestoreError(\n      Code.NOT_FOUND,\n      `Can't use a DocumentSnapshot that doesn't exist for ` +\n        `${methodName}().`\n    );\n  }\n\n  const components: ProtoValue[] = [];\n\n  // Because people expect to continue/end a query at the exact document\n  // provided, we need to use the implicit sort order rather than the explicit\n  // sort order, because it's guaranteed to contain the document key. That way\n  // the position becomes unambiguous and the query continues/ends exactly at\n  // the provided document. Without the key (by using the explicit sort\n  // orders), multiple documents could match the position, yielding duplicate\n  // results.\n  for (const orderBy of queryNormalizedOrderBy(query)) {\n    if (orderBy.field.isKeyField()) {\n      components.push(refValue(databaseId, doc.key));\n    } else {\n      const value = doc.data.field(orderBy.field);\n      if (isServerTimestamp(value)) {\n        throw new FirestoreError(\n          Code.INVALID_ARGUMENT,\n          'Invalid query. You are trying to start or end a query using a ' +\n            'document for which the field \"' +\n            orderBy.field +\n            '\" is an uncommitted server timestamp. (Since the value of ' +\n            'this field is unknown, you cannot start/end a query with it.)'\n        );\n      } else if (value !== null) {\n        components.push(value);\n      } else {\n        const field = orderBy.field.canonicalString();\n        throw new FirestoreError(\n          Code.INVALID_ARGUMENT,\n          `Invalid query. You are trying to start or end a query using a ` +\n            `document for which the field '${field}' (used as the ` +\n            `orderBy) does not exist.`\n        );\n      }\n    }\n  }\n  return new Bound(components, inclusive);\n}\n\n/**\n * Converts a list of field values to a `Bound` for the given query.\n */\nexport function newQueryBoundFromFields(\n  query: InternalQuery,\n  databaseId: DatabaseId,\n  dataReader: UserDataReader,\n  methodName: string,\n  values: unknown[],\n  inclusive: boolean\n): Bound {\n  // Use explicit order by's because it has to match the query the user made\n  const orderBy = query.explicitOrderBy;\n  if (values.length > orderBy.length) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      `Too many arguments provided to ${methodName}(). ` +\n        `The number of arguments must be less than or equal to the ` +\n        `number of orderBy() clauses`\n    );\n  }\n\n  const components: ProtoValue[] = [];\n  for (let i = 0; i < values.length; i++) {\n    const rawValue = values[i];\n    const orderByComponent = orderBy[i];\n    if (orderByComponent.field.isKeyField()) {\n      if (typeof rawValue !== 'string') {\n        throw new FirestoreError(\n          Code.INVALID_ARGUMENT,\n          `Invalid query. Expected a string for document ID in ` +\n            `${methodName}(), but got a ${typeof rawValue}`\n        );\n      }\n      if (!isCollectionGroupQuery(query) && rawValue.indexOf('/') !== -1) {\n        throw new FirestoreError(\n          Code.INVALID_ARGUMENT,\n          `Invalid query. When querying a collection and ordering by documentId(), ` +\n            `the value passed to ${methodName}() must be a plain document ID, but ` +\n            `'${rawValue}' contains a slash.`\n        );\n      }\n      const path = query.path.child(ResourcePath.fromString(rawValue));\n      if (!DocumentKey.isDocumentKey(path)) {\n        throw new FirestoreError(\n          Code.INVALID_ARGUMENT,\n          `Invalid query. When querying a collection group and ordering by ` +\n            `documentId(), the value passed to ${methodName}() must result in a ` +\n            `valid document path, but '${path}' is not because it contains an odd number ` +\n            `of segments.`\n        );\n      }\n      const key = new DocumentKey(path);\n      components.push(refValue(databaseId, key));\n    } else {\n      const wrapped = parseQueryValue(dataReader, methodName, rawValue);\n      components.push(wrapped);\n    }\n  }\n\n  return new Bound(components, inclusive);\n}\n\n/**\n * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n * appropriate errors if the value is anything other than a `DocumentReference`\n * or `string`, or if the string is malformed.\n */\nfunction parseDocumentIdValue(\n  databaseId: DatabaseId,\n  query: InternalQuery,\n  documentIdValue: unknown\n): ProtoValue {\n  documentIdValue = getModularInstance(documentIdValue);\n\n  if (typeof documentIdValue === 'string') {\n    if (documentIdValue === '') {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'Invalid query. When querying with documentId(), you ' +\n          'must provide a valid document ID, but it was an empty string.'\n      );\n    }\n    if (!isCollectionGroupQuery(query) && documentIdValue.indexOf('/') !== -1) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        `Invalid query. When querying a collection by ` +\n          `documentId(), you must provide a plain document ID, but ` +\n          `'${documentIdValue}' contains a '/' character.`\n      );\n    }\n    const path = query.path.child(ResourcePath.fromString(documentIdValue));\n    if (!DocumentKey.isDocumentKey(path)) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        `Invalid query. When querying a collection group by ` +\n          `documentId(), the value provided must result in a valid document path, ` +\n          `but '${path}' is not because it has an odd number of segments (${path.length}).`\n      );\n    }\n    return refValue(databaseId, new DocumentKey(path));\n  } else if (documentIdValue instanceof DocumentReference) {\n    return refValue(databaseId, documentIdValue._key);\n  } else {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      `Invalid query. When querying with documentId(), you must provide a valid ` +\n        `string or a DocumentReference, but it was: ` +\n        `${valueDescription(documentIdValue)}.`\n    );\n  }\n}\n\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */\nfunction validateDisjunctiveFilterElements(\n  value: unknown,\n  operator: Operator\n): void {\n  if (!Array.isArray(value) || value.length === 0) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      'Invalid Query. A non-empty array is required for ' +\n        `'${operator.toString()}' filters.`\n    );\n  }\n}\n\n/**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * This is not a comprehensive check, and this function should be removed in the\n * long term. Validations should occur in the Firestore backend.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one inequality per query.\n * 2. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n */\nfunction conflictingOps(op: Operator): Operator[] {\n  switch (op) {\n    case Operator.NOT_EQUAL:\n      return [Operator.NOT_EQUAL, Operator.NOT_IN];\n    case Operator.ARRAY_CONTAINS_ANY:\n    case Operator.IN:\n      return [Operator.NOT_IN];\n    case Operator.NOT_IN:\n      return [\n        Operator.ARRAY_CONTAINS_ANY,\n        Operator.IN,\n        Operator.NOT_IN,\n        Operator.NOT_EQUAL\n      ];\n    default:\n      return [];\n  }\n}\n\nfunction validateNewFieldFilter(\n  query: InternalQuery,\n  fieldFilter: FieldFilter\n): void {\n  const conflictingOp = findOpInsideFilters(\n    query.filters,\n    conflictingOps(fieldFilter.op)\n  );\n  if (conflictingOp !== null) {\n    // Special case when it's a duplicate op to give a slightly clearer error message.\n    if (conflictingOp === fieldFilter.op) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'Invalid query. You cannot use more than one ' +\n          `'${fieldFilter.op.toString()}' filter.`\n      );\n    } else {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        `Invalid query. You cannot use '${fieldFilter.op.toString()}' filters ` +\n          `with '${conflictingOp.toString()}' filters.`\n      );\n    }\n  }\n}\n\nfunction validateNewFilter(query: InternalQuery, filter: Filter): void {\n  let testQuery = query;\n  const subFilters = filter.getFlattenedFilters();\n  for (const subFilter of subFilters) {\n    validateNewFieldFilter(testQuery, subFilter);\n    testQuery = queryWithAddedFilter(testQuery, subFilter);\n  }\n}\n\n// Checks if any of the provided filter operators are included in the given list of filters and\n// returns the first one that is, or null if none are.\nfunction findOpInsideFilters(\n  filters: Filter[],\n  operators: Operator[]\n): Operator | null {\n  for (const filter of filters) {\n    for (const fieldFilter of filter.getFlattenedFilters()) {\n      if (operators.indexOf(fieldFilter.op) >= 0) {\n        return fieldFilter.op;\n      }\n    }\n  }\n  return null;\n}\n\nexport function validateQueryFilterConstraint(\n  functionName: string,\n  queryConstraint: AppliableConstraint\n): void {\n  if (\n    !(queryConstraint instanceof QueryFieldFilterConstraint) &&\n    !(queryConstraint instanceof QueryCompositeFilterConstraint)\n  ) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      `Function ${functionName}() requires AppliableConstraints created with a call to 'where(...)', 'or(...)', or 'and(...)'.`\n    );\n  }\n}\n\nfunction validateQueryConstraintArray(\n  queryConstraint: AppliableConstraint[]\n): void {\n  const compositeFilterCount = queryConstraint.filter(\n    filter => filter instanceof QueryCompositeFilterConstraint\n  ).length;\n  const fieldFilterCount = queryConstraint.filter(\n    filter => filter instanceof QueryFieldFilterConstraint\n  ).length;\n\n  if (\n    compositeFilterCount > 1 ||\n    (compositeFilterCount > 0 && fieldFilterCount > 0)\n  ) {\n    throw new FirestoreError(\n      Code.INVALID_ARGUMENT,\n      'InvalidQuery. When using composite filters, you cannot use ' +\n        'more than one filter at the top level. Consider nesting the multiple ' +\n        'filters within an `and(...)` statement. For example: ' +\n        'change `query(query, where(...), or(...))` to ' +\n        '`query(query, and(where(...), or(...)))`.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DocumentData } from '@firebase/firestore-types';\n\nimport { DatabaseId } from '../core/database_info';\nimport { DocumentKey } from '../model/document_key';\nimport {\n  normalizeByteString,\n  normalizeNumber,\n  normalizeTimestamp\n} from '../model/normalize';\nimport { ResourcePath } from '../model/path';\nimport {\n  getLocalWriteTime,\n  getPreviousValue\n} from '../model/server_timestamps';\nimport { TypeOrder } from '../model/type_order';\nimport { typeOrder } from '../model/values';\nimport {\n  ApiClientObjectMap,\n  ArrayValue as ProtoArrayValue,\n  LatLng as ProtoLatLng,\n  MapValue as ProtoMapValue,\n  Timestamp as ProtoTimestamp,\n  Value,\n  Value as ProtoValue\n} from '../protos/firestore_proto_api';\nimport { isValidResourceName } from '../remote/serializer';\nimport { fail, hardAssert } from '../util/assert';\nimport { ByteString } from '../util/byte_string';\nimport { logError } from '../util/log';\nimport { forEach } from '../util/obj';\n\nimport { GeoPoint } from './geo_point';\nimport { Timestamp } from './timestamp';\n\nexport type ServerTimestampBehavior = 'estimate' | 'previous' | 'none';\n\n/**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */\nexport abstract class AbstractUserDataWriter {\n  convertValue(\n    value: ProtoValue,\n    serverTimestampBehavior: ServerTimestampBehavior = 'none'\n  ): unknown {\n    switch (typeOrder(value)) {\n      case TypeOrder.NullValue:\n        return null;\n      case TypeOrder.BooleanValue:\n        return value.booleanValue!;\n      case TypeOrder.NumberValue:\n        return normalizeNumber(value.integerValue || value.doubleValue);\n      case TypeOrder.TimestampValue:\n        return this.convertTimestamp(value.timestampValue!);\n      case TypeOrder.ServerTimestampValue:\n        return this.convertServerTimestamp(value, serverTimestampBehavior);\n      case TypeOrder.StringValue:\n        return value.stringValue!;\n      case TypeOrder.BlobValue:\n        return this.convertBytes(normalizeByteString(value.bytesValue!));\n      case TypeOrder.RefValue:\n        return this.convertReference(value.referenceValue!);\n      case TypeOrder.GeoPointValue:\n        return this.convertGeoPoint(value.geoPointValue!);\n      case TypeOrder.ArrayValue:\n        return this.convertArray(value.arrayValue!, serverTimestampBehavior);\n      case TypeOrder.ObjectValue:\n        return this.convertObject(value.mapValue!, serverTimestampBehavior);\n      default:\n        throw fail('Invalid value type: ' + JSON.stringify(value));\n    }\n  }\n\n  private convertObject(\n    mapValue: ProtoMapValue,\n    serverTimestampBehavior: ServerTimestampBehavior\n  ): DocumentData {\n    return this.convertObjectMap(mapValue.fields, serverTimestampBehavior);\n  }\n\n  /**\n   * @internal\n   */\n  convertObjectMap(\n    fields: ApiClientObjectMap<Value> | undefined,\n    serverTimestampBehavior: ServerTimestampBehavior = 'none'\n  ): DocumentData {\n    const result: DocumentData = {};\n    forEach(fields, (key, value) => {\n      result[key] = this.convertValue(value, serverTimestampBehavior);\n    });\n    return result;\n  }\n\n  private convertGeoPoint(value: ProtoLatLng): GeoPoint {\n    return new GeoPoint(\n      normalizeNumber(value.latitude),\n      normalizeNumber(value.longitude)\n    );\n  }\n\n  private convertArray(\n    arrayValue: ProtoArrayValue,\n    serverTimestampBehavior: ServerTimestampBehavior\n  ): unknown[] {\n    return (arrayValue.values || []).map(value =>\n      this.convertValue(value, serverTimestampBehavior)\n    );\n  }\n\n  private convertServerTimestamp(\n    value: ProtoValue,\n    serverTimestampBehavior: ServerTimestampBehavior\n  ): unknown {\n    switch (serverTimestampBehavior) {\n      case 'previous':\n        const previousValue = getPreviousValue(value);\n        if (previousValue == null) {\n          return null;\n        }\n        return this.convertValue(previousValue, serverTimestampBehavior);\n      case 'estimate':\n        return this.convertTimestamp(getLocalWriteTime(value));\n      default:\n        return null;\n    }\n  }\n\n  private convertTimestamp(value: ProtoTimestamp): Timestamp {\n    const normalizedValue = normalizeTimestamp(value);\n    return new Timestamp(normalizedValue.seconds, normalizedValue.nanos);\n  }\n\n  protected convertDocumentKey(\n    name: string,\n    expectedDatabaseId: DatabaseId\n  ): DocumentKey {\n    const resourcePath = ResourcePath.fromString(name);\n    hardAssert(\n      isValidResourceName(resourcePath),\n      'ReferenceValue is not valid ' + name\n    );\n    const databaseId = new DatabaseId(resourcePath.get(1), resourcePath.get(3));\n    const key = new DocumentKey(resourcePath.popFirst(5));\n\n    if (!databaseId.isEqual(expectedDatabaseId)) {\n      // TODO(b/64130202): Somehow support foreign references.\n      logError(\n        `Document ${key} contains a document ` +\n          `reference within a different database (` +\n          `${databaseId.projectId}/${databaseId.database}) which is not ` +\n          `supported. It will be treated as a reference in the current ` +\n          `database (${expectedDatabaseId.projectId}/${expectedDatabaseId.database}) ` +\n          `instead.`\n      );\n    }\n    return key;\n  }\n\n  protected abstract convertReference(name: string): unknown;\n\n  protected abstract convertBytes(bytes: ByteString): unknown;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DocumentData as PublicDocumentData,\n  SetOptions as PublicSetOptions\n} from '@firebase/firestore-types';\nimport { getModularInstance } from '@firebase/util';\n\nimport { LimitType } from '../core/query';\nimport { DeleteMutation, Precondition } from '../model/mutation';\nimport {\n  invokeBatchGetDocumentsRpc,\n  invokeCommitRpc,\n  invokeRunQueryRpc\n} from '../remote/datastore';\nimport { hardAssert } from '../util/assert';\nimport { ByteString } from '../util/byte_string';\nimport { cast } from '../util/input_validation';\n\nimport { Bytes } from './bytes';\nimport { getDatastore } from './components';\nimport { Firestore } from './database';\nimport { FieldPath } from './field_path';\nimport { validateHasExplicitOrderByForLimitToLast } from './query';\nimport {\n  CollectionReference,\n  doc,\n  DocumentData,\n  DocumentReference,\n  PartialWithFieldValue,\n  Query,\n  SetOptions,\n  UpdateData,\n  WithFieldValue\n} from './reference';\nimport {\n  DocumentSnapshot,\n  QueryDocumentSnapshot,\n  QuerySnapshot\n} from './snapshot';\nimport {\n  newUserDataReader,\n  ParsedUpdateData,\n  parseSetData,\n  parseUpdateData,\n  parseUpdateVarargs,\n  UntypedFirestoreDataConverter\n} from './user_data_reader';\nimport { AbstractUserDataWriter } from './user_data_writer';\n\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\nexport function applyFirestoreDataConverter<T>(\n  converter: UntypedFirestoreDataConverter<T> | null,\n  value: WithFieldValue<T> | PartialWithFieldValue<T>,\n  options?: PublicSetOptions\n): PublicDocumentData {\n  let convertedValue;\n  if (converter) {\n    if (options && (options.merge || options.mergeFields)) {\n      // Cast to `any` in order to satisfy the union type constraint on\n      // toFirestore().\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      convertedValue = (converter as any).toFirestore(value, options);\n    } else {\n      convertedValue = converter.toFirestore(value as WithFieldValue<T>);\n    }\n  } else {\n    convertedValue = value as PublicDocumentData;\n  }\n  return convertedValue;\n}\n\nexport class LiteUserDataWriter extends AbstractUserDataWriter {\n  constructor(protected firestore: Firestore) {\n    super();\n  }\n\n  protected convertBytes(bytes: ByteString): Bytes {\n    return new Bytes(bytes);\n  }\n\n  protected convertReference(name: string): DocumentReference {\n    const key = this.convertDocumentKey(name, this.firestore._databaseId);\n    return new DocumentReference(this.firestore, /* converter= */ null, key);\n  }\n}\n\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */\nexport function getDoc<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>\n): Promise<DocumentSnapshot<AppModelType, DbModelType>> {\n  reference = cast<DocumentReference<AppModelType, DbModelType>>(\n    reference,\n    DocumentReference\n  );\n  const datastore = getDatastore(reference.firestore);\n  const userDataWriter = new LiteUserDataWriter(reference.firestore);\n\n  return invokeBatchGetDocumentsRpc(datastore, [reference._key]).then(\n    result => {\n      hardAssert(result.length === 1, 'Expected a single document result');\n      const document = result[0];\n      return new DocumentSnapshot<AppModelType, DbModelType>(\n        reference.firestore,\n        userDataWriter,\n        reference._key,\n        document.isFoundDocument() ? document : null,\n        reference.converter\n      );\n    }\n  );\n}\n\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */\nexport function getDocs<AppModelType, DbModelType extends DocumentData>(\n  query: Query<AppModelType, DbModelType>\n): Promise<QuerySnapshot<AppModelType, DbModelType>> {\n  query = cast<Query<AppModelType, DbModelType>>(query, Query);\n  validateHasExplicitOrderByForLimitToLast(query._query);\n\n  const datastore = getDatastore(query.firestore);\n  const userDataWriter = new LiteUserDataWriter(query.firestore);\n  return invokeRunQueryRpc(datastore, query._query).then(result => {\n    const docs = result.map(\n      doc =>\n        new QueryDocumentSnapshot<AppModelType, DbModelType>(\n          query.firestore,\n          userDataWriter,\n          doc.key,\n          doc,\n          query.converter\n        )\n    );\n\n    if (query._query.limitType === LimitType.Last) {\n      // Limit to last queries reverse the orderBy constraint that was\n      // specified by the user. As such, we need to reverse the order of the\n      // results to return the documents in the expected order.\n      docs.reverse();\n    }\n\n    return new QuerySnapshot<AppModelType, DbModelType>(query, docs);\n  });\n}\n\n/**\n * Writes to the document referred to by the specified `DocumentReference`. If\n * the document does not yet exist, it will be created.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to write.\n * @param data - A map of the fields and values for the document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved once the data has been successfully written\n * to the backend.\n */\nexport function setDoc<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>,\n  data: WithFieldValue<AppModelType>\n): Promise<void>;\n/**\n * Writes to the document referred to by the specified `DocumentReference`. If\n * the document does not yet exist, it will be created. If you provide `merge`\n * or `mergeFields`, the provided data can be merged into an existing document.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to write.\n * @param data - A map of the fields and values for the document.\n * @param options - An object to configure the set behavior.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved once the data has been successfully written\n * to the backend.\n */\nexport function setDoc<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>,\n  data: PartialWithFieldValue<AppModelType>,\n  options: SetOptions\n): Promise<void>;\nexport function setDoc<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>,\n  data: PartialWithFieldValue<AppModelType>,\n  options?: SetOptions\n): Promise<void> {\n  reference = cast<DocumentReference<AppModelType, DbModelType>>(\n    reference,\n    DocumentReference\n  );\n  const convertedValue = applyFirestoreDataConverter(\n    reference.converter,\n    data,\n    options\n  );\n  const dataReader = newUserDataReader(reference.firestore);\n  const parsed = parseSetData(\n    dataReader,\n    'setDoc',\n    reference._key,\n    convertedValue,\n    reference.converter !== null,\n    options\n  );\n\n  const datastore = getDatastore(reference.firestore);\n  return invokeCommitRpc(datastore, [\n    parsed.toMutation(reference._key, Precondition.none())\n  ]);\n}\n\n/**\n * Updates fields in the document referred to by the specified\n * `DocumentReference`. The update will fail if applied to a document that does\n * not exist.\n *\n * The result of this update will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * update fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to update.\n * @param data - An object containing the fields and values with which to\n * update the document. Fields can contain dots to reference nested fields\n * within the document.\n * @throws Error - If the provided input is not valid Firestore data.\n * @returns A `Promise` resolved once the data has been successfully written\n * to the backend.\n */\nexport function updateDoc<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>,\n  data: UpdateData<DbModelType>\n): Promise<void>;\n/**\n * Updates fields in the document referred to by the specified\n * `DocumentReference` The update will fail if applied to a document that does\n * not exist.\n *\n * Nested fields can be updated by providing dot-separated field path\n * strings or by providing `FieldPath` objects.\n *\n * The result of this update will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * update fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to update.\n * @param field - The first field to update.\n * @param value - The first value.\n * @param moreFieldsAndValues - Additional key value pairs.\n * @throws Error - If the provided input is not valid Firestore data.\n * @returns A `Promise` resolved once the data has been successfully written\n * to the backend.\n */\nexport function updateDoc<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>,\n  field: string | FieldPath,\n  value: unknown,\n  ...moreFieldsAndValues: unknown[]\n): Promise<void>;\nexport function updateDoc<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>,\n  fieldOrUpdateData: string | FieldPath | UpdateData<DbModelType>,\n  value?: unknown,\n  ...moreFieldsAndValues: unknown[]\n): Promise<void> {\n  reference = cast<DocumentReference<AppModelType, DbModelType>>(\n    reference,\n    DocumentReference\n  );\n  const dataReader = newUserDataReader(reference.firestore);\n\n  // For Compat types, we have to \"extract\" the underlying types before\n  // performing validation.\n  fieldOrUpdateData = getModularInstance(fieldOrUpdateData);\n\n  let parsed: ParsedUpdateData;\n  if (\n    typeof fieldOrUpdateData === 'string' ||\n    fieldOrUpdateData instanceof FieldPath\n  ) {\n    parsed = parseUpdateVarargs(\n      dataReader,\n      'updateDoc',\n      reference._key,\n      fieldOrUpdateData,\n      value,\n      moreFieldsAndValues\n    );\n  } else {\n    parsed = parseUpdateData(\n      dataReader,\n      'updateDoc',\n      reference._key,\n      fieldOrUpdateData\n    );\n  }\n\n  const datastore = getDatastore(reference.firestore);\n  return invokeCommitRpc(datastore, [\n    parsed.toMutation(reference._key, Precondition.exists(true))\n  ]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */\nexport function deleteDoc<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>\n): Promise<void> {\n  reference = cast<DocumentReference<AppModelType, DbModelType>>(\n    reference,\n    DocumentReference\n  );\n  const datastore = getDatastore(reference.firestore);\n  return invokeCommitRpc(datastore, [\n    new DeleteMutation(reference._key, Precondition.none())\n  ]);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */\nexport function addDoc<AppModelType, DbModelType extends DocumentData>(\n  reference: CollectionReference<AppModelType, DbModelType>,\n  data: WithFieldValue<AppModelType>\n): Promise<DocumentReference<AppModelType, DbModelType>> {\n  reference = cast<CollectionReference<AppModelType, DbModelType>>(\n    reference,\n    CollectionReference\n  );\n  const docRef = doc(reference);\n\n  const convertedValue = applyFirestoreDataConverter(\n    reference.converter,\n    data as PartialWithFieldValue<AppModelType>\n  );\n\n  const dataReader = newUserDataReader(reference.firestore);\n  const parsed = parseSetData(\n    dataReader,\n    'addDoc',\n    docRef._key,\n    convertedValue,\n    docRef.converter !== null,\n    {}\n  );\n\n  const datastore = getDatastore(reference.firestore);\n  return invokeCommitRpc(datastore, [\n    parsed.toMutation(docRef._key, Precondition.exists(false))\n  ]).then(() => docRef);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { newQueryComparator } from '../core/query';\nimport { ChangeType, ViewSnapshot } from '../core/view_snapshot';\nimport { FieldPath } from '../lite-api/field_path';\nimport {\n  DocumentData,\n  PartialWithFieldValue,\n  Query,\n  queryEqual,\n  SetOptions,\n  WithFieldValue\n} from '../lite-api/reference';\nimport {\n  DocumentSnapshot as LiteDocumentSnapshot,\n  fieldPathFromArgument,\n  FirestoreDataConverter as LiteFirestoreDataConverter\n} from '../lite-api/snapshot';\nimport { UntypedFirestoreDataConverter } from '../lite-api/user_data_reader';\nimport { AbstractUserDataWriter } from '../lite-api/user_data_writer';\nimport { Document } from '../model/document';\nimport { DocumentKey } from '../model/document_key';\nimport { debugAssert, fail } from '../util/assert';\nimport { Code, FirestoreError } from '../util/error';\n\nimport { Firestore } from './database';\nimport { SnapshotListenOptions } from './reference_impl';\n\n/**\n * Converter used by `withConverter()` to transform user objects of type\n * `AppModelType` into Firestore data of type `DbModelType`.\n *\n * Using the converter allows you to specify generic type arguments when\n * storing and retrieving objects from Firestore.\n *\n * In this context, an \"AppModel\" is a class that is used in an application to\n * package together related information and functionality. Such a class could,\n * for example, have properties with complex, nested data types, properties used\n * for memoization, properties of types not supported by Firestore (such as\n * `symbol` and `bigint`), and helper functions that perform compound\n * operations. Such classes are not suitable and/or possible to store into a\n * Firestore database. Instead, instances of such classes need to be converted\n * to \"plain old JavaScript objects\" (POJOs) with exclusively primitive\n * properties, potentially nested inside other POJOs or arrays of POJOs. In this\n * context, this type is referred to as the \"DbModel\" and would be an object\n * suitable for persisting into Firestore. For convenience, applications can\n * implement `FirestoreDataConverter` and register the converter with Firestore\n * objects, such as `DocumentReference` or `Query`, to automatically convert\n * `AppModel` to `DbModel` when storing into Firestore, and convert `DbModel`\n * to `AppModel` when retrieving from Firestore.\n *\n * @example\n *\n * Simple Example\n *\n * ```typescript\n * const numberConverter = {\n *     toFirestore(value: WithFieldValue<number>) {\n *         return { value };\n *     },\n *     fromFirestore(snapshot: QueryDocumentSnapshot, options: SnapshotOptions) {\n *         return snapshot.data(options).value as number;\n *     }\n * };\n *\n * async function simpleDemo(db: Firestore): Promise<void> {\n *     const documentRef = doc(db, 'values/value123').withConverter(numberConverter);\n *\n *     // converters are used with `setDoc`, `addDoc`, and `getDoc`\n *     await setDoc(documentRef, 42);\n *     const snapshot1 = await getDoc(documentRef);\n *     assertEqual(snapshot1.data(), 42);\n *\n *     // converters are not used when writing data with `updateDoc`\n *     await updateDoc(documentRef, { value: 999 });\n *     const snapshot2 = await getDoc(documentRef);\n *     assertEqual(snapshot2.data(), 999);\n * }\n * ```\n *\n * Advanced Example\n *\n * ```typescript\n * // The Post class is a model that is used by our application.\n * // This class may have properties and methods that are specific\n * // to our application execution, which do not need to be persisted\n * // to Firestore.\n * class Post {\n *     constructor(\n *         readonly title: string,\n *         readonly author: string,\n *         readonly lastUpdatedMillis: number\n *     ) {}\n *     toString(): string {\n *         return `${this.title} by ${this.author}`;\n *     }\n * }\n *\n * // The PostDbModel represents how we want our posts to be stored\n * // in Firestore. This DbModel has different properties (`ttl`,\n * // `aut`, and `lut`) from the Post class we use in our application.\n * interface PostDbModel {\n *     ttl: string;\n *     aut: { firstName: string; lastName: string };\n *     lut: Timestamp;\n * }\n *\n * // The `PostConverter` implements `FirestoreDataConverter` and specifies\n * // how the Firestore SDK can convert `Post` objects to `PostDbModel`\n * // objects and vice versa.\n * class PostConverter implements FirestoreDataConverter<Post, PostDbModel> {\n *     toFirestore(post: WithFieldValue<Post>): WithFieldValue<PostDbModel> {\n *         return {\n *             ttl: post.title,\n *             aut: this._autFromAuthor(post.author),\n *             lut: this._lutFromLastUpdatedMillis(post.lastUpdatedMillis)\n *         };\n *     }\n *\n *     fromFirestore(snapshot: QueryDocumentSnapshot, options: SnapshotOptions): Post {\n *         const data = snapshot.data(options) as PostDbModel;\n *         const author = `${data.aut.firstName} ${data.aut.lastName}`;\n *         return new Post(data.ttl, author, data.lut.toMillis());\n *     }\n *\n *     _autFromAuthor(\n *         author: string | FieldValue\n *     ): { firstName: string; lastName: string } | FieldValue {\n *         if (typeof author !== 'string') {\n *             // `author` is a FieldValue, so just return it.\n *             return author;\n *         }\n *         const [firstName, lastName] = author.split(' ');\n *         return {firstName, lastName};\n *     }\n *\n *     _lutFromLastUpdatedMillis(\n *         lastUpdatedMillis: number | FieldValue\n *     ): Timestamp | FieldValue {\n *         if (typeof lastUpdatedMillis !== 'number') {\n *             // `lastUpdatedMillis` must be a FieldValue, so just return it.\n *             return lastUpdatedMillis;\n *         }\n *         return Timestamp.fromMillis(lastUpdatedMillis);\n *     }\n * }\n *\n * async function advancedDemo(db: Firestore): Promise<void> {\n *     // Create a `DocumentReference` with a `FirestoreDataConverter`.\n *     const documentRef = doc(db, 'posts/post123').withConverter(new PostConverter());\n *\n *     // The `data` argument specified to `setDoc()` is type checked by the\n *     // TypeScript compiler to be compatible with `Post`. Since the `data`\n *     // argument is typed as `WithFieldValue<Post>` rather than just `Post`,\n *     // this allows properties of the `data` argument to also be special\n *     // Firestore values that perform server-side mutations, such as\n *     // `arrayRemove()`, `deleteField()`, and `serverTimestamp()`.\n *     await setDoc(documentRef, {\n *         title: 'My Life',\n *         author: 'Foo Bar',\n *         lastUpdatedMillis: serverTimestamp()\n *     });\n *\n *     // The TypeScript compiler will fail to compile if the `data` argument to\n *     // `setDoc()` is _not_ compatible with `WithFieldValue<Post>`. This\n *     // type checking prevents the caller from specifying objects with incorrect\n *     // properties or property values.\n *     // @ts-expect-error \"Argument of type { ttl: string; } is not assignable\n *     // to parameter of type WithFieldValue<Post>\"\n *     await setDoc(documentRef, { ttl: 'The Title' });\n *\n *     // When retrieving a document with `getDoc()` the `DocumentSnapshot`\n *     // object's `data()` method returns a `Post`, rather than a generic object,\n *     // which would have been returned if the `DocumentReference` did _not_ have a\n *     // `FirestoreDataConverter` attached to it.\n *     const snapshot1: DocumentSnapshot<Post> = await getDoc(documentRef);\n *     const post1: Post = snapshot1.data()!;\n *     if (post1) {\n *         assertEqual(post1.title, 'My Life');\n *         assertEqual(post1.author, 'Foo Bar');\n *     }\n *\n *     // The `data` argument specified to `updateDoc()` is type checked by the\n *     // TypeScript compiler to be compatible with `PostDbModel`. Note that\n *     // unlike `setDoc()`, whose `data` argument must be compatible with `Post`,\n *     // the `data` argument to `updateDoc()` must be compatible with\n *     // `PostDbModel`. Similar to `setDoc()`, since the `data` argument is typed\n *     // as `WithFieldValue<PostDbModel>` rather than just `PostDbModel`, this\n *     // allows properties of the `data` argument to also be those special\n *     // Firestore values, like `arrayRemove()`, `deleteField()`, and\n *     // `serverTimestamp()`.\n *     await updateDoc(documentRef, {\n *         'aut.firstName': 'NewFirstName',\n *         lut: serverTimestamp()\n *     });\n *\n *     // The TypeScript compiler will fail to compile if the `data` argument to\n *     // `updateDoc()` is _not_ compatible with `WithFieldValue<PostDbModel>`.\n *     // This type checking prevents the caller from specifying objects with\n *     // incorrect properties or property values.\n *     // @ts-expect-error \"Argument of type { title: string; } is not assignable\n *     // to parameter of type WithFieldValue<PostDbModel>\"\n *     await updateDoc(documentRef, { title: 'New Title' });\n *     const snapshot2: DocumentSnapshot<Post> = await getDoc(documentRef);\n *     const post2: Post = snapshot2.data()!;\n *     if (post2) {\n *         assertEqual(post2.title, 'My Life');\n *         assertEqual(post2.author, 'NewFirstName Bar');\n *     }\n * }\n * ```\n */\nexport interface FirestoreDataConverter<\n  AppModelType,\n  DbModelType extends DocumentData = DocumentData\n> extends LiteFirestoreDataConverter<AppModelType, DbModelType> {\n  /**\n   * Called by the Firestore SDK to convert a custom model object of type\n   * `AppModelType` into a plain JavaScript object (suitable for writing\n   * directly to the Firestore database) of type `DbModelType`. To use `set()`\n   * with `merge` and `mergeFields`, `toFirestore()` must be defined with\n   * `PartialWithFieldValue<AppModelType>`.\n   *\n   * The `WithFieldValue<T>` type extends `T` to also allow FieldValues such as\n   * {@link (deleteField:1)} to be used as property values.\n   */\n  toFirestore(\n    modelObject: WithFieldValue<AppModelType>\n  ): WithFieldValue<DbModelType>;\n\n  /**\n   * Called by the Firestore SDK to convert a custom model object of type\n   * `AppModelType` into a plain JavaScript object (suitable for writing\n   * directly to the Firestore database) of type `DbModelType`. Used with\n   * {@link (setDoc:1)}, {@link (WriteBatch.set:1)} and\n   * {@link (Transaction.set:1)} with `merge:true` or `mergeFields`.\n   *\n   * The `PartialWithFieldValue<T>` type extends `Partial<T>` to allow\n   * FieldValues such as {@link (arrayUnion:1)} to be used as property values.\n   * It also supports nested `Partial` by allowing nested fields to be\n   * omitted.\n   */\n  toFirestore(\n    modelObject: PartialWithFieldValue<AppModelType>,\n    options: SetOptions\n  ): PartialWithFieldValue<DbModelType>;\n\n  /**\n   * Called by the Firestore SDK to convert Firestore data into an object of\n   * type `AppModelType`. You can access your data by calling:\n   * `snapshot.data(options)`.\n   *\n   * Generally, the data returned from `snapshot.data()` can be cast to\n   * `DbModelType`; however, this is not guaranteed because Firestore does not\n   * enforce a schema on the database. For example, writes from a previous\n   * version of the application or writes from another client that did not use a\n   * type converter could have written data with different properties and/or\n   * property types. The implementation will need to choose whether to\n   * gracefully recover from non-conforming data or throw an error.\n   *\n   * To override this method, see {@link (FirestoreDataConverter.fromFirestore:1)}.\n   *\n   * @param snapshot - A `QueryDocumentSnapshot` containing your data and metadata.\n   * @param options - The `SnapshotOptions` from the initial call to `data()`.\n   */\n  fromFirestore(\n    snapshot: QueryDocumentSnapshot<DocumentData, DocumentData>,\n    options?: SnapshotOptions\n  ): AppModelType;\n}\n\n/**\n * Options that configure how data is retrieved from a `DocumentSnapshot` (for\n * example the desired behavior for server timestamps that have not yet been set\n * to their final value).\n */\nexport interface SnapshotOptions {\n  /**\n   * If set, controls the return value for server timestamps that have not yet\n   * been set to their final value.\n   *\n   * By specifying 'estimate', pending server timestamps return an estimate\n   * based on the local clock. This estimate will differ from the final value\n   * and cause these values to change once the server result becomes available.\n   *\n   * By specifying 'previous', pending timestamps will be ignored and return\n   * their previous value instead.\n   *\n   * If omitted or set to 'none', `null` will be returned by default until the\n   * server value becomes available.\n   */\n  readonly serverTimestamps?: 'estimate' | 'previous' | 'none';\n}\n\n/**\n * Metadata about a snapshot, describing the state of the snapshot.\n */\nexport class SnapshotMetadata {\n  /**\n   * True if the snapshot contains the result of local writes (for example\n   * `set()` or `update()` calls) that have not yet been committed to the\n   * backend. If your listener has opted into metadata updates (via\n   * `SnapshotListenOptions`) you will receive another snapshot with\n   * `hasPendingWrites` equal to false once the writes have been committed to\n   * the backend.\n   */\n  readonly hasPendingWrites: boolean;\n\n  /**\n   * True if the snapshot was created from cached data rather than guaranteed\n   * up-to-date server data. If your listener has opted into metadata updates\n   * (via `SnapshotListenOptions`) you will receive another snapshot with\n   * `fromCache` set to false once the client has received up-to-date data from\n   * the backend.\n   */\n  readonly fromCache: boolean;\n\n  /** @hideconstructor */\n  constructor(hasPendingWrites: boolean, fromCache: boolean) {\n    this.hasPendingWrites = hasPendingWrites;\n    this.fromCache = fromCache;\n  }\n\n  /**\n   * Returns true if this `SnapshotMetadata` is equal to the provided one.\n   *\n   * @param other - The `SnapshotMetadata` to compare against.\n   * @returns true if this `SnapshotMetadata` is equal to the provided one.\n   */\n  isEqual(other: SnapshotMetadata): boolean {\n    return (\n      this.hasPendingWrites === other.hasPendingWrites &&\n      this.fromCache === other.fromCache\n    );\n  }\n}\n\n/**\n * The type of a `DocumentChange` may be 'added', 'removed', or 'modified'.\n */\nexport type DocumentChangeType = 'added' | 'removed' | 'modified';\n\n/**\n * A `DocumentChange` represents a change to the documents matching a query.\n * It contains the document affected and the type of change that occurred.\n */\nexport interface DocumentChange<\n  AppModelType = DocumentData,\n  DbModelType extends DocumentData = DocumentData\n> {\n  /** The type of change ('added', 'modified', or 'removed'). */\n  readonly type: DocumentChangeType;\n\n  /** The document affected by this change. */\n  readonly doc: QueryDocumentSnapshot<AppModelType, DbModelType>;\n\n  /**\n   * The index of the changed document in the result set immediately prior to\n   * this `DocumentChange` (i.e. supposing that all prior `DocumentChange` objects\n   * have been applied). Is `-1` for 'added' events.\n   */\n  readonly oldIndex: number;\n\n  /**\n   * The index of the changed document in the result set immediately after\n   * this `DocumentChange` (i.e. supposing that all prior `DocumentChange`\n   * objects and the current `DocumentChange` object have been applied).\n   * Is -1 for 'removed' events.\n   */\n  readonly newIndex: number;\n}\n\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */\nexport class DocumentSnapshot<\n  AppModelType = DocumentData,\n  DbModelType extends DocumentData = DocumentData\n> extends LiteDocumentSnapshot<AppModelType, DbModelType> {\n  private readonly _firestoreImpl: Firestore;\n\n  /**\n   *  Metadata about the `DocumentSnapshot`, including information about its\n   *  source and local modifications.\n   */\n  readonly metadata: SnapshotMetadata;\n\n  /** @hideconstructor protected */\n  constructor(\n    readonly _firestore: Firestore,\n    userDataWriter: AbstractUserDataWriter,\n    key: DocumentKey,\n    document: Document | null,\n    metadata: SnapshotMetadata,\n    converter: UntypedFirestoreDataConverter<AppModelType, DbModelType> | null\n  ) {\n    super(_firestore, userDataWriter, key, document, converter);\n    this._firestoreImpl = _firestore;\n    this.metadata = metadata;\n  }\n\n  /**\n   * Returns whether or not the data exists. True if the document exists.\n   */\n  exists(): this is QueryDocumentSnapshot<AppModelType, DbModelType> {\n    return super.exists();\n  }\n\n  /**\n   * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n   * the document doesn't exist.\n   *\n   * By default, `serverTimestamp()` values that have not yet been\n   * set to their final value will be returned as `null`. You can override\n   * this by passing an options object.\n   *\n   * @param options - An options object to configure how data is retrieved from\n   * the snapshot (for example the desired behavior for server timestamps that\n   * have not yet been set to their final value).\n   * @returns An `Object` containing all fields in the document or `undefined` if\n   * the document doesn't exist.\n   */\n  data(options: SnapshotOptions = {}): AppModelType | undefined {\n    if (!this._document) {\n      return undefined;\n    } else if (this._converter) {\n      // We only want to use the converter and create a new DocumentSnapshot\n      // if a converter has been provided.\n      const snapshot = new QueryDocumentSnapshot(\n        this._firestore,\n        this._userDataWriter,\n        this._key,\n        this._document,\n        this.metadata,\n        /* converter= */ null\n      );\n      return this._converter.fromFirestore(snapshot, options);\n    } else {\n      return this._userDataWriter.convertValue(\n        this._document.data.value,\n        options.serverTimestamps\n      ) as AppModelType;\n    }\n  }\n\n  /**\n   * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n   * document or field doesn't exist.\n   *\n   * By default, a `serverTimestamp()` that has not yet been set to\n   * its final value will be returned as `null`. You can override this by\n   * passing an options object.\n   *\n   * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n   * field.\n   * @param options - An options object to configure how the field is retrieved\n   * from the snapshot (for example the desired behavior for server timestamps\n   * that have not yet been set to their final value).\n   * @returns The data at the specified field location or undefined if no such\n   * field exists in the document.\n   */\n  // We are using `any` here to avoid an explicit cast by our users.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  get(fieldPath: string | FieldPath, options: SnapshotOptions = {}): any {\n    if (this._document) {\n      const value = this._document.data.field(\n        fieldPathFromArgument('DocumentSnapshot.get', fieldPath)\n      );\n      if (value !== null) {\n        return this._userDataWriter.convertValue(\n          value,\n          options.serverTimestamps\n        );\n      }\n    }\n    return undefined;\n  }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */\nexport class QueryDocumentSnapshot<\n  AppModelType = DocumentData,\n  DbModelType extends DocumentData = DocumentData\n> extends DocumentSnapshot<AppModelType, DbModelType> {\n  /**\n   * Retrieves all fields in the document as an `Object`.\n   *\n   * By default, `serverTimestamp()` values that have not yet been\n   * set to their final value will be returned as `null`. You can override\n   * this by passing an options object.\n   *\n   * @override\n   * @param options - An options object to configure how data is retrieved from\n   * the snapshot (for example the desired behavior for server timestamps that\n   * have not yet been set to their final value).\n   * @returns An `Object` containing all fields in the document.\n   */\n  data(options: SnapshotOptions = {}): AppModelType {\n    return super.data(options) as AppModelType;\n  }\n}\n\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */\nexport class QuerySnapshot<\n  AppModelType = DocumentData,\n  DbModelType extends DocumentData = DocumentData\n> {\n  /**\n   * Metadata about this snapshot, concerning its source and if it has local\n   * modifications.\n   */\n  readonly metadata: SnapshotMetadata;\n\n  /**\n   * The query on which you called `get` or `onSnapshot` in order to get this\n   * `QuerySnapshot`.\n   */\n  readonly query: Query<AppModelType, DbModelType>;\n\n  private _cachedChanges?: Array<DocumentChange<AppModelType, DbModelType>>;\n  private _cachedChangesIncludeMetadataChanges?: boolean;\n\n  /** @hideconstructor */\n  constructor(\n    readonly _firestore: Firestore,\n    readonly _userDataWriter: AbstractUserDataWriter,\n    query: Query<AppModelType, DbModelType>,\n    readonly _snapshot: ViewSnapshot\n  ) {\n    this.metadata = new SnapshotMetadata(\n      _snapshot.hasPendingWrites,\n      _snapshot.fromCache\n    );\n    this.query = query;\n  }\n\n  /** An array of all the documents in the `QuerySnapshot`. */\n  get docs(): Array<QueryDocumentSnapshot<AppModelType, DbModelType>> {\n    const result: Array<QueryDocumentSnapshot<AppModelType, DbModelType>> = [];\n    this.forEach(doc => result.push(doc));\n    return result;\n  }\n\n  /** The number of documents in the `QuerySnapshot`. */\n  get size(): number {\n    return this._snapshot.docs.size;\n  }\n\n  /** True if there are no documents in the `QuerySnapshot`. */\n  get empty(): boolean {\n    return this.size === 0;\n  }\n\n  /**\n   * Enumerates all of the documents in the `QuerySnapshot`.\n   *\n   * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n   * each document in the snapshot.\n   * @param thisArg - The `this` binding for the callback.\n   */\n  forEach(\n    callback: (\n      result: QueryDocumentSnapshot<AppModelType, DbModelType>\n    ) => void,\n    thisArg?: unknown\n  ): void {\n    this._snapshot.docs.forEach(doc => {\n      callback.call(\n        thisArg,\n        new QueryDocumentSnapshot<AppModelType, DbModelType>(\n          this._firestore,\n          this._userDataWriter,\n          doc.key,\n          doc,\n          new SnapshotMetadata(\n            this._snapshot.mutatedKeys.has(doc.key),\n            this._snapshot.fromCache\n          ),\n          this.query.converter\n        )\n      );\n    });\n  }\n\n  /**\n   * Returns an array of the documents changes since the last snapshot. If this\n   * is the first snapshot, all documents will be in the list as 'added'\n   * changes.\n   *\n   * @param options - `SnapshotListenOptions` that control whether metadata-only\n   * changes (i.e. only `DocumentSnapshot.metadata` changed) should trigger\n   * snapshot events.\n   */\n  docChanges(\n    options: SnapshotListenOptions = {}\n  ): Array<DocumentChange<AppModelType, DbModelType>> {\n    const includeMetadataChanges = !!options.includeMetadataChanges;\n\n    if (includeMetadataChanges && this._snapshot.excludesMetadataChanges) {\n      throw new FirestoreError(\n        Code.INVALID_ARGUMENT,\n        'To include metadata changes with your document changes, you must ' +\n          'also pass { includeMetadataChanges:true } to onSnapshot().'\n      );\n    }\n\n    if (\n      !this._cachedChanges ||\n      this._cachedChangesIncludeMetadataChanges !== includeMetadataChanges\n    ) {\n      this._cachedChanges = changesFromSnapshot(this, includeMetadataChanges);\n      this._cachedChangesIncludeMetadataChanges = includeMetadataChanges;\n    }\n\n    return this._cachedChanges;\n  }\n}\n\n/** Calculates the array of `DocumentChange`s for a given `ViewSnapshot`. */\nexport function changesFromSnapshot<\n  AppModelType,\n  DbModelType extends DocumentData\n>(\n  querySnapshot: QuerySnapshot<AppModelType, DbModelType>,\n  includeMetadataChanges: boolean\n): Array<DocumentChange<AppModelType, DbModelType>> {\n  if (querySnapshot._snapshot.oldDocs.isEmpty()) {\n    // Special case the first snapshot because index calculation is easy and\n    // fast\n    let lastDoc: Document;\n    let index = 0;\n    return querySnapshot._snapshot.docChanges.map(change => {\n      debugAssert(\n        change.type === ChangeType.Added,\n        'Invalid event type for first snapshot'\n      );\n      debugAssert(\n        !lastDoc ||\n          newQueryComparator(querySnapshot._snapshot.query)(\n            lastDoc,\n            change.doc\n          ) < 0,\n        'Got added events in wrong order'\n      );\n      const doc = new QueryDocumentSnapshot<AppModelType, DbModelType>(\n        querySnapshot._firestore,\n        querySnapshot._userDataWriter,\n        change.doc.key,\n        change.doc,\n        new SnapshotMetadata(\n          querySnapshot._snapshot.mutatedKeys.has(change.doc.key),\n          querySnapshot._snapshot.fromCache\n        ),\n        querySnapshot.query.converter\n      );\n      lastDoc = change.doc;\n      return {\n        type: 'added' as DocumentChangeType,\n        doc,\n        oldIndex: -1,\n        newIndex: index++\n      };\n    });\n  } else {\n    // A `DocumentSet` that is updated incrementally as changes are applied to use\n    // to lookup the index of a document.\n    let indexTracker = querySnapshot._snapshot.oldDocs;\n    return querySnapshot._snapshot.docChanges\n      .filter(\n        change => includeMetadataChanges || change.type !== ChangeType.Metadata\n      )\n      .map(change => {\n        const doc = new QueryDocumentSnapshot<AppModelType, DbModelType>(\n          querySnapshot._firestore,\n          querySnapshot._userDataWriter,\n          change.doc.key,\n          change.doc,\n          new SnapshotMetadata(\n            querySnapshot._snapshot.mutatedKeys.has(change.doc.key),\n            querySnapshot._snapshot.fromCache\n          ),\n          querySnapshot.query.converter\n        );\n        let oldIndex = -1;\n        let newIndex = -1;\n        if (change.type !== ChangeType.Added) {\n          oldIndex = indexTracker.indexOf(change.doc.key);\n          debugAssert(oldIndex >= 0, 'Index for document not found');\n          indexTracker = indexTracker.delete(change.doc.key);\n        }\n        if (change.type !== ChangeType.Removed) {\n          indexTracker = indexTracker.add(change.doc);\n          newIndex = indexTracker.indexOf(change.doc.key);\n        }\n        return {\n          type: resultChangeType(change.type),\n          doc,\n          oldIndex,\n          newIndex\n        };\n      });\n  }\n}\n\nexport function resultChangeType(type: ChangeType): DocumentChangeType {\n  switch (type) {\n    case ChangeType.Added:\n      return 'added';\n    case ChangeType.Modified:\n    case ChangeType.Metadata:\n      return 'modified';\n    case ChangeType.Removed:\n      return 'removed';\n    default:\n      return fail('Unknown change type: ' + type);\n  }\n}\n\n// TODO(firestoreexp): Add tests for snapshotEqual with different snapshot\n// metadata\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */\nexport function snapshotEqual<AppModelType, DbModelType extends DocumentData>(\n  left:\n    | DocumentSnapshot<AppModelType, DbModelType>\n    | QuerySnapshot<AppModelType, DbModelType>,\n  right:\n    | DocumentSnapshot<AppModelType, DbModelType>\n    | QuerySnapshot<AppModelType, DbModelType>\n): boolean {\n  if (left instanceof DocumentSnapshot && right instanceof DocumentSnapshot) {\n    return (\n      left._firestore === right._firestore &&\n      left._key.isEqual(right._key) &&\n      (left._document === null\n        ? right._document === null\n        : left._document.isEqual(right._document)) &&\n      left._converter === right._converter\n    );\n  } else if (left instanceof QuerySnapshot && right instanceof QuerySnapshot) {\n    return (\n      left._firestore === right._firestore &&\n      queryEqual(left.query, right.query) &&\n      left.metadata.isEqual(right.metadata) &&\n      left._snapshot.isEqual(right._snapshot)\n    );\n  }\n\n  return false;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getModularInstance } from '@firebase/util';\n\nimport {\n  CompleteFn,\n  ErrorFn,\n  isPartialObserver,\n  NextFn,\n  PartialObserver\n} from '../api/observer';\nimport { ListenerDataSource } from '../core/event_manager';\nimport {\n  firestoreClientAddSnapshotsInSyncListener,\n  firestoreClientGetDocumentFromLocalCache,\n  firestoreClientGetDocumentsFromLocalCache,\n  firestoreClientGetDocumentsViaSnapshotListener,\n  firestoreClientGetDocumentViaSnapshotListener,\n  firestoreClientListen,\n  firestoreClientWrite\n} from '../core/firestore_client';\nimport { newQueryForPath, Query as InternalQuery } from '../core/query';\nimport { ViewSnapshot } from '../core/view_snapshot';\nimport { Bytes } from '../lite-api/bytes';\nimport { FieldPath } from '../lite-api/field_path';\nimport { validateHasExplicitOrderByForLimitToLast } from '../lite-api/query';\nimport {\n  CollectionReference,\n  doc,\n  DocumentData,\n  DocumentReference,\n  PartialWithFieldValue,\n  Query,\n  SetOptions,\n  UpdateData,\n  WithFieldValue\n} from '../lite-api/reference';\nimport { applyFirestoreDataConverter } from '../lite-api/reference_impl';\nimport {\n  newUserDataReader,\n  ParsedUpdateData,\n  parseSetData,\n  parseUpdateData,\n  parseUpdateVarargs\n} from '../lite-api/user_data_reader';\nimport { AbstractUserDataWriter } from '../lite-api/user_data_writer';\nimport { DeleteMutation, Mutation, Precondition } from '../model/mutation';\nimport { debugAssert } from '../util/assert';\nimport { ByteString } from '../util/byte_string';\nimport { FirestoreError } from '../util/error';\nimport { cast } from '../util/input_validation';\n\nimport { ensureFirestoreConfigured, Firestore } from './database';\nimport { DocumentSnapshot, QuerySnapshot, SnapshotMetadata } from './snapshot';\n\n/**\n * An options object that can be passed to {@link (onSnapshot:1)} and {@link\n * QuerySnapshot.docChanges} to control which types of changes to include in the\n * result set.\n */\nexport interface SnapshotListenOptions {\n  /**\n   * Include a change even if only the metadata of the query or of a document\n   * changed. Default is false.\n   */\n  readonly includeMetadataChanges?: boolean;\n\n  /**\n   * Set the source the query listens to. Default to \"default\", which\n   * listens to both cache and server.\n   */\n  readonly source?: ListenSource;\n}\n\n/**\n * Describe the source a query listens to.\n *\n * Set to `default` to listen to both cache and server changes. Set to `cache`\n * to listen to changes in cache only.\n */\nexport type ListenSource = 'default' | 'cache';\n\n/**\n * Reads the document referred to by this `DocumentReference`.\n *\n * Note: `getDoc()` attempts to provide up-to-date data when possible by waiting\n * for data from the server, but it may return cached data or fail if you are\n * offline and the server cannot be reached. To specify this behavior, invoke\n * {@link getDocFromCache} or {@link getDocFromServer}.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the\n * current document contents.\n */\nexport function getDoc<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>\n): Promise<DocumentSnapshot<AppModelType, DbModelType>> {\n  reference = cast<DocumentReference<AppModelType, DbModelType>>(\n    reference,\n    DocumentReference\n  );\n  const firestore = cast(reference.firestore, Firestore);\n  const client = ensureFirestoreConfigured(firestore);\n\n  return firestoreClientGetDocumentViaSnapshotListener(\n    client,\n    reference._key\n  ).then(snapshot => convertToDocSnapshot(firestore, reference, snapshot));\n}\n\nexport class ExpUserDataWriter extends AbstractUserDataWriter {\n  constructor(protected firestore: Firestore) {\n    super();\n  }\n\n  protected convertBytes(bytes: ByteString): Bytes {\n    return new Bytes(bytes);\n  }\n\n  protected convertReference(name: string): DocumentReference {\n    const key = this.convertDocumentKey(name, this.firestore._databaseId);\n    return new DocumentReference(this.firestore, /* converter= */ null, key);\n  }\n}\n\n/**\n * Reads the document referred to by this `DocumentReference` from cache.\n * Returns an error if the document is not currently cached.\n *\n * @returns A `Promise` resolved with a `DocumentSnapshot` containing the\n * current document contents.\n */\nexport function getDocFromCache<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>\n): Promise<DocumentSnapshot<AppModelType, DbModelType>> {\n  reference = cast<DocumentReference<AppModelType, DbModelType>>(\n    reference,\n    DocumentReference\n  );\n  const firestore = cast(reference.firestore, Firestore);\n  const client = ensureFirestoreConfigured(firestore);\n  const userDataWriter = new ExpUserDataWriter(firestore);\n\n  return firestoreClientGetDocumentFromLocalCache(client, reference._key).then(\n    doc =>\n      new DocumentSnapshot<AppModelType, DbModelType>(\n        firestore,\n        userDataWriter,\n        reference._key,\n        doc,\n        new SnapshotMetadata(\n          doc !== null && doc.hasLocalMutations,\n          /* fromCache= */ true\n        ),\n        reference.converter\n      )\n  );\n}\n\n/**\n * Reads the document referred to by this `DocumentReference` from the server.\n * Returns an error if the network is not available.\n *\n * @returns A `Promise` resolved with a `DocumentSnapshot` containing the\n * current document contents.\n */\nexport function getDocFromServer<\n  AppModelType,\n  DbModelType extends DocumentData\n>(\n  reference: DocumentReference<AppModelType, DbModelType>\n): Promise<DocumentSnapshot<AppModelType, DbModelType>> {\n  reference = cast<DocumentReference<AppModelType, DbModelType>>(\n    reference,\n    DocumentReference\n  );\n  const firestore = cast(reference.firestore, Firestore);\n  const client = ensureFirestoreConfigured(firestore);\n\n  return firestoreClientGetDocumentViaSnapshotListener(client, reference._key, {\n    source: 'server'\n  }).then(snapshot => convertToDocSnapshot(firestore, reference, snapshot));\n}\n\n/**\n * Executes the query and returns the results as a `QuerySnapshot`.\n *\n * Note: `getDocs()` attempts to provide up-to-date data when possible by\n * waiting for data from the server, but it may return cached data or fail if\n * you are offline and the server cannot be reached. To specify this behavior,\n * invoke {@link getDocsFromCache} or {@link getDocsFromServer}.\n *\n * @returns A `Promise` that will be resolved with the results of the query.\n */\nexport function getDocs<AppModelType, DbModelType extends DocumentData>(\n  query: Query<AppModelType, DbModelType>\n): Promise<QuerySnapshot<AppModelType, DbModelType>> {\n  query = cast<Query<AppModelType, DbModelType>>(query, Query);\n  const firestore = cast(query.firestore, Firestore);\n  const client = ensureFirestoreConfigured(firestore);\n  const userDataWriter = new ExpUserDataWriter(firestore);\n\n  validateHasExplicitOrderByForLimitToLast(query._query);\n  return firestoreClientGetDocumentsViaSnapshotListener(\n    client,\n    query._query\n  ).then(\n    snapshot =>\n      new QuerySnapshot<AppModelType, DbModelType>(\n        firestore,\n        userDataWriter,\n        query,\n        snapshot\n      )\n  );\n}\n\n/**\n * Executes the query and returns the results as a `QuerySnapshot` from cache.\n * Returns an empty result set if no documents matching the query are currently\n * cached.\n *\n * @returns A `Promise` that will be resolved with the results of the query.\n */\nexport function getDocsFromCache<\n  AppModelType,\n  DbModelType extends DocumentData\n>(\n  query: Query<AppModelType, DbModelType>\n): Promise<QuerySnapshot<AppModelType, DbModelType>> {\n  query = cast<Query<AppModelType, DbModelType>>(query, Query);\n  const firestore = cast(query.firestore, Firestore);\n  const client = ensureFirestoreConfigured(firestore);\n  const userDataWriter = new ExpUserDataWriter(firestore);\n\n  return firestoreClientGetDocumentsFromLocalCache(client, query._query).then(\n    snapshot =>\n      new QuerySnapshot<AppModelType, DbModelType>(\n        firestore,\n        userDataWriter,\n        query,\n        snapshot\n      )\n  );\n}\n\n/**\n * Executes the query and returns the results as a `QuerySnapshot` from the\n * server. Returns an error if the network is not available.\n *\n * @returns A `Promise` that will be resolved with the results of the query.\n */\nexport function getDocsFromServer<\n  AppModelType,\n  DbModelType extends DocumentData\n>(\n  query: Query<AppModelType, DbModelType>\n): Promise<QuerySnapshot<AppModelType, DbModelType>> {\n  query = cast<Query<AppModelType, DbModelType>>(query, Query);\n  const firestore = cast(query.firestore, Firestore);\n  const client = ensureFirestoreConfigured(firestore);\n  const userDataWriter = new ExpUserDataWriter(firestore);\n\n  return firestoreClientGetDocumentsViaSnapshotListener(client, query._query, {\n    source: 'server'\n  }).then(\n    snapshot => new QuerySnapshot(firestore, userDataWriter, query, snapshot)\n  );\n}\n\n/**\n * Writes to the document referred to by this `DocumentReference`. If the\n * document does not yet exist, it will be created.\n *\n * @param reference - A reference to the document to write.\n * @param data - A map of the fields and values for the document.\n * @returns A `Promise` resolved once the data has been successfully written\n * to the backend (note that it won't resolve while you're offline).\n */\nexport function setDoc<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>,\n  data: WithFieldValue<AppModelType>\n): Promise<void>;\n/**\n * Writes to the document referred to by the specified `DocumentReference`. If\n * the document does not yet exist, it will be created. If you provide `merge`\n * or `mergeFields`, the provided data can be merged into an existing document.\n *\n * @param reference - A reference to the document to write.\n * @param data - A map of the fields and values for the document.\n * @param options - An object to configure the set behavior.\n * @returns A Promise resolved once the data has been successfully written\n * to the backend (note that it won't resolve while you're offline).\n */\nexport function setDoc<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>,\n  data: PartialWithFieldValue<AppModelType>,\n  options: SetOptions\n): Promise<void>;\nexport function setDoc<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>,\n  data: PartialWithFieldValue<AppModelType>,\n  options?: SetOptions\n): Promise<void> {\n  reference = cast<DocumentReference<AppModelType, DbModelType>>(\n    reference,\n    DocumentReference\n  );\n  const firestore = cast(reference.firestore, Firestore);\n\n  const convertedValue = applyFirestoreDataConverter(\n    reference.converter,\n    data as WithFieldValue<AppModelType>,\n    options\n  );\n  const dataReader = newUserDataReader(firestore);\n  const parsed = parseSetData(\n    dataReader,\n    'setDoc',\n    reference._key,\n    convertedValue,\n    reference.converter !== null,\n    options\n  );\n\n  const mutation = parsed.toMutation(reference._key, Precondition.none());\n  return executeWrite(firestore, [mutation]);\n}\n\n/**\n * Updates fields in the document referred to by the specified\n * `DocumentReference`. The update will fail if applied to a document that does\n * not exist.\n *\n * @param reference - A reference to the document to update.\n * @param data - An object containing the fields and values with which to\n * update the document. Fields can contain dots to reference nested fields\n * within the document.\n * @returns A `Promise` resolved once the data has been successfully written\n * to the backend (note that it won't resolve while you're offline).\n */\nexport function updateDoc<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>,\n  data: UpdateData<DbModelType>\n): Promise<void>;\n/**\n * Updates fields in the document referred to by the specified\n * `DocumentReference` The update will fail if applied to a document that does\n * not exist.\n *\n * Nested fields can be updated by providing dot-separated field path\n * strings or by providing `FieldPath` objects.\n *\n * @param reference - A reference to the document to update.\n * @param field - The first field to update.\n * @param value - The first value.\n * @param moreFieldsAndValues - Additional key value pairs.\n * @returns A `Promise` resolved once the data has been successfully written\n * to the backend (note that it won't resolve while you're offline).\n */\nexport function updateDoc<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>,\n  field: string | FieldPath,\n  value: unknown,\n  ...moreFieldsAndValues: unknown[]\n): Promise<void>;\nexport function updateDoc<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<unknown>,\n  fieldOrUpdateData: string | FieldPath | UpdateData<DbModelType>,\n  value?: unknown,\n  ...moreFieldsAndValues: unknown[]\n): Promise<void> {\n  reference = cast<DocumentReference<AppModelType, DbModelType>>(\n    reference,\n    DocumentReference\n  );\n  const firestore = cast(reference.firestore, Firestore);\n\n  const dataReader = newUserDataReader(firestore);\n\n  // For Compat types, we have to \"extract\" the underlying types before\n  // performing validation.\n  fieldOrUpdateData = getModularInstance(fieldOrUpdateData);\n\n  let parsed: ParsedUpdateData;\n  if (\n    typeof fieldOrUpdateData === 'string' ||\n    fieldOrUpdateData instanceof FieldPath\n  ) {\n    parsed = parseUpdateVarargs(\n      dataReader,\n      'updateDoc',\n      reference._key,\n      fieldOrUpdateData,\n      value,\n      moreFieldsAndValues\n    );\n  } else {\n    parsed = parseUpdateData(\n      dataReader,\n      'updateDoc',\n      reference._key,\n      fieldOrUpdateData\n    );\n  }\n\n  const mutation = parsed.toMutation(reference._key, Precondition.exists(true));\n  return executeWrite(firestore, [mutation]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * @param reference - A reference to the document to delete.\n * @returns A Promise resolved once the document has been successfully\n * deleted from the backend (note that it won't resolve while you're offline).\n */\nexport function deleteDoc<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>\n): Promise<void> {\n  const firestore = cast(reference.firestore, Firestore);\n  const mutations = [new DeleteMutation(reference._key, Precondition.none())];\n  return executeWrite(firestore, mutations);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend (Note that it\n * won't resolve while you're offline).\n */\nexport function addDoc<AppModelType, DbModelType extends DocumentData>(\n  reference: CollectionReference<AppModelType, DbModelType>,\n  data: WithFieldValue<AppModelType>\n): Promise<DocumentReference<AppModelType, DbModelType>> {\n  const firestore = cast(reference.firestore, Firestore);\n\n  const docRef = doc(reference);\n  const convertedValue = applyFirestoreDataConverter(reference.converter, data);\n\n  const dataReader = newUserDataReader(reference.firestore);\n  const parsed = parseSetData(\n    dataReader,\n    'addDoc',\n    docRef._key,\n    convertedValue,\n    reference.converter !== null,\n    {}\n  );\n\n  const mutation = parsed.toMutation(docRef._key, Precondition.exists(false));\n  return executeWrite(firestore, [mutation]).then(() => docRef);\n}\n\n/**\n * A function returned by `onSnapshot()` that removes the listener when invoked.\n */\nexport interface Unsubscribe {\n  /** Removes the listener when invoked. */\n  (): void;\n}\n\n// TODO(firestorexp): Make sure these overloads are tested via the Firestore\n// integration tests\n\n/**\n * Attaches a listener for `DocumentSnapshot` events. You may either pass\n * individual `onNext` and `onError` callbacks or pass a single observer\n * object with `next` and `error` callbacks.\n *\n * NOTE: Although an `onCompletion` callback can be provided, it will\n * never be called because the snapshot stream is never-ending.\n *\n * @param reference - A reference to the document to listen to.\n * @param observer - A single object containing `next` and `error` callbacks.\n * @returns An unsubscribe function that can be called to cancel\n * the snapshot listener.\n */\nexport function onSnapshot<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>,\n  observer: {\n    next?: (snapshot: DocumentSnapshot<AppModelType, DbModelType>) => void;\n    error?: (error: FirestoreError) => void;\n    complete?: () => void;\n  }\n): Unsubscribe;\n/**\n * Attaches a listener for `DocumentSnapshot` events. You may either pass\n * individual `onNext` and `onError` callbacks or pass a single observer\n * object with `next` and `error` callbacks.\n *\n * NOTE: Although an `onCompletion` callback can be provided, it will\n * never be called because the snapshot stream is never-ending.\n *\n * @param reference - A reference to the document to listen to.\n * @param options - Options controlling the listen behavior.\n * @param observer - A single object containing `next` and `error` callbacks.\n * @returns An unsubscribe function that can be called to cancel\n * the snapshot listener.\n */\nexport function onSnapshot<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>,\n  options: SnapshotListenOptions,\n  observer: {\n    next?: (snapshot: DocumentSnapshot<AppModelType, DbModelType>) => void;\n    error?: (error: FirestoreError) => void;\n    complete?: () => void;\n  }\n): Unsubscribe;\n/**\n * Attaches a listener for `DocumentSnapshot` events. You may either pass\n * individual `onNext` and `onError` callbacks or pass a single observer\n * object with `next` and `error` callbacks.\n *\n * NOTE: Although an `onCompletion` callback can be provided, it will\n * never be called because the snapshot stream is never-ending.\n *\n * @param reference - A reference to the document to listen to.\n * @param onNext - A callback to be called every time a new `DocumentSnapshot`\n * is available.\n * @param onError - A callback to be called if the listen fails or is\n * cancelled. No further callbacks will occur.\n * @param onCompletion - Can be provided, but will not be called since streams are\n * never ending.\n * @returns An unsubscribe function that can be called to cancel\n * the snapshot listener.\n */\nexport function onSnapshot<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>,\n  onNext: (snapshot: DocumentSnapshot<AppModelType, DbModelType>) => void,\n  onError?: (error: FirestoreError) => void,\n  onCompletion?: () => void\n): Unsubscribe;\n/**\n * Attaches a listener for `DocumentSnapshot` events. You may either pass\n * individual `onNext` and `onError` callbacks or pass a single observer\n * object with `next` and `error` callbacks.\n *\n * NOTE: Although an `onCompletion` callback can be provided, it will\n * never be called because the snapshot stream is never-ending.\n *\n * @param reference - A reference to the document to listen to.\n * @param options - Options controlling the listen behavior.\n * @param onNext - A callback to be called every time a new `DocumentSnapshot`\n * is available.\n * @param onError - A callback to be called if the listen fails or is\n * cancelled. No further callbacks will occur.\n * @param onCompletion - Can be provided, but will not be called since streams are\n * never ending.\n * @returns An unsubscribe function that can be called to cancel\n * the snapshot listener.\n */\nexport function onSnapshot<AppModelType, DbModelType extends DocumentData>(\n  reference: DocumentReference<AppModelType, DbModelType>,\n  options: SnapshotListenOptions,\n  onNext: (snapshot: DocumentSnapshot<AppModelType, DbModelType>) => void,\n  onError?: (error: FirestoreError) => void,\n  onCompletion?: () => void\n): Unsubscribe;\n/**\n * Attaches a listener for `QuerySnapshot` events. You may either pass\n * individual `onNext` and `onError` callbacks or pass a single observer\n * object with `next` and `error` callbacks. The listener can be cancelled by\n * calling the function that is returned when `onSnapshot` is called.\n *\n * NOTE: Although an `onCompletion` callback can be provided, it will\n * never be called because the snapshot stream is never-ending.\n *\n * @param query - The query to listen to.\n * @param observer - A single object containing `next` and `error` callbacks.\n * @returns An unsubscribe function that can be called to cancel\n * the snapshot listener.\n */\nexport function onSnapshot<AppModelType, DbModelType extends DocumentData>(\n  query: Query<AppModelType, DbModelType>,\n  observer: {\n    next?: (snapshot: QuerySnapshot<AppModelType, DbModelType>) => void;\n    error?: (error: FirestoreError) => void;\n    complete?: () => void;\n  }\n): Unsubscribe;\n/**\n * Attaches a listener for `QuerySnapshot` events. You may either pass\n * individual `onNext` and `onError` callbacks or pass a single observer\n * object with `next` and `error` callbacks. The listener can be cancelled by\n * calling the function that is returned when `onSnapshot` is called.\n *\n * NOTE: Although an `onCompletion` callback can be provided, it will\n * never be called because the snapshot stream is never-ending.\n *\n * @param query - The query to listen to.\n * @param options - Options controlling the listen behavior.\n * @param observer - A single object containing `next` and `error` callbacks.\n * @returns An unsubscribe function that can be called to cancel\n * the snapshot listener.\n */\nexport function onSnapshot<AppModelType, DbModelType extends DocumentData>(\n  query: Query<AppModelType, DbModelType>,\n  options: SnapshotListenOptions,\n  observer: {\n    next?: (snapshot: QuerySnapshot<AppModelType, DbModelType>) => void;\n    error?: (error: FirestoreError) => void;\n    complete?: () => void;\n  }\n): Unsubscribe;\n/**\n * Attaches a listener for `QuerySnapshot` events. You may either pass\n * individual `onNext` and `onError` callbacks or pass a single observer\n * object with `next` and `error` callbacks. The listener can be cancelled by\n * calling the function that is returned when `onSnapshot` is called.\n *\n * NOTE: Although an `onCompletion` callback can be provided, it will\n * never be called because the snapshot stream is never-ending.\n *\n * @param query - The query to listen to.\n * @param onNext - A callback to be called every time a new `QuerySnapshot`\n * is available.\n * @param onCompletion - Can be provided, but will not be called since streams are\n * never ending.\n * @param onError - A callback to be called if the listen fails or is\n * cancelled. No further callbacks will occur.\n * @returns An unsubscribe function that can be called to cancel\n * the snapshot listener.\n */\nexport function onSnapshot<AppModelType, DbModelType extends DocumentData>(\n  query: Query<AppModelType, DbModelType>,\n  onNext: (snapshot: QuerySnapshot<AppModelType, DbModelType>) => void,\n  onError?: (error: FirestoreError) => void,\n  onCompletion?: () => void\n): Unsubscribe;\n/**\n * Attaches a listener for `QuerySnapshot` events. You may either pass\n * individual `onNext` and `onError` callbacks or pass a single observer\n * object with `next` and `error` callbacks. The listener can be cancelled by\n * calling the function that is returned when `onSnapshot` is called.\n *\n * NOTE: Although an `onCompletion` callback can be provided, it will\n * never be called because the snapshot stream is never-ending.\n *\n * @param query - The query to listen to.\n * @param options - Options controlling the listen behavior.\n * @param onNext - A callback to be called every time a new `QuerySnapshot`\n * is available.\n * @param onCompletion - Can be provided, but will not be called since streams are\n * never ending.\n * @param onError - A callback to be called if the listen fails or is\n * cancelled. No further callbacks will occur.\n * @returns An unsubscribe function that can be called to cancel\n * the snapshot listener.\n */\nexport function onSnapshot<AppModelType, DbModelType extends DocumentData>(\n  query: Query<AppModelType, DbModelType>,\n  options: SnapshotListenOptions,\n  onNext: (snapshot: QuerySnapshot<AppModelType, DbModelType>) => void,\n  onError?: (error: FirestoreError) => void,\n  onCompletion?: () => void\n): Unsubscribe;\nexport function onSnapshot<AppModelType, DbModelType extends DocumentData>(\n  reference:\n    | Query<AppModelType, DbModelType>\n    | DocumentReference<AppModelType, DbModelType>,\n  ...args: unknown[]\n): Unsubscribe {\n  reference = getModularInstance(reference);\n\n  let options: SnapshotListenOptions = {\n    includeMetadataChanges: false,\n    source: 'default'\n  };\n  let currArg = 0;\n  if (typeof args[currArg] === 'object' && !isPartialObserver(args[currArg])) {\n    options = args[currArg] as SnapshotListenOptions;\n    currArg++;\n  }\n\n  const internalOptions = {\n    includeMetadataChanges: options.includeMetadataChanges,\n    source: options.source as ListenerDataSource\n  };\n\n  if (isPartialObserver(args[currArg])) {\n    const userObserver = args[currArg] as PartialObserver<\n      QuerySnapshot<AppModelType, DbModelType>\n    >;\n    args[currArg] = userObserver.next?.bind(userObserver);\n    args[currArg + 1] = userObserver.error?.bind(userObserver);\n    args[currArg + 2] = userObserver.complete?.bind(userObserver);\n  }\n\n  let observer: PartialObserver<ViewSnapshot>;\n  let firestore: Firestore;\n  let internalQuery: InternalQuery;\n\n  if (reference instanceof DocumentReference) {\n    firestore = cast(reference.firestore, Firestore);\n    internalQuery = newQueryForPath(reference._key.path);\n\n    observer = {\n      next: snapshot => {\n        if (args[currArg]) {\n          (\n            args[currArg] as NextFn<DocumentSnapshot<AppModelType, DbModelType>>\n          )(\n            convertToDocSnapshot(\n              firestore,\n              reference as DocumentReference<AppModelType, DbModelType>,\n              snapshot\n            )\n          );\n        }\n      },\n      error: args[currArg + 1] as ErrorFn,\n      complete: args[currArg + 2] as CompleteFn\n    };\n  } else {\n    const query = cast<Query<AppModelType, DbModelType>>(reference, Query);\n    firestore = cast(query.firestore, Firestore);\n    internalQuery = query._query;\n    const userDataWriter = new ExpUserDataWriter(firestore);\n\n    observer = {\n      next: snapshot => {\n        if (args[currArg]) {\n          (args[currArg] as NextFn<QuerySnapshot<AppModelType, DbModelType>>)(\n            new QuerySnapshot(firestore, userDataWriter, query, snapshot)\n          );\n        }\n      },\n      error: args[currArg + 1] as ErrorFn,\n      complete: args[currArg + 2] as CompleteFn\n    };\n\n    validateHasExplicitOrderByForLimitToLast(reference._query);\n  }\n\n  const client = ensureFirestoreConfigured(firestore);\n  return firestoreClientListen(\n    client,\n    internalQuery,\n    internalOptions,\n    observer\n  );\n}\n\n// TODO(firestorexp): Make sure these overloads are tested via the Firestore\n// integration tests\n\n/**\n * Attaches a listener for a snapshots-in-sync event. The snapshots-in-sync\n * event indicates that all listeners affected by a given change have fired,\n * even if a single server-generated change affects multiple listeners.\n *\n * NOTE: The snapshots-in-sync event only indicates that listeners are in sync\n * with each other, but does not relate to whether those snapshots are in sync\n * with the server. Use SnapshotMetadata in the individual listeners to\n * determine if a snapshot is from the cache or the server.\n *\n * @param firestore - The instance of Firestore for synchronizing snapshots.\n * @param observer - A single object containing `next` and `error` callbacks.\n * @returns An unsubscribe function that can be called to cancel the snapshot\n * listener.\n */\nexport function onSnapshotsInSync(\n  firestore: Firestore,\n  observer: {\n    next?: (value: void) => void;\n    error?: (error: FirestoreError) => void;\n    complete?: () => void;\n  }\n): Unsubscribe;\n/**\n * Attaches a listener for a snapshots-in-sync event. The snapshots-in-sync\n * event indicates that all listeners affected by a given change have fired,\n * even if a single server-generated change affects multiple listeners.\n *\n * NOTE: The snapshots-in-sync event only indicates that listeners are in sync\n * with each other, but does not relate to whether those snapshots are in sync\n * with the server. Use `SnapshotMetadata` in the individual listeners to\n * determine if a snapshot is from the cache or the server.\n *\n * @param firestore - The `Firestore` instance for synchronizing snapshots.\n * @param onSync - A callback to be called every time all snapshot listeners are\n * in sync with each other.\n * @returns An unsubscribe function that can be called to cancel the snapshot\n * listener.\n */\nexport function onSnapshotsInSync(\n  firestore: Firestore,\n  onSync: () => void\n): Unsubscribe;\nexport function onSnapshotsInSync(\n  firestore: Firestore,\n  arg: unknown\n): Unsubscribe {\n  firestore = cast(firestore, Firestore);\n  const client = ensureFirestoreConfigured(firestore);\n  const observer = isPartialObserver(arg)\n    ? (arg as PartialObserver<void>)\n    : {\n        next: arg as () => void\n      };\n\n  return firestoreClientAddSnapshotsInSyncListener(client, observer);\n}\n\n/**\n * Locally writes `mutations` on the async queue.\n * @internal\n */\nexport function executeWrite(\n  firestore: Firestore,\n  mutations: Mutation[]\n): Promise<void> {\n  const client = ensureFirestoreConfigured(firestore);\n  return firestoreClientWrite(client, mutations);\n}\n\n/**\n * Converts a {@link ViewSnapshot} that contains the single document specified by `ref`\n * to a {@link DocumentSnapshot}.\n */\nfunction convertToDocSnapshot<AppModelType, DbModelType extends DocumentData>(\n  firestore: Firestore,\n  ref: DocumentReference<AppModelType, DbModelType>,\n  snapshot: ViewSnapshot\n): DocumentSnapshot<AppModelType, DbModelType> {\n  debugAssert(\n    snapshot.docs.size <= 1,\n    'Expected zero or a single result on a document-only query'\n  );\n  const doc = snapshot.docs.get(ref._key);\n\n  const userDataWriter = new ExpUserDataWriter(firestore);\n  return new DocumentSnapshot<AppModelType, DbModelType>(\n    firestore,\n    userDataWriter,\n    ref._key,\n    doc,\n    new SnapshotMetadata(snapshot.hasPendingWrites, snapshot.fromCache),\n    ref.converter\n  );\n}\n","/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  firestoreClientDeleteAllFieldIndexes,\n  firestoreClientSetPersistentCacheIndexAutoCreationEnabled,\n  FirestoreClient\n} from '../core/firestore_client';\nimport { cast } from '../util/input_validation';\nimport { logDebug, logWarn } from '../util/log';\n\nimport { ensureFirestoreConfigured, Firestore } from './database';\n\n/**\n * A `PersistentCacheIndexManager` for configuring persistent cache indexes used\n * for local query execution.\n *\n * To use, call `getPersistentCacheIndexManager()` to get an instance.\n */\nexport class PersistentCacheIndexManager {\n  /** A type string to uniquely identify instances of this class. */\n  readonly type: 'PersistentCacheIndexManager' = 'PersistentCacheIndexManager';\n\n  /** @hideconstructor */\n  constructor(readonly _client: FirestoreClient) {}\n}\n\n/**\n * Returns the PersistentCache Index Manager used by the given `Firestore`\n * object.\n *\n * @return The `PersistentCacheIndexManager` instance, or `null` if local\n * persistent storage is not in use.\n */\nexport function getPersistentCacheIndexManager(\n  firestore: Firestore\n): PersistentCacheIndexManager | null {\n  firestore = cast(firestore, Firestore);\n\n  const cachedInstance = persistentCacheIndexManagerByFirestore.get(firestore);\n  if (cachedInstance) {\n    return cachedInstance;\n  }\n\n  const client = ensureFirestoreConfigured(firestore);\n  if (client._uninitializedComponentsProvider?._offlineKind !== 'persistent') {\n    return null;\n  }\n\n  const instance = new PersistentCacheIndexManager(client);\n  persistentCacheIndexManagerByFirestore.set(firestore, instance);\n  return instance;\n}\n\n/**\n * Enables the SDK to create persistent cache indexes automatically for local\n * query execution when the SDK believes cache indexes can help improve\n * performance.\n *\n * This feature is disabled by default.\n */\nexport function enablePersistentCacheIndexAutoCreation(\n  indexManager: PersistentCacheIndexManager\n): void {\n  setPersistentCacheIndexAutoCreationEnabled(indexManager, true);\n}\n\n/**\n * Stops creating persistent cache indexes automatically for local query\n * execution. The indexes which have been created by calling\n * `enablePersistentCacheIndexAutoCreation()` still take effect.\n */\nexport function disablePersistentCacheIndexAutoCreation(\n  indexManager: PersistentCacheIndexManager\n): void {\n  setPersistentCacheIndexAutoCreationEnabled(indexManager, false);\n}\n\n/**\n * Removes all persistent cache indexes.\n *\n * Please note this function will also deletes indexes generated by\n * `setIndexConfiguration()`, which is deprecated.\n */\nexport function deleteAllPersistentCacheIndexes(\n  indexManager: PersistentCacheIndexManager\n): void {\n  indexManager._client.verifyNotTerminated();\n\n  const promise = firestoreClientDeleteAllFieldIndexes(indexManager._client);\n\n  promise\n    .then(_ => logDebug('deleting all persistent cache indexes succeeded'))\n    .catch(error =>\n      logWarn('deleting all persistent cache indexes failed', error)\n    );\n}\n\nfunction setPersistentCacheIndexAutoCreationEnabled(\n  indexManager: PersistentCacheIndexManager,\n  isEnabled: boolean\n): void {\n  indexManager._client.verifyNotTerminated();\n\n  const promise = firestoreClientSetPersistentCacheIndexAutoCreationEnabled(\n    indexManager._client,\n    isEnabled\n  );\n\n  promise\n    .then(_ =>\n      logDebug(\n        `setting persistent cache index auto creation ` +\n          `isEnabled=${isEnabled} succeeded`\n      )\n    )\n    .catch(error =>\n      logWarn(\n        `setting persistent cache index auto creation ` +\n          `isEnabled=${isEnabled} failed`,\n        error\n      )\n    );\n}\n\n/**\n * Maps `Firestore` instances to their corresponding\n * `PersistentCacheIndexManager` instances.\n *\n * Use a `WeakMap` so that the mapping will be automatically dropped when the\n * `Firestore` instance is garbage collected. This emulates a private member\n * as described in https://goo.gle/454yvug.\n */\nconst persistentCacheIndexManagerByFirestore = new WeakMap<\n  Firestore,\n  PersistentCacheIndexManager\n>();\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  _registerComponent,\n  registerVersion,\n  SDK_VERSION\n} from '@firebase/app';\nimport { Component, ComponentType } from '@firebase/component';\n\nimport { name, version } from '../package.json';\nimport {\n  FirebaseAppCheckTokenProvider,\n  FirebaseAuthCredentialsProvider\n} from '../src/api/credentials';\nimport { setSDKVersion } from '../src/core/version';\n\nimport { Firestore } from './api/database';\nimport { databaseIdFromApp } from './core/database_info';\n\nexport function registerFirestore(\n  variant?: string,\n  useFetchStreams = true\n): void {\n  setSDKVersion(SDK_VERSION);\n  _registerComponent(\n    new Component(\n      'firestore',\n      (container, { instanceIdentifier: databaseId, options: settings }) => {\n        const app = container.getProvider('app').getImmediate()!;\n        const firestoreInstance = new Firestore(\n          new FirebaseAuthCredentialsProvider(\n            container.getProvider('auth-internal')\n          ),\n          new FirebaseAppCheckTokenProvider(\n            container.getProvider('app-check-internal')\n          ),\n          databaseIdFromApp(app, databaseId),\n          app\n        );\n        settings = { useFetchStreams, ...settings };\n        firestoreInstance._setSettings(settings);\n        return firestoreInstance;\n      },\n      'PUBLIC' as ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n","import { initializeApp } from \"firebase/app\"\r\nimport { getFirestore } from \"firebase/firestore\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCg6-1gxwa8a6xeB53gkV8tT2pxRjLSbo0\",\r\n    authDomain: \"mostrans-test.firebaseapp.com\",\r\n    projectId: \"mostrans-test\",\r\n    storageBucket: \"mostrans-test.appspot.com\",\r\n    messagingSenderId: \"126320024836\",\r\n    appId: \"1:126320024836:web:9bc24b3a80fcc975878451\"\r\n  };\r\n\r\n// Initialize Firebase and Firestore\r\nconst app = initializeApp(firebaseConfig)\r\nconst db = getFirestore(app)\r\nexport {db}\r\n","import React, { useState, useEffect } from 'react';\nimport { Table, Button, Label, Input } from 'reactstrap';\nimport Axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Link } from 'react-router-dom';\nimport { db } from '../firebase-config';\nimport { collection, getDocs } from 'firebase/firestore';\n\nfunction LocationListing() {\n  const [info, setInfo] = useState([]);\n  const [locations, setLocations] = useState([]);\n  const [customLocations, setCustomLocations] = useState([]);\n\n  useEffect(() => {\n    const fetchLocations = async () => {\n      try {\n        const apiResult = await Axios.get(\"https://rickandmortyapi.com/api/location\");\n        setLocations(apiResult.data.results);\n        setInfo(apiResult.data.info);\n\n        // Fetch from Firestore\n        const querySnapshot = await getDocs(collection(db, \"customLocations\"));\n        const firestoreLocations = querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n        setCustomLocations(firestoreLocations);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchLocations();\n  }, []);\n\n\n  const pagination = (direction) => {\n    const api = direction === \"next\" ? info.next : info.prev;\n    if (api) {\n      Axios.get(api).then((result) => {\n        setLocations(result.data.results);\n        setInfo(result.data.info);\n      });\n    }\n  };\n\n  const search = () => {\n    const sName = document.getElementById(\"searchName\").value;\n    const sType = document.getElementById(\"searchType\").value;\n    const sDimension = document.getElementById(\"searchDimension\").value;\n    const apiURL = `https://rickandmortyapi.com/api/location/?name=${sName}&type=${sType}&dimension=${sDimension}`;\n    Axios.get(apiURL).then((result) => {\n      setLocations(result.data.results);\n      setInfo(result.data.info);\n    });\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-4 mt-3\">\n          <Label for=\"searchName\">Name</Label>\n          <Input id=\"searchName\" placeholder=\"Earth\" type=\"text\" />\n        </div>\n        <div className=\"col-md-4 mt-3\">\n          <Label for=\"searchType\">Type</Label>\n          <Input id=\"searchType\" placeholder=\"Microverse\" type=\"text\" />\n        </div>\n        <div className=\"col-md-4 mt-3\">\n          <Label for=\"searchDimension\">Dimension</Label>\n          <Input id=\"searchDimension\" placeholder=\"C-137\" type=\"text\" />\n        </div>\n        <div className=\"d-flex justify-content-end mt-3\">\n          <Button onClick={search}>Search</Button>\n        </div>\n      </div>\n      <div className=\"row w-100\">\n        <Table dark hover responsive striped>\n          <thead>\n            <tr>\n              <th>Id</th>\n              <th>Name</th>\n              <th>Type</th>\n              <th>Dimension</th>\n            </tr>\n          </thead>\n          <tbody>\n            {locations.map((location) => (\n              <tr key={location.id}>\n                <th scope=\"row\">{location.id}</th>\n                <td><Link to={`/location/${location.id}`}>{location.name}</Link></td>\n                <td>{location.type}</td>\n                <td>{location.dimension}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n        <nav className=\"col-12 justify-content-center d-flex mt-5\">\n          <ul className=\"pagination\">\n            <li className=\"page-item\">\n              <button className=\"page-link cursor\" onClick={() => pagination(\"prev\")}>Previous</button>\n            </li>\n            <li className=\"page-item\">\n              <button className=\"page-link cursor\" onClick={() => pagination(\"next\")}>Next</button>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </div>\n  );\n}\n\nexport default LocationListing;\n","import React, { useState, useEffect } from \"react\";\nimport { Label, Input, Button } from \"reactstrap\";\nimport Axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Link } from \"react-router-dom\";\n\nconst status = [\n  { label: \"Any\", value: \"\" },\n  { label: \"Alive\", value: \"Alive\" },\n  { label: \"Dead\", value: \"Dead\" },\n  { label: \"Unknown\", value: \"Unknown\" },\n];\n\nconst gender = [\n  { label: \"Any\", value: \"\" },\n  { label: \"Female\", value: \"Female\" },\n  { label: \"Male\", value: \"Male\" },\n  { label: \"Genderless\", value: \"Genderless\" },\n  { label: \"Unknown\", value: \"Unknown\" },\n];\n\nfunction CharacterListing() {\n  const [info, setInfo] = useState({});\n  const [characters, setCharacters] = useState([]);\n\n  useEffect(() => {\n    Axios.get(\"https://rickandmortyapi.com/api/character\").then((result) => {\n      setCharacters(result.data.results);\n      setInfo(result.data.info);\n    });\n  }, []);\n\n  const pagination = (direction) => {\n    const api = direction === \"next\" ? info.next : info.prev;\n    Axios.get(api).then((result) => {\n      setCharacters(result.data.results);\n      setInfo(result.data.info);\n    });\n  };\n\n  const search = () => {\n    const sName = document.getElementById(\"searchName\").value;\n    const sType = document.getElementById(\"searchType\").value;\n    const sGender = document.getElementById(\"searchGender\").value;\n    const sStatus = document.getElementById(\"searchStatus\").value;\n    const sSpecies = document.getElementById(\"searchSpecies\").value;\n    const apiUrl = `https://rickandmortyapi.com/api/character/?name=${sName}&type=${sType}&species=${sSpecies}&status=${sStatus}&gender=${sGender}`;\n    Axios.get(apiUrl).then((result) => {\n      setCharacters(result.data.results);\n      setInfo(result.data.info);\n    });\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-3 mt-3\">\n          <Label for=\"searchName\">Name</Label>\n          <Input id=\"searchName\" placeholder=\"Morty\" type=\"text\" />\n        </div>\n        <div className=\"col-md-3 mt-3\">\n          <Label for=\"searchType\">Species</Label>\n          <Input id=\"searchType\" placeholder=\"Human\" type=\"text\" />\n        </div>\n        <div className=\"col-md-3 mt-3\">\n          <Label for=\"searchSpecies\">Dimension</Label>\n          <Input id=\"searchSpecies\" placeholder=\"E.g\" type=\"text\" />\n        </div>\n        <div className=\"col-md-3 row m-0 p-0\">\n          <div className=\"col-sm-6 mt-3\">\n            <Label for=\"searchStatus\">Status</Label>\n            <Input id=\"searchStatus\" name=\"select\" type=\"select\">\n              {status.map((option) => (\n                <option key={option.value} value={option.value}>\n                  {option.label}\n                </option>\n              ))}\n            </Input>\n          </div>\n          <div className=\"col-sm-6 mt-3\">\n            <Label for=\"searchGender\">Gender</Label>\n            <Input id=\"searchGender\" name=\"select\" type=\"select\">\n              {gender.map((option) => (\n                <option key={option.value} value={option.value}>\n                  {option.label}\n                </option>\n              ))}\n            </Input>\n          </div>\n        </div>\n        <div className=\"d-flex justify-content-end mt-3\">\n          <Button onClick={search}>Search</Button>\n        </div>\n      </div>\n      <div className=\"row\">\n        {characters.map((char) => (\n          <div key={char.id} className=\"col-md-6 col-lg-4 col-xl-3 py-3 text-decoration-none\">\n            <Link to={`/character/${char.id}`}>\n              <div className=\"card position-relative\">\n                <div style={{\n                  position: 'absolute',\n                  top: '10px',\n                  left: '10px',\n                  width: '15px',\n                  height: '15px',\n                  backgroundColor: 'black',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center'\n                }}>\n                  <span className=\"badge text-white\" style={{ fontSize: '8px' }}>{char.id}</span>\n                </div>\n                <img src={char.image} alt={char.name} className=\"w-100 card-img-top p-3 pb-0\" />\n                <div className=\"card-body \">\n                  <div className=\"p-3 border border-1\">\n                    <div className=\"text-dark h5\">{char.name.length > 21 ? `${char.name.slice(0, 18)}...` : char.name}</div>\n                    <div>\n                      <span className={`badge ${char.status === \"Alive\" ? \"bg-success\" : \"bg-danger\"}`}>{char.status}</span>\n                    </div>\n                    <div className=\"text-dark\">{char.location.name.length > 30 ? `${char.location.name.slice(0, 27)}...` : char.location.name}</div>\n                    <ul className=\"mb-0 list-inline mt-3\">\n                      <li>\n                        <span className=\"text-dark\">Species:</span>\n                        <span className=\"mx-2\">{char.species}</span>\n                      </li>\n                      <li>\n                        <span className=\"text-dark\">Gender:</span>\n                        <span className=\"mx-2\">{char.gender}</span>\n                      </li>\n                      <li>\n                        <span className=\"text-dark\">Played Episode:</span>\n                        <span className=\"mx-2\">{char.episode.length}</span>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </Link>\n          </div>\n        ))}\n        <nav className=\"col-12 justify-content-center d-flex mt-5\">\n          <ul className=\"pagination\">\n            <li className=\"page-item\">\n              <button className=\"page-link cursor\" onClick={() => pagination(\"prev\")}>Previous</button>\n            </li>\n            <li className=\"page-item\">\n              <button className=\"page-link cursor\" onClick={() => pagination(\"next\")}>Next</button>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </div>\n  );\n}\n\nexport default CharacterListing;\n","import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nfunction LocationCharacter() {\r\n  const [characters, setCharacters] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const htmlLink = window.location.href;\r\n    const id = htmlLink.split(\"/\")[4];\r\n    Axios.get(`https://rickandmortyapi.com/api/location/${id}`)\r\n      .then((response) => {\r\n        const { residents } = response.data;\r\n        fetchCharacters(residents);\r\n      })\r\n      .catch((error) => console.error('Error fetching location details:', error));\r\n  }, []);\r\n\r\n  const fetchCharacters = (residents) => {\r\n    const requests = residents.map(url => Axios.get(url));\r\n    Axios.all(requests)\r\n      .then(Axios.spread((...responses) => {\r\n        const charactersData = responses.map(res => res.data);\r\n        setCharacters(charactersData);\r\n        setLoading(false);\r\n      }))\r\n      .catch(error => console.error('Error fetching characters:', error));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container text-dark bg-light p-5\">\r\n      <div className=\"h4 mb-3\">Characters in this Location:</div>\r\n      {loading ? <p>Loading characters...</p> :\r\n        <div className=\"row\">\r\n          {characters.map((character) => (\r\n            <div className=\"col-md-4 mb-4\" key={character.id}>\r\n              <div className=\"card\">\r\n                <img src={character.image} alt={character.name} className=\"card-img-top\" />\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">{character.name}</h5>\r\n                  <p className=\"card-text\">Species: {character.species}</p>\r\n                  <p className=\"card-text\">Status: {character.status}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LocationCharacter;\r\n","import React, { Component } from \"react\";\n\nexport default class MainPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n    };\n  }\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\n          <div className=\"container\">\n            <a className=\"navbar-brand\" href=\"/\">\n              <img src=\"/logoR2.png\" alt=\"Rick and Morty\" width=\"50\" height=\"50\" />\n            </a>\n            <button className=\"navbar-toggler\" type=\"button\" onClick={this.toggle} aria-controls=\"navbarNav\" aria-expanded={this.state.isOpen ? \"true\" : \"false\"} aria-label=\"Toggle navigation\">\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className={`${this.state.isOpen ? 'show' : ''} collapse navbar-collapse`} id=\"navbarNav\">\n              <ul className=\"navbar-nav me-auto\">\n                <li className=\"nav-item\">\n                  <a className=\"nav-link\" href=\"/location/\">Locations</a>\n                </li>\n                <li className=\"nav-item\">\n                  <a className=\"nav-link\" href=\"/character/\">Characters</a>\n                </li>\n                <li className=\"nav-item\">\n                  <a className=\"nav-link\" href=\"/episode/\">Episodes</a>\n                </li>\n                <li className=\"nav-item\">\n                  <a className=\"nav-link\" href=\"/add-location/\">Custom Location</a>\n                </li>\n              </ul>\n              <span className=\"navbar-text\">\n              <a className=\"nav-link\" href=\"#\">GitHub</a>\n              </span>\n            </div>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Label, Input } from \"reactstrap\"; // Import Modal components from reactstrap\nimport { db } from '../firebase-config';\nimport { collection, getDocs,getDoc, doc, updateDoc } from 'firebase/firestore';\n\nexport default class DetailCard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      modalOpen: false,\n      locations: [],\n      selectedLocationId: '',\n    };\n  }\n\n  componentDidMount() {\n    var htmlLink = window.location.href;\n    var id = htmlLink.split(\"/\")[4];\n    var page = htmlLink.split(\"/\")[3];\n    Axios.get(`https://rickandmortyapi.com/api/${page}/${id}`).then((result) =>\n      this.setState({\n        data: result.data,\n      })\n    );\n  }\n\n  toggleModal = () => {\n    this.setState(prevState => ({\n      modalOpen: !prevState.modalOpen\n    }));\n\n    if (!this.state.modalOpen) {\n      this.fetchLocations();\n    }\n  }\n\n  fetchLocations = async () => {\n    try {\n      const querySnapshot = await getDocs(collection(db, 'locations'));\n      const locations = querySnapshot.docs.map(doc => ({ id: doc.id, name: doc.data().name }));\n      this.setState({ locations });\n    } catch (error) {\n      console.error('Error fetching locations: ', error);\n    }\n  };\n\n  assignCharacter = async () => {\n    const { data, selectedLocationId } = this.state;\n    if (!selectedLocationId) {\n      alert('Please select a location.');\n      return;\n    }\n\n    try {\n      const locationRef = doc(db, 'locations', selectedLocationId);\n\n      const locationDoc = await getDoc(locationRef);\n      const locationData = locationDoc.data();\n\n      if (!locationData.residents) {\n        locationData.residents = [];\n      }\n\n      locationData.residents.push(`https://rickandmortyapi.com/api/character/${data.id}`);\n\n      await updateDoc(locationRef, { residents: locationData.residents });\n\n      alert(\n        `Character ${data.name} has been assigned to location ${locationData.name}.`\n      )\n\n      this.toggleModal();\n    } catch (error) {\n      console.error('Error assigning character:', error);\n    }\n}\n\n\n  render() {\n    const { id, image, name, dimension, residents, characters, species, episode, type, gender, air_date, status, origin } = this.state.data;\n    return (\n      <div className=\"container text-dark bg-light p-5\">\n        <div className=\"row d-flex justify-content-between\">\n          <div className=\"col-md-6\">\n            {image && (<div className=\"mb-4\"><img src={image} alt={`${name}-img`} style={{ maxWidth: '100%' }} /></div>)}\n          </div>\n          <div className=\"col-md-6\">\n            <div className=\"h3\">{name}</div>\n            {status && (<div className=\"badge bg-success\">{status}</div>)}\n            <hr />\n            {id && (<div><span className=\"h6\">ID</span>: {id}</div>)}\n            {dimension && (<div><span className=\"h6\">Dimension</span>: {dimension}</div>)}\n            {residents && (<div><span className=\"h6\">Number of Residents</span>: {residents.length}</div>)}\n            {characters && (<div><span className=\"h6\">Characters</span>: {characters.length}</div>)}\n            {episode && window.location.href.split(\"/\")[3] !== \"character\" && (<div><span className=\"h6\">Episode</span>: {episode}</div>)}\n            {type ? (<div><span className=\"h6\">Type</span>: {type}</div>) : (<div><span className=\"h6\">Type</span>: Unknown</div>)}\n            {species && (<div><span className=\"h6\">Species</span>: {species}</div>)}\n            {origin && (<div><span className=\"h6\">Origin Location</span>: {origin.name}</div>)}\n            {gender && (<div><span className=\"h6\">Gender</span>: {gender}</div>)}\n            {air_date && (<div><span className=\"h6\">Air Date</span>: {air_date}</div>)}\n\n            {status && species && (\n              <Button className=\"mt-3\" onClick={this.toggleModal} color=\"primary\">\n                Tambahkan ke Custom Lokasi\n              </Button>\n            )}\n          </div>\n          <hr className=\"mt-5\" />\n        </div>\n\n        {/* Modal for selecting a location */}\n        <Modal isOpen={this.state.modalOpen} toggle={this.toggleModal}>\n          <ModalHeader toggle={this.toggleModal}>Select Location</ModalHeader>\n          <ModalBody>\n            <FormGroup>\n              <Label for=\"locationSelect\">Location:</Label>\n              <Input type=\"select\" name=\"select\" id=\"locationSelect\" onChange={(e) => this.setState({ selectedLocationId: e.target.value })}>\n                <option value=\"\">Select a location...</option>\n                {this.state.locations.map(location => (\n                  <option key={location.id} value={location.id}>{location.name}</option>\n                ))}\n              </Input>\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.assignCharacter}>Assign</Button>\n            <Button color=\"secondary\" onClick={this.toggleModal}>Cancel</Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport \"./NotFoundPage.css\";\n\nimport { Link } from \"react-router-dom\";\n\nexport default class NotFoundPage extends Component {\n  render() {\n    return (\n      <div className=\"d-flex justify-content-center text-center\">\n        <div class=\"wrappers\">\n          <div className=\"d-flex justify-content-center\">\n            <span className='fw-bolder fs404'>4 </span>\n            <img alt=\"404\" className='imgsss h-50 w-50' src=\"https://staticdelivery.nexusmods.com/mods/1151/images/528-0-1447526230.png\" />\n            <span className='fw-bolder fs404'>4 </span>\n          </div>\n          <div className=\"text-align-center fst-italic h5\">\n            <p>Page Not Found</p>\n          </div>\n          <Link to={`/`}><button className='btn btn-light mt-3' type=\"button\">GET ME HOME</button></Link>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'; // Import Link from react-router-dom\r\nimport { db } from '../firebase-config';\r\nimport { collection, addDoc, getDocs } from 'firebase/firestore';\r\n\r\nconst CreateLocationForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    type: '',\r\n    dimension: '',\r\n    residents: []\r\n  });\r\n  const [locations, setLocations] = useState([]);\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.name === \"residents\") {\r\n      setFormData({ ...formData, [e.target.name]: e.target.value.split(',') });\r\n    } else {\r\n      setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const docRef = await addDoc(collection(db, 'locations'), {\r\n        ...formData,\r\n        created: new Date()\r\n      });\r\n      console.log('Document written with ID: ', docRef.id);\r\n      alert('Location added successfully!');\r\n      setFormData({\r\n        name: '',\r\n        type: '',\r\n        dimension: '',\r\n        residents: []\r\n      });\r\n      fetchLocations(); \r\n    } catch (error) {\r\n      console.error('Error adding document: ', error);\r\n      alert('Failed to add location');\r\n    }\r\n  };\r\n\r\n  const fetchLocations = async () => {\r\n    try {\r\n      const querySnapshot = await getDocs(collection(db, 'locations'));\r\n      const fetchedLocations = [];\r\n      querySnapshot.forEach((doc) => {\r\n        fetchedLocations.push({ id: doc.id, ...doc.data() });\r\n      });\r\n      setLocations(fetchedLocations);\r\n    } catch (error) {\r\n      console.error('Error fetching locations: ', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchLocations(); \r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container mt-5 col-6\">\r\n      <h1>Create New Location</h1>\r\n      <form onSubmit={handleSubmit} className=\"mt-4\">\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            value={formData.name}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"type\">Type:</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"type\"\r\n            name=\"type\"\r\n            value={formData.type}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"dimension\">Dimension:</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"dimension\"\r\n            name=\"dimension\"\r\n            value={formData.dimension}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary mt-4\">Add Location</button>\r\n      </form>\r\n      <div className=\"mt-4\">\r\n        <h2>Locations</h2>\r\n        <ul>\r\n          {locations.map(location => (\r\n            <li key={location.id}>\r\n              <Link to={`/location-custom/${location.id}`}>{location.name}</Link> {/* Ubah menjadi Link */}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateLocationForm;\r\n","import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport React, { Component } from \"react\";\n\nimport Mainpage from \"./pages/Mainpage\";\nimport Episode from \"./pages/EpisodeListing\";\nimport Location from \"./pages/LocationListing\";\nimport Character from \"./pages/CharacterListing\";\nimport LocationCharacter from \"./pages/LocationCharacter\";\nimport Header from \"./Components/Header\";\nimport DetailCard from \"./Components/DetailCard\";\nimport NotFoundPage from \"./Components/NotFoundPage\";\nimport CreateLocationForm from \"./pages/CreateLocationForm\";\nimport LocationDetail from \"./pages/LocationDetail\";\n// import Footer from \"./Components/Footer\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <div className=\"p-5\">\n            <Header />\n          </div>\n\n          <Routes>\n            <Route path=\"/\" element={<Mainpage />} />\n            <Route path=\"/episode\" element={<Episode />} />\n            <Route path=\"/location\" element={<Location />} />\n            <Route path=\"/character\" element={<Character />} />\n            <Route path=\"/episode/:Id\" element={<DetailCard />} />\n            <Route path=\"/character/:Id\" element={<DetailCard />} />\n            <Route path=\"/add-location\" element={<CreateLocationForm />} />\n            <Route path=\"/location/:Id\" element={\n              <>\n                <DetailCard />\n                <LocationCharacter />\n              </>\n            } />\n           \n            <Route path='*' exact={true} element={<NotFoundPage />} />\n          </Routes>\n          {/* <Footer /> */}\n        </Router>\n      </div>\n    );\n  }\n}\n\n","import React, { Component } from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup, Label, Input } from \"reactstrap\";\r\nimport { db } from '../firebase-config';\r\nimport { collection, getDoc,getDocs, doc, updateDoc } from 'firebase/firestore';\r\n\r\nexport default class LocationDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null, \r\n      modalOpen: false,\r\n      locations: [],\r\n      selectedLocationId: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props; \r\n    this.fetchData(id); \r\n    this.fetchLocations(); \r\n  }\r\n\r\n  async fetchData(id) {\r\n    try {\r\n      const locationRef = doc(db, 'locations', id); \r\n      const locationDoc = await getDoc(locationRef);\r\n      if (locationDoc.exists()) {\r\n        this.setState({ data: locationDoc.data() }); \r\n      } else {\r\n        console.error('Location not found.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching location:', error);\r\n    }\r\n  }\r\n  \r\n\r\n  toggleModal = () => {\r\n    this.setState(prevState => ({\r\n      modalOpen: !prevState.modalOpen\r\n    }));\r\n  }\r\n\r\n  fetchLocations = async () => {\r\n    try {\r\n      const querySnapshot = await getDocs(collection(db, 'locations'));\r\n      const locations = querySnapshot.docs.map(doc => ({ id: doc.id, name: doc.data().name }));\r\n      this.setState({ locations });\r\n    } catch (error) {\r\n      console.error('Error fetching locations: ', error);\r\n    }\r\n  };\r\n\r\n  assignCharacter = async () => {\r\n    const { data, selectedLocationId } = this.state;\r\n    if (!selectedLocationId) {\r\n      alert('Please select a location.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const locationRef = doc(db, 'locations', selectedLocationId);\r\n\r\n      const locationDoc = await getDoc(locationRef);\r\n      const locationData = locationDoc.data();\r\n\r\n      if (!locationData.residents) {\r\n        locationData.residents = [];\r\n      }\r\n\r\n  \r\n      locationData.residents.push({ id: data.id, name: data.name });\r\n\r\n      await updateDoc(locationRef, { residents: locationData.residents });\r\n\r\n      alert(\r\n        `Character ${data.name} has been assigned to location ${locationData.name}.`\r\n      )\r\n\r\n      this.toggleModal();\r\n    } catch (error) {\r\n      console.error('Error assigning character:', error);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { data, modalOpen, locations, selectedLocationId } = this.state; \r\n    if (!data) {\r\n      return <div>Loading...</div>; \r\n    }\r\n    return (\r\n      <div className=\"container text-dark bg-light p-5\">\r\n        <div className=\"row d-flex justify-content-between\">\r\n          <div className=\"col-md-6\">\r\n            {data.image && (<div className=\"mb-4\"><img src={data.image} alt={`${data.name}-img`} style={{ maxWidth: '100%' }} /></div>)}\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <div className=\"h3\">{data.name}</div>\r\n            {data.status && (<div className=\"badge bg-success\">{data.status}</div>)}\r\n            <hr />\r\n            {data.id && (<div><span className=\"h6\">ID</span>: {data.id}</div>)}\r\n            {data.dimension && (<div><span className=\"h6\">Dimension</span>: {data.dimension}</div>)}\r\n            {data.residents && (<div><span className=\"h6\">Number of Residents</span>: {data.residents.length}</div>)}\r\n       \r\n            {data.status && data.species && (\r\n              <Button className=\"mt-3\" onClick={this.toggleModal} color=\"primary\">\r\n                Tambahkan ke Custom Lokasi\r\n              </Button>\r\n            )}\r\n          </div>\r\n          <hr className=\"mt-5\" />\r\n        </div>\r\n\r\n        {/* Modal for selecting a location */}\r\n        <Modal isOpen={modalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Select Location</ModalHeader>\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <Label for=\"locationSelect\">Location:</Label>\r\n              <Input type=\"select\" name=\"select\" id=\"locationSelect\" value={selectedLocationId} onChange={(e) => this.setState({ selectedLocationId: e.target.value })}>\r\n                <option value=\"\">Select a location...</option>\r\n                {locations.map(location => (\r\n                  <option key={location.id} value={location.id}>{location.name}</option>\r\n                ))}\r\n              </Input>\r\n            </FormGroup>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={this.assignCharacter}>Assign</Button>\r\n            <Button color=\"secondary\" onClick={this.toggleModal}>Cancel</Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","const genericMessage = \"Invariant Violation\";\nconst {\n  setPrototypeOf = function (obj: any, proto: any) {\n    obj.__proto__ = proto;\n    return obj;\n  },\n} = Object as any;\n\nexport class InvariantError extends Error {\n  framesToPop = 1;\n  name = genericMessage;\n  constructor(message: string | number = genericMessage) {\n    super(\n      typeof message === \"number\"\n        ? `${genericMessage}: ${message} (see https://github.com/apollographql/invariant-packages)`\n        : message\n    );\n    setPrototypeOf(this, InvariantError.prototype);\n  }\n}\n\nexport function invariant(\n  condition: any,\n  message?: string | number,\n): asserts condition {\n  if (!condition) {\n    throw new InvariantError(message);\n  }\n}\n\nconst verbosityLevels = [\"debug\", \"log\", \"warn\", \"error\", \"silent\"] as const;\nexport type VerbosityLevel = (typeof verbosityLevels)[number];\nexport type ConsoleMethodName = Exclude<VerbosityLevel, \"silent\">;\nlet verbosityLevel = verbosityLevels.indexOf(\"log\");\n\nfunction wrapConsoleMethod<M extends ConsoleMethodName>(name: M) {\n  return function () {\n    if (verbosityLevels.indexOf(name) >= verbosityLevel) {\n      // Default to console.log if this host environment happens not to provide\n      // all the console.* methods we need.\n      const method = console[name] || console.log;\n      return method.apply(console, arguments as any);\n    }\n  } as (typeof console)[M];\n}\n\nexport namespace invariant {\n  export const debug = wrapConsoleMethod(\"debug\");\n  export const log = wrapConsoleMethod(\"log\");\n  export const warn = wrapConsoleMethod(\"warn\");\n  export const error = wrapConsoleMethod(\"error\");\n}\n\nexport function setVerbosity(level: VerbosityLevel): VerbosityLevel {\n  const old = verbosityLevels[verbosityLevel];\n  verbosityLevel = Math.max(0, verbosityLevels.indexOf(level));\n  return old;\n}\n\nexport default invariant;\n","export const version = \"local\";\n","export function maybe<T>(thunk: () => T): T | undefined {\n  try {\n    return thunk();\n  } catch {}\n}\n","import { maybe } from \"./maybe.js\";\n\ndeclare global {\n  const __DEV__: boolean; // will be removed in `dist` by the `postprocessDist` script\n  interface Window {\n    __DEV__?: boolean;\n  }\n}\n\nexport default (maybe(() => globalThis) ||\n  maybe(() => window) ||\n  maybe(() => self) ||\n  maybe(() => global) ||\n  // We don't expect the Function constructor ever to be invoked at runtime, as\n  // long as at least one of globalThis, window, self, or global is defined, so\n  // we are under no obligation to make it easy for static analysis tools to\n  // detect syntactic usage of the Function constructor. If you think you can\n  // improve your static analysis to detect this obfuscation, think again. This\n  // is an arms race you cannot win, at least not in JavaScript.\n  maybe(function () {\n    return maybe.constructor(\"return this\")();\n  })) as typeof globalThis & Window;\n","const prefixCounts = new Map<string, number>();\n\n// These IDs won't be globally unique, but they will be unique within this\n// process, thanks to the counter, and unguessable thanks to the random suffix.\nexport function makeUniqueId(prefix: string) {\n  const count = prefixCounts.get(prefix) || 1;\n  prefixCounts.set(prefix, count + 1);\n  return `${prefix}:${count}:${Math.random().toString(36).slice(2)}`;\n}\n","import { makeUniqueId } from \"./makeUniqueId.js\";\n\nexport function stringifyForDisplay(value: any, space = 0): string {\n  const undefId = makeUniqueId(\"stringifyForDisplay\");\n  return JSON.stringify(\n    value,\n    (key, value) => {\n      return value === void 0 ? undefId : value;\n    },\n    space\n  )\n    .split(JSON.stringify(undefId))\n    .join(\"<undefined>\");\n}\n","import { invariant as originalInvariant, InvariantError } from \"ts-invariant\";\nimport { version } from \"../../version.js\";\nimport global from \"./global.js\";\nimport type { ErrorCodes } from \"../../invariantErrorCodes.js\";\nimport { stringifyForDisplay } from \"../common/stringifyForDisplay.js\";\n\nfunction wrap(fn: (msg?: string, ...args: any[]) => void) {\n  return function (message?: string | number, ...args: any[]) {\n    if (typeof message === \"number\") {\n      const arg0 = message;\n      message = getHandledErrorMsg(arg0);\n      if (!message) {\n        message = getFallbackErrorMsg(arg0, args);\n        args = [];\n      }\n    }\n    fn(...[message].concat(args));\n  };\n}\n\ntype LogFunction = {\n  /**\n   * Logs a `$level` message if the user used `ts-invariant`'s `setVerbosity` to set\n   * a verbosity level of `$level` or lower. (defaults to `\"log\"`).\n   *\n   * The user will either be presented with a link to the documentation for the message,\n   * or they can use the `loadDevMessages` to add the message strings to the bundle.\n   * The documentation will display the message without argument substitution.\n   * Instead, the arguments will be printed on the console after the link.\n   *\n   * `message` can only be a string, a concatenation of strings, or a ternary statement\n   * that results in a string. This will be enforced on build, where the message will\n   * be replaced with a message number.\n   *\n   * String substitutions like %s, %o, %d or %f are supported.\n   */\n  (message?: any, ...optionalParams: unknown[]): void;\n};\n\ntype WrappedInvariant = {\n  /**\n   * Throws and InvariantError with the given message if the condition is false.\n   *\n   * `message` can only be a string, a concatenation of strings, or a ternary statement\n   * that results in a string. This will be enforced on build, where the message will\n   * be replaced with a message number.\n   *\n   * The user will either be presented with a link to the documentation for the message,\n   * or they can use the `loadErrorMessages` to add the message strings to the bundle.\n   * The documentation will display the message with the arguments substituted.\n   *\n   * String substitutions with %s are supported and will also return\n   * pretty-stringified objects.\n   * Excess `optionalParams` will be swallowed.\n   */\n  (\n    condition: any,\n    message?: string | number,\n    ...optionalParams: unknown[]\n  ): asserts condition;\n\n  debug: LogFunction;\n  log: LogFunction;\n  warn: LogFunction;\n  error: LogFunction;\n};\nconst invariant: WrappedInvariant = Object.assign(\n  function invariant(\n    condition: any,\n    message?: string | number,\n    ...args: unknown[]\n  ): asserts condition {\n    if (!condition) {\n      originalInvariant(\n        condition,\n        getHandledErrorMsg(message, args) || getFallbackErrorMsg(message, args)\n      );\n    }\n  },\n  {\n    debug: wrap(originalInvariant.debug),\n    log: wrap(originalInvariant.log),\n    warn: wrap(originalInvariant.warn),\n    error: wrap(originalInvariant.error),\n  }\n);\n\n/**\n * Returns an InvariantError.\n *\n * `message` can only be a string, a concatenation of strings, or a ternary statement\n * that results in a string. This will be enforced on build, where the message will\n * be replaced with a message number.\n * String substitutions with %s are supported and will also return\n * pretty-stringified objects.\n * Excess `optionalParams` will be swallowed.\n */\nfunction newInvariantError(\n  message?: string | number,\n  ...optionalParams: unknown[]\n) {\n  return new InvariantError(\n    getHandledErrorMsg(message, optionalParams) ||\n      getFallbackErrorMsg(message, optionalParams)\n  );\n}\n\nconst ApolloErrorMessageHandler = Symbol.for(\n  \"ApolloErrorMessageHandler_\" + version\n);\ndeclare global {\n  interface Window {\n    [ApolloErrorMessageHandler]?: {\n      (message: string | number, args: string[]): string | undefined;\n    } & ErrorCodes;\n  }\n}\n\nfunction stringify(arg: any) {\n  return typeof arg == \"string\" ? arg : (\n      stringifyForDisplay(arg, 2).slice(0, 1000)\n    );\n}\n\nfunction getHandledErrorMsg(\n  message?: string | number,\n  messageArgs: unknown[] = []\n) {\n  if (!message) return;\n  return (\n    global[ApolloErrorMessageHandler] &&\n    global[ApolloErrorMessageHandler](message, messageArgs.map(stringify))\n  );\n}\n\nfunction getFallbackErrorMsg(\n  message?: string | number,\n  messageArgs: unknown[] = []\n) {\n  if (!message) return;\n  return `An error occurred! For more details, see the full error text at https://go.apollo.dev/c/err#${encodeURIComponent(\n    JSON.stringify({\n      version,\n      message,\n      args: messageArgs.map(stringify),\n    })\n  )}`;\n}\n\nexport {\n  invariant,\n  InvariantError,\n  newInvariantError,\n  ApolloErrorMessageHandler,\n};\n","import {\n  invariant,\n  newInvariantError,\n  InvariantError,\n} from \"./invariantWrappers.js\";\n\nexport { maybe } from \"./maybe.js\";\nexport { default as global } from \"./global.js\";\nexport { invariant, newInvariantError, InvariantError };\n\n/**\n * @deprecated we do not use this internally anymore,\n * it is just exported for backwards compatibility\n */\n// this file is extempt from automatic `__DEV__` replacement\n// so we have to write it out here\n// @ts-ignore\nexport const DEV = globalThis.__DEV__ !== false;\nexport { DEV as __DEV__ };\n","import { maybe } from \"../globals/index.js\";\n\nexport const canUseWeakMap =\n  typeof WeakMap === \"function\" &&\n  !maybe(\n    () => navigator.product == \"ReactNative\" && !(global as any).HermesInternal\n  );\n\nexport const canUseWeakSet = typeof WeakSet === \"function\";\n\nexport const canUseSymbol =\n  typeof Symbol === \"function\" && typeof Symbol.for === \"function\";\n\nexport const canUseAsyncIteratorSymbol = canUseSymbol && Symbol.asyncIterator;\n\nexport const canUseDOM =\n  typeof maybe(() => window.document.createElement) === \"function\";\n\nconst usingJSDOM: boolean =\n  // Following advice found in this comment from @domenic (maintainer of jsdom):\n  // https://github.com/jsdom/jsdom/issues/1537#issuecomment-229405327\n  //\n  // Since we control the version of Jest and jsdom used when running Apollo\n  // Client tests, and that version is recent enought to include \" jsdom/x.y.z\"\n  // at the end of the user agent string, I believe this case is all we need to\n  // check. Testing for \"Node.js\" was recommended for backwards compatibility\n  // with older version of jsdom, but we don't have that problem.\n  maybe(() => navigator.userAgent.indexOf(\"jsdom\") >= 0) || false;\n\n// Our tests should all continue to pass if we remove this !usingJSDOM\n// condition, thereby allowing useLayoutEffect when using jsdom. Unfortunately,\n// if we allow useLayoutEffect, then useSyncExternalStore generates many\n// warnings about useLayoutEffect doing nothing on the server. While these\n// warnings are harmless, this !usingJSDOM condition seems to be the best way to\n// prevent them (i.e. skipping useLayoutEffect when using jsdom).\nexport const canUseLayoutEffect = canUseDOM && !usingJSDOM;\n","import * as React from \"rehackt\";\nimport type * as ReactTypes from \"react\";\nimport type { ApolloClient } from \"../../core/index.js\";\nimport { canUseSymbol } from \"../../utilities/index.js\";\nimport type { RenderPromises } from \"../ssr/index.js\";\nimport { invariant } from \"../../utilities/globals/index.js\";\n\nexport interface ApolloContextValue {\n  client?: ApolloClient<object>;\n  renderPromises?: RenderPromises;\n}\n\n// To make sure Apollo Client doesn't create more than one React context\n// (which can lead to problems like having an Apollo Client instance added\n// in one context, then attempting to retrieve it from another different\n// context), a single Apollo context is created and tracked in global state.\nconst contextKey =\n  canUseSymbol ? Symbol.for(\"__APOLLO_CONTEXT__\") : \"__APOLLO_CONTEXT__\";\n\nexport function getApolloContext(): ReactTypes.Context<ApolloContextValue> {\n  invariant(\n    \"createContext\" in React,\n    \"Invoking `getApolloContext` in an environment where `React.createContext` is not available.\\n\" +\n      \"The Apollo Client functionality you are trying to use is only available in React Client Components.\\n\" +\n      'Please make sure to add \"use client\" at the top of your file.\\n' +\n      // TODO: change to React documentation once React documentation contains information about Client Components\n      \"For more information, see https://nextjs.org/docs/getting-started/react-essentials#client-components\"\n  );\n\n  let context = (React.createContext as any)[\n    contextKey\n  ] as React.Context<ApolloContextValue>;\n  if (!context) {\n    Object.defineProperty(React.createContext, contextKey, {\n      value: (context = React.createContext<ApolloContextValue>({})),\n      enumerable: false,\n      writable: false,\n      configurable: true,\n    });\n    context.displayName = \"ApolloContext\";\n  }\n  return context;\n}\n\n/**\n * @deprecated This function has no \"resetting\" effect since Apollo Client 3.4.12,\n * and will be removed in the next major version of Apollo Client.\n * If you want to get the Apollo Context, use `getApolloContext` instead.\n */\nexport const resetApolloContext = getApolloContext;\n","import { invariant } from \"../../utilities/globals/index.js\";\n\nimport * as React from \"rehackt\";\nimport type * as ReactTypes from \"react\";\n\nimport type { ApolloClient } from \"../../core/index.js\";\nimport { getApolloContext } from \"./ApolloContext.js\";\n\nexport interface ApolloProviderProps<TCache> {\n  client: ApolloClient<TCache>;\n  children: ReactTypes.ReactNode | ReactTypes.ReactNode[] | null;\n}\n\nexport const ApolloProvider: ReactTypes.FC<ApolloProviderProps<any>> = ({\n  client,\n  children,\n}) => {\n  const ApolloContext = getApolloContext();\n  const parentContext = React.useContext(ApolloContext);\n\n  const context = React.useMemo(() => {\n    return {\n      ...parentContext,\n      client: client || parentContext.client,\n    };\n  }, [parentContext, client]);\n\n  invariant(\n    context.client,\n    \"ApolloProvider was not passed a client instance. Make \" +\n      'sure you pass in your client via the \"client\" prop.'\n  );\n\n  return (\n    <ApolloContext.Provider value={context}>{children}</ApolloContext.Provider>\n  );\n};\n","function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\n// === Symbol Support ===\nvar hasSymbols = function () {\n  return typeof Symbol === 'function';\n};\n\nvar hasSymbol = function (name) {\n  return hasSymbols() && Boolean(Symbol[name]);\n};\n\nvar getSymbol = function (name) {\n  return hasSymbol(name) ? Symbol[name] : '@@' + name;\n};\n\nif (hasSymbols() && !hasSymbol('observable')) {\n  Symbol.observable = Symbol('observable');\n}\n\nvar SymbolIterator = getSymbol('iterator');\nvar SymbolObservable = getSymbol('observable');\nvar SymbolSpecies = getSymbol('species'); // === Abstract Operations ===\n\nfunction getMethod(obj, key) {\n  var value = obj[key];\n  if (value == null) return undefined;\n  if (typeof value !== 'function') throw new TypeError(value + ' is not a function');\n  return value;\n}\n\nfunction getSpecies(obj) {\n  var ctor = obj.constructor;\n\n  if (ctor !== undefined) {\n    ctor = ctor[SymbolSpecies];\n\n    if (ctor === null) {\n      ctor = undefined;\n    }\n  }\n\n  return ctor !== undefined ? ctor : Observable;\n}\n\nfunction isObservable(x) {\n  return x instanceof Observable; // SPEC: Brand check\n}\n\nfunction hostReportError(e) {\n  if (hostReportError.log) {\n    hostReportError.log(e);\n  } else {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction enqueue(fn) {\n  Promise.resolve().then(function () {\n    try {\n      fn();\n    } catch (e) {\n      hostReportError(e);\n    }\n  });\n}\n\nfunction cleanupSubscription(subscription) {\n  var cleanup = subscription._cleanup;\n  if (cleanup === undefined) return;\n  subscription._cleanup = undefined;\n\n  if (!cleanup) {\n    return;\n  }\n\n  try {\n    if (typeof cleanup === 'function') {\n      cleanup();\n    } else {\n      var unsubscribe = getMethod(cleanup, 'unsubscribe');\n\n      if (unsubscribe) {\n        unsubscribe.call(cleanup);\n      }\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n}\n\nfunction closeSubscription(subscription) {\n  subscription._observer = undefined;\n  subscription._queue = undefined;\n  subscription._state = 'closed';\n}\n\nfunction flushSubscription(subscription) {\n  var queue = subscription._queue;\n\n  if (!queue) {\n    return;\n  }\n\n  subscription._queue = undefined;\n  subscription._state = 'ready';\n\n  for (var i = 0; i < queue.length; ++i) {\n    notifySubscription(subscription, queue[i].type, queue[i].value);\n    if (subscription._state === 'closed') break;\n  }\n}\n\nfunction notifySubscription(subscription, type, value) {\n  subscription._state = 'running';\n  var observer = subscription._observer;\n\n  try {\n    var m = getMethod(observer, type);\n\n    switch (type) {\n      case 'next':\n        if (m) m.call(observer, value);\n        break;\n\n      case 'error':\n        closeSubscription(subscription);\n        if (m) m.call(observer, value);else throw value;\n        break;\n\n      case 'complete':\n        closeSubscription(subscription);\n        if (m) m.call(observer);\n        break;\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n\n  if (subscription._state === 'closed') cleanupSubscription(subscription);else if (subscription._state === 'running') subscription._state = 'ready';\n}\n\nfunction onNotify(subscription, type, value) {\n  if (subscription._state === 'closed') return;\n\n  if (subscription._state === 'buffering') {\n    subscription._queue.push({\n      type: type,\n      value: value\n    });\n\n    return;\n  }\n\n  if (subscription._state !== 'ready') {\n    subscription._state = 'buffering';\n    subscription._queue = [{\n      type: type,\n      value: value\n    }];\n    enqueue(function () {\n      return flushSubscription(subscription);\n    });\n    return;\n  }\n\n  notifySubscription(subscription, type, value);\n}\n\nvar Subscription = /*#__PURE__*/function () {\n  function Subscription(observer, subscriber) {\n    // ASSERT: observer is an object\n    // ASSERT: subscriber is callable\n    this._cleanup = undefined;\n    this._observer = observer;\n    this._queue = undefined;\n    this._state = 'initializing';\n    var subscriptionObserver = new SubscriptionObserver(this);\n\n    try {\n      this._cleanup = subscriber.call(undefined, subscriptionObserver);\n    } catch (e) {\n      subscriptionObserver.error(e);\n    }\n\n    if (this._state === 'initializing') this._state = 'ready';\n  }\n\n  var _proto = Subscription.prototype;\n\n  _proto.unsubscribe = function unsubscribe() {\n    if (this._state !== 'closed') {\n      closeSubscription(this);\n      cleanupSubscription(this);\n    }\n  };\n\n  _createClass(Subscription, [{\n    key: \"closed\",\n    get: function () {\n      return this._state === 'closed';\n    }\n  }]);\n\n  return Subscription;\n}();\n\nvar SubscriptionObserver = /*#__PURE__*/function () {\n  function SubscriptionObserver(subscription) {\n    this._subscription = subscription;\n  }\n\n  var _proto2 = SubscriptionObserver.prototype;\n\n  _proto2.next = function next(value) {\n    onNotify(this._subscription, 'next', value);\n  };\n\n  _proto2.error = function error(value) {\n    onNotify(this._subscription, 'error', value);\n  };\n\n  _proto2.complete = function complete() {\n    onNotify(this._subscription, 'complete');\n  };\n\n  _createClass(SubscriptionObserver, [{\n    key: \"closed\",\n    get: function () {\n      return this._subscription._state === 'closed';\n    }\n  }]);\n\n  return SubscriptionObserver;\n}();\n\nvar Observable = /*#__PURE__*/function () {\n  function Observable(subscriber) {\n    if (!(this instanceof Observable)) throw new TypeError('Observable cannot be called as a function');\n    if (typeof subscriber !== 'function') throw new TypeError('Observable initializer must be a function');\n    this._subscriber = subscriber;\n  }\n\n  var _proto3 = Observable.prototype;\n\n  _proto3.subscribe = function subscribe(observer) {\n    if (typeof observer !== 'object' || observer === null) {\n      observer = {\n        next: observer,\n        error: arguments[1],\n        complete: arguments[2]\n      };\n    }\n\n    return new Subscription(observer, this._subscriber);\n  };\n\n  _proto3.forEach = function forEach(fn) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      if (typeof fn !== 'function') {\n        reject(new TypeError(fn + ' is not a function'));\n        return;\n      }\n\n      function done() {\n        subscription.unsubscribe();\n        resolve();\n      }\n\n      var subscription = _this.subscribe({\n        next: function (value) {\n          try {\n            fn(value, done);\n          } catch (e) {\n            reject(e);\n            subscription.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve\n      });\n    });\n  };\n\n  _proto3.map = function map(fn) {\n    var _this2 = this;\n\n    if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n    var C = getSpecies(this);\n    return new C(function (observer) {\n      return _this2.subscribe({\n        next: function (value) {\n          try {\n            value = fn(value);\n          } catch (e) {\n            return observer.error(e);\n          }\n\n          observer.next(value);\n        },\n        error: function (e) {\n          observer.error(e);\n        },\n        complete: function () {\n          observer.complete();\n        }\n      });\n    });\n  };\n\n  _proto3.filter = function filter(fn) {\n    var _this3 = this;\n\n    if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n    var C = getSpecies(this);\n    return new C(function (observer) {\n      return _this3.subscribe({\n        next: function (value) {\n          try {\n            if (!fn(value)) return;\n          } catch (e) {\n            return observer.error(e);\n          }\n\n          observer.next(value);\n        },\n        error: function (e) {\n          observer.error(e);\n        },\n        complete: function () {\n          observer.complete();\n        }\n      });\n    });\n  };\n\n  _proto3.reduce = function reduce(fn) {\n    var _this4 = this;\n\n    if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n    var C = getSpecies(this);\n    var hasSeed = arguments.length > 1;\n    var hasValue = false;\n    var seed = arguments[1];\n    var acc = seed;\n    return new C(function (observer) {\n      return _this4.subscribe({\n        next: function (value) {\n          var first = !hasValue;\n          hasValue = true;\n\n          if (!first || hasSeed) {\n            try {\n              acc = fn(acc, value);\n            } catch (e) {\n              return observer.error(e);\n            }\n          } else {\n            acc = value;\n          }\n        },\n        error: function (e) {\n          observer.error(e);\n        },\n        complete: function () {\n          if (!hasValue && !hasSeed) return observer.error(new TypeError('Cannot reduce an empty sequence'));\n          observer.next(acc);\n          observer.complete();\n        }\n      });\n    });\n  };\n\n  _proto3.concat = function concat() {\n    var _this5 = this;\n\n    for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n      sources[_key] = arguments[_key];\n    }\n\n    var C = getSpecies(this);\n    return new C(function (observer) {\n      var subscription;\n      var index = 0;\n\n      function startNext(next) {\n        subscription = next.subscribe({\n          next: function (v) {\n            observer.next(v);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            if (index === sources.length) {\n              subscription = undefined;\n              observer.complete();\n            } else {\n              startNext(C.from(sources[index++]));\n            }\n          }\n        });\n      }\n\n      startNext(_this5);\n      return function () {\n        if (subscription) {\n          subscription.unsubscribe();\n          subscription = undefined;\n        }\n      };\n    });\n  };\n\n  _proto3.flatMap = function flatMap(fn) {\n    var _this6 = this;\n\n    if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n    var C = getSpecies(this);\n    return new C(function (observer) {\n      var subscriptions = [];\n\n      var outer = _this6.subscribe({\n        next: function (value) {\n          if (fn) {\n            try {\n              value = fn(value);\n            } catch (e) {\n              return observer.error(e);\n            }\n          }\n\n          var inner = C.from(value).subscribe({\n            next: function (value) {\n              observer.next(value);\n            },\n            error: function (e) {\n              observer.error(e);\n            },\n            complete: function () {\n              var i = subscriptions.indexOf(inner);\n              if (i >= 0) subscriptions.splice(i, 1);\n              completeIfDone();\n            }\n          });\n          subscriptions.push(inner);\n        },\n        error: function (e) {\n          observer.error(e);\n        },\n        complete: function () {\n          completeIfDone();\n        }\n      });\n\n      function completeIfDone() {\n        if (outer.closed && subscriptions.length === 0) observer.complete();\n      }\n\n      return function () {\n        subscriptions.forEach(function (s) {\n          return s.unsubscribe();\n        });\n        outer.unsubscribe();\n      };\n    });\n  };\n\n  _proto3[SymbolObservable] = function () {\n    return this;\n  };\n\n  Observable.from = function from(x) {\n    var C = typeof this === 'function' ? this : Observable;\n    if (x == null) throw new TypeError(x + ' is not an object');\n    var method = getMethod(x, SymbolObservable);\n\n    if (method) {\n      var observable = method.call(x);\n      if (Object(observable) !== observable) throw new TypeError(observable + ' is not an object');\n      if (isObservable(observable) && observable.constructor === C) return observable;\n      return new C(function (observer) {\n        return observable.subscribe(observer);\n      });\n    }\n\n    if (hasSymbol('iterator')) {\n      method = getMethod(x, SymbolIterator);\n\n      if (method) {\n        return new C(function (observer) {\n          enqueue(function () {\n            if (observer.closed) return;\n\n            for (var _iterator = _createForOfIteratorHelperLoose(method.call(x)), _step; !(_step = _iterator()).done;) {\n              var item = _step.value;\n              observer.next(item);\n              if (observer.closed) return;\n            }\n\n            observer.complete();\n          });\n        });\n      }\n    }\n\n    if (Array.isArray(x)) {\n      return new C(function (observer) {\n        enqueue(function () {\n          if (observer.closed) return;\n\n          for (var i = 0; i < x.length; ++i) {\n            observer.next(x[i]);\n            if (observer.closed) return;\n          }\n\n          observer.complete();\n        });\n      });\n    }\n\n    throw new TypeError(x + ' is not observable');\n  };\n\n  Observable.of = function of() {\n    for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      items[_key2] = arguments[_key2];\n    }\n\n    var C = typeof this === 'function' ? this : Observable;\n    return new C(function (observer) {\n      enqueue(function () {\n        if (observer.closed) return;\n\n        for (var i = 0; i < items.length; ++i) {\n          observer.next(items[i]);\n          if (observer.closed) return;\n        }\n\n        observer.complete();\n      });\n    });\n  };\n\n  _createClass(Observable, null, [{\n    key: SymbolSpecies,\n    get: function () {\n      return this;\n    }\n  }]);\n\n  return Observable;\n}();\n\nif (hasSymbols()) {\n  Object.defineProperty(Observable, Symbol('extensions'), {\n    value: {\n      symbol: SymbolObservable,\n      hostReportError: hostReportError\n    },\n    configurable: true\n  });\n}\n\nexport { Observable };\n","export function isNonNullObject(obj: any): obj is Record<string | number, any> {\n  return obj !== null && typeof obj === \"object\";\n}\n\nexport function isPlainObject(obj: any): obj is Record<string | number, any> {\n  return (\n    obj !== null &&\n    typeof obj === \"object\" &&\n    (Object.getPrototypeOf(obj) === Object.prototype ||\n      Object.getPrototypeOf(obj) === null)\n  );\n}\n","import { invariant, newInvariantError } from \"../globals/index.js\";\n\nimport type {\n  DocumentNode,\n  FragmentDefinitionNode,\n  InlineFragmentNode,\n  SelectionNode,\n} from \"graphql\";\n\n// TODO(brian): A hack until this issue is resolved (https://github.com/graphql/graphql-js/issues/3356)\ntype Kind = any;\ntype OperationTypeNode = any;\n/**\n * Returns a query document which adds a single query operation that only\n * spreads the target fragment inside of it.\n *\n * So for example a document of:\n *\n * ```graphql\n * fragment foo on Foo { a b c }\n * ```\n *\n * Turns into:\n *\n * ```graphql\n * { ...foo }\n *\n * fragment foo on Foo { a b c }\n * ```\n *\n * The target fragment will either be the only fragment in the document, or a\n * fragment specified by the provided `fragmentName`. If there is more than one\n * fragment, but a `fragmentName` was not defined then an error will be thrown.\n */\nexport function getFragmentQueryDocument(\n  document: DocumentNode,\n  fragmentName?: string\n): DocumentNode {\n  let actualFragmentName = fragmentName;\n\n  // Build an array of all our fragment definitions that will be used for\n  // validations. We also do some validations on the other definitions in the\n  // document while building this list.\n  const fragments: Array<FragmentDefinitionNode> = [];\n  document.definitions.forEach((definition) => {\n    // Throw an error if we encounter an operation definition because we will\n    // define our own operation definition later on.\n    if (definition.kind === \"OperationDefinition\") {\n      throw newInvariantError(\n        `Found a %s operation%s. ` +\n          \"No operations are allowed when using a fragment as a query. Only fragments are allowed.\",\n        definition.operation,\n        definition.name ? ` named '${definition.name.value}'` : \"\"\n      );\n    }\n    // Add our definition to the fragments array if it is a fragment\n    // definition.\n    if (definition.kind === \"FragmentDefinition\") {\n      fragments.push(definition);\n    }\n  });\n\n  // If the user did not give us a fragment name then let us try to get a\n  // name from a single fragment in the definition.\n  if (typeof actualFragmentName === \"undefined\") {\n    invariant(\n      fragments.length === 1,\n      `Found %s fragments. \\`fragmentName\\` must be provided when there is not exactly 1 fragment.`,\n      fragments.length\n    );\n    actualFragmentName = fragments[0].name.value;\n  }\n\n  // Generate a query document with an operation that simply spreads the\n  // fragment inside of it.\n  const query: DocumentNode = {\n    ...document,\n    definitions: [\n      {\n        kind: \"OperationDefinition\" as Kind,\n        // OperationTypeNode is an enum\n        operation: \"query\" as OperationTypeNode,\n        selectionSet: {\n          kind: \"SelectionSet\" as Kind,\n          selections: [\n            {\n              kind: \"FragmentSpread\" as Kind,\n              name: {\n                kind: \"Name\" as Kind,\n                value: actualFragmentName,\n              },\n            },\n          ],\n        },\n      },\n      ...document.definitions,\n    ],\n  };\n\n  return query;\n}\n\n/**\n * This is an interface that describes a map from fragment names to fragment definitions.\n */\nexport interface FragmentMap {\n  [fragmentName: string]: FragmentDefinitionNode;\n}\n\nexport type FragmentMapFunction = (\n  fragmentName: string\n) => FragmentDefinitionNode | null;\n\n// Utility function that takes a list of fragment definitions and makes a hash out of them\n// that maps the name of the fragment to the fragment definition.\nexport function createFragmentMap(\n  fragments: FragmentDefinitionNode[] = []\n): FragmentMap {\n  const symTable: FragmentMap = {};\n  fragments.forEach((fragment) => {\n    symTable[fragment.name.value] = fragment;\n  });\n  return symTable;\n}\n\nexport function getFragmentFromSelection(\n  selection: SelectionNode,\n  fragmentMap?: FragmentMap | FragmentMapFunction\n): InlineFragmentNode | FragmentDefinitionNode | null {\n  switch (selection.kind) {\n    case \"InlineFragment\":\n      return selection;\n    case \"FragmentSpread\": {\n      const fragmentName = selection.name.value;\n      if (typeof fragmentMap === \"function\") {\n        return fragmentMap(fragmentName);\n      }\n      const fragment = fragmentMap && fragmentMap[fragmentName];\n      invariant(fragment, `No fragment named %s`, fragmentName);\n      return fragment || null;\n    }\n    default:\n      return null;\n  }\n}\n","import type { CommonCache } from \"./common\";\n\ninterface PartialNode<K extends object, V> {\n  value: V;\n  newer: Node<K, V> | null;\n  older: Node<K, V> | null;\n}\n\ninterface UnfinalizedNode<K extends object, V> extends PartialNode<K, V> {\n  keyRef?: undefined;\n  key: K;\n}\n\ninterface FullNode<K extends object, V> extends PartialNode<K, V> {\n  keyRef: WeakRef<K>;\n  key?: undefined;\n}\n\ntype Node<K extends object, V> = FullNode<K, V> | UnfinalizedNode<K, V>;\n\nfunction noop() {}\nconst defaultDispose = noop;\n\nconst _WeakRef =\n  typeof WeakRef !== \"undefined\"\n    ? WeakRef\n    : (function <T>(value: T) {\n        return { deref: () => value } satisfies Omit<\n          WeakRef<any>,\n          typeof Symbol.toStringTag\n        >;\n      } as any as typeof WeakRef);\nconst _WeakMap = typeof WeakMap !== \"undefined\" ? WeakMap : Map;\nconst _FinalizationRegistry =\n  typeof FinalizationRegistry !== \"undefined\"\n    ? FinalizationRegistry\n    : (function <T>() {\n        return {\n          register: noop,\n          unregister: noop,\n        } satisfies Omit<FinalizationRegistry<T>, typeof Symbol.toStringTag>;\n      } as any as typeof FinalizationRegistry);\n\nconst finalizationBatchSize = 10024;\n\nexport class WeakCache<K extends object = any, V = any>\n  implements CommonCache<K, V>\n{\n  private map = new _WeakMap<K, Node<K, V>>();\n  private registry: FinalizationRegistry<Node<K, V>>;\n  private newest: Node<K, V> | null = null;\n  private oldest: Node<K, V> | null = null;\n  private unfinalizedNodes: Set<UnfinalizedNode<K, V>> = new Set();\n  private finalizationScheduled = false;\n  public size = 0;\n\n  constructor(\n    private max = Infinity,\n    public dispose: (value: V, key?: K) => void = defaultDispose\n  ) {\n    this.registry = new _FinalizationRegistry<Node<K, V>>(\n      this.deleteNode.bind(this)\n    );\n  }\n\n  public has(key: K): boolean {\n    return this.map.has(key);\n  }\n\n  public get(key: K): V | undefined {\n    const node = this.getNode(key);\n    return node && node.value;\n  }\n\n  private getNode(key: K): Node<K, V> | undefined {\n    const node = this.map.get(key);\n\n    if (node && node !== this.newest) {\n      const { older, newer } = node;\n\n      if (newer) {\n        newer.older = older;\n      }\n\n      if (older) {\n        older.newer = newer;\n      }\n\n      node.older = this.newest;\n      node.older!.newer = node;\n\n      node.newer = null;\n      this.newest = node;\n\n      if (node === this.oldest) {\n        this.oldest = newer;\n      }\n    }\n\n    return node;\n  }\n\n  public set(key: K, value: V): V {\n    let node = this.getNode(key);\n    if (node) {\n      return (node.value = value);\n    }\n\n    node = {\n      key,\n      value,\n      newer: null,\n      older: this.newest,\n    };\n\n    if (this.newest) {\n      this.newest.newer = node;\n    }\n\n    this.newest = node;\n    this.oldest = this.oldest || node;\n\n    this.scheduleFinalization(node);\n    this.map.set(key, node);\n    this.size++;\n\n    return node.value;\n  }\n\n  public clean() {\n    while (this.oldest && this.size > this.max) {\n      this.deleteNode(this.oldest);\n    }\n  }\n\n  private deleteNode(node: Node<K, V>) {\n    if (node === this.newest) {\n      this.newest = node.older;\n    }\n\n    if (node === this.oldest) {\n      this.oldest = node.newer;\n    }\n\n    if (node.newer) {\n      node.newer.older = node.older;\n    }\n\n    if (node.older) {\n      node.older.newer = node.newer;\n    }\n\n    this.size--;\n    const key = node.key || (node.keyRef && node.keyRef.deref());\n    this.dispose(node.value, key);\n    if (!node.keyRef) {\n      this.unfinalizedNodes.delete(node);\n    } else {\n      this.registry.unregister(node);\n    }\n    if (key) this.map.delete(key);\n  }\n\n  public delete(key: K): boolean {\n    const node = this.map.get(key);\n    if (node) {\n      this.deleteNode(node);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  private scheduleFinalization(node: UnfinalizedNode<K, V>) {\n    this.unfinalizedNodes.add(node);\n    if (!this.finalizationScheduled) {\n      this.finalizationScheduled = true;\n      queueMicrotask(this.finalize);\n    }\n  }\n\n  private finalize = () => {\n    const iterator = this.unfinalizedNodes.values();\n    for (let i = 0; i < finalizationBatchSize; i++) {\n      const node = iterator.next().value;\n      if (!node) break;\n      this.unfinalizedNodes.delete(node);\n      const key = node.key;\n      delete (node as unknown as FullNode<K, V>).key;\n      (node as unknown as FullNode<K, V>).keyRef = new _WeakRef(key);\n      this.registry.register(key, node, node);\n    }\n    if (this.unfinalizedNodes.size > 0) {\n      queueMicrotask(this.finalize);\n    } else {\n      this.finalizationScheduled = false;\n    }\n  };\n}\n","import type { CommonCache } from \"./common\";\n\ninterface Node<K, V> {\n  key: K;\n  value: V;\n  newer: Node<K, V> | null;\n  older: Node<K, V> | null;\n}\n\nfunction defaultDispose() {}\n\nexport class StrongCache<K = any, V = any> implements CommonCache<K, V> {\n  private map = new Map<K, Node<K, V>>();\n  private newest: Node<K, V> | null = null;\n  private oldest: Node<K, V> | null = null;\n\n  constructor(\n    private max = Infinity,\n    public dispose: (value: V, key: K) => void = defaultDispose,\n  ) {}\n\n  public has(key: K): boolean {\n    return this.map.has(key);\n  }\n\n  public get(key: K): V | undefined {\n    const node = this.getNode(key);\n    return node && node.value;\n  }\n\n  public get size() {\n    return this.map.size;\n  }\n\n  private getNode(key: K): Node<K, V> | undefined {\n    const node = this.map.get(key);\n\n    if (node && node !== this.newest) {\n      const { older, newer } = node;\n\n      if (newer) {\n        newer.older = older;\n      }\n\n      if (older) {\n        older.newer = newer;\n      }\n\n      node.older = this.newest;\n      node.older!.newer = node;\n\n      node.newer = null;\n      this.newest = node;\n\n      if (node === this.oldest) {\n        this.oldest = newer;\n      }\n    }\n\n    return node;\n  }\n\n  public set(key: K, value: V): V {\n    let node = this.getNode(key);\n    if (node) {\n      return node.value = value;\n    }\n\n    node = {\n      key,\n      value,\n      newer: null,\n      older: this.newest\n    };\n\n    if (this.newest) {\n      this.newest.newer = node;\n    }\n\n    this.newest = node;\n    this.oldest = this.oldest || node;\n\n    this.map.set(key, node);\n\n    return node.value;\n  }\n\n  public clean() {\n    while (this.oldest && this.map.size > this.max) {\n      this.delete(this.oldest.key);\n    }\n  }\n\n  public delete(key: K): boolean {\n    const node = this.map.get(key);\n    if (node) {\n      if (node === this.newest) {\n        this.newest = node.older;\n      }\n\n      if (node === this.oldest) {\n        this.oldest = node.newer;\n      }\n\n      if (node.newer) {\n        node.newer.older = node.older;\n      }\n\n      if (node.older) {\n        node.older.newer = node.newer;\n      }\n\n      this.map.delete(key);\n      this.dispose(node.value, key);\n\n      return true;\n    }\n\n    return false;\n  }\n}\n","import { WeakCache, StrongCache } from \"@wry/caches\";\n\ninterface CleanableCache {\n  size: number;\n  max?: number;\n  clean: () => void;\n}\nconst scheduledCleanup = new WeakSet<CleanableCache>();\nfunction schedule(cache: CleanableCache) {\n  if (cache.size <= (cache.max || -1)) {\n    return;\n  }\n  if (!scheduledCleanup.has(cache)) {\n    scheduledCleanup.add(cache);\n    setTimeout(() => {\n      cache.clean();\n      scheduledCleanup.delete(cache);\n    }, 100);\n  }\n}\n/**\n * @internal\n * A version of WeakCache that will auto-schedule a cleanup of the cache when\n * a new item is added and the cache reached maximum size.\n * Throttled to once per 100ms.\n *\n * @privateRemarks\n * Should be used throughout the rest of the codebase instead of WeakCache,\n * with the notable exception of usage in `wrap` from `optimism` - that one\n * already handles cleanup and should remain a `WeakCache`.\n */\nexport const AutoCleanedWeakCache = function (\n  max?: number | undefined,\n  dispose?: ((value: any, key: any) => void) | undefined\n) {\n  /*\n  Some builds of `WeakCache` are function prototypes, some are classes.\n  This library still builds with an ES5 target, so we can't extend the\n  real classes.\n  Instead, we have to use this workaround until we switch to a newer build\n  target.\n  */\n  const cache = new WeakCache(max, dispose);\n  cache.set = function (key: any, value: any) {\n    const ret = WeakCache.prototype.set.call(this, key, value);\n    schedule(this as any as CleanableCache);\n    return ret;\n  };\n  return cache;\n} as any as typeof WeakCache;\n/**\n * @internal\n */\nexport type AutoCleanedWeakCache<K extends object, V> = WeakCache<K, V>;\n\n/**\n * @internal\n * A version of StrongCache that will auto-schedule a cleanup of the cache when\n * a new item is added and the cache reached maximum size.\n * Throttled to once per 100ms.\n *\n * @privateRemarks\n * Should be used throughout the rest of the codebase instead of StrongCache,\n * with the notable exception of usage in `wrap` from `optimism` - that one\n * already handles cleanup and should remain a `StrongCache`.\n */\nexport const AutoCleanedStrongCache = function (\n  max?: number | undefined,\n  dispose?: ((value: any, key: any) => void) | undefined\n) {\n  /*\n  Some builds of `StrongCache` are function prototypes, some are classes.\n  This library still builds with an ES5 target, so we can't extend the\n  real classes.\n  Instead, we have to use this workaround until we switch to a newer build\n  target.\n  */\n  const cache = new StrongCache(max, dispose);\n  cache.set = function (key: any, value: any) {\n    const ret = StrongCache.prototype.set.call(this, key, value);\n    schedule(this as any as CleanableCache);\n    return ret;\n  };\n  return cache;\n} as any as typeof StrongCache;\n/**\n * @internal\n */\nexport type AutoCleanedStrongCache<K, V> = StrongCache<K, V>;\n","import { global } from \"../globals/index.js\";\n\ndeclare global {\n  interface Window {\n    [cacheSizeSymbol]?: Partial<CacheSizes>;\n  }\n}\n\n/**\n * The cache sizes used by various Apollo Client caches.\n *\n * @remarks\n * All configurable caches hold memoized values. If an item is\n * cache-collected, it incurs only a small performance impact and\n * doesn't cause data loss. A smaller cache size might save you memory.\n *\n * You should choose cache sizes appropriate for storing a reasonable\n * number of values rather than every value. To prevent too much recalculation,\n * choose cache sizes that are at least large enough to hold memoized values for\n * all hooks/queries on the screen at any given time.\n */\n/*\n * We assume a \"base value\" of 1000 here, which is already very generous.\n * In most applications, it will be very unlikely that 1000 different queries\n * are on screen at the same time.\n */\nexport interface CacheSizes {\n  /**\n   * Cache size for the [`print`](https://github.com/apollographql/apollo-client/blob/main/src/utilities/graphql/print.ts) function.\n   *\n   * It is called with transformed `DocumentNode`s.\n   *\n   * @defaultValue\n   * Defaults to `2000`.\n   *\n   * @remarks\n   * This method is called to transform a GraphQL query AST parsed by `gql`\n   * back into a GraphQL string.\n   *\n   * @privateRemarks\n   * This method is called from the `QueryManager` and various `ApolloLink`s,\n   * always with the \"serverQuery\", so the server-facing part of a transformed\n   * `DocumentNode`.\n   */\n  print: number;\n  /**\n   * Cache size for the [`parser`](https://github.com/apollographql/apollo-client/blob/main/src/react/parser/index.ts) function.\n   *\n   * It is called with user-provided `DocumentNode`s.\n   *\n   * @defaultValue\n   * Defaults to `1000`.\n   *\n   * @remarks\n   * This method is called by HOCs and hooks.\n   *\n   * @privateRemarks\n   * This function is used directly in HOCs, and nowadays mainly accessed by\n   * calling `verifyDocumentType` from various hooks.\n   * It is called with a user-provided DocumentNode.\n   */\n  parser: number;\n  /**\n   * Cache size for the cache of [`DocumentTransform`](https://github.com/apollographql/apollo-client/blob/main/src/utilities/graphql/DocumentTransform.ts)\n   * instances with the `cache` option set to `true`.\n   *\n   * Can be called with user-defined or already-transformed `DocumentNode`s.\n   *\n   * @defaultValue\n   * Defaults to `2000`.\n   *\n   * @remarks\n   * The cache size here should be chosen with other `DocumentTransform`s in mind.\n   * For example, if there was a `DocumentTransform` that would take `x` `DocumentNode`s,\n   * and returned a differently-transformed `DocumentNode` depending if the app is\n   * online or offline, then we assume that the cache returns `2*x` documents.\n   * If that were concatenated with another `DocumentTransform` that would\n   * also duplicate the cache size, you'd need to account for `4*x` documents\n   * returned by the second transform.\n   *\n   * Due to an implementation detail of Apollo Client, if you use custom document\n   * transforms you should always add `n` (the \"base\" number of user-provided\n   * Documents) to the resulting cache size.\n   *\n   * If we assume that the user-provided transforms receive `n` documents and\n   * return `n` documents, the cache size should be `2*n`.\n   *\n   * If we assume that the chain of user-provided transforms receive `n` documents and\n   * return `4*n` documents, the cache size should be `5*n`.\n   *\n   * This size should also then be used in every other cache that mentions that\n   * it operates on a \"transformed\" `DocumentNode`.\n   *\n   * @privateRemarks\n   * Cache size for the `performWork` method of each [`DocumentTransform`](https://github.com/apollographql/apollo-client/blob/main/src/utilities/graphql/DocumentTransform.ts).\n   *\n   * No user-provided DocumentNode will actually be \"the last one\", as we run the\n   * `defaultDocumentTransform` before *and* after the user-provided transforms.\n   * For that reason, we need the extra `n` here - `n` for \"before transformation\"\n   * plus the actual maximum cache size of the user-provided transform chain.\n   *\n   * This method is called from `transformDocument`, which is called from\n   * `QueryManager` with a user-provided DocumentNode.\n   * It is also called with already-transformed DocumentNodes, assuming the\n   * user provided additional transforms.\n   *\n   */\n  \"documentTransform.cache\": number;\n  /**\n   * A cache inside of [`QueryManager`](https://github.com/apollographql/apollo-client/blob/main/src/core/QueryManager.ts).\n   *\n   * It is called with transformed `DocumentNode`s.\n   *\n   * @defaultValue\n   * Defaults to `2000`.\n   *\n   * @privateRemarks\n   * Cache size for the `transformCache` used in the `getDocumentInfo` method of `QueryManager`.\n   * Called throughout the `QueryManager` with transformed DocumentNodes.\n   */\n  \"queryManager.getDocumentInfo\": number;\n  /**\n   * A cache inside of [`PersistedQueryLink`](https://github.com/apollographql/apollo-client/blob/main/src/link/persisted-queries/index.ts).\n   *\n   * It is called with transformed `DocumentNode`s.\n   *\n   * @defaultValue\n   * Defaults to `2000`.\n   *\n   * @remarks\n   * This cache is used to cache the hashes of persisted queries.\n   *\n   * @privateRemarks\n   * Cache size for the `hashesByQuery` cache in the `PersistedQueryLink`.\n   */\n  \"PersistedQueryLink.persistedQueryHashes\": number;\n  /**\n   * Cache used by [`canonicalStringify`](https://github.com/apollographql/apollo-client/blob/main/src/utilities/common/canonicalStringify.ts).\n   *\n   * @defaultValue\n   * Defaults to `1000`.\n   *\n   * @remarks\n   * This cache contains the sorted keys of objects that are stringified by\n   * `canonicalStringify`.\n   * It uses the stringified unsorted keys of objects as keys.\n   * The cache will not grow beyond the size of different object **shapes**\n   * encountered in an application, no matter how much actual data gets stringified.\n   *\n   * @privateRemarks\n   * Cache size for the `sortingMap` in `canonicalStringify`.\n   */\n  canonicalStringify: number;\n  /**\n   * A cache inside of [`FragmentRegistry`](https://github.com/apollographql/apollo-client/blob/main/src/cache/inmemory/fragmentRegistry.ts).\n   *\n   * Can be called with user-defined or already-transformed `DocumentNode`s.\n   *\n   * @defaultValue\n   * Defaults to `2000`.\n   *\n   * @privateRemarks\n   *\n   * Cache size for the `transform` method of FragmentRegistry.\n   * This function is called as part of the `defaultDocumentTransform` which will be called with\n   * user-provided and already-transformed DocumentNodes.\n   *\n   */\n  \"fragmentRegistry.transform\": number;\n  /**\n   * A cache inside of [`FragmentRegistry`](https://github.com/apollographql/apollo-client/blob/main/src/cache/inmemory/fragmentRegistry.ts).\n   *\n   * This function is called with fragment names in the form of a string.\n   *\n   * @defaultValue\n   * Defaults to `1000`.\n   *\n   * @remarks\n   * The size of this case should be chosen with the number of fragments in\n   * your application in mind.\n   *\n   * Note:\n   * This function is a dependency of `fragmentRegistry.transform`, so having too small of a cache size here\n   * might involuntarily invalidate values in the `transform` cache.\n   *\n   * @privateRemarks\n   * Cache size for the `lookup` method of FragmentRegistry.\n   */\n  \"fragmentRegistry.lookup\": number;\n  /**\n   * Cache size for the `findFragmentSpreads` method of [`FragmentRegistry`](https://github.com/apollographql/apollo-client/blob/main/src/cache/inmemory/fragmentRegistry.ts).\n   *\n   * This function is called with transformed `DocumentNode`s, as well as recursively\n   * with every fragment spread referenced within that, or a fragment referenced by a\n   * fragment spread.\n   *\n   * @defaultValue\n   * Defaults to `4000`.\n   *\n   * @remarks\n   *\n   * Note: This function is a dependency of `fragmentRegistry.transform`, so having too small of cache size here\n   * might involuntarily invalidate values in the `transform` cache.\n   */\n  \"fragmentRegistry.findFragmentSpreads\": number;\n  /**\n   * Cache size for the `getFragmentDoc` method of [`ApolloCache`](https://github.com/apollographql/apollo-client/blob/main/src/cache/core/cache.ts).\n   *\n   * This function is called with user-provided fragment definitions.\n   *\n   * @defaultValue\n   * Defaults to `1000`.\n   *\n   * @remarks\n   * This function is called from `readFragment` with user-provided fragment definitions.\n   */\n  \"cache.fragmentQueryDocuments\": number;\n  /**\n   * Cache used in [`removeTypenameFromVariables`](https://github.com/apollographql/apollo-client/blob/main/src/link/remove-typename/removeTypenameFromVariables.ts).\n   *\n   * This function is called transformed `DocumentNode`s.\n   *\n   * @defaultValue\n   * Defaults to `2000`.\n   *\n   * @privateRemarks\n   * Cache size for the `getVariableDefinitions` function of `removeTypenameFromVariables`.\n   */\n  \"removeTypenameFromVariables.getVariableDefinitions\": number;\n  /**\n   * Cache size for the `maybeBroadcastWatch` method on [`InMemoryCache`](https://github.com/apollographql/apollo-client/blob/main/src/cache/inmemory/inMemoryCache.ts).\n   *\n   * Note: `maybeBroadcastWatch` will be set to the `resultCacheMaxSize` option and\n   * will fall back to this configuration value if the option is not set.\n   *\n   * @defaultValue\n   * Defaults to `5000`.\n   *\n   * @remarks\n   * This method is used for dependency tracking in the `InMemoryCache` and\n   * prevents from unnecessary re-renders.\n   * It is recommended to keep this value significantly higher than the number of\n   * possible subscribers you will have active at the same time in your application\n   * at any time.\n   */\n  \"inMemoryCache.maybeBroadcastWatch\": number;\n  /**\n   * Cache size for the `executeSelectionSet` method on [`StoreReader`](https://github.com/apollographql/apollo-client/blob/main/src/cache/inmemory/readFromStore.ts).\n   *\n   * Note:\n   * `executeSelectionSet` will be set to the `resultCacheMaxSize` option and\n   * will fall back to this configuration value if the option is not set.\n   *\n   * @defaultValue\n   * Defaults to `10000`.\n   *\n   * @remarks\n   * Every object that is read from the cache will be cached here, so it is\n   * recommended to set this to a high value.\n   */\n  \"inMemoryCache.executeSelectionSet\": number;\n  /**\n   * Cache size for the `executeSubSelectedArray` method on [`StoreReader`](https://github.com/apollographql/apollo-client/blob/main/src/cache/inmemory/readFromStore.ts).\n   *\n   * Note:\n   * `executeSubSelectedArray` will be set to the `resultCacheMaxSize` option and\n   * will fall back to this configuration value if the option is not set.\n   *\n   * @defaultValue\n   * Defaults to `5000`.\n   *\n   * @remarks\n   * Every array that is read from the cache will be cached here, so it is\n   * recommended to set this to a high value.\n   */\n  \"inMemoryCache.executeSubSelectedArray\": number;\n}\n\nconst cacheSizeSymbol = Symbol.for(\"apollo.cacheSize\");\n/**\n *\n * The global cache size configuration for Apollo Client.\n *\n * @remarks\n *\n * You can directly modify this object, but any modification will\n * only have an effect on caches that are created after the modification.\n *\n * So for global caches, such as `parser`, `canonicalStringify` and `print`,\n * you might need to call `.reset` on them, which will essentially re-create them.\n *\n * Alternatively, you can set `globalThis[Symbol.for(\"apollo.cacheSize\")]` before\n * you load the Apollo Client package:\n *\n * @example\n * ```ts\n * globalThis[Symbol.for(\"apollo.cacheSize\")] = {\n *   parser: 100\n * } satisfies Partial<CacheSizes> // the `satisfies` is optional if using TypeScript\n * ```\n */\nexport const cacheSizes: Partial<CacheSizes> = { ...global[cacheSizeSymbol] };\n\nexport const enum defaultCacheSizes {\n  parser = 1000,\n  canonicalStringify = 1000,\n  print = 2000,\n  \"documentTransform.cache\" = 2000,\n  \"queryManager.getDocumentInfo\" = 2000,\n  \"PersistedQueryLink.persistedQueryHashes\" = 2000,\n  \"fragmentRegistry.transform\" = 2000,\n  \"fragmentRegistry.lookup\" = 1000,\n  \"fragmentRegistry.findFragmentSpreads\" = 4000,\n  \"cache.fragmentQueryDocuments\" = 1000,\n  \"removeTypenameFromVariables.getVariableDefinitions\" = 2000,\n  \"inMemoryCache.maybeBroadcastWatch\" = 5000,\n  \"inMemoryCache.executeSelectionSet\" = 50000,\n  \"inMemoryCache.executeSubSelectedArray\" = 10000,\n}\n","import type { OptimisticWrapperFunction } from \"optimism\";\nimport type {\n  InMemoryCache,\n  DocumentTransform,\n  ApolloLink,\n  ApolloCache,\n} from \"../../core/index.js\";\nimport type { ApolloClient } from \"../../core/index.js\";\nimport type { CacheSizes } from \"./sizes.js\";\nimport { cacheSizes, defaultCacheSizes } from \"./sizes.js\";\n\nconst globalCaches: {\n  print?: () => number;\n  parser?: () => number;\n  canonicalStringify?: () => number;\n} = {};\n\nexport function registerGlobalCache(\n  name: keyof typeof globalCaches,\n  getSize: () => number\n) {\n  globalCaches[name] = getSize;\n}\n\n/**\n * Transformative helper type to turn a function of the form\n * ```ts\n * (this: any) => R\n * ```\n * into a function of the form\n * ```ts\n * () => R\n * ```\n * preserving the return type, but removing the `this` parameter.\n *\n * @remarks\n *\n * Further down in the definitions of `_getApolloClientMemoryInternals`,\n * `_getApolloCacheMemoryInternals` and `_getInMemoryCacheMemoryInternals`,\n * having the `this` parameter annotation is extremely useful for type checking\n * inside the function.\n *\n * If this is preserved in the exported types, though, it leads to a situation\n * where `ApolloCache.getMemoryInternals` is a function that requires a `this`\n * of the type `ApolloCache`, while the extending class `InMemoryCache` has a\n * `getMemoryInternals` function that requires a `this` of the type\n * `InMemoryCache`.\n * This is not compatible with TypeScript's inheritence system (although it is\n * perfectly correct), and so TypeScript will complain loudly.\n *\n * We still want to define our functions with the `this` annotation, though,\n * and have the return type inferred.\n * (This requirement for return type inference here makes it impossible to use\n * a function overload that is more explicit on the inner overload than it is\n * on the external overload.)\n *\n * So in the end, we use this helper to remove the `this` annotation from the\n * exported function types, while keeping it in the internal implementation.\n *\n */\ntype RemoveThis<T> = T extends (this: any) => infer R ? () => R : never;\n\n/**\n * For internal purposes only - please call `ApolloClient.getMemoryInternals` instead\n * @internal\n */\nexport const getApolloClientMemoryInternals =\n  __DEV__ ?\n    (_getApolloClientMemoryInternals as RemoveThis<\n      typeof _getApolloClientMemoryInternals\n    >)\n  : undefined;\n\n/**\n * For internal purposes only - please call `ApolloClient.getMemoryInternals` instead\n * @internal\n */\nexport const getInMemoryCacheMemoryInternals =\n  __DEV__ ?\n    (_getInMemoryCacheMemoryInternals as RemoveThis<\n      typeof _getInMemoryCacheMemoryInternals\n    >)\n  : undefined;\n\n/**\n * For internal purposes only - please call `ApolloClient.getMemoryInternals` instead\n * @internal\n */\nexport const getApolloCacheMemoryInternals =\n  __DEV__ ?\n    (_getApolloCacheMemoryInternals as RemoveThis<\n      typeof _getApolloCacheMemoryInternals\n    >)\n  : undefined;\n\nfunction getCurrentCacheSizes() {\n  // `defaultCacheSizes` is a `const enum` that will be inlined during build, so we have to reconstruct it's shape here\n  const defaults: Record<keyof CacheSizes, number> = {\n    parser: defaultCacheSizes[\"parser\"],\n    canonicalStringify: defaultCacheSizes[\"canonicalStringify\"],\n    print: defaultCacheSizes[\"print\"],\n    \"documentTransform.cache\": defaultCacheSizes[\"documentTransform.cache\"],\n    \"queryManager.getDocumentInfo\":\n      defaultCacheSizes[\"queryManager.getDocumentInfo\"],\n    \"PersistedQueryLink.persistedQueryHashes\":\n      defaultCacheSizes[\"PersistedQueryLink.persistedQueryHashes\"],\n    \"fragmentRegistry.transform\":\n      defaultCacheSizes[\"fragmentRegistry.transform\"],\n    \"fragmentRegistry.lookup\": defaultCacheSizes[\"fragmentRegistry.lookup\"],\n    \"fragmentRegistry.findFragmentSpreads\":\n      defaultCacheSizes[\"fragmentRegistry.findFragmentSpreads\"],\n    \"cache.fragmentQueryDocuments\":\n      defaultCacheSizes[\"cache.fragmentQueryDocuments\"],\n    \"removeTypenameFromVariables.getVariableDefinitions\":\n      defaultCacheSizes[\"removeTypenameFromVariables.getVariableDefinitions\"],\n    \"inMemoryCache.maybeBroadcastWatch\":\n      defaultCacheSizes[\"inMemoryCache.maybeBroadcastWatch\"],\n    \"inMemoryCache.executeSelectionSet\":\n      defaultCacheSizes[\"inMemoryCache.executeSelectionSet\"],\n    \"inMemoryCache.executeSubSelectedArray\":\n      defaultCacheSizes[\"inMemoryCache.executeSubSelectedArray\"],\n  };\n  return Object.fromEntries(\n    Object.entries(defaults).map(([k, v]) => [\n      k,\n      cacheSizes[k as keyof CacheSizes] || v,\n    ])\n  );\n}\n\nfunction _getApolloClientMemoryInternals(this: ApolloClient<any>) {\n  if (!__DEV__) throw new Error(\"only supported in development mode\");\n\n  return {\n    limits: getCurrentCacheSizes(),\n    sizes: {\n      print: globalCaches.print?.(),\n      parser: globalCaches.parser?.(),\n      canonicalStringify: globalCaches.canonicalStringify?.(),\n      links: linkInfo(this.link),\n      queryManager: {\n        getDocumentInfo: this[\"queryManager\"][\"transformCache\"].size,\n        documentTransforms: transformInfo(\n          this[\"queryManager\"].documentTransform\n        ),\n      },\n      ...(this.cache.getMemoryInternals?.() as Partial<\n        ReturnType<typeof _getApolloCacheMemoryInternals>\n      > &\n        Partial<ReturnType<typeof _getInMemoryCacheMemoryInternals>>),\n    },\n  };\n}\n\nfunction _getApolloCacheMemoryInternals(this: ApolloCache<any>) {\n  return {\n    cache: {\n      fragmentQueryDocuments: getWrapperInformation(this[\"getFragmentDoc\"]),\n    },\n  };\n}\n\nfunction _getInMemoryCacheMemoryInternals(this: InMemoryCache) {\n  const fragments = this.config.fragments as\n    | undefined\n    | {\n        findFragmentSpreads?: Function;\n        transform?: Function;\n        lookup?: Function;\n      };\n\n  return {\n    ..._getApolloCacheMemoryInternals.apply(this as any),\n    addTypenameDocumentTransform: transformInfo(this[\"addTypenameTransform\"]),\n    inMemoryCache: {\n      executeSelectionSet: getWrapperInformation(\n        this[\"storeReader\"][\"executeSelectionSet\"]\n      ),\n      executeSubSelectedArray: getWrapperInformation(\n        this[\"storeReader\"][\"executeSubSelectedArray\"]\n      ),\n      maybeBroadcastWatch: getWrapperInformation(this[\"maybeBroadcastWatch\"]),\n    },\n    fragmentRegistry: {\n      findFragmentSpreads: getWrapperInformation(\n        fragments?.findFragmentSpreads\n      ),\n      lookup: getWrapperInformation(fragments?.lookup),\n      transform: getWrapperInformation(fragments?.transform),\n    },\n  };\n}\n\nfunction isWrapper(f?: Function): f is OptimisticWrapperFunction<any, any> {\n  return !!f && \"dirtyKey\" in f;\n}\n\nfunction getWrapperInformation(f?: Function) {\n  return isWrapper(f) ? f.size : undefined;\n}\n\nfunction isDefined<T>(value: T | undefined | null): value is T {\n  return value != null;\n}\n\nfunction transformInfo(transform?: DocumentTransform) {\n  return recurseTransformInfo(transform).map((cache) => ({ cache }));\n}\n\nfunction recurseTransformInfo(transform?: DocumentTransform): number[] {\n  return transform ?\n      [\n        getWrapperInformation(transform?.[\"performWork\"]),\n        ...recurseTransformInfo(transform?.[\"left\"]),\n        ...recurseTransformInfo(transform?.[\"right\"]),\n      ].filter(isDefined)\n    : [];\n}\n\nfunction linkInfo(link?: ApolloLink): unknown[] {\n  return link ?\n      [\n        link?.getMemoryInternals?.(),\n        ...linkInfo(link?.left),\n        ...linkInfo(link?.right),\n      ].filter(isDefined)\n    : [];\n}\n","import {\n  AutoCleanedStrongCache,\n  cacheSizes,\n  defaultCacheSizes,\n} from \"../../utilities/caching/index.js\";\nimport { registerGlobalCache } from \"../caching/getMemoryInternals.js\";\n\n/**\n * Like JSON.stringify, but with object keys always sorted in the same order.\n *\n * To achieve performant sorting, this function uses a Map from JSON-serialized\n * arrays of keys (in any order) to sorted arrays of the same keys, with a\n * single sorted array reference shared by all permutations of the keys.\n *\n * As a drawback, this function will add a little bit more memory for every\n * object encountered that has different (more, less, a different order of) keys\n * than in the past.\n *\n * In a typical application, this extra memory usage should not play a\n * significant role, as `canonicalStringify` will be called for only a limited\n * number of object shapes, and the cache will not grow beyond a certain point.\n * But in some edge cases, this could be a problem, so we provide\n * canonicalStringify.reset() as a way of clearing the cache.\n * */\nexport const canonicalStringify = Object.assign(\n  function canonicalStringify(value: any): string {\n    return JSON.stringify(value, stableObjectReplacer);\n  },\n  {\n    reset() {\n      // Clearing the sortingMap will reclaim all cached memory, without\n      // affecting the logical results of canonicalStringify, but potentially\n      // sacrificing performance until the cache is refilled.\n      sortingMap = new AutoCleanedStrongCache<string, readonly string[]>(\n        cacheSizes.canonicalStringify || defaultCacheSizes.canonicalStringify\n      );\n    },\n  }\n);\n\nif (__DEV__) {\n  registerGlobalCache(\"canonicalStringify\", () => sortingMap.size);\n}\n\n// Values are JSON-serialized arrays of object keys (in any order), and values\n// are sorted arrays of the same keys.\nlet sortingMap!: AutoCleanedStrongCache<string, readonly string[]>;\ncanonicalStringify.reset();\n\n// The JSON.stringify function takes an optional second argument called a\n// replacer function. This function is called for each key-value pair in the\n// object being stringified, and its return value is used instead of the\n// original value. If the replacer function returns a new value, that value is\n// stringified as JSON instead of the original value of the property.\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#the_replacer_parameter\nfunction stableObjectReplacer(key: string, value: any) {\n  if (value && typeof value === \"object\") {\n    const proto = Object.getPrototypeOf(value);\n    // We don't want to mess with objects that are not \"plain\" objects, which\n    // means their prototype is either Object.prototype or null. This check also\n    // prevents needlessly rearranging the indices of arrays.\n    if (proto === Object.prototype || proto === null) {\n      const keys = Object.keys(value);\n      // If keys is already sorted, let JSON.stringify serialize the original\n      // value instead of creating a new object with keys in the same order.\n      if (keys.every(everyKeyInOrder)) return value;\n      const unsortedKey = JSON.stringify(keys);\n      let sortedKeys = sortingMap.get(unsortedKey);\n      if (!sortedKeys) {\n        keys.sort();\n        const sortedKey = JSON.stringify(keys);\n        // Checking for sortedKey in the sortingMap allows us to share the same\n        // sorted array reference for all permutations of the same set of keys.\n        sortedKeys = sortingMap.get(sortedKey) || keys;\n        sortingMap.set(unsortedKey, sortedKeys);\n        sortingMap.set(sortedKey, sortedKeys);\n      }\n      const sortedObject = Object.create(proto);\n      // Reassigning the keys in sorted order will cause JSON.stringify to\n      // serialize them in sorted order.\n      sortedKeys.forEach((key) => {\n        sortedObject[key] = value[key];\n      });\n      return sortedObject;\n    }\n  }\n  return value;\n}\n\n// Since everything that happens in stableObjectReplacer benefits from being as\n// efficient as possible, we use a static function as the callback for\n// keys.every in order to test if the provided keys are already sorted without\n// allocating extra memory for a callback.\nfunction everyKeyInOrder(\n  key: string,\n  i: number,\n  keys: readonly string[]\n): boolean {\n  return i === 0 || keys[i - 1] <= key;\n}\n","import { newInvariantError } from \"../globals/index.js\";\n\nimport type {\n  DirectiveNode,\n  FieldNode,\n  IntValueNode,\n  FloatValueNode,\n  StringValueNode,\n  BooleanValueNode,\n  ObjectValueNode,\n  ListValueNode,\n  EnumValueNode,\n  NullValueNode,\n  VariableNode,\n  InlineFragmentNode,\n  ValueNode,\n  SelectionNode,\n  NameNode,\n  SelectionSetNode,\n  DocumentNode,\n  FragmentSpreadNode,\n} from \"graphql\";\n\nimport { isNonNullObject } from \"../common/objects.js\";\nimport type { FragmentMap } from \"./fragments.js\";\nimport { getFragmentFromSelection } from \"./fragments.js\";\nimport { canonicalStringify } from \"../common/canonicalStringify.js\";\n\nexport interface Reference {\n  readonly __ref: string;\n}\n\nexport function makeReference(id: string): Reference {\n  return { __ref: String(id) };\n}\n\nexport function isReference(obj: any): obj is Reference {\n  return Boolean(\n    obj && typeof obj === \"object\" && typeof obj.__ref === \"string\"\n  );\n}\n\nexport type StoreValue =\n  | number\n  | string\n  | string[]\n  | Reference\n  | Reference[]\n  | null\n  | undefined\n  | void\n  | Object;\n\nexport interface StoreObject {\n  __typename?: string;\n  [storeFieldName: string]: StoreValue;\n}\n\n/**\n * Workaround for a TypeScript quirk:\n * types per default have an implicit index signature that makes them\n * assignable to `StoreObject`.\n * interfaces do not have that implicit index signature, so they cannot\n * be assigned to `StoreObject`.\n * This type just maps over a type or interface that is passed in,\n * implicitly adding the index signature.\n * That way, the result can be assigned to `StoreObject`.\n *\n * This is important if some user-defined interface is used e.g.\n * in cache.modify, where the `toReference` method expects a\n * `StoreObject` as input.\n */\nexport type AsStoreObject<T extends { __typename?: string }> = {\n  [K in keyof T]: T[K];\n};\n\nexport function isDocumentNode(value: any): value is DocumentNode {\n  return (\n    isNonNullObject(value) &&\n    (value as DocumentNode).kind === \"Document\" &&\n    Array.isArray((value as DocumentNode).definitions)\n  );\n}\n\nfunction isStringValue(value: ValueNode): value is StringValueNode {\n  return value.kind === \"StringValue\";\n}\n\nfunction isBooleanValue(value: ValueNode): value is BooleanValueNode {\n  return value.kind === \"BooleanValue\";\n}\n\nfunction isIntValue(value: ValueNode): value is IntValueNode {\n  return value.kind === \"IntValue\";\n}\n\nfunction isFloatValue(value: ValueNode): value is FloatValueNode {\n  return value.kind === \"FloatValue\";\n}\n\nfunction isVariable(value: ValueNode): value is VariableNode {\n  return value.kind === \"Variable\";\n}\n\nfunction isObjectValue(value: ValueNode): value is ObjectValueNode {\n  return value.kind === \"ObjectValue\";\n}\n\nfunction isListValue(value: ValueNode): value is ListValueNode {\n  return value.kind === \"ListValue\";\n}\n\nfunction isEnumValue(value: ValueNode): value is EnumValueNode {\n  return value.kind === \"EnumValue\";\n}\n\nfunction isNullValue(value: ValueNode): value is NullValueNode {\n  return value.kind === \"NullValue\";\n}\n\nexport function valueToObjectRepresentation(\n  argObj: any,\n  name: NameNode,\n  value: ValueNode,\n  variables?: Object\n) {\n  if (isIntValue(value) || isFloatValue(value)) {\n    argObj[name.value] = Number(value.value);\n  } else if (isBooleanValue(value) || isStringValue(value)) {\n    argObj[name.value] = value.value;\n  } else if (isObjectValue(value)) {\n    const nestedArgObj = {};\n    value.fields.map((obj) =>\n      valueToObjectRepresentation(nestedArgObj, obj.name, obj.value, variables)\n    );\n    argObj[name.value] = nestedArgObj;\n  } else if (isVariable(value)) {\n    const variableValue = (variables || ({} as any))[value.name.value];\n    argObj[name.value] = variableValue;\n  } else if (isListValue(value)) {\n    argObj[name.value] = value.values.map((listValue) => {\n      const nestedArgArrayObj = {};\n      valueToObjectRepresentation(\n        nestedArgArrayObj,\n        name,\n        listValue,\n        variables\n      );\n      return (nestedArgArrayObj as any)[name.value];\n    });\n  } else if (isEnumValue(value)) {\n    argObj[name.value] = (value as EnumValueNode).value;\n  } else if (isNullValue(value)) {\n    argObj[name.value] = null;\n  } else {\n    throw newInvariantError(\n      `The inline argument \"%s\" of kind \"%s\"` +\n        \"is not supported. Use variables instead of inline arguments to \" +\n        \"overcome this limitation.\",\n      name.value,\n      (value as any).kind\n    );\n  }\n}\n\nexport function storeKeyNameFromField(\n  field: FieldNode,\n  variables?: Object\n): string {\n  let directivesObj: any = null;\n  if (field.directives) {\n    directivesObj = {};\n    field.directives.forEach((directive) => {\n      directivesObj[directive.name.value] = {};\n\n      if (directive.arguments) {\n        directive.arguments.forEach(({ name, value }) =>\n          valueToObjectRepresentation(\n            directivesObj[directive.name.value],\n            name,\n            value,\n            variables\n          )\n        );\n      }\n    });\n  }\n\n  let argObj: any = null;\n  if (field.arguments && field.arguments.length) {\n    argObj = {};\n    field.arguments.forEach(({ name, value }) =>\n      valueToObjectRepresentation(argObj, name, value, variables)\n    );\n  }\n\n  return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\n\nexport type Directives = {\n  [directiveName: string]: {\n    [argName: string]: any;\n  };\n};\n\nconst KNOWN_DIRECTIVES: string[] = [\n  \"connection\",\n  \"include\",\n  \"skip\",\n  \"client\",\n  \"rest\",\n  \"export\",\n  \"nonreactive\",\n];\n\n// Default stable JSON.stringify implementation used by getStoreKeyName. Can be\n// updated/replaced with something better by calling\n// getStoreKeyName.setStringify(newStringifyFunction).\nlet storeKeyNameStringify: (value: any) => string = canonicalStringify;\n\nexport const getStoreKeyName = Object.assign(\n  function (\n    fieldName: string,\n    args?: Record<string, any> | null,\n    directives?: Directives\n  ): string {\n    if (\n      args &&\n      directives &&\n      directives[\"connection\"] &&\n      directives[\"connection\"][\"key\"]\n    ) {\n      if (\n        directives[\"connection\"][\"filter\"] &&\n        (directives[\"connection\"][\"filter\"] as string[]).length > 0\n      ) {\n        const filterKeys =\n          directives[\"connection\"][\"filter\"] ?\n            (directives[\"connection\"][\"filter\"] as string[])\n          : [];\n        filterKeys.sort();\n\n        const filteredArgs = {} as { [key: string]: any };\n        filterKeys.forEach((key) => {\n          filteredArgs[key] = args[key];\n        });\n\n        return `${directives[\"connection\"][\"key\"]}(${storeKeyNameStringify(\n          filteredArgs\n        )})`;\n      } else {\n        return directives[\"connection\"][\"key\"];\n      }\n    }\n\n    let completeFieldName: string = fieldName;\n\n    if (args) {\n      // We can't use `JSON.stringify` here since it's non-deterministic,\n      // and can lead to different store key names being created even though\n      // the `args` object used during creation has the same properties/values.\n      const stringifiedArgs: string = storeKeyNameStringify(args);\n      completeFieldName += `(${stringifiedArgs})`;\n    }\n\n    if (directives) {\n      Object.keys(directives).forEach((key) => {\n        if (KNOWN_DIRECTIVES.indexOf(key) !== -1) return;\n        if (directives[key] && Object.keys(directives[key]).length) {\n          completeFieldName += `@${key}(${storeKeyNameStringify(\n            directives[key]\n          )})`;\n        } else {\n          completeFieldName += `@${key}`;\n        }\n      });\n    }\n\n    return completeFieldName;\n  },\n  {\n    setStringify(s: typeof storeKeyNameStringify) {\n      const previous = storeKeyNameStringify;\n      storeKeyNameStringify = s;\n      return previous;\n    },\n  }\n);\n\nexport function argumentsObjectFromField(\n  field: FieldNode | DirectiveNode,\n  variables?: Record<string, any>\n): Object | null {\n  if (field.arguments && field.arguments.length) {\n    const argObj: Object = {};\n    field.arguments.forEach(({ name, value }) =>\n      valueToObjectRepresentation(argObj, name, value, variables)\n    );\n    return argObj;\n  }\n  return null;\n}\n\nexport function resultKeyNameFromField(field: FieldNode): string {\n  return field.alias ? field.alias.value : field.name.value;\n}\n\nexport function getTypenameFromResult(\n  result: Record<string, any>,\n  selectionSet: SelectionSetNode,\n  fragmentMap?: FragmentMap\n): string | undefined {\n  let fragments: undefined | Array<InlineFragmentNode | FragmentSpreadNode>;\n  for (const selection of selectionSet.selections) {\n    if (isField(selection)) {\n      if (selection.name.value === \"__typename\") {\n        return result[resultKeyNameFromField(selection)];\n      }\n    } else if (fragments) {\n      fragments.push(selection);\n    } else {\n      fragments = [selection];\n    }\n  }\n  if (typeof result.__typename === \"string\") {\n    return result.__typename;\n  }\n  if (fragments) {\n    for (const selection of fragments) {\n      const typename = getTypenameFromResult(\n        result,\n        getFragmentFromSelection(selection, fragmentMap)!.selectionSet,\n        fragmentMap\n      );\n      if (typeof typename === \"string\") {\n        return typename;\n      }\n    }\n  }\n}\n\nexport function isField(selection: SelectionNode): selection is FieldNode {\n  return selection.kind === \"Field\";\n}\n\nexport function isInlineFragment(\n  selection: SelectionNode\n): selection is InlineFragmentNode {\n  return selection.kind === \"InlineFragment\";\n}\n\nexport type VariableValue = (node: VariableNode) => any;\n","import { invariant, newInvariantError } from \"../globals/index.js\";\n\nimport type {\n  DocumentNode,\n  OperationDefinitionNode,\n  FragmentDefinitionNode,\n  ValueNode,\n} from \"graphql\";\n\nimport { valueToObjectRepresentation } from \"./storeUtils.js\";\n\ntype OperationDefinitionWithName = OperationDefinitionNode & {\n  name: NonNullable<OperationDefinitionNode[\"name\"]>;\n};\n\n// Checks the document for errors and throws an exception if there is an error.\nexport function checkDocument(doc: DocumentNode) {\n  invariant(\n    doc && doc.kind === \"Document\",\n    `Expecting a parsed GraphQL document. Perhaps you need to wrap the query \\\nstring in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql`\n  );\n\n  const operations = doc.definitions\n    .filter((d) => d.kind !== \"FragmentDefinition\")\n    .map((definition) => {\n      if (definition.kind !== \"OperationDefinition\") {\n        throw newInvariantError(\n          `Schema type definitions not allowed in queries. Found: \"%s\"`,\n          definition.kind\n        );\n      }\n      return definition;\n    });\n\n  invariant(\n    operations.length <= 1,\n    `Ambiguous GraphQL document: contains %s operations`,\n    operations.length\n  );\n\n  return doc;\n}\n\nexport function getOperationDefinition(\n  doc: DocumentNode\n): OperationDefinitionNode | undefined {\n  checkDocument(doc);\n  return doc.definitions.filter(\n    (definition): definition is OperationDefinitionNode =>\n      definition.kind === \"OperationDefinition\"\n  )[0];\n}\n\nexport function getOperationName(doc: DocumentNode): string | null {\n  return (\n    doc.definitions\n      .filter(\n        (definition): definition is OperationDefinitionWithName =>\n          definition.kind === \"OperationDefinition\" && !!definition.name\n      )\n      .map((x) => x.name.value)[0] || null\n  );\n}\n\n// Returns the FragmentDefinitions from a particular document as an array\nexport function getFragmentDefinitions(\n  doc: DocumentNode\n): FragmentDefinitionNode[] {\n  return doc.definitions.filter(\n    (definition): definition is FragmentDefinitionNode =>\n      definition.kind === \"FragmentDefinition\"\n  );\n}\n\nexport function getQueryDefinition(doc: DocumentNode): OperationDefinitionNode {\n  const queryDef = getOperationDefinition(doc)!;\n\n  invariant(\n    queryDef && queryDef.operation === \"query\",\n    \"Must contain a query definition.\"\n  );\n\n  return queryDef;\n}\n\nexport function getFragmentDefinition(\n  doc: DocumentNode\n): FragmentDefinitionNode {\n  invariant(\n    doc.kind === \"Document\",\n    `Expecting a parsed GraphQL document. Perhaps you need to wrap the query \\\nstring in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql`\n  );\n\n  invariant(\n    doc.definitions.length <= 1,\n    \"Fragment must have exactly one definition.\"\n  );\n\n  const fragmentDef = doc.definitions[0] as FragmentDefinitionNode;\n\n  invariant(\n    fragmentDef.kind === \"FragmentDefinition\",\n    \"Must be a fragment definition.\"\n  );\n\n  return fragmentDef as FragmentDefinitionNode;\n}\n\n/**\n * Returns the first operation definition found in this document.\n * If no operation definition is found, the first fragment definition will be returned.\n * If no definitions are found, an error will be thrown.\n */\nexport function getMainDefinition(\n  queryDoc: DocumentNode\n): OperationDefinitionNode | FragmentDefinitionNode {\n  checkDocument(queryDoc);\n\n  let fragmentDefinition;\n\n  for (let definition of queryDoc.definitions) {\n    if (definition.kind === \"OperationDefinition\") {\n      const operation = (definition as OperationDefinitionNode).operation;\n      if (\n        operation === \"query\" ||\n        operation === \"mutation\" ||\n        operation === \"subscription\"\n      ) {\n        return definition as OperationDefinitionNode;\n      }\n    }\n    if (definition.kind === \"FragmentDefinition\" && !fragmentDefinition) {\n      // we do this because we want to allow multiple fragment definitions\n      // to precede an operation definition.\n      fragmentDefinition = definition as FragmentDefinitionNode;\n    }\n  }\n\n  if (fragmentDefinition) {\n    return fragmentDefinition;\n  }\n\n  throw newInvariantError(\n    \"Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment.\"\n  );\n}\n\nexport function getDefaultValues(\n  definition: OperationDefinitionNode | undefined\n): Record<string, any> {\n  const defaultValues = Object.create(null);\n  const defs = definition && definition.variableDefinitions;\n  if (defs && defs.length) {\n    defs.forEach((def) => {\n      if (def.defaultValue) {\n        valueToObjectRepresentation(\n          defaultValues,\n          def.variable.name,\n          def.defaultValue as ValueNode\n        );\n      }\n    });\n  }\n  return defaultValues;\n}\n","import { newInvariantError, invariant } from \"../../utilities/globals/index.js\";\n\nimport type { Observer } from \"../../utilities/index.js\";\nimport { Observable } from \"../../utilities/index.js\";\nimport type {\n  NextLink,\n  Operation,\n  RequestHandler,\n  FetchResult,\n  GraphQLRequest,\n} from \"./types.js\";\nimport {\n  validateOperation,\n  createOperation,\n  transformOperation,\n} from \"../utils/index.js\";\n\nfunction passthrough(op: Operation, forward: NextLink) {\n  return (forward ? forward(op) : Observable.of()) as Observable<FetchResult>;\n}\n\nfunction toLink(handler: RequestHandler | ApolloLink) {\n  return typeof handler === \"function\" ? new ApolloLink(handler) : handler;\n}\n\nfunction isTerminating(link: ApolloLink): boolean {\n  return link.request.length <= 1;\n}\n\nexport class ApolloLink {\n  public static empty(): ApolloLink {\n    return new ApolloLink(() => Observable.of());\n  }\n\n  public static from(links: (ApolloLink | RequestHandler)[]): ApolloLink {\n    if (links.length === 0) return ApolloLink.empty();\n    return links.map(toLink).reduce((x, y) => x.concat(y)) as ApolloLink;\n  }\n\n  public static split(\n    test: (op: Operation) => boolean,\n    left: ApolloLink | RequestHandler,\n    right?: ApolloLink | RequestHandler\n  ): ApolloLink {\n    const leftLink = toLink(left);\n    const rightLink = toLink(right || new ApolloLink(passthrough));\n\n    let ret: ApolloLink;\n    if (isTerminating(leftLink) && isTerminating(rightLink)) {\n      ret = new ApolloLink((operation) => {\n        return test(operation) ?\n            leftLink.request(operation) || Observable.of()\n          : rightLink.request(operation) || Observable.of();\n      });\n    } else {\n      ret = new ApolloLink((operation, forward) => {\n        return test(operation) ?\n            leftLink.request(operation, forward) || Observable.of()\n          : rightLink.request(operation, forward) || Observable.of();\n      });\n    }\n    return Object.assign(ret, { left: leftLink, right: rightLink });\n  }\n\n  public static execute(\n    link: ApolloLink,\n    operation: GraphQLRequest\n  ): Observable<FetchResult> {\n    return (\n      link.request(\n        createOperation(\n          operation.context,\n          transformOperation(validateOperation(operation))\n        )\n      ) || Observable.of()\n    );\n  }\n\n  public static concat(\n    first: ApolloLink | RequestHandler,\n    second: ApolloLink | RequestHandler\n  ) {\n    const firstLink = toLink(first);\n    if (isTerminating(firstLink)) {\n      invariant.warn(\n        `You are calling concat on a terminating link, which will have no effect %o`,\n        firstLink\n      );\n      return firstLink;\n    }\n    const nextLink = toLink(second);\n\n    let ret: ApolloLink;\n    if (isTerminating(nextLink)) {\n      ret = new ApolloLink(\n        (operation) =>\n          firstLink.request(\n            operation,\n            (op) => nextLink.request(op) || Observable.of()\n          ) || Observable.of()\n      );\n    } else {\n      ret = new ApolloLink((operation, forward) => {\n        return (\n          firstLink.request(operation, (op) => {\n            return nextLink.request(op, forward) || Observable.of();\n          }) || Observable.of()\n        );\n      });\n    }\n    return Object.assign(ret, { left: firstLink, right: nextLink });\n  }\n\n  constructor(request?: RequestHandler) {\n    if (request) this.request = request;\n  }\n\n  public split(\n    test: (op: Operation) => boolean,\n    left: ApolloLink | RequestHandler,\n    right?: ApolloLink | RequestHandler\n  ): ApolloLink {\n    return this.concat(\n      ApolloLink.split(test, left, right || new ApolloLink(passthrough))\n    );\n  }\n\n  public concat(next: ApolloLink | RequestHandler): ApolloLink {\n    return ApolloLink.concat(this, next);\n  }\n\n  public request(\n    operation: Operation,\n    forward?: NextLink\n  ): Observable<FetchResult> | null {\n    throw newInvariantError(\"request is not implemented\");\n  }\n\n  protected onError(\n    error: any,\n    observer?: Observer<FetchResult>\n  ): false | void {\n    if (observer && observer.error) {\n      observer.error(error);\n      // Returning false indicates that observer.error does not need to be\n      // called again, since it was already called (on the previous line).\n      // Calling observer.error again would not cause any real problems,\n      // since only the first call matters, but custom onError functions\n      // might have other reasons for wanting to prevent the default\n      // behavior by returning false.\n      return false;\n    }\n    // Throw errors will be passed to observer.error.\n    throw error;\n  }\n\n  public setOnError(fn: ApolloLink[\"onError\"]): this {\n    this.onError = fn;\n    return this;\n  }\n\n  /**\n   * @internal\n   * Used to iterate through all links that are concatenations or `split` links.\n   */\n  readonly left?: ApolloLink;\n  /**\n   * @internal\n   * Used to iterate through all links that are concatenations or `split` links.\n   */\n  readonly right?: ApolloLink;\n\n  /**\n   * @internal\n   * Can be provided by a link that has an internal cache to report it's memory details.\n   */\n  getMemoryInternals?: () => unknown;\n}\n","import type { GraphQLRequest, Operation } from \"../core/index.js\";\n\nexport function createOperation(\n  starting: any,\n  operation: GraphQLRequest\n): Operation {\n  let context = { ...starting };\n  const setContext: Operation[\"setContext\"] = (next) => {\n    if (typeof next === \"function\") {\n      context = { ...context, ...next(context) };\n    } else {\n      context = { ...context, ...next };\n    }\n  };\n  const getContext: Operation[\"getContext\"] = () => ({ ...context });\n\n  Object.defineProperty(operation, \"setContext\", {\n    enumerable: false,\n    value: setContext,\n  });\n\n  Object.defineProperty(operation, \"getContext\", {\n    enumerable: false,\n    value: getContext,\n  });\n\n  return operation as Operation;\n}\n","import type { GraphQLRequest, Operation } from \"../core/index.js\";\nimport { getOperationName } from \"../../utilities/index.js\";\n\nexport function transformOperation(operation: GraphQLRequest): GraphQLRequest {\n  const transformedOperation: GraphQLRequest = {\n    variables: operation.variables || {},\n    extensions: operation.extensions || {},\n    operationName: operation.operationName,\n    query: operation.query,\n  };\n\n  // Best guess at an operation name\n  if (!transformedOperation.operationName) {\n    transformedOperation.operationName =\n      typeof transformedOperation.query !== \"string\" ?\n        getOperationName(transformedOperation.query) || undefined\n      : \"\";\n  }\n\n  return transformedOperation as Operation;\n}\n","import { newInvariantError } from \"../../utilities/globals/index.js\";\nimport type { GraphQLRequest } from \"../core/index.js\";\n\nexport function validateOperation(operation: GraphQLRequest): GraphQLRequest {\n  const OPERATION_FIELDS = [\n    \"query\",\n    \"operationName\",\n    \"variables\",\n    \"extensions\",\n    \"context\",\n  ];\n  for (let key of Object.keys(operation)) {\n    if (OPERATION_FIELDS.indexOf(key) < 0) {\n      throw newInvariantError(`illegal argument: %s`, key);\n    }\n  }\n\n  return operation;\n}\n","export function devAssert(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n","const MAX_ARRAY_LENGTH = 10;\nconst MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nexport function inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (typeof value) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? `[function ${value.name}]` : '[function]';\n\n    case 'object':\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (value === null) {\n    return 'null';\n  }\n\n  if (previouslySeenValues.includes(value)) {\n    return '[Circular]';\n  }\n\n  const seenValues = [...previouslySeenValues, value];\n\n  if (isJSONable(value)) {\n    const jsonValue = value.toJSON(); // check for infinite recursion\n\n    if (jsonValue !== value) {\n      return typeof jsonValue === 'string'\n        ? jsonValue\n        : formatValue(jsonValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction isJSONable(value) {\n  return typeof value.toJSON === 'function';\n}\n\nfunction formatObject(object, seenValues) {\n  const entries = Object.entries(object);\n\n  if (entries.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  const properties = entries.map(\n    ([key, value]) => key + ': ' + formatValue(value, seenValues),\n  );\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  const len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  const remaining = array.length - len;\n  const items = [];\n\n  for (let i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(`... ${remaining} more items`);\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getObjectTag(object) {\n  const tag = Object.prototype.toString\n    .call(object)\n    .replace(/^\\[object /, '')\n    .replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    const name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n","/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nexport class Location {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  constructor(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Location';\n  }\n\n  toJSON() {\n    return {\n      start: this.start,\n      end: this.end,\n    };\n  }\n}\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nexport class Token {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   *\n   * Note: is undefined for punctuation tokens, but typed as string for\n   * convenience in the parser.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  constructor(kind, start, end, line, column, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    this.value = value;\n    this.prev = null;\n    this.next = null;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Token';\n  }\n\n  toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column,\n    };\n  }\n}\n/**\n * The list of all possible AST node types.\n */\n\n/**\n * @internal\n */\nexport const QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: [\n    'name',\n    'variableDefinitions',\n    'directives',\n    'selectionSet',\n  ],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: [\n    'name', // Note: fragment variable definitions are deprecated and will removed in v17.0.0\n    'variableDefinitions',\n    'typeCondition',\n    'directives',\n    'selectionSet',\n  ],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: [\n    'description',\n    'name',\n    'type',\n    'defaultValue',\n    'directives',\n  ],\n  InterfaceTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields'],\n};\nconst kindValues = new Set(Object.keys(QueryDocumentKeys));\n/**\n * @internal\n */\n\nexport function isNode(maybeNode) {\n  const maybeKind =\n    maybeNode === null || maybeNode === void 0 ? void 0 : maybeNode.kind;\n  return typeof maybeKind === 'string' && kindValues.has(maybeKind);\n}\n/** Name */\n\nvar OperationTypeNode;\n\n(function (OperationTypeNode) {\n  OperationTypeNode['QUERY'] = 'query';\n  OperationTypeNode['MUTATION'] = 'mutation';\n  OperationTypeNode['SUBSCRIPTION'] = 'subscription';\n})(OperationTypeNode || (OperationTypeNode = {}));\n\nexport { OperationTypeNode };\n","/**\n * The set of allowed kind values for AST nodes.\n */\nvar Kind;\n\n(function (Kind) {\n  Kind['NAME'] = 'Name';\n  Kind['DOCUMENT'] = 'Document';\n  Kind['OPERATION_DEFINITION'] = 'OperationDefinition';\n  Kind['VARIABLE_DEFINITION'] = 'VariableDefinition';\n  Kind['SELECTION_SET'] = 'SelectionSet';\n  Kind['FIELD'] = 'Field';\n  Kind['ARGUMENT'] = 'Argument';\n  Kind['FRAGMENT_SPREAD'] = 'FragmentSpread';\n  Kind['INLINE_FRAGMENT'] = 'InlineFragment';\n  Kind['FRAGMENT_DEFINITION'] = 'FragmentDefinition';\n  Kind['VARIABLE'] = 'Variable';\n  Kind['INT'] = 'IntValue';\n  Kind['FLOAT'] = 'FloatValue';\n  Kind['STRING'] = 'StringValue';\n  Kind['BOOLEAN'] = 'BooleanValue';\n  Kind['NULL'] = 'NullValue';\n  Kind['ENUM'] = 'EnumValue';\n  Kind['LIST'] = 'ListValue';\n  Kind['OBJECT'] = 'ObjectValue';\n  Kind['OBJECT_FIELD'] = 'ObjectField';\n  Kind['DIRECTIVE'] = 'Directive';\n  Kind['NAMED_TYPE'] = 'NamedType';\n  Kind['LIST_TYPE'] = 'ListType';\n  Kind['NON_NULL_TYPE'] = 'NonNullType';\n  Kind['SCHEMA_DEFINITION'] = 'SchemaDefinition';\n  Kind['OPERATION_TYPE_DEFINITION'] = 'OperationTypeDefinition';\n  Kind['SCALAR_TYPE_DEFINITION'] = 'ScalarTypeDefinition';\n  Kind['OBJECT_TYPE_DEFINITION'] = 'ObjectTypeDefinition';\n  Kind['FIELD_DEFINITION'] = 'FieldDefinition';\n  Kind['INPUT_VALUE_DEFINITION'] = 'InputValueDefinition';\n  Kind['INTERFACE_TYPE_DEFINITION'] = 'InterfaceTypeDefinition';\n  Kind['UNION_TYPE_DEFINITION'] = 'UnionTypeDefinition';\n  Kind['ENUM_TYPE_DEFINITION'] = 'EnumTypeDefinition';\n  Kind['ENUM_VALUE_DEFINITION'] = 'EnumValueDefinition';\n  Kind['INPUT_OBJECT_TYPE_DEFINITION'] = 'InputObjectTypeDefinition';\n  Kind['DIRECTIVE_DEFINITION'] = 'DirectiveDefinition';\n  Kind['SCHEMA_EXTENSION'] = 'SchemaExtension';\n  Kind['SCALAR_TYPE_EXTENSION'] = 'ScalarTypeExtension';\n  Kind['OBJECT_TYPE_EXTENSION'] = 'ObjectTypeExtension';\n  Kind['INTERFACE_TYPE_EXTENSION'] = 'InterfaceTypeExtension';\n  Kind['UNION_TYPE_EXTENSION'] = 'UnionTypeExtension';\n  Kind['ENUM_TYPE_EXTENSION'] = 'EnumTypeExtension';\n  Kind['INPUT_OBJECT_TYPE_EXTENSION'] = 'InputObjectTypeExtension';\n})(Kind || (Kind = {}));\n\nexport { Kind };\n/**\n * The enum type representing the possible kind values of AST nodes.\n *\n * @deprecated Please use `Kind`. Will be remove in v17.\n */\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { isNode, QueryDocumentKeys } from './ast.mjs';\nimport { Kind } from './kinds.mjs';\n/**\n * A visitor is provided to visit, it contains the collection of\n * relevant functions to be called during the visitor's traversal.\n */\n\nexport const BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth-first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n * ```ts\n * const editedAST = visit(ast, {\n *   enter(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: skip visiting this node\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   },\n *   leave(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: no action\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   }\n * });\n * ```\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to three permutations of the\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind(node) {\n *     // enter the \"Kind\" node\n *   }\n * })\n * ```\n *\n * 2) Named visitors that trigger upon entering and leaving a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind: {\n *     enter(node) {\n *       // enter the \"Kind\" node\n *     }\n *     leave(node) {\n *       // leave the \"Kind\" node\n *     }\n *   }\n * })\n * ```\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n * ```ts\n * visit(ast, {\n *   enter(node) {\n *     // enter any node\n *   },\n *   leave(node) {\n *     // leave any node\n *   }\n * })\n * ```\n */\n\nexport function visit(root, visitor, visitorKeys = QueryDocumentKeys) {\n  const enterLeaveMap = new Map();\n\n  for (const kind of Object.values(Kind)) {\n    enterLeaveMap.set(kind, getEnterLeaveForKind(visitor, kind));\n  }\n  /* eslint-disable no-undef-init */\n\n  let stack = undefined;\n  let inArray = Array.isArray(root);\n  let keys = [root];\n  let index = -1;\n  let edits = [];\n  let node = root;\n  let key = undefined;\n  let parent = undefined;\n  const path = [];\n  const ancestors = [];\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    const isLeaving = index === keys.length;\n    const isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n          let editOffset = 0;\n\n          for (const [editKey, editValue] of edits) {\n            const arrayKey = editKey - editOffset;\n\n            if (editValue === null) {\n              node.splice(arrayKey, 1);\n              editOffset++;\n            } else {\n              node[arrayKey] = editValue;\n            }\n          }\n        } else {\n          node = Object.defineProperties(\n            {},\n            Object.getOwnPropertyDescriptors(node),\n          );\n\n          for (const [editKey, editValue] of edits) {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else if (parent) {\n      key = inArray ? index : keys[index];\n      node = parent[key];\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      path.push(key);\n    }\n\n    let result;\n\n    if (!Array.isArray(node)) {\n      var _enterLeaveMap$get, _enterLeaveMap$get2;\n\n      isNode(node) || devAssert(false, `Invalid AST Node: ${inspect(node)}.`);\n      const visitFn = isLeaving\n        ? (_enterLeaveMap$get = enterLeaveMap.get(node.kind)) === null ||\n          _enterLeaveMap$get === void 0\n          ? void 0\n          : _enterLeaveMap$get.leave\n        : (_enterLeaveMap$get2 = enterLeaveMap.get(node.kind)) === null ||\n          _enterLeaveMap$get2 === void 0\n        ? void 0\n        : _enterLeaveMap$get2.enter;\n      result =\n        visitFn === null || visitFn === void 0\n          ? void 0\n          : visitFn.call(visitor, node, key, parent, path, ancestors);\n\n      if (result === BREAK) {\n        break;\n      }\n\n      if (result === false) {\n        if (!isLeaving) {\n          path.pop();\n          continue;\n        }\n      } else if (result !== undefined) {\n        edits.push([key, result]);\n\n        if (!isLeaving) {\n          if (isNode(result)) {\n            node = result;\n          } else {\n            path.pop();\n            continue;\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _node$kind;\n\n      stack = {\n        inArray,\n        index,\n        keys,\n        edits,\n        prev: stack,\n      };\n      inArray = Array.isArray(node);\n      keys = inArray\n        ? node\n        : (_node$kind = visitorKeys[node.kind]) !== null &&\n          _node$kind !== void 0\n        ? _node$kind\n        : [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    // New root\n    return edits[edits.length - 1][1];\n  }\n\n  return root;\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\nexport function visitInParallel(visitors) {\n  const skipping = new Array(visitors.length).fill(null);\n  const mergedVisitor = Object.create(null);\n\n  for (const kind of Object.values(Kind)) {\n    let hasVisitor = false;\n    const enterList = new Array(visitors.length).fill(undefined);\n    const leaveList = new Array(visitors.length).fill(undefined);\n\n    for (let i = 0; i < visitors.length; ++i) {\n      const { enter, leave } = getEnterLeaveForKind(visitors[i], kind);\n      hasVisitor || (hasVisitor = enter != null || leave != null);\n      enterList[i] = enter;\n      leaveList[i] = leave;\n    }\n\n    if (!hasVisitor) {\n      continue;\n    }\n\n    const mergedEnterLeave = {\n      enter(...args) {\n        const node = args[0];\n\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _enterList$i;\n\n            const result =\n              (_enterList$i = enterList[i]) === null || _enterList$i === void 0\n                ? void 0\n                : _enterList$i.apply(visitors[i], args);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      },\n\n      leave(...args) {\n        const node = args[0];\n\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _leaveList$i;\n\n            const result =\n              (_leaveList$i = leaveList[i]) === null || _leaveList$i === void 0\n                ? void 0\n                : _leaveList$i.apply(visitors[i], args);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          } else if (skipping[i] === node) {\n            skipping[i] = null;\n          }\n        }\n      },\n    };\n    mergedVisitor[kind] = mergedEnterLeave;\n  }\n\n  return mergedVisitor;\n}\n/**\n * Given a visitor instance and a node kind, return EnterLeaveVisitor for that kind.\n */\n\nexport function getEnterLeaveForKind(visitor, kind) {\n  const kindVisitor = visitor[kind];\n\n  if (typeof kindVisitor === 'object') {\n    // { Kind: { enter() {}, leave() {} } }\n    return kindVisitor;\n  } else if (typeof kindVisitor === 'function') {\n    // { Kind() {} }\n    return {\n      enter: kindVisitor,\n      leave: undefined,\n    };\n  } // { enter() {}, leave() {} }\n\n  return {\n    enter: visitor.enter,\n    leave: visitor.leave,\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n *\n * @deprecated Please use `getEnterLeaveForKind` instead. Will be removed in v17\n */\n\n/* c8 ignore next 8 */\n\nexport function getVisitFn(visitor, kind, isLeaving) {\n  const { enter, leave } = getEnterLeaveForKind(visitor, kind);\n  return isLeaving ? leave : enter;\n}\n","import { invariant } from \"../globals/index.js\";\n\n// Provides the methods that allow QueryManager to handle the `skip` and\n// `include` directives within GraphQL.\nimport type {\n  SelectionNode,\n  VariableNode,\n  BooleanValueNode,\n  DirectiveNode,\n  DocumentNode,\n  ArgumentNode,\n  ValueNode,\n  ASTNode,\n} from \"graphql\";\nimport { visit, BREAK } from \"graphql\";\n\nexport type DirectiveInfo = {\n  [fieldName: string]: { [argName: string]: any };\n};\n\nexport function shouldInclude(\n  { directives }: SelectionNode,\n  variables?: Record<string, any>\n): boolean {\n  if (!directives || !directives.length) {\n    return true;\n  }\n  return getInclusionDirectives(directives).every(\n    ({ directive, ifArgument }) => {\n      let evaledValue: boolean = false;\n      if (ifArgument.value.kind === \"Variable\") {\n        evaledValue =\n          variables && variables[(ifArgument.value as VariableNode).name.value];\n        invariant(\n          evaledValue !== void 0,\n          `Invalid variable referenced in @%s directive.`,\n          directive.name.value\n        );\n      } else {\n        evaledValue = (ifArgument.value as BooleanValueNode).value;\n      }\n      return directive.name.value === \"skip\" ? !evaledValue : evaledValue;\n    }\n  );\n}\n\nexport function getDirectiveNames(root: ASTNode) {\n  const names: string[] = [];\n\n  visit(root, {\n    Directive(node: DirectiveNode) {\n      names.push(node.name.value);\n    },\n  });\n\n  return names;\n}\n\nexport const hasAnyDirectives = (names: string[], root: ASTNode) =>\n  hasDirectives(names, root, false);\n\nexport const hasAllDirectives = (names: string[], root: ASTNode) =>\n  hasDirectives(names, root, true);\n\nexport function hasDirectives(names: string[], root: ASTNode, all?: boolean) {\n  const nameSet = new Set(names);\n  const uniqueCount = nameSet.size;\n\n  visit(root, {\n    Directive(node) {\n      if (nameSet.delete(node.name.value) && (!all || !nameSet.size)) {\n        return BREAK;\n      }\n    },\n  });\n\n  // If we found all the names, nameSet will be empty. If we only care about\n  // finding some of them, the < condition is sufficient.\n  return all ? !nameSet.size : nameSet.size < uniqueCount;\n}\n\nexport function hasClientExports(document: DocumentNode) {\n  return document && hasDirectives([\"client\", \"export\"], document, true);\n}\n\nexport type InclusionDirectives = Array<{\n  directive: DirectiveNode;\n  ifArgument: ArgumentNode;\n}>;\n\nfunction isInclusionDirective({ name: { value } }: DirectiveNode): boolean {\n  return value === \"skip\" || value === \"include\";\n}\n\nexport function getInclusionDirectives(\n  directives: ReadonlyArray<DirectiveNode>\n): InclusionDirectives {\n  const result: InclusionDirectives = [];\n\n  if (directives && directives.length) {\n    directives.forEach((directive) => {\n      if (!isInclusionDirective(directive)) return;\n\n      const directiveArguments = directive.arguments;\n      const directiveName = directive.name.value;\n\n      invariant(\n        directiveArguments && directiveArguments.length === 1,\n        `Incorrect number of arguments for the @%s directive.`,\n        directiveName\n      );\n\n      const ifArgument = directiveArguments![0];\n      invariant(\n        ifArgument.name && ifArgument.name.value === \"if\",\n        `Invalid argument for the @%s directive.`,\n        directiveName\n      );\n\n      const ifValue: ValueNode = ifArgument.value;\n\n      // means it has to be a variable value if this is a valid @skip or @include directive\n      invariant(\n        ifValue &&\n          (ifValue.kind === \"Variable\" || ifValue.kind === \"BooleanValue\"),\n        `Argument for the @%s directive must be a variable or a boolean value.`,\n        directiveName\n      );\n\n      result.push({ directive, ifArgument });\n    });\n  }\n\n  return result;\n}\n","import { newInvariantError } from \"../../utilities/globals/index.js\";\nimport type { InvariantError } from \"../../utilities/globals/index.js\";\n\nexport type ClientParseError = InvariantError & {\n  parseError: Error;\n};\n\nexport const serializeFetchParameter = (p: any, label: string) => {\n  let serialized;\n  try {\n    serialized = JSON.stringify(p);\n  } catch (e: any) {\n    const parseError = newInvariantError(\n      `Network request failed. %s is not serializable: %s`,\n      label,\n      e.message\n    ) as ClientParseError;\n    parseError.parseError = e;\n    throw parseError;\n  }\n  return serialized;\n};\n","/**\n * Original source:\n * https://github.com/kmalakoff/response-iterator/blob/master/src/iterators/nodeStream.ts\n */\n\nimport type { Readable as NodeReadableStream } from \"stream\";\nimport { canUseAsyncIteratorSymbol } from \"../../../utilities/index.js\";\n\ninterface NodeStreamIterator<T> {\n  next(): Promise<IteratorResult<T, boolean | undefined>>;\n  [Symbol.asyncIterator]?(): AsyncIterator<T>;\n}\n\nexport default function nodeStreamIterator<T>(\n  stream: NodeReadableStream\n): AsyncIterableIterator<T> {\n  let cleanup: (() => void) | null = null;\n  let error: Error | null = null;\n  let done = false;\n  const data: unknown[] = [];\n\n  const waiting: [\n    (\n      value:\n        | IteratorResult<T, boolean | undefined>\n        | PromiseLike<IteratorResult<T, boolean | undefined>>\n    ) => void,\n    (reason?: any) => void,\n  ][] = [];\n\n  function onData(chunk: any) {\n    if (error) return;\n    if (waiting.length) {\n      const shiftedArr = waiting.shift();\n      if (Array.isArray(shiftedArr) && shiftedArr[0]) {\n        return shiftedArr[0]({ value: chunk, done: false });\n      }\n    }\n    data.push(chunk);\n  }\n  function onError(err: Error) {\n    error = err;\n    const all = waiting.slice();\n    all.forEach(function (pair) {\n      pair[1](err);\n    });\n    !cleanup || cleanup();\n  }\n  function onEnd() {\n    done = true;\n    const all = waiting.slice();\n    all.forEach(function (pair) {\n      pair[0]({ value: undefined, done: true });\n    });\n    !cleanup || cleanup();\n  }\n\n  cleanup = function () {\n    cleanup = null;\n    stream.removeListener(\"data\", onData);\n    stream.removeListener(\"error\", onError);\n    stream.removeListener(\"end\", onEnd);\n    stream.removeListener(\"finish\", onEnd);\n    stream.removeListener(\"close\", onEnd);\n  };\n  stream.on(\"data\", onData);\n  stream.on(\"error\", onError);\n  stream.on(\"end\", onEnd);\n  stream.on(\"finish\", onEnd);\n  stream.on(\"close\", onEnd);\n\n  function getNext(): Promise<IteratorResult<T, boolean | undefined>> {\n    return new Promise(function (resolve, reject) {\n      if (error) return reject(error);\n      if (data.length)\n        return resolve({ value: data.shift() as T, done: false });\n      if (done) return resolve({ value: undefined, done: true });\n      waiting.push([resolve, reject]);\n    });\n  }\n\n  const iterator: NodeStreamIterator<T> = {\n    next(): Promise<IteratorResult<T, boolean | undefined>> {\n      return getNext();\n    },\n  };\n\n  if (canUseAsyncIteratorSymbol) {\n    iterator[Symbol.asyncIterator] = function (): AsyncIterator<T> {\n      return this;\n    };\n  }\n\n  return iterator as AsyncIterableIterator<T>;\n}\n","/**\n * Original source:\n * https://github.com/kmalakoff/response-iterator/blob/master/src/iterators/reader.ts\n */\n\nimport { canUseAsyncIteratorSymbol } from \"../../../utilities/index.js\";\n\ninterface ReaderIterator<T> {\n  next(): Promise<IteratorResult<T, T | undefined>>;\n  [Symbol.asyncIterator]?(): AsyncIterator<T>;\n}\n\nexport default function readerIterator<T>(\n  reader: ReadableStreamDefaultReader<T>\n): AsyncIterableIterator<T> {\n  const iterator: ReaderIterator<T> = {\n    next() {\n      return reader.read() as Promise<\n        | ReadableStreamReadValueResult<T>\n        // DoneResult has `value` optional, which doesn't comply with an\n        // `IteratorResult`, so we assert it to `T | undefined` instead\n        | Required<ReadableStreamReadDoneResult<T | undefined>>\n      >;\n    },\n  };\n\n  if (canUseAsyncIteratorSymbol) {\n    iterator[Symbol.asyncIterator] = function (): AsyncIterator<\n      T,\n      T | undefined\n    > {\n      return this;\n    };\n  }\n\n  return iterator as AsyncIterableIterator<T>;\n}\n","/**\n * Original source:\n * https://github.com/kmalakoff/response-iterator/blob/master/src/index.ts\n */\n\nimport type { Response as NodeResponse } from \"node-fetch\";\nimport type { Readable as NodeReadableStream } from \"stream\";\nimport { canUseAsyncIteratorSymbol } from \"../../utilities/index.js\";\n\nimport asyncIterator from \"./iterators/async.js\";\nimport nodeStreamIterator from \"./iterators/nodeStream.js\";\nimport promiseIterator from \"./iterators/promise.js\";\nimport readerIterator from \"./iterators/reader.js\";\n\nfunction isNodeResponse(value: any): value is NodeResponse {\n  return !!(value as NodeResponse).body;\n}\n\nfunction isReadableStream(value: any): value is ReadableStream<any> {\n  return !!(value as ReadableStream<any>).getReader;\n}\n\nfunction isAsyncIterableIterator(\n  value: any\n): value is AsyncIterableIterator<any> {\n  return !!(\n    canUseAsyncIteratorSymbol &&\n    (value as AsyncIterableIterator<any>)[Symbol.asyncIterator]\n  );\n}\n\nfunction isStreamableBlob(value: any): value is Blob {\n  return !!(value as Blob).stream;\n}\n\nfunction isBlob(value: any): value is Blob {\n  return !!(value as Blob).arrayBuffer;\n}\n\nfunction isNodeReadableStream(value: any): value is NodeReadableStream {\n  return !!(value as NodeReadableStream).pipe;\n}\n\nexport function responseIterator<T>(\n  response: Response | NodeResponse\n): AsyncIterableIterator<T> {\n  let body: unknown = response;\n\n  if (isNodeResponse(response)) body = response.body;\n\n  if (isAsyncIterableIterator(body)) return asyncIterator<T>(body);\n\n  if (isReadableStream(body)) return readerIterator<T>(body.getReader());\n\n  // this errors without casting to ReadableStream<T>\n  // because Blob.stream() returns a NodeJS ReadableStream\n  if (isStreamableBlob(body)) {\n    return readerIterator<T>(\n      (body.stream() as unknown as ReadableStream<T>).getReader()\n    );\n  }\n\n  if (isBlob(body)) return promiseIterator<T>(body.arrayBuffer());\n\n  if (isNodeReadableStream(body)) return nodeStreamIterator<T>(body);\n\n  throw new Error(\n    \"Unknown body type for responseIterator. Please pass a streamable response.\"\n  );\n}\n","/**\n * Original source:\n * https://github.com/kmalakoff/response-iterator/blob/master/src/iterators/async.ts\n */\n\nexport default function asyncIterator<T>(\n  source: AsyncIterableIterator<T>\n): AsyncIterableIterator<T> {\n  const iterator = source[Symbol.asyncIterator]();\n  return {\n    next(): Promise<IteratorResult<T, boolean>> {\n      return iterator.next();\n    },\n    [Symbol.asyncIterator](): AsyncIterableIterator<T> {\n      return this;\n    },\n  };\n}\n","/**\n * Original source:\n * https://github.com/kmalakoff/response-iterator/blob/master/src/iterators/promise.ts\n */\n\nimport { canUseAsyncIteratorSymbol } from \"../../../utilities/index.js\";\n\ninterface PromiseIterator<T> {\n  next(): Promise<IteratorResult<T, ArrayBuffer | undefined>>;\n  [Symbol.asyncIterator]?(): AsyncIterator<T>;\n}\n\nexport default function promiseIterator<T = ArrayBuffer>(\n  promise: Promise<ArrayBuffer>\n): AsyncIterableIterator<T> {\n  let resolved = false;\n\n  const iterator: PromiseIterator<T> = {\n    next(): Promise<IteratorResult<T, ArrayBuffer | undefined>> {\n      if (resolved)\n        return Promise.resolve({\n          value: undefined,\n          done: true,\n        });\n      resolved = true;\n      return new Promise(function (resolve, reject) {\n        promise\n          .then(function (value) {\n            resolve({ value: value as unknown as T, done: false });\n          })\n          .catch(reject);\n      });\n    },\n  };\n\n  if (canUseAsyncIteratorSymbol) {\n    iterator[Symbol.asyncIterator] = function (): AsyncIterator<T> {\n      return this;\n    };\n  }\n\n  return iterator as AsyncIterableIterator<T>;\n}\n","export type ServerError = Error & {\n  response: Response;\n  result: Record<string, any> | string;\n  statusCode: number;\n};\n\nexport const throwServerError = (\n  response: Response,\n  result: any,\n  message: string\n) => {\n  const error = new Error(message) as ServerError;\n  error.name = \"ServerError\";\n  error.response = response;\n  error.statusCode = response.status;\n  error.result = result;\n  throw error;\n};\n","import \"../utilities/globals/index.js\";\n\nimport type { GraphQLError, GraphQLErrorExtensions } from \"graphql\";\n\nimport { isNonNullObject } from \"../utilities/index.js\";\nimport type { ServerParseError } from \"../link/http/index.js\";\nimport type { ServerError } from \"../link/utils/index.js\";\nimport type { FetchResult } from \"../link/core/index.js\";\n\n// This Symbol allows us to pass transport-specific errors from the link chain\n// into QueryManager/client internals without risking a naming collision within\n// extensions (which implementers can use as they see fit).\nexport const PROTOCOL_ERRORS_SYMBOL: unique symbol = Symbol();\n\ntype FetchResultWithSymbolExtensions<T> = FetchResult<T> & {\n  extensions: Record<string | symbol, any>;\n};\n\nexport interface ApolloErrorOptions {\n  graphQLErrors?: ReadonlyArray<GraphQLError>;\n  protocolErrors?: ReadonlyArray<{\n    message: string;\n    extensions?: GraphQLErrorExtensions[];\n  }>;\n  clientErrors?: ReadonlyArray<Error>;\n  networkError?: Error | ServerParseError | ServerError | null;\n  errorMessage?: string;\n  extraInfo?: any;\n}\n\nexport function graphQLResultHasProtocolErrors<T>(\n  result: FetchResult<T>\n): result is FetchResultWithSymbolExtensions<T> {\n  if (result.extensions) {\n    return Array.isArray(\n      (result as FetchResultWithSymbolExtensions<T>).extensions[\n        PROTOCOL_ERRORS_SYMBOL\n      ]\n    );\n  }\n  return false;\n}\n\nexport function isApolloError(err: Error): err is ApolloError {\n  return err.hasOwnProperty(\"graphQLErrors\");\n}\n\n// Sets the error message on this error according to the\n// the GraphQL and network errors that are present.\n// If the error message has already been set through the\n// constructor or otherwise, this function is a nop.\nconst generateErrorMessage = (err: ApolloError) => {\n  const errors = [\n    ...err.graphQLErrors,\n    ...err.clientErrors,\n    ...err.protocolErrors,\n  ];\n  if (err.networkError) errors.push(err.networkError);\n  return (\n    errors\n      // The rest of the code sometimes unsafely types non-Error objects as GraphQLErrors\n      .map(\n        (err) =>\n          (isNonNullObject(err) && err.message) || \"Error message not found.\"\n      )\n      .join(\"\\n\")\n  );\n};\n\nexport type GraphQLErrors = ReadonlyArray<GraphQLError>;\n\nexport type NetworkError = Error | ServerParseError | ServerError | null;\n\nexport class ApolloError extends Error {\n  public name: string;\n  public message: string;\n  public graphQLErrors: GraphQLErrors;\n  public protocolErrors: ReadonlyArray<{\n    message: string;\n    extensions?: GraphQLErrorExtensions[];\n  }>;\n  public clientErrors: ReadonlyArray<Error>;\n  public networkError: Error | ServerParseError | ServerError | null;\n\n  // An object that can be used to provide some additional information\n  // about an error, e.g. specifying the type of error this is. Used\n  // internally within Apollo Client.\n  public extraInfo: any;\n\n  // Constructs an instance of ApolloError given a GraphQLError\n  // or a network error. Note that one of these has to be a valid\n  // value or the constructed error will be meaningless.\n  constructor({\n    graphQLErrors,\n    protocolErrors,\n    clientErrors,\n    networkError,\n    errorMessage,\n    extraInfo,\n  }: ApolloErrorOptions) {\n    super(errorMessage);\n    this.name = \"ApolloError\";\n    this.graphQLErrors = graphQLErrors || [];\n    this.protocolErrors = protocolErrors || [];\n    this.clientErrors = clientErrors || [];\n    this.networkError = networkError || null;\n    this.message = errorMessage || generateErrorMessage(this);\n    this.extraInfo = extraInfo;\n\n    // We're not using `Object.setPrototypeOf` here as it isn't fully\n    // supported on Android (see issue #3236).\n    (this as any).__proto__ = ApolloError.prototype;\n  }\n}\n","// A version of Array.isArray that works better with readonly arrays.\nexport const isArray: (a: any) => a is any[] | readonly any[] = Array.isArray;\n\nexport function isNonEmptyArray<T>(value?: ArrayLike<T>): value is Array<T> {\n  return Array.isArray(value) && value.length > 0;\n}\n","import { isNonNullObject } from \"./objects.js\";\n\nconst { hasOwnProperty } = Object.prototype;\n\n// These mergeDeep and mergeDeepArray utilities merge any number of objects\n// together, sharing as much memory as possible with the source objects, while\n// remaining careful to avoid modifying any source objects.\n\n// Logically, the return type of mergeDeep should be the intersection of\n// all the argument types. The binary call signature is by far the most\n// common, but we support 0- through 5-ary as well. After that, the\n// resulting type is just the inferred array element type. Note to nerds:\n// there is a more clever way of doing this that converts the tuple type\n// first to a union type (easy enough: T[number]) and then converts the\n// union to an intersection type using distributive conditional type\n// inference, but that approach has several fatal flaws (boolean becomes\n// true & false, and the inferred type ends up as unknown in many cases),\n// in addition to being nearly impossible to explain/understand.\nexport type TupleToIntersection<T extends any[]> =\n  T extends [infer A] ? A\n  : T extends [infer A, infer B] ? A & B\n  : T extends [infer A, infer B, infer C] ? A & B & C\n  : T extends [infer A, infer B, infer C, infer D] ? A & B & C & D\n  : T extends [infer A, infer B, infer C, infer D, infer E] ? A & B & C & D & E\n  : T extends (infer U)[] ? U\n  : any;\n\nexport function mergeDeep<T extends any[]>(\n  ...sources: T\n): TupleToIntersection<T> {\n  return mergeDeepArray(sources);\n}\n\n// In almost any situation where you could succeed in getting the\n// TypeScript compiler to infer a tuple type for the sources array, you\n// could just use mergeDeep instead of mergeDeepArray, so instead of\n// trying to convert T[] to an intersection type we just infer the array\n// element type, which works perfectly when the sources array has a\n// consistent element type.\nexport function mergeDeepArray<T>(sources: T[]): T {\n  let target = sources[0] || ({} as T);\n  const count = sources.length;\n  if (count > 1) {\n    const merger = new DeepMerger();\n    for (let i = 1; i < count; ++i) {\n      target = merger.merge(target, sources[i]);\n    }\n  }\n  return target;\n}\n\nexport type ReconcilerFunction<TContextArgs extends any[]> = (\n  this: DeepMerger<TContextArgs>,\n  target: Record<string | number, any>,\n  source: Record<string | number, any>,\n  property: string | number,\n  ...context: TContextArgs\n) => any;\n\nconst defaultReconciler: ReconcilerFunction<any[]> = function (\n  target,\n  source,\n  property\n) {\n  return this.merge(target[property], source[property]);\n};\n\nexport class DeepMerger<TContextArgs extends any[]> {\n  constructor(\n    private reconciler: ReconcilerFunction<TContextArgs> = defaultReconciler as any as ReconcilerFunction<TContextArgs>\n  ) {}\n\n  public merge(target: any, source: any, ...context: TContextArgs): any {\n    if (isNonNullObject(source) && isNonNullObject(target)) {\n      Object.keys(source).forEach((sourceKey) => {\n        if (hasOwnProperty.call(target, sourceKey)) {\n          const targetValue = target[sourceKey];\n          if (source[sourceKey] !== targetValue) {\n            const result = this.reconciler(\n              target,\n              source,\n              sourceKey,\n              ...context\n            );\n            // A well-implemented reconciler may return targetValue to indicate\n            // the merge changed nothing about the structure of the target.\n            if (result !== targetValue) {\n              target = this.shallowCopyForMerge(target);\n              target[sourceKey] = result;\n            }\n          }\n        } else {\n          // If there is no collision, the target can safely share memory with\n          // the source, and the recursion can terminate here.\n          target = this.shallowCopyForMerge(target);\n          target[sourceKey] = source[sourceKey];\n        }\n      });\n\n      return target;\n    }\n\n    // If source (or target) is not an object, let source replace target.\n    return source;\n  }\n\n  public isObject = isNonNullObject;\n\n  private pastCopies = new Set<any>();\n\n  public shallowCopyForMerge<T>(value: T): T {\n    if (isNonNullObject(value)) {\n      if (!this.pastCopies.has(value)) {\n        if (Array.isArray(value)) {\n          value = (value as any).slice(0);\n        } else {\n          value = {\n            __proto__: Object.getPrototypeOf(value),\n            ...value,\n          };\n        }\n        this.pastCopies.add(value);\n      }\n    }\n    return value;\n  }\n}\n","import type {\n  ExecutionPatchIncrementalResult,\n  ExecutionPatchInitialResult,\n  ExecutionPatchResult,\n  ApolloPayloadResult,\n  FetchResult,\n} from \"../../link/core/index.js\";\nimport { isNonNullObject } from \"./objects.js\";\nimport { isNonEmptyArray } from \"./arrays.js\";\nimport { DeepMerger } from \"./mergeDeep.js\";\n\nexport function isExecutionPatchIncrementalResult<T>(\n  value: FetchResult<T>\n): value is ExecutionPatchIncrementalResult {\n  return \"incremental\" in value;\n}\n\nexport function isExecutionPatchInitialResult<T>(\n  value: FetchResult<T>\n): value is ExecutionPatchInitialResult<T> {\n  return \"hasNext\" in value && \"data\" in value;\n}\n\nexport function isExecutionPatchResult<T>(\n  value: FetchResult<T>\n): value is ExecutionPatchResult<T> {\n  return (\n    isExecutionPatchIncrementalResult(value) ||\n    isExecutionPatchInitialResult(value)\n  );\n}\n\n// This function detects an Apollo payload result before it is transformed\n// into a FetchResult via HttpLink; it cannot detect an ApolloPayloadResult\n// once it leaves the link chain.\nexport function isApolloPayloadResult(\n  value: unknown\n): value is ApolloPayloadResult {\n  return isNonNullObject(value) && \"payload\" in value;\n}\n\nexport function mergeIncrementalData<TData extends object>(\n  prevResult: TData,\n  result: ExecutionPatchResult<TData>\n) {\n  let mergedData = prevResult;\n  const merger = new DeepMerger();\n  if (\n    isExecutionPatchIncrementalResult(result) &&\n    isNonEmptyArray(result.incremental)\n  ) {\n    result.incremental.forEach(({ data, path }) => {\n      for (let i = path.length - 1; i >= 0; --i) {\n        const key = path[i];\n        const isNumericKey = !isNaN(+key);\n        const parent: Record<string | number, any> = isNumericKey ? [] : {};\n        parent[key] = data;\n        data = parent as typeof data;\n      }\n      mergedData = merger.merge(mergedData, data);\n    });\n  }\n  return mergedData as TData;\n}\n","import { responseIterator } from \"./responseIterator.js\";\nimport type { Operation } from \"../core/index.js\";\nimport { throwServerError } from \"../utils/index.js\";\nimport { PROTOCOL_ERRORS_SYMBOL } from \"../../errors/index.js\";\nimport { isApolloPayloadResult } from \"../../utilities/common/incrementalResult.js\";\nimport type { SubscriptionObserver } from \"zen-observable-ts\";\n\nconst { hasOwnProperty } = Object.prototype;\n\nexport type ServerParseError = Error & {\n  response: Response;\n  statusCode: number;\n  bodyText: string;\n};\n\nexport async function readMultipartBody<\n  T extends object = Record<string, unknown>,\n>(response: Response, nextValue: (value: T) => void) {\n  if (TextDecoder === undefined) {\n    throw new Error(\n      \"TextDecoder must be defined in the environment: please import a polyfill.\"\n    );\n  }\n  const decoder = new TextDecoder(\"utf-8\");\n  const contentType = response.headers?.get(\"content-type\");\n  const delimiter = \"boundary=\";\n\n  // parse boundary value and ignore any subsequent name/value pairs after ;\n  // https://www.rfc-editor.org/rfc/rfc9110.html#name-parameters\n  // e.g. multipart/mixed;boundary=\"graphql\";deferSpec=20220824\n  // if no boundary is specified, default to -\n  const boundaryVal =\n    contentType?.includes(delimiter) ?\n      contentType\n        ?.substring(contentType?.indexOf(delimiter) + delimiter.length)\n        .replace(/['\"]/g, \"\")\n        .replace(/\\;(.*)/gm, \"\")\n        .trim()\n    : \"-\";\n\n  const boundary = `\\r\\n--${boundaryVal}`;\n  let buffer = \"\";\n  const iterator = responseIterator(response);\n  let running = true;\n\n  while (running) {\n    const { value, done } = await iterator.next();\n    const chunk = typeof value === \"string\" ? value : decoder.decode(value);\n    const searchFrom = buffer.length - boundary.length + 1;\n    running = !done;\n    buffer += chunk;\n    let bi = buffer.indexOf(boundary, searchFrom);\n\n    while (bi > -1) {\n      let message: string;\n      [message, buffer] = [\n        buffer.slice(0, bi),\n        buffer.slice(bi + boundary.length),\n      ];\n      const i = message.indexOf(\"\\r\\n\\r\\n\");\n      const headers = parseHeaders(message.slice(0, i));\n      const contentType = headers[\"content-type\"];\n      if (\n        contentType &&\n        contentType.toLowerCase().indexOf(\"application/json\") === -1\n      ) {\n        throw new Error(\n          \"Unsupported patch content type: application/json is required.\"\n        );\n      }\n      // nb: Technically you'd want to slice off the beginning \"\\r\\n\" but since\n      // this is going to be `JSON.parse`d there is no need.\n      const body = message.slice(i);\n\n      if (body) {\n        const result = parseJsonBody<T>(response, body);\n        if (\n          Object.keys(result).length > 1 ||\n          \"data\" in result ||\n          \"incremental\" in result ||\n          \"errors\" in result ||\n          \"payload\" in result\n        ) {\n          if (isApolloPayloadResult(result)) {\n            let next = {};\n            if (\"payload\" in result) {\n              if (Object.keys(result).length === 1 && result.payload === null) {\n                return;\n              }\n              next = { ...result.payload };\n            }\n            if (\"errors\" in result) {\n              next = {\n                ...next,\n                extensions: {\n                  ...(\"extensions\" in next ? next.extensions : (null as any)),\n                  [PROTOCOL_ERRORS_SYMBOL]: result.errors,\n                },\n              };\n            }\n            nextValue(next as T);\n          } else {\n            // for the last chunk with only `hasNext: false`\n            // we don't need to call observer.next as there is no data/errors\n            nextValue(result);\n          }\n        } else if (\n          // If the chunk contains only a \"hasNext: false\", we can call\n          // observer.complete() immediately.\n          Object.keys(result).length === 1 &&\n          \"hasNext\" in result &&\n          !result.hasNext\n        ) {\n          return;\n        }\n      }\n      bi = buffer.indexOf(boundary);\n    }\n  }\n}\n\nexport function parseHeaders(headerText: string): Record<string, string> {\n  const headersInit: Record<string, string> = {};\n  headerText.split(\"\\n\").forEach((line) => {\n    const i = line.indexOf(\":\");\n    if (i > -1) {\n      // normalize headers to lowercase\n      const name = line.slice(0, i).trim().toLowerCase();\n      const value = line.slice(i + 1).trim();\n      headersInit[name] = value;\n    }\n  });\n  return headersInit;\n}\n\nexport function parseJsonBody<T>(response: Response, bodyText: string): T {\n  if (response.status >= 300) {\n    // Network error\n    const getResult = (): Record<string, unknown> | string => {\n      try {\n        return JSON.parse(bodyText);\n      } catch (err) {\n        return bodyText;\n      }\n    };\n    throwServerError(\n      response,\n      getResult(),\n      `Response not successful: Received status code ${response.status}`\n    );\n  }\n\n  try {\n    return JSON.parse(bodyText) as T;\n  } catch (err) {\n    const parseError = err as ServerParseError;\n    parseError.name = \"ServerParseError\";\n    parseError.response = response;\n    parseError.statusCode = response.status;\n    parseError.bodyText = bodyText;\n    throw parseError;\n  }\n}\n\nexport function handleError(err: any, observer: SubscriptionObserver<any>) {\n  // if it is a network error, BUT there is graphql result info fire\n  // the next observer before calling error this gives apollo-client\n  // (and react-apollo) the `graphqlErrors` and `networkErrors` to\n  // pass to UI this should only happen if we *also* have data as\n  // part of the response key per the spec\n  if (err.result && err.result.errors && err.result.data) {\n    // if we don't call next, the UI can only show networkError\n    // because AC didn't get any graphqlErrors this is graphql\n    // execution result info (i.e errors and possibly data) this is\n    // because there is no formal spec how errors should translate to\n    // http status codes. So an auth error (401) could have both data\n    // from a public field, errors from a private field, and a status\n    // of 401\n    // {\n    //  user { // this will have errors\n    //    firstName\n    //  }\n    //  products { // this is public so will have data\n    //    cost\n    //  }\n    // }\n    //\n    // the result of above *could* look like this:\n    // {\n    //   data: { products: [{ cost: \"$10\" }] },\n    //   errors: [{\n    //      message: 'your session has timed out',\n    //      path: []\n    //   }]\n    // }\n    // status code of above would be a 401\n    // in the UI you want to show data where you can, errors as data where you can\n    // and use correct http status codes\n    observer.next(err.result);\n  }\n\n  observer.error(err);\n}\n\nexport function parseAndCheckHttpResponse(operations: Operation | Operation[]) {\n  return (response: Response) =>\n    response\n      .text()\n      .then((bodyText) => parseJsonBody(response, bodyText))\n      .then((result: any) => {\n        if (\n          !Array.isArray(result) &&\n          !hasOwnProperty.call(result, \"data\") &&\n          !hasOwnProperty.call(result, \"errors\")\n        ) {\n          // Data error\n          throwServerError(\n            response,\n            result,\n            `Server response was missing for query '${\n              Array.isArray(operations) ?\n                operations.map((op) => op.operationName)\n              : operations.operationName\n            }'.`\n          );\n        }\n        return result;\n      });\n}\n","/**\n * ```\n * WhiteSpace ::\n *   - \"Horizontal Tab (U+0009)\"\n *   - \"Space (U+0020)\"\n * ```\n * @internal\n */\nexport function isWhiteSpace(code) {\n  return code === 0x0009 || code === 0x0020;\n}\n/**\n * ```\n * Digit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n * ```\n * @internal\n */\n\nexport function isDigit(code) {\n  return code >= 0x0030 && code <= 0x0039;\n}\n/**\n * ```\n * Letter :: one of\n *   - `A` `B` `C` `D` `E` `F` `G` `H` `I` `J` `K` `L` `M`\n *   - `N` `O` `P` `Q` `R` `S` `T` `U` `V` `W` `X` `Y` `Z`\n *   - `a` `b` `c` `d` `e` `f` `g` `h` `i` `j` `k` `l` `m`\n *   - `n` `o` `p` `q` `r` `s` `t` `u` `v` `w` `x` `y` `z`\n * ```\n * @internal\n */\n\nexport function isLetter(code) {\n  return (\n    (code >= 0x0061 && code <= 0x007a) || // A-Z\n    (code >= 0x0041 && code <= 0x005a) // a-z\n  );\n}\n/**\n * ```\n * NameStart ::\n *   - Letter\n *   - `_`\n * ```\n * @internal\n */\n\nexport function isNameStart(code) {\n  return isLetter(code) || code === 0x005f;\n}\n/**\n * ```\n * NameContinue ::\n *   - Letter\n *   - Digit\n *   - `_`\n * ```\n * @internal\n */\n\nexport function isNameContinue(code) {\n  return isLetter(code) || isDigit(code) || code === 0x005f;\n}\n","/**\n * Prints a string as a GraphQL StringValue literal. Replaces control characters\n * and excluded characters (\" U+0022 and \\\\ U+005C) with escape sequences.\n */\nexport function printString(str) {\n  return `\"${str.replace(escapedRegExp, escapedReplacer)}\"`;\n} // eslint-disable-next-line no-control-regex\n\nconst escapedRegExp = /[\\x00-\\x1f\\x22\\x5c\\x7f-\\x9f]/g;\n\nfunction escapedReplacer(str) {\n  return escapeSequences[str.charCodeAt(0)];\n} // prettier-ignore\n\nconst escapeSequences = [\n  '\\\\u0000',\n  '\\\\u0001',\n  '\\\\u0002',\n  '\\\\u0003',\n  '\\\\u0004',\n  '\\\\u0005',\n  '\\\\u0006',\n  '\\\\u0007',\n  '\\\\b',\n  '\\\\t',\n  '\\\\n',\n  '\\\\u000B',\n  '\\\\f',\n  '\\\\r',\n  '\\\\u000E',\n  '\\\\u000F',\n  '\\\\u0010',\n  '\\\\u0011',\n  '\\\\u0012',\n  '\\\\u0013',\n  '\\\\u0014',\n  '\\\\u0015',\n  '\\\\u0016',\n  '\\\\u0017',\n  '\\\\u0018',\n  '\\\\u0019',\n  '\\\\u001A',\n  '\\\\u001B',\n  '\\\\u001C',\n  '\\\\u001D',\n  '\\\\u001E',\n  '\\\\u001F',\n  '',\n  '',\n  '\\\\\"',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 2F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 3F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 4F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '\\\\\\\\',\n  '',\n  '',\n  '', // 5F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 6F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '\\\\u007F',\n  '\\\\u0080',\n  '\\\\u0081',\n  '\\\\u0082',\n  '\\\\u0083',\n  '\\\\u0084',\n  '\\\\u0085',\n  '\\\\u0086',\n  '\\\\u0087',\n  '\\\\u0088',\n  '\\\\u0089',\n  '\\\\u008A',\n  '\\\\u008B',\n  '\\\\u008C',\n  '\\\\u008D',\n  '\\\\u008E',\n  '\\\\u008F',\n  '\\\\u0090',\n  '\\\\u0091',\n  '\\\\u0092',\n  '\\\\u0093',\n  '\\\\u0094',\n  '\\\\u0095',\n  '\\\\u0096',\n  '\\\\u0097',\n  '\\\\u0098',\n  '\\\\u0099',\n  '\\\\u009A',\n  '\\\\u009B',\n  '\\\\u009C',\n  '\\\\u009D',\n  '\\\\u009E',\n  '\\\\u009F',\n];\n","import { printBlockString } from './blockString.mjs';\nimport { printString } from './printString.mjs';\nimport { visit } from './visitor.mjs';\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\n\nexport function print(ast) {\n  return visit(ast, printDocASTReducer);\n}\nconst MAX_LINE_LENGTH = 80;\nconst printDocASTReducer = {\n  Name: {\n    leave: (node) => node.value,\n  },\n  Variable: {\n    leave: (node) => '$' + node.name,\n  },\n  // Document\n  Document: {\n    leave: (node) => join(node.definitions, '\\n\\n'),\n  },\n  OperationDefinition: {\n    leave(node) {\n      const varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n      const prefix = join(\n        [\n          node.operation,\n          join([node.name, varDefs]),\n          join(node.directives, ' '),\n        ],\n        ' ',\n      ); // Anonymous queries with no directives or variable definitions can use\n      // the query short form.\n\n      return (prefix === 'query' ? '' : prefix + ' ') + node.selectionSet;\n    },\n  },\n  VariableDefinition: {\n    leave: ({ variable, type, defaultValue, directives }) =>\n      variable +\n      ': ' +\n      type +\n      wrap(' = ', defaultValue) +\n      wrap(' ', join(directives, ' ')),\n  },\n  SelectionSet: {\n    leave: ({ selections }) => block(selections),\n  },\n  Field: {\n    leave({ alias, name, arguments: args, directives, selectionSet }) {\n      const prefix = wrap('', alias, ': ') + name;\n      let argsLine = prefix + wrap('(', join(args, ', '), ')');\n\n      if (argsLine.length > MAX_LINE_LENGTH) {\n        argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n      }\n\n      return join([argsLine, join(directives, ' '), selectionSet], ' ');\n    },\n  },\n  Argument: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Fragments\n  FragmentSpread: {\n    leave: ({ name, directives }) =>\n      '...' + name + wrap(' ', join(directives, ' ')),\n  },\n  InlineFragment: {\n    leave: ({ typeCondition, directives, selectionSet }) =>\n      join(\n        [\n          '...',\n          wrap('on ', typeCondition),\n          join(directives, ' '),\n          selectionSet,\n        ],\n        ' ',\n      ),\n  },\n  FragmentDefinition: {\n    leave: (\n      { name, typeCondition, variableDefinitions, directives, selectionSet }, // Note: fragment variable definitions are experimental and may be changed\n    ) =>\n      // or removed in the future.\n      `fragment ${name}${wrap('(', join(variableDefinitions, ', '), ')')} ` +\n      `on ${typeCondition} ${wrap('', join(directives, ' '), ' ')}` +\n      selectionSet,\n  },\n  // Value\n  IntValue: {\n    leave: ({ value }) => value,\n  },\n  FloatValue: {\n    leave: ({ value }) => value,\n  },\n  StringValue: {\n    leave: ({ value, block: isBlockString }) =>\n      isBlockString ? printBlockString(value) : printString(value),\n  },\n  BooleanValue: {\n    leave: ({ value }) => (value ? 'true' : 'false'),\n  },\n  NullValue: {\n    leave: () => 'null',\n  },\n  EnumValue: {\n    leave: ({ value }) => value,\n  },\n  ListValue: {\n    leave: ({ values }) => '[' + join(values, ', ') + ']',\n  },\n  ObjectValue: {\n    leave: ({ fields }) => '{' + join(fields, ', ') + '}',\n  },\n  ObjectField: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Directive\n  Directive: {\n    leave: ({ name, arguments: args }) =>\n      '@' + name + wrap('(', join(args, ', '), ')'),\n  },\n  // Type\n  NamedType: {\n    leave: ({ name }) => name,\n  },\n  ListType: {\n    leave: ({ type }) => '[' + type + ']',\n  },\n  NonNullType: {\n    leave: ({ type }) => type + '!',\n  },\n  // Type System Definitions\n  SchemaDefinition: {\n    leave: ({ description, directives, operationTypes }) =>\n      wrap('', description, '\\n') +\n      join(['schema', join(directives, ' '), block(operationTypes)], ' '),\n  },\n  OperationTypeDefinition: {\n    leave: ({ operation, type }) => operation + ': ' + type,\n  },\n  ScalarTypeDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') +\n      join(['scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  FieldDefinition: {\n    leave: ({ description, name, arguments: args, type, directives }) =>\n      wrap('', description, '\\n') +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      ': ' +\n      type +\n      wrap(' ', join(directives, ' ')),\n  },\n  InputValueDefinition: {\n    leave: ({ description, name, type, defaultValue, directives }) =>\n      wrap('', description, '\\n') +\n      join(\n        [name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')],\n        ' ',\n      ),\n  },\n  InterfaceTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeDefinition: {\n    leave: ({ description, name, directives, types }) =>\n      wrap('', description, '\\n') +\n      join(\n        ['union', name, join(directives, ' '), wrap('= ', join(types, ' | '))],\n        ' ',\n      ),\n  },\n  EnumTypeDefinition: {\n    leave: ({ description, name, directives, values }) =>\n      wrap('', description, '\\n') +\n      join(['enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  EnumValueDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') + join([name, join(directives, ' ')], ' '),\n  },\n  InputObjectTypeDefinition: {\n    leave: ({ description, name, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(['input', name, join(directives, ' '), block(fields)], ' '),\n  },\n  DirectiveDefinition: {\n    leave: ({ description, name, arguments: args, repeatable, locations }) =>\n      wrap('', description, '\\n') +\n      'directive @' +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      (repeatable ? ' repeatable' : '') +\n      ' on ' +\n      join(locations, ' | '),\n  },\n  SchemaExtension: {\n    leave: ({ directives, operationTypes }) =>\n      join(\n        ['extend schema', join(directives, ' '), block(operationTypes)],\n        ' ',\n      ),\n  },\n  ScalarTypeExtension: {\n    leave: ({ name, directives }) =>\n      join(['extend scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  InterfaceTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeExtension: {\n    leave: ({ name, directives, types }) =>\n      join(\n        [\n          'extend union',\n          name,\n          join(directives, ' '),\n          wrap('= ', join(types, ' | ')),\n        ],\n        ' ',\n      ),\n  },\n  EnumTypeExtension: {\n    leave: ({ name, directives, values }) =>\n      join(['extend enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  InputObjectTypeExtension: {\n    leave: ({ name, directives, fields }) =>\n      join(['extend input', name, join(directives, ' '), block(fields)], ' '),\n  },\n};\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\nfunction join(maybeArray, separator = '') {\n  var _maybeArray$filter$jo;\n\n  return (_maybeArray$filter$jo =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.filter((x) => x).join(separator)) !== null &&\n    _maybeArray$filter$jo !== void 0\n    ? _maybeArray$filter$jo\n    : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an indented `{ }` block.\n */\n\nfunction block(array) {\n  return wrap('{\\n', indent(join(array, '\\n')), '\\n}');\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise print an empty string.\n */\n\nfunction wrap(start, maybeString, end = '') {\n  return maybeString != null && maybeString !== ''\n    ? start + maybeString + end\n    : '';\n}\n\nfunction indent(str) {\n  return wrap('  ', str.replace(/\\n/g, '\\n  '));\n}\n\nfunction hasMultilineItems(maybeArray) {\n  var _maybeArray$some;\n\n  // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  /* c8 ignore next */\n  return (_maybeArray$some =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.some((str) => str.includes('\\n'))) !== null &&\n    _maybeArray$some !== void 0\n    ? _maybeArray$some\n    : false;\n}\n","import type { ASTNode } from \"graphql\";\nimport { print as origPrint } from \"graphql\";\nimport {\n  AutoCleanedWeakCache,\n  cacheSizes,\n  defaultCacheSizes,\n} from \"../caching/index.js\";\nimport { registerGlobalCache } from \"../caching/getMemoryInternals.js\";\n\nlet printCache!: AutoCleanedWeakCache<ASTNode, string>;\nexport const print = Object.assign(\n  (ast: ASTNode) => {\n    let result = printCache.get(ast);\n\n    if (!result) {\n      result = origPrint(ast);\n      printCache.set(ast, result);\n    }\n    return result;\n  },\n  {\n    reset() {\n      printCache = new AutoCleanedWeakCache<ASTNode, string>(\n        cacheSizes.print || defaultCacheSizes.print\n      );\n    },\n  }\n);\nprint.reset();\n\nif (__DEV__) {\n  registerGlobalCache(\"print\", () => (printCache ? printCache.size : 0));\n}\n","import { isWhiteSpace } from './characterClasses.mjs';\n/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\n\nexport function dedentBlockStringLines(lines) {\n  var _firstNonEmptyLine2;\n\n  let commonIndent = Number.MAX_SAFE_INTEGER;\n  let firstNonEmptyLine = null;\n  let lastNonEmptyLine = -1;\n\n  for (let i = 0; i < lines.length; ++i) {\n    var _firstNonEmptyLine;\n\n    const line = lines[i];\n    const indent = leadingWhitespace(line);\n\n    if (indent === line.length) {\n      continue; // skip empty lines\n    }\n\n    firstNonEmptyLine =\n      (_firstNonEmptyLine = firstNonEmptyLine) !== null &&\n      _firstNonEmptyLine !== void 0\n        ? _firstNonEmptyLine\n        : i;\n    lastNonEmptyLine = i;\n\n    if (i !== 0 && indent < commonIndent) {\n      commonIndent = indent;\n    }\n  }\n\n  return lines // Remove common indentation from all lines but first.\n    .map((line, i) => (i === 0 ? line : line.slice(commonIndent))) // Remove leading and trailing blank lines.\n    .slice(\n      (_firstNonEmptyLine2 = firstNonEmptyLine) !== null &&\n        _firstNonEmptyLine2 !== void 0\n        ? _firstNonEmptyLine2\n        : 0,\n      lastNonEmptyLine + 1,\n    );\n}\n\nfunction leadingWhitespace(str) {\n  let i = 0;\n\n  while (i < str.length && isWhiteSpace(str.charCodeAt(i))) {\n    ++i;\n  }\n\n  return i;\n}\n/**\n * @internal\n */\n\nexport function isPrintableAsBlockString(value) {\n  if (value === '') {\n    return true; // empty string is printable\n  }\n\n  let isEmptyLine = true;\n  let hasIndent = false;\n  let hasCommonIndent = true;\n  let seenNonEmptyLine = false;\n\n  for (let i = 0; i < value.length; ++i) {\n    switch (value.codePointAt(i)) {\n      case 0x0000:\n      case 0x0001:\n      case 0x0002:\n      case 0x0003:\n      case 0x0004:\n      case 0x0005:\n      case 0x0006:\n      case 0x0007:\n      case 0x0008:\n      case 0x000b:\n      case 0x000c:\n      case 0x000e:\n      case 0x000f:\n        return false;\n      // Has non-printable characters\n\n      case 0x000d:\n        //  \\r\n        return false;\n      // Has \\r or \\r\\n which will be replaced as \\n\n\n      case 10:\n        //  \\n\n        if (isEmptyLine && !seenNonEmptyLine) {\n          return false; // Has leading new line\n        }\n\n        seenNonEmptyLine = true;\n        isEmptyLine = true;\n        hasIndent = false;\n        break;\n\n      case 9: //   \\t\n\n      case 32:\n        //  <space>\n        hasIndent || (hasIndent = isEmptyLine);\n        break;\n\n      default:\n        hasCommonIndent && (hasCommonIndent = hasIndent);\n        isEmptyLine = false;\n    }\n  }\n\n  if (isEmptyLine) {\n    return false; // Has trailing empty lines\n  }\n\n  if (hasCommonIndent && seenNonEmptyLine) {\n    return false; // Has internal indent\n  }\n\n  return true;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\nexport function printBlockString(value, options) {\n  const escapedValue = value.replace(/\"\"\"/g, '\\\\\"\"\"'); // Expand a block string's raw value into independent lines.\n\n  const lines = escapedValue.split(/\\r\\n|[\\n\\r]/g);\n  const isSingleLine = lines.length === 1; // If common indentation is found we can fix some of those cases by adding leading new line\n\n  const forceLeadingNewLine =\n    lines.length > 1 &&\n    lines\n      .slice(1)\n      .every((line) => line.length === 0 || isWhiteSpace(line.charCodeAt(0))); // Trailing triple quotes just looks confusing but doesn't force trailing new line\n\n  const hasTrailingTripleQuotes = escapedValue.endsWith('\\\\\"\"\"'); // Trailing quote (single or double) or slash forces trailing new line\n\n  const hasTrailingQuote = value.endsWith('\"') && !hasTrailingTripleQuotes;\n  const hasTrailingSlash = value.endsWith('\\\\');\n  const forceTrailingNewline = hasTrailingQuote || hasTrailingSlash;\n  const printAsMultipleLines =\n    !(options !== null && options !== void 0 && options.minimize) && // add leading and trailing new lines only if it improves readability\n    (!isSingleLine ||\n      value.length > 70 ||\n      forceTrailingNewline ||\n      forceLeadingNewLine ||\n      hasTrailingTripleQuotes);\n  let result = ''; // Format a multi-line block quote to account for leading space.\n\n  const skipLeadingNewLine = isSingleLine && isWhiteSpace(value.charCodeAt(0));\n\n  if ((printAsMultipleLines && !skipLeadingNewLine) || forceLeadingNewLine) {\n    result += '\\n';\n  }\n\n  result += escapedValue;\n\n  if (printAsMultipleLines || forceTrailingNewline) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result + '\"\"\"';\n}\n","import type { ASTNode } from \"graphql\";\nimport { print } from \"../../utilities/index.js\";\n\nimport type { Operation } from \"../core/index.js\";\n\nexport interface Printer {\n  (node: ASTNode, originalPrint: typeof print): string;\n}\n\nexport interface UriFunction {\n  (operation: Operation): string;\n}\n\nexport interface Body {\n  query?: string;\n  operationName?: string;\n  variables?: Record<string, any>;\n  extensions?: Record<string, any>;\n}\n\nexport interface HttpOptions {\n  /**\n   * The URI to use when fetching operations.\n   *\n   * Defaults to '/graphql'.\n   */\n  uri?: string | UriFunction;\n\n  /**\n   * Passes the extensions field to your graphql server.\n   *\n   * Defaults to false.\n   */\n  includeExtensions?: boolean;\n\n  /**\n   * A `fetch`-compatible API to use when making requests.\n   */\n  fetch?: typeof fetch;\n\n  /**\n   * An object representing values to be sent as headers on the request.\n   */\n  headers?: Record<string, string>;\n\n  /**\n   * If set to true, header names won't be automatically normalized to\n   * lowercase. This allows for non-http-spec-compliant servers that might\n   * expect capitalized header names.\n   */\n  preserveHeaderCase?: boolean;\n\n  /**\n   * The credentials policy you want to use for the fetch call.\n   */\n  credentials?: string;\n\n  /**\n   * Any overrides of the fetch options argument to pass to the fetch call.\n   */\n  fetchOptions?: any;\n\n  /**\n   * If set to true, use the HTTP GET method for query operations. Mutations\n   * will still use the method specified in fetchOptions.method (which defaults\n   * to POST).\n   */\n  useGETForQueries?: boolean;\n\n  /**\n   * If set to true, the default behavior of stripping unused variables\n   * from the request will be disabled.\n   *\n   * Unused variables are likely to trigger server-side validation errors,\n   * per https://spec.graphql.org/draft/#sec-All-Variables-Used, but this\n   * includeUnusedVariables option can be useful if your server deviates\n   * from the GraphQL specification by not strictly enforcing that rule.\n   */\n  includeUnusedVariables?: boolean;\n  /**\n   * A function to substitute for the default query print function. Can be\n   * used to apply changes to the results of the print function.\n   */\n  print?: Printer;\n}\n\nexport interface HttpQueryOptions {\n  includeQuery?: boolean;\n  includeExtensions?: boolean;\n  preserveHeaderCase?: boolean;\n}\n\nexport interface HttpConfig {\n  http?: HttpQueryOptions;\n  options?: any;\n  headers?: Record<string, string>;\n  credentials?: any;\n}\n\nconst defaultHttpOptions: HttpQueryOptions = {\n  includeQuery: true,\n  includeExtensions: false,\n  preserveHeaderCase: false,\n};\n\nconst defaultHeaders = {\n  // headers are case insensitive (https://stackoverflow.com/a/5259004)\n  accept: \"*/*\",\n  // The content-type header describes the type of the body of the request, and\n  // so it typically only is sent with requests that actually have bodies. One\n  // could imagine that Apollo Client would remove this header when constructing\n  // a GET request (which has no body), but we historically have not done that.\n  // This means that browsers will preflight all Apollo Client requests (even\n  // GET requests). Apollo Server's CSRF prevention feature (introduced in\n  // AS3.7) takes advantage of this fact and does not block requests with this\n  // header. If you want to drop this header from GET requests, then you should\n  // probably replace it with a `apollo-require-preflight` header, or servers\n  // with CSRF prevention enabled might block your GET request. See\n  // https://www.apollographql.com/docs/apollo-server/security/cors/#preventing-cross-site-request-forgery-csrf\n  // for more details.\n  \"content-type\": \"application/json\",\n};\n\nconst defaultOptions = {\n  method: \"POST\",\n};\n\nexport const fallbackHttpConfig = {\n  http: defaultHttpOptions,\n  headers: defaultHeaders,\n  options: defaultOptions,\n};\n\nexport const defaultPrinter: Printer = (ast, printer) => printer(ast);\n\nexport function selectHttpOptionsAndBody(\n  operation: Operation,\n  fallbackConfig: HttpConfig,\n  ...configs: Array<HttpConfig>\n) {\n  configs.unshift(fallbackConfig);\n  return selectHttpOptionsAndBodyInternal(\n    operation,\n    defaultPrinter,\n    ...configs\n  );\n}\n\nexport function selectHttpOptionsAndBodyInternal(\n  operation: Operation,\n  printer: Printer,\n  ...configs: HttpConfig[]\n) {\n  let options = {} as HttpConfig & Record<string, any>;\n  let http = {} as HttpQueryOptions;\n\n  configs.forEach((config) => {\n    options = {\n      ...options,\n      ...config.options,\n      headers: {\n        ...options.headers,\n        ...config.headers,\n      },\n    };\n\n    if (config.credentials) {\n      options.credentials = config.credentials;\n    }\n\n    http = {\n      ...http,\n      ...config.http,\n    };\n  });\n\n  if (options.headers) {\n    options.headers = removeDuplicateHeaders(\n      options.headers,\n      http.preserveHeaderCase\n    );\n  }\n\n  //The body depends on the http options\n  const { operationName, extensions, variables, query } = operation;\n  const body: Body = { operationName, variables };\n\n  if (http.includeExtensions) (body as any).extensions = extensions;\n\n  // not sending the query (i.e persisted queries)\n  if (http.includeQuery) (body as any).query = printer(query, print);\n\n  return {\n    options,\n    body,\n  };\n}\n\n// Remove potential duplicate header names, preserving last (by insertion order).\n// This is done to prevent unintentionally duplicating a header instead of\n// overwriting it (See #8447 and #8449).\nfunction removeDuplicateHeaders(\n  headers: Record<string, string>,\n  preserveHeaderCase: boolean | undefined\n): typeof headers {\n  // If we're not preserving the case, just remove duplicates w/ normalization.\n  if (!preserveHeaderCase) {\n    const normalizedHeaders = Object.create(null);\n    Object.keys(Object(headers)).forEach((name) => {\n      normalizedHeaders[name.toLowerCase()] = headers[name];\n    });\n    return normalizedHeaders;\n  }\n\n  // If we are preserving the case, remove duplicates w/ normalization,\n  // preserving the original name.\n  // This allows for non-http-spec-compliant servers that expect intentionally\n  // capitalized header names (See #6741).\n  const headerData = Object.create(null);\n  Object.keys(Object(headers)).forEach((name) => {\n    headerData[name.toLowerCase()] = {\n      originalName: name,\n      value: headers[name],\n    };\n  });\n\n  const normalizedHeaders = Object.create(null);\n  Object.keys(headerData).forEach((name) => {\n    normalizedHeaders[headerData[name].originalName] = headerData[name].value;\n  });\n  return normalizedHeaders;\n}\n","import { Observable } from \"../../utilities/index.js\";\n\nexport function fromError<T>(errorValue: any): Observable<T> {\n  return new Observable<T>((observer) => {\n    observer.error(errorValue);\n  });\n}\n","import { invariant } from \"../globals/index.js\";\n\nimport type {\n  DocumentNode,\n  SelectionNode,\n  SelectionSetNode,\n  OperationDefinitionNode,\n  FieldNode,\n  DirectiveNode,\n  FragmentDefinitionNode,\n  ArgumentNode,\n  FragmentSpreadNode,\n  VariableDefinitionNode,\n  ASTNode,\n  ASTVisitFn,\n  InlineFragmentNode,\n} from \"graphql\";\nimport { visit, Kind } from \"graphql\";\n\nimport {\n  checkDocument,\n  getOperationDefinition,\n  getFragmentDefinition,\n  getFragmentDefinitions,\n  getMainDefinition,\n} from \"./getFromAST.js\";\nimport { isField } from \"./storeUtils.js\";\nimport type { FragmentMap } from \"./fragments.js\";\nimport { createFragmentMap } from \"./fragments.js\";\nimport { isArray, isNonEmptyArray } from \"../common/arrays.js\";\n\n// https://github.com/graphql/graphql-js/blob/8d7c8fccf5a9846a50785de04abda58a7eb13fc0/src/language/visitor.ts#L20-L23\ninterface EnterLeaveVisitor<TVisitedNode extends ASTNode> {\n  readonly enter?: ASTVisitFn<TVisitedNode>;\n  readonly leave?: ASTVisitFn<TVisitedNode>;\n}\n\nexport type RemoveNodeConfig<N> = {\n  name?: string;\n  test?: (node: N) => boolean;\n  remove?: boolean;\n};\n\nexport type GetNodeConfig<N> = {\n  name?: string;\n  test?: (node: N) => boolean;\n};\n\nexport type RemoveDirectiveConfig = RemoveNodeConfig<DirectiveNode>;\nexport type GetDirectiveConfig = GetNodeConfig<DirectiveNode>;\nexport type RemoveArgumentsConfig = RemoveNodeConfig<ArgumentNode>;\nexport type GetFragmentSpreadConfig = GetNodeConfig<FragmentSpreadNode>;\nexport type RemoveFragmentSpreadConfig = RemoveNodeConfig<FragmentSpreadNode>;\nexport type RemoveFragmentDefinitionConfig =\n  RemoveNodeConfig<FragmentDefinitionNode>;\nexport type RemoveVariableDefinitionConfig =\n  RemoveNodeConfig<VariableDefinitionNode>;\n\nconst TYPENAME_FIELD: FieldNode = {\n  kind: Kind.FIELD,\n  name: {\n    kind: Kind.NAME,\n    value: \"__typename\",\n  },\n};\n\nfunction isEmpty(\n  op: OperationDefinitionNode | FragmentDefinitionNode,\n  fragmentMap: FragmentMap\n): boolean {\n  return (\n    !op ||\n    op.selectionSet.selections.every(\n      (selection) =>\n        selection.kind === Kind.FRAGMENT_SPREAD &&\n        isEmpty(fragmentMap[selection.name.value], fragmentMap)\n    )\n  );\n}\n\nfunction nullIfDocIsEmpty(doc: DocumentNode) {\n  return (\n      isEmpty(\n        getOperationDefinition(doc) || getFragmentDefinition(doc),\n        createFragmentMap(getFragmentDefinitions(doc))\n      )\n    ) ?\n      null\n    : doc;\n}\n\nfunction getDirectiveMatcher(\n  configs: (RemoveDirectiveConfig | GetDirectiveConfig)[]\n) {\n  const names = new Map<string, RemoveDirectiveConfig | GetDirectiveConfig>();\n\n  const tests = new Map<\n    (directive: DirectiveNode) => boolean,\n    RemoveDirectiveConfig | GetDirectiveConfig\n  >();\n\n  configs.forEach((directive) => {\n    if (directive) {\n      if (directive.name) {\n        names.set(directive.name, directive);\n      } else if (directive.test) {\n        tests.set(directive.test, directive);\n      }\n    }\n  });\n\n  return (directive: DirectiveNode) => {\n    let config = names.get(directive.name.value);\n    if (!config && tests.size) {\n      tests.forEach((testConfig, test) => {\n        if (test(directive)) {\n          config = testConfig;\n        }\n      });\n    }\n    return config;\n  };\n}\n\n// Helper interface and function used by removeDirectivesFromDocument to keep\n// track of variable references and fragments spreads found within a given\n// operation or fragment definition.\ninterface InternalInUseInfo {\n  variables: Set<string>;\n  fragmentSpreads: Set<string>;\n  // Set to true when we deliberately remove a fragment definition, so we can\n  // make sure also to remove dangling ...spreads that refer to it.\n  removed?: boolean;\n  // Populated by the populateTransitiveVars helper function below.\n  transitiveVars?: Set<string>;\n}\nfunction makeInUseGetterFunction<TKey>(defaultKey: TKey) {\n  const map = new Map<TKey, InternalInUseInfo>();\n\n  return function inUseGetterFunction(\n    key: TKey = defaultKey\n  ): InternalInUseInfo {\n    let inUse = map.get(key);\n    if (!inUse) {\n      map.set(\n        key,\n        (inUse = {\n          // Variable and fragment spread names used directly within this\n          // operation or fragment definition, as identified by key. These sets\n          // will be populated during the first traversal of the document in\n          // removeDirectivesFromDocument below.\n          variables: new Set(),\n          fragmentSpreads: new Set(),\n        })\n      );\n    }\n    return inUse;\n  };\n}\n\nexport function removeDirectivesFromDocument(\n  directives: RemoveDirectiveConfig[],\n  doc: DocumentNode\n): DocumentNode | null {\n  checkDocument(doc);\n\n  // Passing empty strings to makeInUseGetterFunction means we handle anonymous\n  // operations as if their names were \"\". Anonymous fragment definitions are\n  // not supposed to be possible, but the same default naming strategy seems\n  // appropriate for that case as well.\n  const getInUseByOperationName = makeInUseGetterFunction<string>(\"\");\n  const getInUseByFragmentName = makeInUseGetterFunction<string>(\"\");\n  const getInUse = (\n    ancestors: readonly (ASTNode | readonly ASTNode[])[]\n  ): InternalInUseInfo | null => {\n    for (\n      let p = 0, ancestor: ASTNode | readonly ASTNode[];\n      p < ancestors.length && (ancestor = ancestors[p]);\n      ++p\n    ) {\n      if (isArray(ancestor)) continue;\n      if (ancestor.kind === Kind.OPERATION_DEFINITION) {\n        // If an operation is anonymous, we use the empty string as its key.\n        return getInUseByOperationName(ancestor.name && ancestor.name.value);\n      }\n      if (ancestor.kind === Kind.FRAGMENT_DEFINITION) {\n        return getInUseByFragmentName(ancestor.name.value);\n      }\n    }\n    invariant.error(`Could not find operation or fragment`);\n    return null;\n  };\n\n  let operationCount = 0;\n  for (let i = doc.definitions.length - 1; i >= 0; --i) {\n    if (doc.definitions[i].kind === Kind.OPERATION_DEFINITION) {\n      ++operationCount;\n    }\n  }\n\n  const directiveMatcher = getDirectiveMatcher(directives);\n  const shouldRemoveField = (nodeDirectives: FieldNode[\"directives\"]) =>\n    isNonEmptyArray(nodeDirectives) &&\n    nodeDirectives\n      .map(directiveMatcher)\n      .some(\n        (config: RemoveDirectiveConfig | undefined) => config && config.remove\n      );\n\n  const originalFragmentDefsByPath = new Map<string, FragmentDefinitionNode>();\n\n  // Any time the first traversal of the document below makes a change like\n  // removing a fragment (by returning null), this variable should be set to\n  // true. Once it becomes true, it should never be set to false again. If this\n  // variable remains false throughout the traversal, then we can return the\n  // original doc immediately without any modifications.\n  let firstVisitMadeChanges = false;\n\n  const fieldOrInlineFragmentVisitor: EnterLeaveVisitor<\n    FieldNode | InlineFragmentNode\n  > = {\n    enter(node) {\n      if (shouldRemoveField(node.directives)) {\n        firstVisitMadeChanges = true;\n        return null;\n      }\n    },\n  };\n\n  const docWithoutDirectiveSubtrees = visit(doc, {\n    // These two AST node types share the same implementation, defined above.\n    Field: fieldOrInlineFragmentVisitor,\n    InlineFragment: fieldOrInlineFragmentVisitor,\n\n    VariableDefinition: {\n      enter() {\n        // VariableDefinition nodes do not count as variables in use, though\n        // they do contain Variable nodes that might be visited below. To avoid\n        // counting variable declarations as usages, we skip visiting the\n        // contents of this VariableDefinition node by returning false.\n        return false;\n      },\n    },\n\n    Variable: {\n      enter(node, _key, _parent, _path, ancestors) {\n        const inUse = getInUse(ancestors);\n        if (inUse) {\n          inUse.variables.add(node.name.value);\n        }\n      },\n    },\n\n    FragmentSpread: {\n      enter(node, _key, _parent, _path, ancestors) {\n        if (shouldRemoveField(node.directives)) {\n          firstVisitMadeChanges = true;\n          return null;\n        }\n        const inUse = getInUse(ancestors);\n        if (inUse) {\n          inUse.fragmentSpreads.add(node.name.value);\n        }\n        // We might like to remove this FragmentSpread by returning null here if\n        // the corresponding FragmentDefinition node is also going to be removed\n        // by the logic below, but we can't control the relative order of those\n        // events, so we have to postpone the removal of dangling FragmentSpread\n        // nodes until after the current visit of the document has finished.\n      },\n    },\n\n    FragmentDefinition: {\n      enter(node, _key, _parent, path) {\n        originalFragmentDefsByPath.set(JSON.stringify(path), node);\n      },\n      leave(node, _key, _parent, path) {\n        const originalNode = originalFragmentDefsByPath.get(\n          JSON.stringify(path)\n        );\n        if (node === originalNode) {\n          // If the FragmentNode received by this leave function is identical to\n          // the one received by the corresponding enter function (above), then\n          // the visitor must not have made any changes within this\n          // FragmentDefinition node. This fragment definition may still be\n          // removed if there are no ...spread references to it, but it won't be\n          // removed just because it has only a __typename field.\n          return node;\n        }\n\n        if (\n          // This logic applies only if the document contains one or more\n          // operations, since removing all fragments from a document containing\n          // only fragments makes the document useless.\n          operationCount > 0 &&\n          node.selectionSet.selections.every(\n            (selection) =>\n              selection.kind === Kind.FIELD &&\n              selection.name.value === \"__typename\"\n          )\n        ) {\n          // This is a somewhat opinionated choice: if a FragmentDefinition ends\n          // up having no fields other than __typename, we remove the whole\n          // fragment definition, and later prune ...spread references to it.\n          getInUseByFragmentName(node.name.value).removed = true;\n          firstVisitMadeChanges = true;\n          return null;\n        }\n      },\n    },\n\n    Directive: {\n      leave(node) {\n        // If a matching directive is found, remove the directive itself. Note\n        // that this does not remove the target (field, argument, etc) of the\n        // directive, but only the directive itself.\n        if (directiveMatcher(node)) {\n          firstVisitMadeChanges = true;\n          return null;\n        }\n      },\n    },\n  });\n\n  if (!firstVisitMadeChanges) {\n    // If our first pass did not change anything about the document, then there\n    // is no cleanup we need to do, and we can return the original doc.\n    return doc;\n  }\n\n  // Utility for making sure inUse.transitiveVars is recursively populated.\n  // Because this logic assumes inUse.fragmentSpreads has been completely\n  // populated and inUse.removed has been set if appropriate,\n  // populateTransitiveVars must be called after that information has been\n  // collected by the first traversal of the document.\n  const populateTransitiveVars = (inUse: InternalInUseInfo) => {\n    if (!inUse.transitiveVars) {\n      inUse.transitiveVars = new Set(inUse.variables);\n      if (!inUse.removed) {\n        inUse.fragmentSpreads.forEach((childFragmentName) => {\n          populateTransitiveVars(\n            getInUseByFragmentName(childFragmentName)\n          ).transitiveVars!.forEach((varName) => {\n            inUse.transitiveVars!.add(varName);\n          });\n        });\n      }\n    }\n    return inUse;\n  };\n\n  // Since we've been keeping track of fragment spreads used by particular\n  // operations and fragment definitions, we now need to compute the set of all\n  // spreads used (transitively) by any operations in the document.\n  const allFragmentNamesUsed = new Set<string>();\n  docWithoutDirectiveSubtrees.definitions.forEach((def) => {\n    if (def.kind === Kind.OPERATION_DEFINITION) {\n      populateTransitiveVars(\n        getInUseByOperationName(def.name && def.name.value)\n      ).fragmentSpreads.forEach((childFragmentName) => {\n        allFragmentNamesUsed.add(childFragmentName);\n      });\n    } else if (\n      def.kind === Kind.FRAGMENT_DEFINITION &&\n      // If there are no operations in the document, then all fragment\n      // definitions count as usages of their own fragment names. This heuristic\n      // prevents accidentally removing all fragment definitions from the\n      // document just because it contains no operations that use the fragments.\n      operationCount === 0 &&\n      !getInUseByFragmentName(def.name.value).removed\n    ) {\n      allFragmentNamesUsed.add(def.name.value);\n    }\n  });\n  // Now that we have added all fragment spreads used by operations to the\n  // allFragmentNamesUsed set, we can complete the set by transitively adding\n  // all fragment spreads used by those fragments, and so on.\n  allFragmentNamesUsed.forEach((fragmentName) => {\n    // Once all the childFragmentName strings added here have been seen already,\n    // the top-level allFragmentNamesUsed.forEach loop will terminate.\n    populateTransitiveVars(\n      getInUseByFragmentName(fragmentName)\n    ).fragmentSpreads.forEach((childFragmentName) => {\n      allFragmentNamesUsed.add(childFragmentName);\n    });\n  });\n\n  const fragmentWillBeRemoved = (fragmentName: string) =>\n    !!(\n      // A fragment definition will be removed if there are no spreads that refer\n      // to it, or the fragment was explicitly removed because it had no fields\n      // other than __typename.\n      (\n        !allFragmentNamesUsed.has(fragmentName) ||\n        getInUseByFragmentName(fragmentName).removed\n      )\n    );\n\n  const enterVisitor: EnterLeaveVisitor<\n    FragmentSpreadNode | FragmentDefinitionNode\n  > = {\n    enter(node) {\n      if (fragmentWillBeRemoved(node.name.value)) {\n        return null;\n      }\n    },\n  };\n\n  return nullIfDocIsEmpty(\n    visit(docWithoutDirectiveSubtrees, {\n      // If the fragment is going to be removed, then leaving any dangling\n      // FragmentSpread nodes with the same name would be a mistake.\n      FragmentSpread: enterVisitor,\n\n      // This is where the fragment definition is actually removed.\n      FragmentDefinition: enterVisitor,\n\n      OperationDefinition: {\n        leave(node) {\n          // Upon leaving each operation in the depth-first AST traversal, prune\n          // any variables that are declared by the operation but unused within.\n          if (node.variableDefinitions) {\n            const usedVariableNames = populateTransitiveVars(\n              // If an operation is anonymous, we use the empty string as its key.\n              getInUseByOperationName(node.name && node.name.value)\n            ).transitiveVars!;\n\n            // According to the GraphQL spec, all variables declared by an\n            // operation must either be used by that operation or used by some\n            // fragment included transitively into that operation:\n            // https://spec.graphql.org/draft/#sec-All-Variables-Used\n            //\n            // To stay on the right side of this validation rule, if/when we\n            // remove the last $var references from an operation or its fragments,\n            // we must also remove the corresponding $var declaration from the\n            // enclosing operation. This pruning applies only to operations and\n            // not fragment definitions, at the moment. Fragments may be able to\n            // declare variables eventually, but today they can only consume them.\n            if (usedVariableNames.size < node.variableDefinitions.length) {\n              return {\n                ...node,\n                variableDefinitions: node.variableDefinitions.filter((varDef) =>\n                  usedVariableNames.has(varDef.variable.name.value)\n                ),\n              };\n            }\n          }\n        },\n      },\n    })\n  );\n}\n\nexport const addTypenameToDocument = Object.assign(\n  function <TNode extends ASTNode>(doc: TNode): TNode {\n    return visit(doc, {\n      SelectionSet: {\n        enter(node, _key, parent) {\n          // Don't add __typename to OperationDefinitions.\n          if (\n            parent &&\n            (parent as OperationDefinitionNode).kind ===\n              Kind.OPERATION_DEFINITION\n          ) {\n            return;\n          }\n\n          // No changes if no selections.\n          const { selections } = node;\n          if (!selections) {\n            return;\n          }\n\n          // If selections already have a __typename, or are part of an\n          // introspection query, do nothing.\n          const skip = selections.some((selection) => {\n            return (\n              isField(selection) &&\n              (selection.name.value === \"__typename\" ||\n                selection.name.value.lastIndexOf(\"__\", 0) === 0)\n            );\n          });\n          if (skip) {\n            return;\n          }\n\n          // If this SelectionSet is @export-ed as an input variable, it should\n          // not have a __typename field (see issue #4691).\n          const field = parent as FieldNode;\n          if (\n            isField(field) &&\n            field.directives &&\n            field.directives.some((d) => d.name.value === \"export\")\n          ) {\n            return;\n          }\n\n          // Create and return a new SelectionSet with a __typename Field.\n          return {\n            ...node,\n            selections: [...selections, TYPENAME_FIELD],\n          };\n        },\n      },\n    });\n  },\n  {\n    added(field: FieldNode): boolean {\n      return field === TYPENAME_FIELD;\n    },\n  }\n);\n\nconst connectionRemoveConfig = {\n  test: (directive: DirectiveNode) => {\n    const willRemove = directive.name.value === \"connection\";\n    if (willRemove) {\n      if (\n        !directive.arguments ||\n        !directive.arguments.some((arg) => arg.name.value === \"key\")\n      ) {\n        invariant.warn(\n          \"Removing an @connection directive even though it does not have a key. \" +\n            \"You may want to use the key parameter to specify a store key.\"\n        );\n      }\n    }\n\n    return willRemove;\n  },\n};\n\nexport function removeConnectionDirectiveFromDocument(doc: DocumentNode) {\n  return removeDirectivesFromDocument(\n    [connectionRemoveConfig],\n    checkDocument(doc)\n  );\n}\n\nfunction hasDirectivesInSelectionSet(\n  directives: GetDirectiveConfig[],\n  selectionSet: SelectionSetNode | undefined,\n  nestedCheck = true\n): boolean {\n  return (\n    !!selectionSet &&\n    selectionSet.selections &&\n    selectionSet.selections.some((selection) =>\n      hasDirectivesInSelection(directives, selection, nestedCheck)\n    )\n  );\n}\n\nfunction hasDirectivesInSelection(\n  directives: GetDirectiveConfig[],\n  selection: SelectionNode,\n  nestedCheck = true\n): boolean {\n  if (!isField(selection)) {\n    return true;\n  }\n\n  if (!selection.directives) {\n    return false;\n  }\n\n  return (\n    selection.directives.some(getDirectiveMatcher(directives)) ||\n    (nestedCheck &&\n      hasDirectivesInSelectionSet(\n        directives,\n        selection.selectionSet,\n        nestedCheck\n      ))\n  );\n}\n\nfunction getArgumentMatcher(config: RemoveArgumentsConfig[]) {\n  return function argumentMatcher(argument: ArgumentNode) {\n    return config.some(\n      (aConfig: RemoveArgumentsConfig) =>\n        argument.value &&\n        argument.value.kind === Kind.VARIABLE &&\n        argument.value.name &&\n        (aConfig.name === argument.value.name.value ||\n          (aConfig.test && aConfig.test(argument)))\n    );\n  };\n}\n\nexport function removeArgumentsFromDocument(\n  config: RemoveArgumentsConfig[],\n  doc: DocumentNode\n): DocumentNode | null {\n  const argMatcher = getArgumentMatcher(config);\n\n  return nullIfDocIsEmpty(\n    visit(doc, {\n      OperationDefinition: {\n        enter(node) {\n          return {\n            ...node,\n            // Remove matching top level variables definitions.\n            variableDefinitions:\n              node.variableDefinitions ?\n                node.variableDefinitions.filter(\n                  (varDef) =>\n                    !config.some(\n                      (arg) => arg.name === varDef.variable.name.value\n                    )\n                )\n              : [],\n          };\n        },\n      },\n\n      Field: {\n        enter(node) {\n          // If `remove` is set to true for an argument, and an argument match\n          // is found for a field, remove the field as well.\n          const shouldRemoveField = config.some(\n            (argConfig) => argConfig.remove\n          );\n\n          if (shouldRemoveField) {\n            let argMatchCount = 0;\n            if (node.arguments) {\n              node.arguments.forEach((arg) => {\n                if (argMatcher(arg)) {\n                  argMatchCount += 1;\n                }\n              });\n            }\n\n            if (argMatchCount === 1) {\n              return null;\n            }\n          }\n        },\n      },\n\n      Argument: {\n        enter(node) {\n          // Remove all matching arguments.\n          if (argMatcher(node)) {\n            return null;\n          }\n        },\n      },\n    })\n  );\n}\n\nexport function removeFragmentSpreadFromDocument(\n  config: RemoveFragmentSpreadConfig[],\n  doc: DocumentNode\n): DocumentNode | null {\n  function enter(\n    node: FragmentSpreadNode | FragmentDefinitionNode\n  ): null | void {\n    if (config.some((def) => def.name === node.name.value)) {\n      return null;\n    }\n  }\n\n  return nullIfDocIsEmpty(\n    visit(doc, {\n      FragmentSpread: { enter },\n      FragmentDefinition: { enter },\n    })\n  );\n}\n\n// If the incoming document is a query, return it as is. Otherwise, build a\n// new document containing a query operation based on the selection set\n// of the previous main operation.\nexport function buildQueryFromSelectionSet(\n  document: DocumentNode\n): DocumentNode {\n  const definition = getMainDefinition(document);\n  const definitionOperation = (<OperationDefinitionNode>definition).operation;\n\n  if (definitionOperation === \"query\") {\n    // Already a query, so return the existing document.\n    return document;\n  }\n\n  // Build a new query using the selection set of the main operation.\n  const modifiedDoc = visit(document, {\n    OperationDefinition: {\n      enter(node) {\n        return {\n          ...node,\n          operation: \"query\",\n        };\n      },\n    },\n  });\n  return modifiedDoc;\n}\n\n// Remove fields / selection sets that include an @client directive.\nexport function removeClientSetsFromDocument(\n  document: DocumentNode\n): DocumentNode | null {\n  checkDocument(document);\n\n  let modifiedDoc = removeDirectivesFromDocument(\n    [\n      {\n        test: (directive: DirectiveNode) => directive.name.value === \"client\",\n        remove: true,\n      },\n    ],\n    document\n  );\n\n  return modifiedDoc;\n}\n","import { invariant } from \"../../utilities/globals/index.js\";\n\nimport type { DefinitionNode } from \"graphql\";\n\nimport { ApolloLink } from \"../core/index.js\";\nimport { Observable, hasDirectives } from \"../../utilities/index.js\";\nimport { serializeFetchParameter } from \"./serializeFetchParameter.js\";\nimport { selectURI } from \"./selectURI.js\";\nimport {\n  handleError,\n  readMultipartBody,\n  parseAndCheckHttpResponse,\n} from \"./parseAndCheckHttpResponse.js\";\nimport { checkFetcher } from \"./checkFetcher.js\";\nimport type { HttpOptions } from \"./selectHttpOptionsAndBody.js\";\nimport {\n  selectHttpOptionsAndBodyInternal,\n  defaultPrinter,\n  fallbackHttpConfig,\n} from \"./selectHttpOptionsAndBody.js\";\nimport { rewriteURIForGET } from \"./rewriteURIForGET.js\";\nimport { fromError, filterOperationVariables } from \"../utils/index.js\";\nimport {\n  maybe,\n  getMainDefinition,\n  removeClientSetsFromDocument,\n} from \"../../utilities/index.js\";\n\nconst backupFetch = maybe(() => fetch);\n\nexport const createHttpLink = (linkOptions: HttpOptions = {}) => {\n  let {\n    uri = \"/graphql\",\n    // use default global fetch if nothing passed in\n    fetch: preferredFetch,\n    print = defaultPrinter,\n    includeExtensions,\n    preserveHeaderCase,\n    useGETForQueries,\n    includeUnusedVariables = false,\n    ...requestOptions\n  } = linkOptions;\n\n  if (__DEV__) {\n    // Make sure at least one of preferredFetch, window.fetch, or backupFetch is\n    // defined, so requests won't fail at runtime.\n    checkFetcher(preferredFetch || backupFetch);\n  }\n\n  const linkConfig = {\n    http: { includeExtensions, preserveHeaderCase },\n    options: requestOptions.fetchOptions,\n    credentials: requestOptions.credentials,\n    headers: requestOptions.headers,\n  };\n\n  return new ApolloLink((operation) => {\n    let chosenURI = selectURI(operation, uri);\n\n    const context = operation.getContext();\n\n    // `apollographql-client-*` headers are automatically set if a\n    // `clientAwareness` object is found in the context. These headers are\n    // set first, followed by the rest of the headers pulled from\n    // `context.headers`. If desired, `apollographql-client-*` headers set by\n    // the `clientAwareness` object can be overridden by\n    // `apollographql-client-*` headers set in `context.headers`.\n    const clientAwarenessHeaders: {\n      \"apollographql-client-name\"?: string;\n      \"apollographql-client-version\"?: string;\n    } = {};\n\n    if (context.clientAwareness) {\n      const { name, version } = context.clientAwareness;\n      if (name) {\n        clientAwarenessHeaders[\"apollographql-client-name\"] = name;\n      }\n      if (version) {\n        clientAwarenessHeaders[\"apollographql-client-version\"] = version;\n      }\n    }\n\n    const contextHeaders = { ...clientAwarenessHeaders, ...context.headers };\n\n    const contextConfig = {\n      http: context.http,\n      options: context.fetchOptions,\n      credentials: context.credentials,\n      headers: contextHeaders,\n    };\n\n    if (hasDirectives([\"client\"], operation.query)) {\n      const transformedQuery = removeClientSetsFromDocument(operation.query);\n\n      if (!transformedQuery) {\n        return fromError(\n          new Error(\n            \"HttpLink: Trying to send a client-only query to the server. To send to the server, ensure a non-client field is added to the query or set the `transformOptions.removeClientFields` option to `true`.\"\n          )\n        );\n      }\n\n      operation.query = transformedQuery;\n    }\n\n    //uses fallback, link, and then context to build options\n    const { options, body } = selectHttpOptionsAndBodyInternal(\n      operation,\n      print,\n      fallbackHttpConfig,\n      linkConfig,\n      contextConfig\n    );\n\n    if (body.variables && !includeUnusedVariables) {\n      body.variables = filterOperationVariables(\n        body.variables,\n        operation.query\n      );\n    }\n\n    let controller: AbortController | undefined;\n    if (!options.signal && typeof AbortController !== \"undefined\") {\n      controller = new AbortController();\n      options.signal = controller.signal;\n    }\n\n    // If requested, set method to GET if there are no mutations.\n    const definitionIsMutation = (d: DefinitionNode) => {\n      return d.kind === \"OperationDefinition\" && d.operation === \"mutation\";\n    };\n    const definitionIsSubscription = (d: DefinitionNode) => {\n      return d.kind === \"OperationDefinition\" && d.operation === \"subscription\";\n    };\n    const isSubscription = definitionIsSubscription(\n      getMainDefinition(operation.query)\n    );\n    // does not match custom directives beginning with @defer\n    const hasDefer = hasDirectives([\"defer\"], operation.query);\n    if (\n      useGETForQueries &&\n      !operation.query.definitions.some(definitionIsMutation)\n    ) {\n      options.method = \"GET\";\n    }\n\n    if (hasDefer || isSubscription) {\n      options.headers = options.headers || {};\n      let acceptHeader = \"multipart/mixed;\";\n      // Omit defer-specific headers if the user attempts to defer a selection\n      // set on a subscription and log a warning.\n      if (isSubscription && hasDefer) {\n        invariant.warn(\"Multipart-subscriptions do not support @defer\");\n      }\n\n      if (isSubscription) {\n        acceptHeader +=\n          \"boundary=graphql;subscriptionSpec=1.0,application/json\";\n      } else if (hasDefer) {\n        acceptHeader += \"deferSpec=20220824,application/json\";\n      }\n      options.headers.accept = acceptHeader;\n    }\n\n    if (options.method === \"GET\") {\n      const { newURI, parseError } = rewriteURIForGET(chosenURI, body);\n      if (parseError) {\n        return fromError(parseError);\n      }\n      chosenURI = newURI;\n    } else {\n      try {\n        (options as any).body = serializeFetchParameter(body, \"Payload\");\n      } catch (parseError) {\n        return fromError(parseError);\n      }\n    }\n\n    return new Observable((observer) => {\n      // Prefer linkOptions.fetch (preferredFetch) if provided, and otherwise\n      // fall back to the *current* global window.fetch function (see issue\n      // #7832), or (if all else fails) the backupFetch function we saved when\n      // this module was first evaluated. This last option protects against the\n      // removal of window.fetch, which is unlikely but not impossible.\n      const currentFetch = preferredFetch || maybe(() => fetch) || backupFetch;\n\n      const observerNext = observer.next.bind(observer);\n      currentFetch!(chosenURI, options)\n        .then((response) => {\n          operation.setContext({ response });\n          const ctype = response.headers?.get(\"content-type\");\n\n          if (ctype !== null && /^multipart\\/mixed/i.test(ctype)) {\n            return readMultipartBody(response, observerNext);\n          } else {\n            return parseAndCheckHttpResponse(operation)(response).then(\n              observerNext\n            );\n          }\n        })\n        .then(() => {\n          controller = undefined;\n          observer.complete();\n        })\n        .catch((err) => {\n          controller = undefined;\n          handleError(err, observer);\n        });\n\n      return () => {\n        // XXX support canceling this request\n        // https://developers.google.com/web/updates/2017/09/abortable-fetch\n        if (controller) controller.abort();\n      };\n    });\n  });\n};\n","import { newInvariantError } from \"../../utilities/globals/index.js\";\n\nexport const checkFetcher = (fetcher: typeof fetch | undefined) => {\n  if (!fetcher && typeof fetch === \"undefined\") {\n    throw newInvariantError(`\n\"fetch\" has not been found globally and no fetcher has been \\\nconfigured. To fix this, install a fetch package (like \\\nhttps://www.npmjs.com/package/cross-fetch), instantiate the \\\nfetcher, and pass it into your HttpLink constructor. For example:\n\nimport fetch from 'cross-fetch';\nimport { ApolloClient, HttpLink } from '@apollo/client';\nconst client = new ApolloClient({\n  link: new HttpLink({ uri: '/graphql', fetch })\n});\n    `);\n  }\n};\n","import type { Operation } from \"../core/index.js\";\n\nexport const selectURI = (\n  operation: Operation,\n  fallbackURI?: string | ((operation: Operation) => string)\n) => {\n  const context = operation.getContext();\n  const contextURI = context.uri;\n\n  if (contextURI) {\n    return contextURI;\n  } else if (typeof fallbackURI === \"function\") {\n    return fallbackURI(operation);\n  } else {\n    return (fallbackURI as string) || \"/graphql\";\n  }\n};\n","import type { VariableDefinitionNode, DocumentNode } from \"graphql\";\nimport { visit } from \"graphql\";\n\nexport function filterOperationVariables(\n  variables: Record<string, any>,\n  query: DocumentNode\n) {\n  const result = { ...variables };\n  const unusedNames = new Set(Object.keys(variables));\n  visit(query, {\n    Variable(node, _key, parent) {\n      // A variable type definition at the top level of a query is not\n      // enough to silence server-side errors about the variable being\n      // unused, so variable definitions do not count as usage.\n      // https://spec.graphql.org/draft/#sec-All-Variables-Used\n      if (\n        parent &&\n        (parent as VariableDefinitionNode).kind !== \"VariableDefinition\"\n      ) {\n        unusedNames.delete(node.name.value);\n      }\n    },\n  });\n  unusedNames.forEach((name) => {\n    delete result![name];\n  });\n  return result;\n}\n","import { serializeFetchParameter } from \"./serializeFetchParameter.js\";\nimport type { Body } from \"./selectHttpOptionsAndBody.js\";\n\n// For GET operations, returns the given URI rewritten with parameters, or a\n// parse error.\nexport function rewriteURIForGET(chosenURI: string, body: Body) {\n  // Implement the standard HTTP GET serialization, plus 'extensions'. Note\n  // the extra level of JSON serialization!\n  const queryParams: string[] = [];\n  const addQueryParam = (key: string, value: string) => {\n    queryParams.push(`${key}=${encodeURIComponent(value)}`);\n  };\n\n  if (\"query\" in body) {\n    addQueryParam(\"query\", body.query!);\n  }\n  if (body.operationName) {\n    addQueryParam(\"operationName\", body.operationName);\n  }\n  if (body.variables) {\n    let serializedVariables;\n    try {\n      serializedVariables = serializeFetchParameter(\n        body.variables,\n        \"Variables map\"\n      );\n    } catch (parseError) {\n      return { parseError };\n    }\n    addQueryParam(\"variables\", serializedVariables);\n  }\n  if (body.extensions) {\n    let serializedExtensions;\n    try {\n      serializedExtensions = serializeFetchParameter(\n        body.extensions,\n        \"Extensions map\"\n      );\n    } catch (parseError) {\n      return { parseError };\n    }\n    addQueryParam(\"extensions\", serializedExtensions);\n  }\n\n  // Reconstruct the URI with added query params.\n  // XXX This assumes that the URI is well-formed and that it doesn't\n  //     already contain any of these query params. We could instead use the\n  //     URL API and take a polyfill (whatwg-url@6) for older browsers that\n  //     don't support URLSearchParams. Note that some browsers (and\n  //     versions of whatwg-url) support URL but not URLSearchParams!\n  let fragment = \"\",\n    preFragment = chosenURI;\n  const fragmentStart = chosenURI.indexOf(\"#\");\n  if (fragmentStart !== -1) {\n    fragment = chosenURI.substr(fragmentStart);\n    preFragment = chosenURI.substr(0, fragmentStart);\n  }\n  const queryParamsPrefix = preFragment.indexOf(\"?\") === -1 ? \"?\" : \"&\";\n  const newURI =\n    preFragment + queryParamsPrefix + queryParams.join(\"&\") + fragment;\n  return { newURI };\n}\n","import { ApolloLink } from \"../core/index.js\";\nimport type { HttpOptions } from \"./selectHttpOptionsAndBody.js\";\nimport { createHttpLink } from \"./createHttpLink.js\";\n\nexport class HttpLink extends ApolloLink {\n  constructor(public options: HttpOptions = {}) {\n    super(createHttpLink(options).request);\n  }\n}\n","import { ApolloLink } from \"./ApolloLink.js\";\n\nexport const execute = ApolloLink.execute;\n","const { toString, hasOwnProperty } = Object.prototype;\nconst fnToStr = Function.prototype.toString;\nconst previousComparisons = new Map<object, Set<object>>();\n\n/**\n * Performs a deep equality check on two JavaScript values, tolerating cycles.\n */\nexport function equal(a: any, b: any): boolean {\n  try {\n    return check(a, b);\n  } finally {\n    previousComparisons.clear();\n  }\n}\n\n// Allow default imports as well.\nexport default equal;\n\nfunction check(a: any, b: any): boolean {\n  // If the two values are strictly equal, our job is easy.\n  if (a === b) {\n    return true;\n  }\n\n  // Object.prototype.toString returns a representation of the runtime type of\n  // the given value that is considerably more precise than typeof.\n  const aTag = toString.call(a);\n  const bTag = toString.call(b);\n\n  // If the runtime types of a and b are different, they could maybe be equal\n  // under some interpretation of equality, but for simplicity and performance\n  // we just return false instead.\n  if (aTag !== bTag) {\n    return false;\n  }\n\n  switch (aTag) {\n    case '[object Array]':\n      // Arrays are a lot like other objects, but we can cheaply compare their\n      // lengths as a short-cut before comparing their elements.\n      if (a.length !== b.length) return false;\n      // Fall through to object case...\n    case '[object Object]': {\n      if (previouslyCompared(a, b)) return true;\n\n      const aKeys = definedKeys(a);\n      const bKeys = definedKeys(b);\n\n      // If `a` and `b` have a different number of enumerable keys, they\n      // must be different.\n      const keyCount = aKeys.length;\n      if (keyCount !== bKeys.length) return false;\n\n      // Now make sure they have the same keys.\n      for (let k = 0; k < keyCount; ++k) {\n        if (!hasOwnProperty.call(b, aKeys[k])) {\n          return false;\n        }\n      }\n\n      // Finally, check deep equality of all child properties.\n      for (let k = 0; k < keyCount; ++k) {\n        const key = aKeys[k];\n        if (!check(a[key], b[key])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    case '[object Error]':\n      return a.name === b.name && a.message === b.message;\n\n    case '[object Number]':\n      // Handle NaN, which is !== itself.\n      if (a !== a) return b !== b;\n      // Fall through to shared +a === +b case...\n    case '[object Boolean]':\n    case '[object Date]':\n      return +a === +b;\n\n    case '[object RegExp]':\n    case '[object String]':\n      return a == `${b}`;\n\n    case '[object Map]':\n    case '[object Set]': {\n      if (a.size !== b.size) return false;\n      if (previouslyCompared(a, b)) return true;\n\n      const aIterator = a.entries();\n      const isMap = aTag === '[object Map]';\n\n      while (true) {\n        const info = aIterator.next();\n        if (info.done) break;\n\n        // If a instanceof Set, aValue === aKey.\n        const [aKey, aValue] = info.value;\n\n        // So this works the same way for both Set and Map.\n        if (!b.has(aKey)) {\n          return false;\n        }\n\n        // However, we care about deep equality of values only when dealing\n        // with Map structures.\n        if (isMap && !check(aValue, b.get(aKey))) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    case '[object Uint16Array]':\n    case '[object Uint8Array]': // Buffer, in Node.js.\n    case '[object Uint32Array]':\n    case '[object Int32Array]':\n    case '[object Int8Array]':\n    case '[object Int16Array]':\n    case '[object ArrayBuffer]':\n      // DataView doesn't need these conversions, but the equality check is\n      // otherwise the same.\n      a = new Uint8Array(a);\n      b = new Uint8Array(b);\n      // Fall through...\n    case '[object DataView]': {\n      let len = a.byteLength;\n      if (len === b.byteLength) {\n        while (len-- && a[len] === b[len]) {\n          // Keep looping as long as the bytes are equal.\n        }\n      }\n      return len === -1;\n    }\n\n    case '[object AsyncFunction]':\n    case '[object GeneratorFunction]':\n    case '[object AsyncGeneratorFunction]':\n    case '[object Function]': {\n      const aCode = fnToStr.call(a);\n      if (aCode !== fnToStr.call(b)) {\n        return false;\n      }\n\n      // We consider non-native functions equal if they have the same code\n      // (native functions require === because their code is censored).\n      // Note that this behavior is not entirely sound, since !== function\n      // objects with the same code can behave differently depending on\n      // their closure scope. However, any function can behave differently\n      // depending on the values of its input arguments (including this)\n      // and its calling context (including its closure scope), even\n      // though the function object is === to itself; and it is entirely\n      // possible for functions that are not === to behave exactly the\n      // same under all conceivable circumstances. Because none of these\n      // factors are statically decidable in JavaScript, JS function\n      // equality is not well-defined. This ambiguity allows us to\n      // consider the best possible heuristic among various imperfect\n      // options, and equating non-native functions that have the same\n      // code has enormous practical benefits, such as when comparing\n      // functions that are repeatedly passed as fresh function\n      // expressions within objects that are otherwise deeply equal. Since\n      // any function created from the same syntactic expression (in the\n      // same code location) will always stringify to the same code\n      // according to fnToStr.call, we can reasonably expect these\n      // repeatedly passed function expressions to have the same code, and\n      // thus behave \"the same\" (with all the caveats mentioned above),\n      // even though the runtime function objects are !== to one another.\n      return !endsWith(aCode, nativeCodeSuffix);\n    }\n  }\n\n  // Otherwise the values are not equal.\n  return false;\n}\n\nfunction definedKeys<TObject extends object>(obj: TObject) {\n  // Remember that the second argument to Array.prototype.filter will be\n  // used as `this` within the callback function.\n  return Object.keys(obj).filter(isDefinedKey, obj);\n}\nfunction isDefinedKey<TObject extends object>(\n  this: TObject,\n  key: keyof TObject,\n) {\n  return this[key] !== void 0;\n}\n\nconst nativeCodeSuffix = \"{ [native code] }\";\n\nfunction endsWith(full: string, suffix: string) {\n  const fromIndex = full.length - suffix.length;\n  return fromIndex >= 0 &&\n    full.indexOf(suffix, fromIndex) === fromIndex;\n}\n\nfunction previouslyCompared(a: object, b: object): boolean {\n  // Though cyclic references can make an object graph appear infinite from the\n  // perspective of a depth-first traversal, the graph still contains a finite\n  // number of distinct object references. We use the previousComparisons cache\n  // to avoid comparing the same pair of object references more than once, which\n  // guarantees termination (even if we end up comparing every object in one\n  // graph to every object in the other graph, which is extremely unlikely),\n  // while still allowing weird isomorphic structures (like rings with different\n  // lengths) a chance to pass the equality test.\n  let bSet = previousComparisons.get(a);\n  if (bSet) {\n    // Return true here because we can be sure false will be returned somewhere\n    // else if the objects are not equivalent.\n    if (bSet.has(b)) return true;\n  } else {\n    previousComparisons.set(a, bSet = new Set);\n  }\n  bSet.add(b);\n  return false;\n}\n","// A [trie](https://en.wikipedia.org/wiki/Trie) data structure that holds\n// object keys weakly, yet can also hold non-object keys, unlike the\n// native `WeakMap`.\n\n// If no makeData function is supplied, the looked-up data will be an empty,\n// null-prototype Object.\nconst defaultMakeData = () => Object.create(null);\n\n// Useful for processing arguments objects as well as arrays.\nconst { forEach, slice } = Array.prototype;\nconst { hasOwnProperty } = Object.prototype;\n\nexport class Trie<Data> {\n  // Since a `WeakMap` cannot hold primitive values as keys, we need a\n  // backup `Map` instance to hold primitive keys. Both `this._weakMap`\n  // and `this._strongMap` are lazily initialized.\n  private weak?: WeakMap<any, Trie<Data>>;\n  private strong?: Map<any, Trie<Data>>;\n  private data?: Data;\n\n  constructor(\n    private weakness = true,\n    private makeData: (array: any[]) => Data = defaultMakeData,\n  ) {}\n\n  public lookup<T extends any[]>(...array: T): Data;\n  public lookup(): Data {\n    return this.lookupArray(arguments);\n  }\n\n  public lookupArray<T extends IArguments | any[]>(array: T): Data {\n    let node: Trie<Data> = this;\n    forEach.call(array, key => node = node.getChildTrie(key));\n    return hasOwnProperty.call(node, \"data\")\n      ? node.data as Data\n      : node.data = this.makeData(slice.call(array));\n  }\n\n  public peek<T extends any[]>(...array: T): Data | undefined;\n  public peek(): Data | undefined {\n    return this.peekArray(arguments);\n  }\n\n  public peekArray<T extends IArguments | any[]>(array: T): Data | undefined {\n    let node: Trie<Data> | undefined = this;\n\n    for (let i = 0, len = array.length; node && i < len; ++i) {\n      const map = node.mapFor(array[i], false);\n      node = map && map.get(array[i]);\n    }\n\n    return node && node.data;\n  }\n\n  public remove(...array: any[]): Data | undefined;\n  public remove(): Data | undefined {\n    return this.removeArray(arguments);\n  }\n\n  public removeArray<T extends IArguments | any[]>(array: T): Data | undefined {\n    let data: Data | undefined;\n\n    if (array.length) {\n      const head = array[0];\n      const map = this.mapFor(head, false);\n      const child = map && map.get(head);\n      if (child) {\n        data = child.removeArray(slice.call(array, 1));\n        if (!child.data && !child.weak && !(child.strong && child.strong.size)) {\n          map.delete(head);\n        }\n      }\n    } else {\n      data = this.data;\n      delete this.data;\n    }\n\n    return data;\n  }\n\n  private getChildTrie(key: any) {\n    const map = this.mapFor(key, true)!;\n    let child = map.get(key);\n    if (!child) map.set(key, child = new Trie<Data>(this.weakness, this.makeData));\n    return child;\n  }\n\n  private mapFor(key: any, create: boolean): Trie<Data>[\"weak\" | \"strong\"] | undefined {\n    return this.weakness && isObjRef(key)\n      ? this.weak || (create ? this.weak = new WeakMap : void 0)\n      : this.strong || (create ? this.strong = new Map : void 0);\n  }\n}\n\nfunction isObjRef(value: any) {\n  switch (typeof value) {\n  case \"object\":\n    if (value === null) break;\n    // Fall through to return true...\n  case \"function\":\n    return true;\n  }\n  return false;\n}\n","// A [trie](https://en.wikipedia.org/wiki/Trie) data structure that holds\n// object keys weakly, yet can also hold non-object keys, unlike the\n// native `WeakMap`.\n\n// If no makeData function is supplied, the looked-up data will be an empty,\n// null-prototype Object.\nconst defaultMakeData = () => Object.create(null);\n\n// Useful for processing arguments objects as well as arrays.\nconst { forEach, slice } = Array.prototype;\nconst { hasOwnProperty } = Object.prototype;\n\nexport class Trie<Data> {\n  // Since a `WeakMap` cannot hold primitive values as keys, we need a\n  // backup `Map` instance to hold primitive keys. Both `this._weakMap`\n  // and `this._strongMap` are lazily initialized.\n  private weak?: WeakMap<any, Trie<Data>>;\n  private strong?: Map<any, Trie<Data>>;\n  private data?: Data;\n\n  constructor(\n    private weakness = true,\n    private makeData: (array: any[]) => Data = defaultMakeData,\n  ) {}\n\n  public lookup<T extends any[]>(...array: T): Data {\n    return this.lookupArray(array);\n  }\n\n  public lookupArray<T extends IArguments | any[]>(array: T): Data {\n    let node: Trie<Data> = this;\n    forEach.call(array, key => node = node.getChildTrie(key));\n    return hasOwnProperty.call(node, \"data\")\n      ? node.data as Data\n      : node.data = this.makeData(slice.call(array));\n  }\n\n  public peek<T extends any[]>(...array: T): Data | undefined {\n    return this.peekArray(array);\n  }\n\n  public peekArray<T extends IArguments | any[]>(array: T): Data | undefined {\n    let node: Trie<Data> | undefined = this;\n\n    for (let i = 0, len = array.length; node && i < len; ++i) {\n      const map: Trie<Data>[\"weak\" | \"strong\"] =\n        this.weakness && isObjRef(array[i]) ? node.weak : node.strong;\n\n      node = map && map.get(array[i]);\n    }\n\n    return node && node.data;\n  }\n\n  private getChildTrie(key: any) {\n    const map = this.weakness && isObjRef(key)\n      ? this.weak || (this.weak = new WeakMap<any, Trie<Data>>())\n      : this.strong || (this.strong = new Map<any, Trie<Data>>());\n    let child = map.get(key);\n    if (!child) map.set(key, child = new Trie<Data>(this.weakness, this.makeData));\n    return child;\n  }\n}\n\nfunction isObjRef(value: any) {\n  switch (typeof value) {\n  case \"object\":\n    if (value === null) break;\n    // Fall through to return true...\n  case \"function\":\n    return true;\n  }\n  return false;\n}\n","type Context = {\n  parent: Context | null;\n  slots: { [slotId: string]: any };\n}\n\n// This currentContext variable will only be used if the makeSlotClass\n// function is called, which happens only if this is the first copy of the\n// @wry/context package to be imported.\nlet currentContext: Context | null = null;\n\n// This unique internal object is used to denote the absence of a value\n// for a given Slot, and is never exposed to outside code.\nconst MISSING_VALUE: any = {};\n\nlet idCounter = 1;\n\n// Although we can't do anything about the cost of duplicated code from\n// accidentally bundling multiple copies of the @wry/context package, we can\n// avoid creating the Slot class more than once using makeSlotClass.\nconst makeSlotClass = () => class Slot<TValue> {\n  // If you have a Slot object, you can find out its slot.id, but you cannot\n  // guess the slot.id of a Slot you don't have access to, thanks to the\n  // randomized suffix.\n  public readonly id = [\n    \"slot\",\n    idCounter++,\n    Date.now(),\n    Math.random().toString(36).slice(2),\n  ].join(\":\");\n\n  public hasValue() {\n    for (let context = currentContext; context; context = context.parent) {\n      // We use the Slot object iself as a key to its value, which means the\n      // value cannot be obtained without a reference to the Slot object.\n      if (this.id in context.slots) {\n        const value = context.slots[this.id];\n        if (value === MISSING_VALUE) break;\n        if (context !== currentContext) {\n          // Cache the value in currentContext.slots so the next lookup will\n          // be faster. This caching is safe because the tree of contexts and\n          // the values of the slots are logically immutable.\n          currentContext!.slots[this.id] = value;\n        }\n        return true;\n      }\n    }\n    if (currentContext) {\n      // If a value was not found for this Slot, it's never going to be found\n      // no matter how many times we look it up, so we might as well cache\n      // the absence of the value, too.\n      currentContext.slots[this.id] = MISSING_VALUE;\n    }\n    return false;\n  }\n\n  public getValue(): TValue | undefined {\n    if (this.hasValue()) {\n      return currentContext!.slots[this.id] as TValue;\n    }\n  }\n\n  public withValue<TResult, TArgs extends any[], TThis = any>(\n    value: TValue,\n    callback: (this: TThis, ...args: TArgs) => TResult,\n    // Given the prevalence of arrow functions, specifying arguments is likely\n    // to be much more common than specifying `this`, hence this ordering:\n    args?: TArgs,\n    thisArg?: TThis,\n  ): TResult {\n    const slots = {\n      __proto__: null,\n      [this.id]: value,\n    };\n    const parent = currentContext;\n    currentContext = { parent, slots };\n    try {\n      // Function.prototype.apply allows the arguments array argument to be\n      // omitted or undefined, so args! is fine here.\n      return callback.apply(thisArg!, args!);\n    } finally {\n      currentContext = parent;\n    }\n  }\n\n  // Capture the current context and wrap a callback function so that it\n  // reestablishes the captured context when called.\n  static bind<TArgs extends any[], TResult, TThis = any>(\n    callback: (this: TThis, ...args: TArgs) => TResult,\n  ) {\n    const context = currentContext;\n    return function (this: TThis) {\n      const saved = currentContext;\n      try {\n        currentContext = context;\n        return callback.apply(this, arguments as any);\n      } finally {\n        currentContext = saved;\n      }\n    } as typeof callback;\n  }\n\n  // Immediately run a callback function without any captured context.\n  static noContext<TResult, TArgs extends any[], TThis = any>(\n    callback: (this: TThis, ...args: TArgs) => TResult,\n    // Given the prevalence of arrow functions, specifying arguments is likely\n    // to be much more common than specifying `this`, hence this ordering:\n    args?: TArgs,\n    thisArg?: TThis,\n  ) {\n    if (currentContext) {\n      const saved = currentContext;\n      try {\n        currentContext = null;\n        // Function.prototype.apply allows the arguments array argument to be\n        // omitted or undefined, so args! is fine here.\n        return callback.apply(thisArg!, args!);\n      } finally {\n        currentContext = saved;\n      }\n    } else {\n      return callback.apply(thisArg!, args!);\n    }\n  }\n};\n\nfunction maybe<T>(fn: () => T): T | undefined {\n  try {\n    return fn();\n  } catch (ignored) {}\n}\n\n// We store a single global implementation of the Slot class as a permanent\n// non-enumerable property of the globalThis object. This obfuscation does\n// nothing to prevent access to the Slot class, but at least it ensures the\n// implementation (i.e. currentContext) cannot be tampered with, and all copies\n// of the @wry/context package (hopefully just one) will share the same Slot\n// implementation. Since the first copy of the @wry/context package to be\n// imported wins, this technique imposes a steep cost for any future breaking\n// changes to the Slot class.\nconst globalKey = \"@wry/context:Slot\";\n\nconst host =\n  // Prefer globalThis when available.\n  // https://github.com/benjamn/wryware/issues/347\n  maybe(() => globalThis) ||\n  // Fall back to global, which works in Node.js and may be converted by some\n  // bundlers to the appropriate identifier (window, self, ...) depending on the\n  // bundling target. https://github.com/endojs/endo/issues/576#issuecomment-1178515224\n  maybe(() => global) ||\n  // Otherwise, use a dummy host that's local to this module. We used to fall\n  // back to using the Array constructor as a namespace, but that was flagged in\n  // https://github.com/benjamn/wryware/issues/347, and can be avoided.\n  Object.create(null) as typeof Array;\n\n// Whichever globalHost we're using, make TypeScript happy about the additional\n// globalKey property.\nconst globalHost: typeof host & {\n  [globalKey]?: typeof Slot;\n} = host;\n\nexport const Slot: ReturnType<typeof makeSlotClass> =\n  globalHost[globalKey] ||\n  // Earlier versions of this package stored the globalKey property on the Array\n  // constructor, so we check there as well, to prevent Slot class duplication.\n  (Array as typeof globalHost)[globalKey] ||\n  (function (Slot) {\n    try {\n      Object.defineProperty(globalHost, globalKey, {\n        value: Slot,\n        enumerable: false,\n        writable: false,\n        // When it was possible for globalHost to be the Array constructor (a\n        // legacy Slot dedup strategy), it was important for the property to be\n        // configurable:true so it could be deleted. That does not seem to be as\n        // important when globalHost is the global object, but I don't want to\n        // cause similar problems again, and configurable:true seems safest.\n        // https://github.com/endojs/endo/issues/576#issuecomment-1178274008\n        configurable: true\n      });\n    } finally {\n      return Slot;\n    }\n  })(makeSlotClass());\n","import { Slot } from \"./slot.js\";\nexport { Slot }\nexport const { bind, noContext } = Slot;\n\n// Relying on the @types/node declaration of global.setTimeout can make\n// things tricky for dowstream projects (see PR #7).\ndeclare function setTimeout(\n  callback: (...args: any[]) => any,\n  ms?: number,\n  ...args: any[]\n): any;\n\n// Like global.setTimeout, except the callback runs with captured context.\nexport { setTimeoutWithContext as setTimeout };\nfunction setTimeoutWithContext(callback: () => any, delay: number) {\n  return setTimeout(bind(callback), delay);\n}\n\n// Turn any generator function into an async function (using yield instead\n// of await), with context automatically preserved across yields.\nexport function asyncFromGen<\n  TArgs extends any[],\n  TYield = any,\n  TReturn = any,\n  TNext = any,\n>(\n  genFn: (...args: TArgs) => Generator<TYield, TReturn, TNext>\n) {\n  return function (this: any) {\n    const gen = genFn.apply(this, arguments as any);\n\n    type Method = (\n      this: Generator<TYield, TReturn, TNext>,\n      arg: any,\n    ) => IteratorResult<TYield, TReturn>;\n\n    const boundNext: Method = bind(gen.next);\n    const boundThrow: Method = bind(gen.throw!);\n\n    return new Promise((resolve, reject) => {\n      function invoke(method: Method, argument: any) {\n        try {\n          var result: any = method.call(gen, argument);\n        } catch (error) {\n          return reject(error);\n        }\n        const next = result.done ? resolve : invokeNext;\n        if (isPromiseLike(result.value)) {\n          result.value.then(next, result.done ? reject : invokeThrow);\n        } else {\n          next(result.value);\n        }\n      }\n      const invokeNext = (value?: any) => invoke(boundNext, value);\n      const invokeThrow = (error: any) => invoke(boundThrow, error);\n      invokeNext();\n    });\n  } as (...args: TArgs) => Promise<any>;\n}\n\nfunction isPromiseLike(value: any): value is PromiseLike<any> {\n  return value && typeof value.then === \"function\";\n}\n\n// If you use the fibers npm package to implement coroutines in Node.js,\n// you should call this function at least once to ensure context management\n// remains coherent across any yields.\nconst wrappedFibers: Function[] = [];\nexport function wrapYieldingFiberMethods<F extends Function>(Fiber: F): F {\n  // There can be only one implementation of Fiber per process, so this array\n  // should never grow longer than one element.\n  if (wrappedFibers.indexOf(Fiber) < 0) {\n    const wrap = (obj: any, method: string) => {\n      const fn = obj[method];\n      obj[method] = function () {\n        return noContext(fn, arguments as any, this);\n      };\n    }\n    // These methods can yield, according to\n    // https://github.com/laverdet/node-fibers/blob/ddebed9b8ae3883e57f822e2108e6943e5c8d2a8/fibers.js#L97-L100\n    wrap(Fiber, \"yield\");\n    wrap(Fiber.prototype, \"run\");\n    wrap(Fiber.prototype, \"throwInto\");\n    wrappedFibers.push(Fiber);\n  }\n  return Fiber;\n}\n","import { Slot } from \"@wry/context\";\nimport { AnyEntry } from \"./entry.js\";\n\nexport const parentEntrySlot = new Slot<AnyEntry | undefined>();\n\nexport function nonReactive<R>(fn: () => R): R {\n  return parentEntrySlot.withValue(void 0, fn);\n}\n\nexport { Slot }\nexport {\n  bind as bindContext,\n  noContext,\n  setTimeout,\n  asyncFromGen,\n} from \"@wry/context\";\n","export type NoInfer<T> = [T][T extends any ? 0 : never];\n\nexport const {\n  hasOwnProperty,\n} = Object.prototype;\n\nexport const arrayFromSet: <T>(set: Set<T>) => T[] =\n  Array.from ||\n  function (set) {\n    const array: any[] = [];\n    set.forEach(item => array.push(item));\n    return array;\n  };\n\nexport type Unsubscribable = {\n  unsubscribe?: void | (() => any);\n}\n\nexport function maybeUnsubscribe(entryOrDep: Unsubscribable) {\n  const { unsubscribe } = entryOrDep;\n  if (typeof unsubscribe === \"function\") {\n    entryOrDep.unsubscribe = void 0;\n    unsubscribe();\n  }\n}\n","import { parentEntrySlot } from \"./context.js\";\nimport { OptimisticWrapOptions } from \"./index.js\";\nimport { Dep } from \"./dep.js\";\nimport { maybeUnsubscribe, arrayFromSet, Unsubscribable } from \"./helpers.js\";\n\nconst emptySetPool: Set<any>[] = [];\nconst POOL_TARGET_SIZE = 100;\n\n// Since this package might be used browsers, we should avoid using the\n// Node built-in assert module.\nfunction assert(condition: any, optionalMessage?: string) {\n  if (! condition) {\n    throw new Error(optionalMessage || \"assertion failure\");\n  }\n}\n\n// Since exceptions are cached just like normal values, we need an efficient\n// way of representing unknown, ordinary, and exceptional values.\ntype Value<T> =\n  | []           // unknown\n  | [T]          // known value\n  | [void, any]; // known exception\n\nfunction valueIs(a: Value<any>, b: Value<any>) {\n  const len = a.length;\n  return (\n    // Unknown values are not equal to each other.\n    len > 0 &&\n    // Both values must be ordinary (or both exceptional) to be equal.\n    len === b.length &&\n    // The underlying value or exception must be the same.\n    a[len - 1] === b[len - 1]\n  );\n}\n\nfunction valueGet<T>(value: Value<T>): T {\n  switch (value.length) {\n    case 0: throw new Error(\"unknown value\");\n    case 1: return value[0];\n    case 2: throw value[1];\n  }\n}\n\nfunction valueCopy<T>(value: Value<T>): Value<T> {\n  return value.slice(0) as Value<T>;\n}\n\nexport type AnyEntry = Entry<any, any>;\n\nexport class Entry<TArgs extends any[], TValue> {\n  public static count = 0;\n\n  public normalizeResult: OptimisticWrapOptions<TArgs, any, any, TValue>[\"normalizeResult\"];\n  public subscribe: OptimisticWrapOptions<TArgs>[\"subscribe\"];\n  public unsubscribe: Unsubscribable[\"unsubscribe\"];\n\n  public readonly parents = new Set<AnyEntry>();\n  public readonly childValues = new Map<AnyEntry, Value<any>>();\n\n  // When this Entry has children that are dirty, this property becomes\n  // a Set containing other Entry objects, borrowed from emptySetPool.\n  // When the set becomes empty, it gets recycled back to emptySetPool.\n  public dirtyChildren: Set<AnyEntry> | null = null;\n\n  public dirty = true;\n  public recomputing = false;\n  public readonly value: Value<TValue> = [];\n\n  constructor(\n    public readonly fn: (...args: TArgs) => TValue,\n  ) {\n    ++Entry.count;\n  }\n\n  public peek(): TValue | undefined {\n    if (this.value.length === 1 && !mightBeDirty(this)) {\n      rememberParent(this);\n      return this.value[0];\n    }\n  }\n\n  // This is the most important method of the Entry API, because it\n  // determines whether the cached this.value can be returned immediately,\n  // or must be recomputed. The overall performance of the caching system\n  // depends on the truth of the following observations: (1) this.dirty is\n  // usually false, (2) this.dirtyChildren is usually null/empty, and thus\n  // (3) valueGet(this.value) is usually returned without recomputation.\n  public recompute(args: TArgs): TValue {\n    assert(! this.recomputing, \"already recomputing\");\n    rememberParent(this);\n    return mightBeDirty(this)\n      ? reallyRecompute(this, args)\n      : valueGet(this.value);\n  }\n\n  public setDirty() {\n    if (this.dirty) return;\n    this.dirty = true;\n    reportDirty(this);\n    // We can go ahead and unsubscribe here, since any further dirty\n    // notifications we receive will be redundant, and unsubscribing may\n    // free up some resources, e.g. file watchers.\n    maybeUnsubscribe(this);\n  }\n\n  public dispose() {\n    this.setDirty();\n\n    // Sever any dependency relationships with our own children, so those\n    // children don't retain this parent Entry in their child.parents sets,\n    // thereby preventing it from being fully garbage collected.\n    forgetChildren(this);\n\n    // Because this entry has been kicked out of the cache (in index.js),\n    // we've lost the ability to find out if/when this entry becomes dirty,\n    // whether that happens through a subscription, because of a direct call\n    // to entry.setDirty(), or because one of its children becomes dirty.\n    // Because of this loss of future information, we have to assume the\n    // worst (that this entry might have become dirty very soon), so we must\n    // immediately mark this entry's parents as dirty. Normally we could\n    // just call entry.setDirty() rather than calling parent.setDirty() for\n    // each parent, but that would leave this entry in parent.childValues\n    // and parent.dirtyChildren, which would prevent the child from being\n    // truly forgotten.\n    eachParent(this, (parent, child) => {\n      parent.setDirty();\n      forgetChild(parent, this);\n    });\n  }\n\n  public forget() {\n    // The code that creates Entry objects in index.ts will replace this method\n    // with one that actually removes the Entry from the cache, which will also\n    // trigger the entry.dispose method.\n    this.dispose();\n  }\n\n  private deps: Set<Dep<any>> | null = null;\n\n  public dependOn(dep: Dep<any>) {\n    dep.add(this);\n    if (! this.deps) {\n      this.deps = emptySetPool.pop() || new Set<Set<AnyEntry>>();\n    }\n    this.deps.add(dep);\n  }\n\n  public forgetDeps() {\n    if (this.deps) {\n      arrayFromSet(this.deps).forEach(dep => dep.delete(this));\n      this.deps.clear();\n      emptySetPool.push(this.deps);\n      this.deps = null;\n    }\n  }\n}\n\nfunction rememberParent(child: AnyEntry) {\n  const parent = parentEntrySlot.getValue();\n  if (parent) {\n    child.parents.add(parent);\n\n    if (! parent.childValues.has(child)) {\n      parent.childValues.set(child, []);\n    }\n\n    if (mightBeDirty(child)) {\n      reportDirtyChild(parent, child);\n    } else {\n      reportCleanChild(parent, child);\n    }\n\n    return parent;\n  }\n}\n\nfunction reallyRecompute(entry: AnyEntry, args: any[]) {\n  forgetChildren(entry);\n\n  // Set entry as the parent entry while calling recomputeNewValue(entry).\n  parentEntrySlot.withValue(entry, recomputeNewValue, [entry, args]);\n\n  if (maybeSubscribe(entry, args)) {\n    // If we successfully recomputed entry.value and did not fail to\n    // (re)subscribe, then this Entry is no longer explicitly dirty.\n    setClean(entry);\n  }\n\n  return valueGet(entry.value);\n}\n\nfunction recomputeNewValue(entry: AnyEntry, args: any[]) {\n  entry.recomputing = true;\n\n  const { normalizeResult } = entry;\n  let oldValueCopy: Value<any> | undefined;\n  if (normalizeResult && entry.value.length === 1) {\n    oldValueCopy = valueCopy(entry.value);\n  }\n\n  // Make entry.value an empty array, representing an unknown value.\n  entry.value.length = 0;\n\n  try {\n    // If entry.fn succeeds, entry.value will become a normal Value.\n    entry.value[0] = entry.fn.apply(null, args);\n\n    // If we have a viable oldValueCopy to compare with the (successfully\n    // recomputed) new entry.value, and they are not already === identical, give\n    // normalizeResult a chance to pick/choose/reuse parts of oldValueCopy[0]\n    // and/or entry.value[0] to determine the final cached entry.value.\n    if (normalizeResult && oldValueCopy && !valueIs(oldValueCopy, entry.value)) {\n      try {\n        entry.value[0] = normalizeResult(entry.value[0], oldValueCopy[0]);\n      } catch {\n        // If normalizeResult throws, just use the newer value, rather than\n        // saving the exception as entry.value[1].\n      }\n    }\n\n  } catch (e) {\n    // If entry.fn throws, entry.value will hold that exception.\n    entry.value[1] = e;\n  }\n\n  // Either way, this line is always reached.\n  entry.recomputing = false;\n}\n\nfunction mightBeDirty(entry: AnyEntry) {\n  return entry.dirty || !!(entry.dirtyChildren && entry.dirtyChildren.size);\n}\n\nfunction setClean(entry: AnyEntry) {\n  entry.dirty = false;\n\n  if (mightBeDirty(entry)) {\n    // This Entry may still have dirty children, in which case we can't\n    // let our parents know we're clean just yet.\n    return;\n  }\n\n  reportClean(entry);\n}\n\nfunction reportDirty(child: AnyEntry) {\n  eachParent(child, reportDirtyChild);\n}\n\nfunction reportClean(child: AnyEntry) {\n  eachParent(child, reportCleanChild);\n}\n\nfunction eachParent(\n  child: AnyEntry,\n  callback: (parent: AnyEntry, child: AnyEntry) => any,\n) {\n  const parentCount = child.parents.size;\n  if (parentCount) {\n    const parents = arrayFromSet(child.parents);\n    for (let i = 0; i < parentCount; ++i) {\n      callback(parents[i], child);\n    }\n  }\n}\n\n// Let a parent Entry know that one of its children may be dirty.\nfunction reportDirtyChild(parent: AnyEntry, child: AnyEntry) {\n  // Must have called rememberParent(child) before calling\n  // reportDirtyChild(parent, child).\n  assert(parent.childValues.has(child));\n  assert(mightBeDirty(child));\n  const parentWasClean = !mightBeDirty(parent);\n\n  if (! parent.dirtyChildren) {\n    parent.dirtyChildren = emptySetPool.pop() || new Set;\n\n  } else if (parent.dirtyChildren.has(child)) {\n    // If we already know this child is dirty, then we must have already\n    // informed our own parents that we are dirty, so we can terminate\n    // the recursion early.\n    return;\n  }\n\n  parent.dirtyChildren.add(child);\n\n  // If parent was clean before, it just became (possibly) dirty (according to\n  // mightBeDirty), since we just added child to parent.dirtyChildren.\n  if (parentWasClean) {\n    reportDirty(parent);\n  }\n}\n\n// Let a parent Entry know that one of its children is no longer dirty.\nfunction reportCleanChild(parent: AnyEntry, child: AnyEntry) {\n  // Must have called rememberChild(child) before calling\n  // reportCleanChild(parent, child).\n  assert(parent.childValues.has(child));\n  assert(! mightBeDirty(child));\n\n  const childValue = parent.childValues.get(child)!;\n  if (childValue.length === 0) {\n    parent.childValues.set(child, valueCopy(child.value));\n  } else if (! valueIs(childValue, child.value)) {\n    parent.setDirty();\n  }\n\n  removeDirtyChild(parent, child);\n\n  if (mightBeDirty(parent)) {\n    return;\n  }\n\n  reportClean(parent);\n}\n\nfunction removeDirtyChild(parent: AnyEntry, child: AnyEntry) {\n  const dc = parent.dirtyChildren;\n  if (dc) {\n    dc.delete(child);\n    if (dc.size === 0) {\n      if (emptySetPool.length < POOL_TARGET_SIZE) {\n        emptySetPool.push(dc);\n      }\n      parent.dirtyChildren = null;\n    }\n  }\n}\n\n// Removes all children from this entry and returns an array of the\n// removed children.\nfunction forgetChildren(parent: AnyEntry) {\n  if (parent.childValues.size > 0) {\n    parent.childValues.forEach((_value, child) => {\n      forgetChild(parent, child);\n    });\n  }\n\n  // Remove this parent Entry from any sets to which it was added by the\n  // addToSet method.\n  parent.forgetDeps();\n\n  // After we forget all our children, this.dirtyChildren must be empty\n  // and therefore must have been reset to null.\n  assert(parent.dirtyChildren === null);\n}\n\nfunction forgetChild(parent: AnyEntry, child: AnyEntry) {\n  child.parents.delete(parent);\n  parent.childValues.delete(child);\n  removeDirtyChild(parent, child);\n}\n\nfunction maybeSubscribe(entry: AnyEntry, args: any[]) {\n  if (typeof entry.subscribe === \"function\") {\n    try {\n      maybeUnsubscribe(entry); // Prevent double subscriptions.\n      entry.unsubscribe = entry.subscribe.apply(null, args);\n    } catch (e) {\n      // If this Entry has a subscribe function and it threw an exception\n      // (or an unsubscribe function it previously returned now throws),\n      // return false to indicate that we were not able to subscribe (or\n      // unsubscribe), and this Entry should remain dirty.\n      entry.setDirty();\n      return false;\n    }\n  }\n\n  // Returning true indicates either that there was no entry.subscribe\n  // function or that it succeeded.\n  return true;\n}\n","import { AnyEntry } from \"./entry.js\";\nimport { OptimisticWrapOptions } from \"./index.js\";\nimport { parentEntrySlot } from \"./context.js\";\nimport {\n  hasOwnProperty,\n  Unsubscribable,\n  maybeUnsubscribe,\n  arrayFromSet,\n } from \"./helpers.js\";\n\ntype EntryMethodName = keyof typeof EntryMethods;\nconst EntryMethods = {\n  setDirty: true, // Mark parent Entry as needing to be recomputed (default)\n  dispose: true,  // Detach parent Entry from parents and children, but leave in LRU cache\n  forget: true,   // Fully remove parent Entry from LRU cache and computation graph\n};\n\nexport type OptimisticDependencyFunction<TKey> =\n  ((key: TKey) => void) & {\n    dirty: (key: TKey, entryMethodName?: EntryMethodName) => void;\n  };\n\nexport type Dep<TKey> = Set<AnyEntry> & {\n  subscribe: OptimisticWrapOptions<[TKey]>[\"subscribe\"];\n} & Unsubscribable;\n\nexport function dep<TKey>(options?: {\n  subscribe: Dep<TKey>[\"subscribe\"];\n}) {\n  const depsByKey = new Map<TKey, Dep<TKey>>();\n  const subscribe = options && options.subscribe;\n\n  function depend(key: TKey) {\n    const parent = parentEntrySlot.getValue();\n    if (parent) {\n      let dep = depsByKey.get(key);\n      if (!dep) {\n        depsByKey.set(key, dep = new Set as Dep<TKey>);\n      }\n      parent.dependOn(dep);\n      if (typeof subscribe === \"function\") {\n        maybeUnsubscribe(dep);\n        dep.unsubscribe = subscribe(key);\n      }\n    }\n  }\n\n  depend.dirty = function dirty(\n    key: TKey,\n    entryMethodName?: EntryMethodName,\n  ) {\n    const dep = depsByKey.get(key);\n    if (dep) {\n      const m: EntryMethodName = (\n        entryMethodName &&\n        hasOwnProperty.call(EntryMethods, entryMethodName)\n      ) ? entryMethodName : \"setDirty\";\n      // We have to use arrayFromSet(dep).forEach instead of dep.forEach,\n      // because modifying a Set while iterating over it can cause elements in\n      // the Set to be removed from the Set before they've been iterated over.\n      arrayFromSet(dep).forEach(entry => entry[m]());\n      depsByKey.delete(key);\n      maybeUnsubscribe(dep);\n    }\n  };\n\n  return depend as OptimisticDependencyFunction<TKey>;\n}\n","import { Trie } from \"@wry/trie\";\n\nimport { StrongCache, CommonCache } from \"@wry/caches\";\nimport { Entry, AnyEntry } from \"./entry.js\";\nimport { parentEntrySlot } from \"./context.js\";\nimport type { NoInfer } from \"./helpers.js\";\n\n// These helper functions are important for making optimism work with\n// asynchronous code. In order to register parent-child dependencies,\n// optimism needs to know about any currently active parent computations.\n// In ordinary synchronous code, the parent context is implicit in the\n// execution stack, but asynchronous code requires some extra guidance in\n// order to propagate context from one async task segment to the next.\nexport {\n  bindContext,\n  noContext,\n  nonReactive,\n  setTimeout,\n  asyncFromGen,\n  Slot,\n} from \"./context.js\";\n\n// A lighter-weight dependency, similar to OptimisticWrapperFunction, except\n// with only one argument, no makeCacheKey, no wrapped function to recompute,\n// and no result value. Useful for representing dependency leaves in the graph\n// of computation. Subscriptions are supported.\nexport { dep, OptimisticDependencyFunction } from \"./dep.js\";\n\n// The defaultMakeCacheKey function is remarkably powerful, because it gives\n// a unique object for any shallow-identical list of arguments. If you need\n// to implement a custom makeCacheKey function, you may find it helpful to\n// delegate the final work to defaultMakeCacheKey, which is why we export it\n// here. However, you may want to avoid defaultMakeCacheKey if your runtime\n// does not support WeakMap, or you have the ability to return a string key.\n// In those cases, just write your own custom makeCacheKey functions.\nlet defaultKeyTrie: Trie<object> | undefined;\nexport function defaultMakeCacheKey(...args: any[]): object {\n  const trie = defaultKeyTrie || (\n    defaultKeyTrie = new Trie(typeof WeakMap === \"function\")\n  );\n  return trie.lookupArray(args);\n}\n\n// If you're paranoid about memory leaks, or you want to avoid using WeakMap\n// under the hood, but you still need the behavior of defaultMakeCacheKey,\n// import this constructor to create your own tries.\nexport { Trie as KeyTrie }\n\nexport type OptimisticWrapperFunction<\n  TArgs extends any[],\n  TResult,\n  TKeyArgs extends any[] = TArgs,\n  TCacheKey = any,\n> = ((...args: TArgs) => TResult) & {\n  // Get the current number of Entry objects in the LRU cache.\n  readonly size: number;\n\n  // Snapshot of wrap options used to create this wrapper function.\n  options: OptionsWithCacheInstance<TArgs, TKeyArgs, TCacheKey>;\n\n  // \"Dirty\" any cached Entry stored for the given arguments, marking that Entry\n  // and its ancestors as potentially needing to be recomputed. The .dirty(...)\n  // method of an optimistic function takes the same parameter types as the\n  // original function by default, unless a keyArgs function is configured, and\n  // then it matters that .dirty takes TKeyArgs instead of TArgs.\n  dirty: (...args: TKeyArgs) => void;\n  // A version of .dirty that accepts a key returned by .getKey.\n  dirtyKey: (key: TCacheKey | undefined) => void;\n\n  // Examine the current value without recomputing it.\n  peek: (...args: TKeyArgs) => TResult | undefined;\n  // A version of .peek that accepts a key returned by .getKey.\n  peekKey: (key: TCacheKey | undefined) => TResult | undefined;\n\n  // Completely remove the entry from the cache, dirtying any parent entries.\n  forget: (...args: TKeyArgs) => boolean;\n  // A version of .forget that accepts a key returned by .getKey.\n  forgetKey: (key: TCacheKey | undefined) => boolean;\n\n  // In order to use the -Key version of the above functions, you need a key\n  // rather than the arguments used to compute the key. These two functions take\n  // TArgs or TKeyArgs and return the corresponding TCacheKey. If no keyArgs\n  // function has been configured, TArgs will be the same as TKeyArgs, and thus\n  // getKey and makeCacheKey will be synonymous.\n  getKey: (...args: TArgs) => TCacheKey | undefined;\n\n  // This property is equivalent to the makeCacheKey function provided in the\n  // OptimisticWrapOptions, or (if no options.makeCacheKey function is provided)\n  // a default implementation of makeCacheKey. This function is also exposed as\n  // optimistic.options.makeCacheKey, somewhat redundantly.\n  makeCacheKey: (...args: TKeyArgs) => TCacheKey | undefined;\n};\n\nexport { CommonCache }\nexport interface CommonCacheConstructor<TCacheKey, TResult, TArgs extends any[]> extends Function {\n  new <K extends TCacheKey, V extends Entry<TArgs, TResult>>(max?: number, dispose?: (value: V, key?: K) => void): CommonCache<K,V>;\n}\n\nexport type OptimisticWrapOptions<\n  TArgs extends any[],\n  TKeyArgs extends any[] = TArgs,\n  TCacheKey = any,\n  TResult = any,\n> = {\n  // The maximum number of cache entries that should be retained before the\n  // cache begins evicting the oldest ones.\n  max?: number;\n  // Transform the raw arguments to some other type of array, which will then\n  // be passed to makeCacheKey.\n  keyArgs?: (...args: TArgs) => TKeyArgs;\n  // The makeCacheKey function takes the same arguments that were passed to\n  // the wrapper function and returns a single value that can be used as a key\n  // in a Map to identify the cached result.\n  makeCacheKey?: (...args: NoInfer<TKeyArgs>) => TCacheKey | undefined;\n  // Called when a new value is computed to allow efficient normalization of\n  // results over time, for example by returning older if equal(newer, older).\n  normalizeResult?: (newer: TResult, older: TResult) => TResult;\n  // If provided, the subscribe function should either return an unsubscribe\n  // function or return nothing.\n  subscribe?: (...args: TArgs) => void | (() => any);\n  cache?: CommonCache<NoInfer<TCacheKey>, Entry<NoInfer<TArgs>, NoInfer<TResult>>>\n    | CommonCacheConstructor<NoInfer<TCacheKey>, NoInfer<TResult>, NoInfer<TArgs>>;\n};\n\nexport interface OptionsWithCacheInstance<\n  TArgs extends any[],\n  TKeyArgs extends any[] = TArgs,\n  TCacheKey = any,\n  TResult = any,\n> extends OptimisticWrapOptions<TArgs, TKeyArgs, TCacheKey, TResult> {\n  cache: CommonCache<NoInfer<TCacheKey>, Entry<NoInfer<TArgs>, NoInfer<TResult>>>;\n};\n\nconst caches = new Set<CommonCache<any, AnyEntry>>();\n\nexport function wrap<\n  TArgs extends any[],\n  TResult,\n  TKeyArgs extends any[] = TArgs,\n  TCacheKey = any,\n>(originalFunction: (...args: TArgs) => TResult, {\n  max = Math.pow(2, 16),\n  keyArgs,\n  makeCacheKey = (defaultMakeCacheKey as () => TCacheKey),\n  normalizeResult,\n  subscribe,\n  cache: cacheOption = StrongCache,\n}: OptimisticWrapOptions<TArgs, TKeyArgs, TCacheKey, TResult> = Object.create(null)) {\n  const cache: CommonCache<TCacheKey, Entry<TArgs, TResult>> =\n    typeof cacheOption === \"function\"\n      ? new cacheOption(max, entry => entry.dispose())\n      : cacheOption;\n\n  const optimistic = function (): TResult {\n    const key = makeCacheKey.apply(\n      null,\n      keyArgs ? keyArgs.apply(null, arguments as any) : arguments as any\n    );\n\n    if (key === void 0) {\n      return originalFunction.apply(null, arguments as any);\n    }\n\n    let entry = cache.get(key)!;\n    if (!entry) {\n      cache.set(key, entry = new Entry(originalFunction));\n      entry.normalizeResult = normalizeResult;\n      entry.subscribe = subscribe;\n      // Give the Entry the ability to trigger cache.delete(key), even though\n      // the Entry itself does not know about key or cache.\n      entry.forget = () => cache.delete(key);\n    }\n\n    const value = entry.recompute(\n      Array.prototype.slice.call(arguments) as TArgs,\n    );\n\n    // Move this entry to the front of the least-recently used queue,\n    // since we just finished computing its value.\n    cache.set(key, entry);\n\n    caches.add(cache);\n\n    // Clean up any excess entries in the cache, but only if there is no\n    // active parent entry, meaning we're not in the middle of a larger\n    // computation that might be flummoxed by the cleaning.\n    if (! parentEntrySlot.hasValue()) {\n      caches.forEach(cache => cache.clean());\n      caches.clear();\n    }\n\n    return value;\n  } as OptimisticWrapperFunction<TArgs, TResult, TKeyArgs, TCacheKey>;\n\n  Object.defineProperty(optimistic, \"size\", {\n    get: () => cache.size,\n    configurable: false,\n    enumerable: false,\n  });\n\n  Object.freeze(optimistic.options = {\n    max,\n    keyArgs,\n    makeCacheKey,\n    normalizeResult,\n    subscribe,\n    cache,\n  });\n\n  function dirtyKey(key: TCacheKey | undefined) {\n    const entry = key && cache.get(key);\n    if (entry) {\n      entry.setDirty();\n    }\n  }\n  optimistic.dirtyKey = dirtyKey;\n  optimistic.dirty = function dirty() {\n    dirtyKey(makeCacheKey.apply(null, arguments as any));\n  };\n\n  function peekKey(key: TCacheKey | undefined) {\n    const entry = key && cache.get(key);\n    if (entry) {\n      return entry.peek();\n    }\n  }\n  optimistic.peekKey = peekKey;\n  optimistic.peek = function peek() {\n    return peekKey(makeCacheKey.apply(null, arguments as any));\n  };\n\n  function forgetKey(key: TCacheKey | undefined) {\n    return key ? cache.delete(key) : false;\n  }\n  optimistic.forgetKey = forgetKey;\n  optimistic.forget = function forget() {\n    return forgetKey(makeCacheKey.apply(null, arguments as any));\n  };\n\n  optimistic.makeCacheKey = makeCacheKey;\n  optimistic.getKey = keyArgs ? function getKey() {\n    return makeCacheKey.apply(null, keyArgs.apply(null, arguments as any));\n  } : makeCacheKey as (...args: any[]) => TCacheKey | undefined;\n\n  return Object.freeze(optimistic);\n}\n","import { Trie } from \"@wry/trie\";\nimport { canUseWeakMap, canUseWeakSet } from \"../common/canUse.js\";\nimport { checkDocument } from \"./getFromAST.js\";\nimport { invariant } from \"../globals/index.js\";\nimport type { DocumentNode } from \"graphql\";\nimport { WeakCache } from \"@wry/caches\";\nimport { wrap } from \"optimism\";\nimport { cacheSizes } from \"../caching/index.js\";\n\nexport type DocumentTransformCacheKey = ReadonlyArray<unknown>;\n\ntype TransformFn = (document: DocumentNode) => DocumentNode;\n\ninterface DocumentTransformOptions {\n  /**\n   * Determines whether to cache the transformed GraphQL document. Caching can speed up repeated calls to the document transform for the same input document. Set to `false` to completely disable caching for the document transform. When disabled, this option takes precedence over the [`getCacheKey`](#getcachekey) option.\n   *\n   * The default value is `true`.\n   */\n  cache?: boolean;\n  /**\n   * Defines a custom cache key for a GraphQL document that will determine whether to re-run the document transform when given the same input GraphQL document. Returns an array that defines the cache key. Return `undefined` to disable caching for that GraphQL document.\n   *\n   * > **Note:** The items in the array may be any type, but also need to be referentially stable to guarantee a stable cache key.\n   *\n   * The default implementation of this function returns the `document` as the cache key.\n   */\n  getCacheKey?: (\n    document: DocumentNode\n  ) => DocumentTransformCacheKey | undefined;\n}\n\nfunction identity(document: DocumentNode) {\n  return document;\n}\n\nexport class DocumentTransform {\n  private readonly transform: TransformFn;\n  private cached: boolean;\n\n  private readonly resultCache =\n    canUseWeakSet ? new WeakSet<DocumentNode>() : new Set<DocumentNode>();\n\n  // This default implementation of getCacheKey can be overridden by providing\n  // options.getCacheKey to the DocumentTransform constructor. In general, a\n  // getCacheKey function may either return an array of keys (often including\n  // the document) to be used as a cache key, or undefined to indicate the\n  // transform for this document should not be cached.\n  private getCacheKey(\n    document: DocumentNode\n  ): DocumentTransformCacheKey | undefined {\n    return [document];\n  }\n\n  static identity() {\n    // No need to cache this transform since it just returns the document\n    // unchanged. This should save a bit of memory that would otherwise be\n    // needed to populate the `documentCache` of this transform.\n    return new DocumentTransform(identity, { cache: false });\n  }\n\n  static split(\n    predicate: (document: DocumentNode) => boolean,\n    left: DocumentTransform,\n    right: DocumentTransform = DocumentTransform.identity()\n  ) {\n    return Object.assign(\n      new DocumentTransform(\n        (document) => {\n          const documentTransform = predicate(document) ? left : right;\n\n          return documentTransform.transformDocument(document);\n        },\n        // Reasonably assume both `left` and `right` transforms handle their own caching\n        { cache: false }\n      ),\n      { left, right }\n    );\n  }\n\n  constructor(\n    transform: TransformFn,\n    options: DocumentTransformOptions = Object.create(null)\n  ) {\n    this.transform = transform;\n\n    if (options.getCacheKey) {\n      // Override default `getCacheKey` function, which returns [document].\n      this.getCacheKey = options.getCacheKey;\n    }\n    this.cached = options.cache !== false;\n\n    this.resetCache();\n  }\n\n  /**\n   * Resets the internal cache of this transform, if it has one.\n   */\n  resetCache() {\n    if (this.cached) {\n      const stableCacheKeys = new Trie<WeakKey>(canUseWeakMap);\n      this.performWork = wrap(\n        DocumentTransform.prototype.performWork.bind(this),\n        {\n          makeCacheKey: (document) => {\n            const cacheKeys = this.getCacheKey(document);\n            if (cacheKeys) {\n              invariant(\n                Array.isArray(cacheKeys),\n                \"`getCacheKey` must return an array or undefined\"\n              );\n              return stableCacheKeys.lookupArray(cacheKeys);\n            }\n          },\n          max: cacheSizes[\"documentTransform.cache\"],\n          cache: WeakCache<any, any>,\n        }\n      );\n    }\n  }\n\n  private performWork(document: DocumentNode) {\n    checkDocument(document);\n    return this.transform(document);\n  }\n\n  transformDocument(document: DocumentNode) {\n    // If a user passes an already transformed result back to this function,\n    // immediately return it.\n    if (this.resultCache.has(document)) {\n      return document;\n    }\n\n    const transformedDocument = this.performWork(document);\n\n    this.resultCache.add(transformedDocument);\n\n    return transformedDocument;\n  }\n\n  concat(otherTransform: DocumentTransform): DocumentTransform {\n    return Object.assign(\n      new DocumentTransform(\n        (document) => {\n          return otherTransform.transformDocument(\n            this.transformDocument(document)\n          );\n        },\n        // Reasonably assume both transforms handle their own caching\n        { cache: false }\n      ),\n      {\n        left: this,\n        right: otherTransform,\n      }\n    );\n  }\n\n  /**\n   * @internal\n   * Used to iterate through all transforms that are concatenations or `split` links.\n   */\n  readonly left?: DocumentTransform;\n  /**\n   * @internal\n   * Used to iterate through all transforms that are concatenations or `split` links.\n   */\n  readonly right?: DocumentTransform;\n}\n","import type { Observer } from \"./Observable.js\";\nimport { Observable } from \"./Observable.js\";\n\n// Like Observable.prototype.map, except that the mapping function can\n// optionally return a Promise (or be async).\nexport function asyncMap<V, R>(\n  observable: Observable<V>,\n  mapFn: (value: V) => R | PromiseLike<R>,\n  catchFn?: (error: any) => R | PromiseLike<R>\n): Observable<R> {\n  return new Observable<R>((observer) => {\n    let promiseQueue = {\n      // Normally we would initialize promiseQueue to Promise.resolve(), but\n      // in this case, for backwards compatibility, we need to be careful to\n      // invoke the first callback synchronously.\n      then(callback: () => any) {\n        return new Promise((resolve) => resolve(callback()));\n      },\n    } as Promise<void>;\n\n    function makeCallback(\n      examiner: typeof mapFn | typeof catchFn,\n      key: \"next\" | \"error\"\n    ): (arg: any) => void {\n      return (arg) => {\n        if (examiner) {\n          const both = () =>\n            // If the observer is closed, we don't want to continue calling the\n            // mapping function - it's result will be swallowed anyways.\n            observer.closed ?\n              /* will be swallowed */ (0 as any)\n            : examiner(arg);\n\n          promiseQueue = promiseQueue.then(both, both).then(\n            (result) => observer.next(result),\n            (error) => observer.error(error)\n          );\n        } else {\n          observer[key](arg);\n        }\n      };\n    }\n\n    const handler: Observer<V> = {\n      next: makeCallback(mapFn, \"next\"),\n      error: makeCallback(catchFn, \"error\"),\n      complete() {\n        // no need to reassign `promiseQueue`, after `observer.complete`,\n        // the observer will be closed and short-circuit everything anyways\n        /*promiseQueue = */ promiseQueue.then(() => observer.complete());\n      },\n    };\n\n    const sub = observable.subscribe(handler);\n    return () => sub.unsubscribe();\n  });\n}\n","import type { FetchResult } from \"../../link/core/index.js\";\nimport { isNonEmptyArray } from \"./arrays.js\";\nimport { isExecutionPatchIncrementalResult } from \"./incrementalResult.js\";\n\nexport function graphQLResultHasError<T>(result: FetchResult<T>): boolean {\n  const errors = getGraphQLErrorsFromResult(result);\n  return isNonEmptyArray(errors);\n}\n\nexport function getGraphQLErrorsFromResult<T>(result: FetchResult<T>) {\n  const graphQLErrors =\n    isNonEmptyArray(result.errors) ? result.errors.slice(0) : [];\n\n  if (\n    isExecutionPatchIncrementalResult(result) &&\n    isNonEmptyArray(result.incremental)\n  ) {\n    result.incremental.forEach((incrementalResult) => {\n      if (incrementalResult.errors) {\n        graphQLErrors.push(...incrementalResult.errors);\n      }\n    });\n  }\n  return graphQLErrors;\n}\n","import type { Observer } from \"./Observable.js\";\n\nexport function iterateObserversSafely<E, A>(\n  observers: Set<Observer<E>>,\n  method: keyof Observer<E>,\n  argument?: A\n) {\n  // In case observers is modified during iteration, we need to commit to the\n  // original elements, which also provides an opportunity to filter them down\n  // to just the observers with the given method.\n  const observersWithMethod: Observer<E>[] = [];\n  observers.forEach((obs) => obs[method] && observersWithMethod.push(obs));\n  observersWithMethod.forEach((obs) => (obs as any)[method](argument));\n}\n","import { Observable } from \"./Observable.js\";\nimport { canUseSymbol } from \"../common/canUse.js\";\n\n// Generic implementations of Observable.prototype methods like map and\n// filter need to know how to create a new Observable from an Observable\n// subclass (like Concast or ObservableQuery). Those methods assume\n// (perhaps unwisely?) that they can call the subtype's constructor with a\n// Subscriber function, even though the subclass constructor might expect\n// different parameters. Defining this static Symbol.species property on\n// the subclass is a hint to generic Observable code to use the default\n// constructor instead of trying to do `new Subclass(observer => ...)`.\nexport function fixObservableSubclass<\n  S extends new (...args: any[]) => Observable<any>,\n>(subclass: S): S {\n  function set(key: symbol | string) {\n    // Object.defineProperty is necessary because the Symbol.species\n    // property is a getter by default in modern JS environments, so we\n    // can't assign to it with a normal assignment expression.\n    Object.defineProperty(subclass, key, { value: Observable });\n  }\n  if (canUseSymbol && Symbol.species) {\n    set(Symbol.species);\n  }\n  // The \"@@species\" string is used as a fake Symbol.species value in some\n  // polyfill systems (including the SymbolSpecies variable used by\n  // zen-observable), so we should set it as well, to be safe.\n  set(\"@@species\");\n  return subclass;\n}\n","import type {\n  Observer,\n  ObservableSubscription,\n  Subscriber,\n} from \"./Observable.js\";\nimport { Observable } from \"./Observable.js\";\nimport { iterateObserversSafely } from \"./iteration.js\";\nimport { fixObservableSubclass } from \"./subclassing.js\";\n\ntype MaybeAsync<T> = T | PromiseLike<T>;\n\nfunction isPromiseLike<T>(value: MaybeAsync<T>): value is PromiseLike<T> {\n  return value && typeof (value as any).then === \"function\";\n}\n\n// Any individual Source<T> can be an Observable<T> or a promise for one.\ntype Source<T> = MaybeAsync<Observable<T>>;\n\nexport type ConcastSourcesIterable<T> = Iterable<Source<T>>;\nexport type ConcastSourcesArray<T> = Array<Source<T>>;\n\n// A Concast<T> observable concatenates the given sources into a single\n// non-overlapping sequence of Ts, automatically unwrapping any promises,\n// and broadcasts the T elements of that sequence to any number of\n// subscribers, all without creating a bunch of intermediary Observable\n// wrapper objects.\n//\n// Even though any number of observers can subscribe to the Concast, each\n// source observable is guaranteed to receive at most one subscribe call,\n// and the results are multicast to all observers.\n//\n// In addition to broadcasting every next/error message to this.observers,\n// the Concast stores the most recent message using this.latest, so any\n// new observers can immediately receive the latest message, even if it\n// was originally delivered in the past. This behavior means we can assume\n// every active observer in this.observers has received the same most\n// recent message.\n//\n// With the exception of this.latest replay, a Concast is a \"hot\"\n// observable in the sense that it does not replay past results from the\n// beginning of time for each new observer.\n//\n// Could we have used some existing RxJS class instead? Concast<T> is\n// similar to a BehaviorSubject<T>, because it is multicast and redelivers\n// the latest next/error message to new subscribers. Unlike Subject<T>,\n// Concast<T> does not expose an Observer<T> interface (this.handlers is\n// intentionally private), since Concast<T> gets its inputs from the\n// concatenated sources. If we ever switch to RxJS, there may be some\n// value in reusing their code, but for now we use zen-observable, which\n// does not contain any Subject implementations.\nexport class Concast<T> extends Observable<T> {\n  // Active observers receiving broadcast messages. Thanks to this.latest,\n  // we can assume all observers in this Set have received the same most\n  // recent message, though possibly at different times in the past.\n  private observers = new Set<Observer<T>>();\n\n  // This property starts off undefined to indicate the initial\n  // subscription has not yet begun, then points to each source\n  // subscription in turn, and finally becomes null after the sources have\n  // been exhausted. After that, it stays null.\n  private sub?: ObservableSubscription | null;\n\n  // Not only can the individual elements of the iterable be promises, but\n  // also the iterable itself can be wrapped in a promise.\n  constructor(sources: MaybeAsync<ConcastSourcesIterable<T>> | Subscriber<T>) {\n    super((observer) => {\n      this.addObserver(observer);\n      return () => this.removeObserver(observer);\n    });\n\n    // Suppress rejection warnings for this.promise, since it's perfectly\n    // acceptable to pay no attention to this.promise if you're consuming\n    // the results through the normal observable API.\n    this.promise.catch((_) => {});\n\n    // If someone accidentally tries to create a Concast using a subscriber\n    // function, recover by creating an Observable from that subscriber and\n    // using it as the source.\n    if (typeof sources === \"function\") {\n      sources = [new Observable(sources)];\n    }\n\n    if (isPromiseLike(sources)) {\n      sources.then((iterable) => this.start(iterable), this.handlers.error);\n    } else {\n      this.start(sources);\n    }\n  }\n\n  // A consumable array of source observables, incrementally consumed each time\n  // this.handlers.complete is called. This private field is not initialized\n  // until the concast.start method is called, which can happen asynchronously\n  // if a Promise is passed to the Concast constructor, so undefined is a\n  // possible value for this.sources before concast.start is called.\n  private sources: Source<T>[] | undefined;\n\n  private start(sources: ConcastSourcesIterable<T>) {\n    if (this.sub !== void 0) return;\n\n    // In practice, sources is most often simply an Array of observables.\n    // TODO Consider using sources[Symbol.iterator]() to take advantage\n    // of the laziness of non-Array iterables.\n    this.sources = Array.from(sources);\n\n    // Calling this.handlers.complete() kicks off consumption of the first\n    // source observable. It's tempting to do this step lazily in\n    // addObserver, but this.promise can be accessed without calling\n    // addObserver, so consumption needs to begin eagerly.\n    this.handlers.complete();\n  }\n\n  private deliverLastMessage(observer: Observer<T>) {\n    if (this.latest) {\n      const nextOrError = this.latest[0];\n      const method = observer[nextOrError];\n      if (method) {\n        method.call(observer, this.latest[1]);\n      }\n      // If the subscription is already closed, and the last message was\n      // a 'next' message, simulate delivery of the final 'complete'\n      // message again.\n      if (this.sub === null && nextOrError === \"next\" && observer.complete) {\n        observer.complete();\n      }\n    }\n  }\n\n  public addObserver(observer: Observer<T>) {\n    if (!this.observers.has(observer)) {\n      // Immediately deliver the most recent message, so we can always\n      // be sure all observers have the latest information.\n      this.deliverLastMessage(observer);\n      this.observers.add(observer);\n    }\n  }\n\n  public removeObserver(observer: Observer<T>) {\n    if (this.observers.delete(observer) && this.observers.size < 1) {\n      // In case there are still any listeners in this.nextResultListeners, and\n      // no error or completion has been broadcast yet, make sure those\n      // observers have a chance to run and then remove themselves from\n      // this.observers.\n      this.handlers.complete();\n    }\n  }\n\n  // Any Concast object can be trivially converted to a Promise, without\n  // having to create a new wrapper Observable. This promise provides an\n  // easy way to observe the final state of the Concast.\n  private resolve!: (result?: T | PromiseLike<T>) => void;\n  private reject!: (reason: any) => void;\n  public readonly promise = new Promise<T | undefined>((resolve, reject) => {\n    this.resolve = resolve;\n    this.reject = reject;\n  });\n\n  // Name and argument of the most recently invoked observer method, used\n  // to deliver latest results immediately to new observers.\n  private latest?: [\"next\", T] | [\"error\", any];\n\n  // Bound handler functions that can be reused for every internal\n  // subscription.\n  private handlers = {\n    next: (result: T) => {\n      if (this.sub !== null) {\n        this.latest = [\"next\", result];\n        this.notify(\"next\", result);\n        iterateObserversSafely(this.observers, \"next\", result);\n      }\n    },\n\n    error: (error: any) => {\n      const { sub } = this;\n      if (sub !== null) {\n        // Delay unsubscribing from the underlying subscription slightly,\n        // so that immediately subscribing another observer can keep the\n        // subscription active.\n        if (sub) setTimeout(() => sub.unsubscribe());\n        this.sub = null;\n        this.latest = [\"error\", error];\n        this.reject(error);\n        this.notify(\"error\", error);\n        iterateObserversSafely(this.observers, \"error\", error);\n      }\n    },\n\n    complete: () => {\n      const { sub, sources = [] } = this;\n      if (sub !== null) {\n        // If complete is called before concast.start, this.sources may be\n        // undefined, so we use a default value of [] for sources. That works\n        // here because it falls into the if (!value) {...} block, which\n        // appropriately terminates the Concast, even if this.sources might\n        // eventually have been initialized to a non-empty array.\n        const value = sources.shift();\n        if (!value) {\n          if (sub) setTimeout(() => sub.unsubscribe());\n          this.sub = null;\n          if (this.latest && this.latest[0] === \"next\") {\n            this.resolve(this.latest[1]);\n          } else {\n            this.resolve();\n          }\n          this.notify(\"complete\");\n          // We do not store this.latest = [\"complete\"], because doing so\n          // discards useful information about the previous next (or\n          // error) message. Instead, if new observers subscribe after\n          // this Concast has completed, they will receive the final\n          // 'next' message (unless there was an error) immediately\n          // followed by a 'complete' message (see addObserver).\n          iterateObserversSafely(this.observers, \"complete\");\n        } else if (isPromiseLike(value)) {\n          value.then(\n            (obs) => (this.sub = obs.subscribe(this.handlers)),\n            this.handlers.error\n          );\n        } else {\n          this.sub = value.subscribe(this.handlers);\n        }\n      }\n    },\n  };\n\n  private nextResultListeners = new Set<NextResultListener>();\n\n  private notify(\n    method: Parameters<NextResultListener>[0],\n    arg?: Parameters<NextResultListener>[1]\n  ) {\n    const { nextResultListeners } = this;\n    if (nextResultListeners.size) {\n      // Replacing this.nextResultListeners first ensures it does not grow while\n      // we are iterating over it, potentially leading to infinite loops.\n      this.nextResultListeners = new Set();\n      nextResultListeners.forEach((listener) => listener(method, arg));\n    }\n  }\n\n  // We need a way to run callbacks just *before* the next result (or error or\n  // completion) is delivered by this Concast, so we can be sure any code that\n  // runs as a result of delivering that result/error observes the effects of\n  // running the callback(s). It was tempting to reuse the Observer type instead\n  // of introducing NextResultListener, but that messes with the sizing and\n  // maintenance of this.observers, and ends up being more code overall.\n  beforeNext(callback: NextResultListener) {\n    let called = false;\n    this.nextResultListeners.add((method, arg) => {\n      if (!called) {\n        called = true;\n        callback(method, arg);\n      }\n    });\n  }\n\n  // A public way to abort observation and broadcast.\n  public cancel = (reason: any) => {\n    this.reject(reason);\n    this.sources = [];\n    this.handlers.complete();\n  };\n}\n\ntype NextResultListener = (\n  method: \"next\" | \"error\" | \"complete\",\n  arg?: any\n) => any;\n\n// Necessary because the Concast constructor has a different signature\n// than the Observable constructor.\nfixObservableSubclass(Concast);\n","/**\n * The current status of a query’s execution in our system.\n */\nexport enum NetworkStatus {\n  /**\n   * The query has never been run before and the query is now currently running. A query will still\n   * have this network status even if a partial data result was returned from the cache, but a\n   * query was dispatched anyway.\n   */\n  loading = 1,\n\n  /**\n   * If `setVariables` was called and a query was fired because of that then the network status\n   * will be `setVariables` until the result of that query comes back.\n   */\n  setVariables = 2,\n\n  /**\n   * Indicates that `fetchMore` was called on this query and that the query created is currently in\n   * flight.\n   */\n  fetchMore = 3,\n\n  /**\n   * Similar to the `setVariables` network status. It means that `refetch` was called on a query\n   * and the refetch request is currently in flight.\n   */\n  refetch = 4,\n\n  /**\n   * Indicates that a polling query is currently in flight. So for example if you are polling a\n   * query every 10 seconds then the network status will switch to `poll` every 10 seconds whenever\n   * a poll request has been sent but not resolved.\n   */\n  poll = 6,\n\n  /**\n   * No request is in flight for this query, and no errors happened. Everything is OK.\n   */\n  ready = 7,\n\n  /**\n   * No request is in flight for this query, but one or more errors were detected.\n   */\n  error = 8,\n}\n\n/**\n * Returns true if there is currently a network request in flight according to a given network\n * status.\n */\nexport function isNetworkRequestInFlight(\n  networkStatus?: NetworkStatus\n): boolean {\n  return networkStatus ? networkStatus < 7 : false;\n}\n\n/**\n * Returns true if the network request is in ready or error state according to a given network\n * status.\n */\nexport function isNetworkRequestSettled(\n  networkStatus?: NetworkStatus\n): boolean {\n  return networkStatus === 7 || networkStatus === 8;\n}\n","import type { TupleToIntersection } from \"./mergeDeep.js\";\n\n/**\n * Merges the provided objects shallowly and removes\n * all properties with an `undefined` value\n */\nexport function compact<TArgs extends any[]>(\n  ...objects: TArgs\n): TupleToIntersection<TArgs> {\n  const result = Object.create(null);\n\n  objects.forEach((obj) => {\n    if (!obj) return;\n    Object.keys(obj).forEach((key) => {\n      const value = (obj as any)[key];\n      if (value !== void 0) {\n        result[key] = value;\n      }\n    });\n  });\n\n  return result;\n}\n","const { toString } = Object.prototype;\n\n/**\n * Deeply clones a value to create a new instance.\n */\nexport function cloneDeep<T>(value: T): T {\n  return cloneDeepHelper(value);\n}\n\nfunction cloneDeepHelper<T>(val: T, seen?: Map<any, any>): T {\n  switch (toString.call(val)) {\n    case \"[object Array]\": {\n      seen = seen || new Map();\n      if (seen.has(val)) return seen.get(val);\n      const copy: T & any[] = (val as any).slice(0);\n      seen.set(val, copy);\n      copy.forEach(function (child, i) {\n        copy[i] = cloneDeepHelper(child, seen);\n      });\n      return copy;\n    }\n\n    case \"[object Object]\": {\n      seen = seen || new Map();\n      if (seen.has(val)) return seen.get(val);\n      // High fidelity polyfills of Object.create and Object.getPrototypeOf are\n      // possible in all JS environments, so we will assume they exist/work.\n      const copy = Object.create(Object.getPrototypeOf(val));\n      seen.set(val, copy);\n      Object.keys(val as T & Record<string, any>).forEach((key) => {\n        copy[key] = cloneDeepHelper((val as any)[key], seen);\n      });\n      return copy;\n    }\n\n    default:\n      return val;\n  }\n}\n","import equal from \"@wry/equality\";\n\nimport type {\n  DirectiveNode,\n  DocumentNode,\n  FieldNode,\n  FragmentDefinitionNode,\n  FragmentSpreadNode,\n  InlineFragmentNode,\n  SelectionNode,\n  SelectionSetNode,\n} from \"graphql\";\n\nimport type { ApolloQueryResult, OperationVariables } from \"./types.js\";\n\nimport type { FragmentMap } from \"../utilities/index.js\";\nimport {\n  createFragmentMap,\n  getFragmentDefinitions,\n  getFragmentFromSelection,\n  getMainDefinition,\n  isField,\n  resultKeyNameFromField,\n  shouldInclude,\n} from \"../utilities/index.js\";\n\n// Returns true if aResult and bResult are deeply equal according to the fields\n// selected by the given query, ignoring any fields marked as @nonreactive.\nexport function equalByQuery(\n  query: DocumentNode,\n  { data: aData, ...aRest }: Partial<ApolloQueryResult<unknown>>,\n  { data: bData, ...bRest }: Partial<ApolloQueryResult<unknown>>,\n  variables?: OperationVariables\n): boolean {\n  return (\n    equal(aRest, bRest) &&\n    equalBySelectionSet(getMainDefinition(query).selectionSet, aData, bData, {\n      fragmentMap: createFragmentMap(getFragmentDefinitions(query)),\n      variables,\n    })\n  );\n}\n\n// Encapsulates the information used by equalBySelectionSet that does not change\n// during the recursion.\ninterface CompareContext<TVariables> {\n  fragmentMap: FragmentMap;\n  variables: TVariables | undefined;\n}\n\nfunction equalBySelectionSet(\n  selectionSet: SelectionSetNode,\n  aResult: any,\n  bResult: any,\n  context: CompareContext<OperationVariables>\n): boolean {\n  if (aResult === bResult) {\n    return true;\n  }\n\n  const seenSelections = new Set<SelectionNode>();\n\n  // Returning true from this Array.prototype.every callback function skips the\n  // current field/subtree. Returning false aborts the entire traversal\n  // immediately, causing equalBySelectionSet to return false.\n  return selectionSet.selections.every((selection) => {\n    // Avoid re-processing the same selection at the same level of recursion, in\n    // case the same field gets included via multiple indirect fragment spreads.\n    if (seenSelections.has(selection)) return true;\n    seenSelections.add(selection);\n\n    // Ignore @skip(if: true) and @include(if: false) fields.\n    if (!shouldInclude(selection, context.variables)) return true;\n\n    // If the field or (named) fragment spread has a @nonreactive directive on\n    // it, we don't care if it's different, so we pretend it's the same.\n    if (selectionHasNonreactiveDirective(selection)) return true;\n\n    if (isField(selection)) {\n      const resultKey = resultKeyNameFromField(selection);\n      const aResultChild = aResult && aResult[resultKey];\n      const bResultChild = bResult && bResult[resultKey];\n      const childSelectionSet = selection.selectionSet;\n\n      if (!childSelectionSet) {\n        // These are scalar values, so we can compare them with deep equal\n        // without redoing the main recursive work.\n        return equal(aResultChild, bResultChild);\n      }\n\n      const aChildIsArray = Array.isArray(aResultChild);\n      const bChildIsArray = Array.isArray(bResultChild);\n      if (aChildIsArray !== bChildIsArray) return false;\n      if (aChildIsArray && bChildIsArray) {\n        const length = aResultChild.length;\n        if (bResultChild.length !== length) {\n          return false;\n        }\n        for (let i = 0; i < length; ++i) {\n          if (\n            !equalBySelectionSet(\n              childSelectionSet,\n              aResultChild[i],\n              bResultChild[i],\n              context\n            )\n          ) {\n            return false;\n          }\n        }\n        return true;\n      }\n\n      return equalBySelectionSet(\n        childSelectionSet,\n        aResultChild,\n        bResultChild,\n        context\n      );\n    } else {\n      const fragment = getFragmentFromSelection(selection, context.fragmentMap);\n      if (fragment) {\n        // The fragment might === selection if it's an inline fragment, but\n        // could be !== if it's a named fragment ...spread.\n        if (selectionHasNonreactiveDirective(fragment)) return true;\n\n        return equalBySelectionSet(\n          fragment.selectionSet,\n          // Notice that we reuse the same aResult and bResult values here,\n          // since the fragment ...spread does not specify a field name, but\n          // consists of multiple fields (within the fragment's selection set)\n          // that should be applied to the current result value(s).\n          aResult,\n          bResult,\n          context\n        );\n      }\n    }\n  });\n}\n\nfunction selectionHasNonreactiveDirective(\n  selection:\n    | FieldNode\n    | InlineFragmentNode\n    | FragmentSpreadNode\n    | FragmentDefinitionNode\n): boolean {\n  return (\n    !!selection.directives && selection.directives.some(directiveIsNonreactive)\n  );\n}\n\nfunction directiveIsNonreactive(dir: DirectiveNode): boolean {\n  return dir.name.value === \"nonreactive\";\n}\n","import { invariant } from \"../utilities/globals/index.js\";\nimport type { DocumentNode } from \"graphql\";\nimport { equal } from \"@wry/equality\";\n\nimport { NetworkStatus, isNetworkRequestInFlight } from \"./networkStatus.js\";\nimport type {\n  Concast,\n  Observer,\n  ObservableSubscription,\n} from \"../utilities/index.js\";\nimport {\n  cloneDeep,\n  compact,\n  getOperationDefinition,\n  Observable,\n  iterateObserversSafely,\n  fixObservableSubclass,\n  getQueryDefinition,\n} from \"../utilities/index.js\";\nimport type { ApolloError } from \"../errors/index.js\";\nimport type { QueryManager } from \"./QueryManager.js\";\nimport type {\n  ApolloQueryResult,\n  OperationVariables,\n  TypedDocumentNode,\n} from \"./types.js\";\nimport type {\n  WatchQueryOptions,\n  FetchMoreQueryOptions,\n  SubscribeToMoreOptions,\n  NextFetchPolicyContext,\n  WatchQueryFetchPolicy,\n} from \"./watchQueryOptions.js\";\nimport type { QueryInfo } from \"./QueryInfo.js\";\nimport type { MissingFieldError } from \"../cache/index.js\";\nimport type { MissingTree } from \"../cache/core/types/common.js\";\nimport { equalByQuery } from \"./equalByQuery.js\";\nimport type { TODO } from \"../utilities/types/TODO.js\";\n\nconst { assign, hasOwnProperty } = Object;\n\nexport interface FetchMoreOptions<\n  TData = any,\n  TVariables = OperationVariables,\n> {\n  updateQuery?: (\n    previousQueryResult: TData,\n    options: {\n      fetchMoreResult?: TData;\n      variables?: TVariables;\n    }\n  ) => TData;\n}\n\nexport interface UpdateQueryOptions<TVariables> {\n  variables?: TVariables;\n}\n\ninterface Last<TData, TVariables> {\n  result: ApolloQueryResult<TData>;\n  variables?: TVariables;\n  error?: ApolloError;\n}\n\nexport class ObservableQuery<\n  TData = any,\n  TVariables extends OperationVariables = OperationVariables,\n> extends Observable<ApolloQueryResult<TData>> {\n  public readonly options: WatchQueryOptions<TVariables, TData>;\n  public readonly queryId: string;\n  public readonly queryName?: string;\n\n  // The `query` computed property will always reflect the document transformed\n  // by the last run query. `this.options.query` will always reflect the raw\n  // untransformed query to ensure document transforms with runtime conditionals\n  // are run on the original document.\n  public get query(): TypedDocumentNode<TData, TVariables> {\n    return this.lastQuery || this.options.query;\n  }\n\n  // Computed shorthand for this.options.variables, preserved for\n  // backwards compatibility.\n  /**\n   * An object containing the variables that were provided for the query.\n   */\n  public get variables(): TVariables | undefined {\n    return this.options.variables;\n  }\n\n  private isTornDown: boolean;\n  private queryManager: QueryManager<any>;\n  private observers = new Set<Observer<ApolloQueryResult<TData>>>();\n  private subscriptions = new Set<ObservableSubscription>();\n\n  private waitForOwnResult: boolean;\n  private last?: Last<TData, TVariables>;\n  private lastQuery?: DocumentNode;\n\n  private queryInfo: QueryInfo;\n\n  // When this.concast is defined, this.observer is the Observer currently\n  // subscribed to that Concast.\n  private concast?: Concast<ApolloQueryResult<TData>>;\n  private observer?: Observer<ApolloQueryResult<TData>>;\n\n  private pollingInfo?: {\n    interval: number;\n    timeout: ReturnType<typeof setTimeout>;\n  };\n\n  constructor({\n    queryManager,\n    queryInfo,\n    options,\n  }: {\n    queryManager: QueryManager<any>;\n    queryInfo: QueryInfo;\n    options: WatchQueryOptions<TVariables, TData>;\n  }) {\n    super((observer: Observer<ApolloQueryResult<TData>>) => {\n      // Zen Observable has its own error function, so in order to log correctly\n      // we need to provide a custom error callback.\n      try {\n        var subObserver = (observer as any)._subscription._observer;\n        if (subObserver && !subObserver.error) {\n          subObserver.error = defaultSubscriptionObserverErrorCallback;\n        }\n      } catch {}\n\n      const first = !this.observers.size;\n      this.observers.add(observer);\n\n      // Deliver most recent error or result.\n      const last = this.last;\n      if (last && last.error) {\n        observer.error && observer.error(last.error);\n      } else if (last && last.result) {\n        observer.next && observer.next(last.result);\n      }\n\n      // Initiate observation of this query if it hasn't been reported to\n      // the QueryManager yet.\n      if (first) {\n        // Blindly catching here prevents unhandled promise rejections,\n        // and is safe because the ObservableQuery handles this error with\n        // this.observer.error, so we're not just swallowing the error by\n        // ignoring it here.\n        this.reobserve().catch(() => {});\n      }\n\n      return () => {\n        if (this.observers.delete(observer) && !this.observers.size) {\n          this.tearDownQuery();\n        }\n      };\n    });\n\n    // related classes\n    this.queryInfo = queryInfo;\n    this.queryManager = queryManager;\n\n    // active state\n    this.waitForOwnResult = skipCacheDataFor(options.fetchPolicy);\n    this.isTornDown = false;\n\n    const {\n      watchQuery: { fetchPolicy: defaultFetchPolicy = \"cache-first\" } = {},\n    } = queryManager.defaultOptions;\n\n    const {\n      fetchPolicy = defaultFetchPolicy,\n      // Make sure we don't store \"standby\" as the initialFetchPolicy.\n      initialFetchPolicy = fetchPolicy === \"standby\" ? defaultFetchPolicy : (\n        fetchPolicy\n      ),\n    } = options;\n\n    this.options = {\n      ...options,\n\n      // Remember the initial options.fetchPolicy so we can revert back to this\n      // policy when variables change. This information can also be specified\n      // (or overridden) by providing options.initialFetchPolicy explicitly.\n      initialFetchPolicy,\n\n      // This ensures this.options.fetchPolicy always has a string value, in\n      // case options.fetchPolicy was not provided.\n      fetchPolicy,\n    };\n\n    this.queryId = queryInfo.queryId || queryManager.generateQueryId();\n\n    const opDef = getOperationDefinition(this.query);\n    this.queryName = opDef && opDef.name && opDef.name.value;\n  }\n\n  public result(): Promise<ApolloQueryResult<TData>> {\n    return new Promise((resolve, reject) => {\n      // TODO: this code doesn’t actually make sense insofar as the observer\n      // will never exist in this.observers due how zen-observable wraps observables.\n      // https://github.com/zenparsing/zen-observable/blob/master/src/Observable.js#L169\n      const observer: Observer<ApolloQueryResult<TData>> = {\n        next: (result: ApolloQueryResult<TData>) => {\n          resolve(result);\n\n          // Stop the query within the QueryManager if we can before\n          // this function returns.\n          //\n          // We do this in order to prevent observers piling up within\n          // the QueryManager. Notice that we only fully unsubscribe\n          // from the subscription in a setTimeout(..., 0)  call. This call can\n          // actually be handled by the browser at a much later time. If queries\n          // are fired in the meantime, observers that should have been removed\n          // from the QueryManager will continue to fire, causing an unnecessary\n          // performance hit.\n          this.observers.delete(observer);\n          if (!this.observers.size) {\n            this.queryManager.removeQuery(this.queryId);\n          }\n\n          setTimeout(() => {\n            subscription.unsubscribe();\n          }, 0);\n        },\n        error: reject,\n      };\n      const subscription = this.subscribe(observer);\n    });\n  }\n\n  /** @internal */\n  public resetDiff() {\n    this.queryInfo.resetDiff();\n  }\n\n  public getCurrentResult(saveAsLastResult = true): ApolloQueryResult<TData> {\n    // Use the last result as long as the variables match this.variables.\n    const lastResult = this.getLastResult(true);\n\n    const networkStatus =\n      this.queryInfo.networkStatus ||\n      (lastResult && lastResult.networkStatus) ||\n      NetworkStatus.ready;\n\n    const result = {\n      ...lastResult,\n      loading: isNetworkRequestInFlight(networkStatus),\n      networkStatus,\n    } as ApolloQueryResult<TData>;\n\n    const { fetchPolicy = \"cache-first\" } = this.options;\n    if (\n      // These fetch policies should never deliver data from the cache, unless\n      // redelivering a previously delivered result.\n      skipCacheDataFor(fetchPolicy) ||\n      // If this.options.query has @client(always: true) fields, we cannot\n      // trust diff.result, since it was read from the cache without running\n      // local resolvers (and it's too late to run resolvers now, since we must\n      // return a result synchronously).\n      this.queryManager.getDocumentInfo(this.query).hasForcedResolvers\n    ) {\n      // Fall through.\n    } else if (this.waitForOwnResult) {\n      // This would usually be a part of `QueryInfo.getDiff()`.\n      // which we skip in the waitForOwnResult case since we are not\n      // interested in the diff.\n      this.queryInfo[\"updateWatch\"]();\n    } else {\n      const diff = this.queryInfo.getDiff();\n\n      if (diff.complete || this.options.returnPartialData) {\n        result.data = diff.result;\n      }\n\n      if (equal(result.data, {})) {\n        result.data = void 0 as any;\n      }\n\n      if (diff.complete) {\n        // Similar to setting result.partial to false, but taking advantage of the\n        // falsiness of missing fields.\n        delete result.partial;\n\n        // If the diff is complete, and we're using a FetchPolicy that\n        // terminates after a complete cache read, we can assume the next result\n        // we receive will have NetworkStatus.ready and !loading.\n        if (\n          diff.complete &&\n          result.networkStatus === NetworkStatus.loading &&\n          (fetchPolicy === \"cache-first\" || fetchPolicy === \"cache-only\")\n        ) {\n          result.networkStatus = NetworkStatus.ready;\n          result.loading = false;\n        }\n      } else {\n        result.partial = true;\n      }\n\n      if (\n        __DEV__ &&\n        !diff.complete &&\n        !this.options.partialRefetch &&\n        !result.loading &&\n        !result.data &&\n        !result.error\n      ) {\n        logMissingFieldErrors(diff.missing);\n      }\n    }\n\n    if (saveAsLastResult) {\n      this.updateLastResult(result);\n    }\n\n    return result;\n  }\n\n  // Compares newResult to the snapshot we took of this.lastResult when it was\n  // first received.\n  public isDifferentFromLastResult(\n    newResult: ApolloQueryResult<TData>,\n    variables?: TVariables\n  ) {\n    if (!this.last) {\n      return true;\n    }\n\n    const resultIsDifferent =\n      this.queryManager.getDocumentInfo(this.query).hasNonreactiveDirective ?\n        !equalByQuery(this.query, this.last.result, newResult, this.variables)\n      : !equal(this.last.result, newResult);\n\n    return (\n      resultIsDifferent || (variables && !equal(this.last.variables, variables))\n    );\n  }\n\n  private getLast<K extends keyof Last<TData, TVariables>>(\n    key: K,\n    variablesMustMatch?: boolean\n  ) {\n    const last = this.last;\n    if (\n      last &&\n      last[key] &&\n      (!variablesMustMatch || equal(last.variables, this.variables))\n    ) {\n      return last[key];\n    }\n  }\n\n  public getLastResult(\n    variablesMustMatch?: boolean\n  ): ApolloQueryResult<TData> | undefined {\n    return this.getLast(\"result\", variablesMustMatch);\n  }\n\n  public getLastError(variablesMustMatch?: boolean): ApolloError | undefined {\n    return this.getLast(\"error\", variablesMustMatch);\n  }\n\n  public resetLastResults(): void {\n    delete this.last;\n    this.isTornDown = false;\n  }\n\n  public resetQueryStoreErrors() {\n    this.queryManager.resetErrors(this.queryId);\n  }\n\n  /**\n   * Update the variables of this observable query, and fetch the new results.\n   * This method should be preferred over `setVariables` in most use cases.\n   *\n   * @param variables - The new set of variables. If there are missing variables,\n   * the previous values of those variables will be used.\n   */\n  public refetch(\n    variables?: Partial<TVariables>\n  ): Promise<ApolloQueryResult<TData>> {\n    const reobserveOptions: Partial<WatchQueryOptions<TVariables, TData>> = {\n      // Always disable polling for refetches.\n      pollInterval: 0,\n    };\n\n    // Unless the provided fetchPolicy always consults the network\n    // (no-cache, network-only, or cache-and-network), override it with\n    // network-only to force the refetch for this fetchQuery call.\n    const { fetchPolicy } = this.options;\n    if (fetchPolicy === \"cache-and-network\") {\n      reobserveOptions.fetchPolicy = fetchPolicy;\n    } else if (fetchPolicy === \"no-cache\") {\n      reobserveOptions.fetchPolicy = \"no-cache\";\n    } else {\n      reobserveOptions.fetchPolicy = \"network-only\";\n    }\n\n    if (__DEV__ && variables && hasOwnProperty.call(variables, \"variables\")) {\n      const queryDef = getQueryDefinition(this.query);\n      const vars = queryDef.variableDefinitions;\n      if (!vars || !vars.some((v) => v.variable.name.value === \"variables\")) {\n        invariant.warn(\n          `Called refetch(%o) for query %o, which does not declare a $variables variable.\nDid you mean to call refetch(variables) instead of refetch({ variables })?`,\n          variables,\n          queryDef.name?.value || queryDef\n        );\n      }\n    }\n\n    if (variables && !equal(this.options.variables, variables)) {\n      // Update the existing options with new variables\n      reobserveOptions.variables = this.options.variables = {\n        ...this.options.variables,\n        ...variables,\n      } as TVariables;\n    }\n\n    this.queryInfo.resetLastWrite();\n    return this.reobserve(reobserveOptions, NetworkStatus.refetch);\n  }\n\n  /**\n   * A function that helps you fetch the next set of results for a [paginated list field](https://www.apollographql.com/docs/react/pagination/core-api/).\n   */\n  public fetchMore<\n    TFetchData = TData,\n    TFetchVars extends OperationVariables = TVariables,\n  >(\n    fetchMoreOptions: FetchMoreQueryOptions<TFetchVars, TFetchData> & {\n      updateQuery?: (\n        previousQueryResult: TData,\n        options: {\n          fetchMoreResult: TFetchData;\n          variables: TFetchVars;\n        }\n      ) => TData;\n    }\n  ): Promise<ApolloQueryResult<TFetchData>> {\n    const combinedOptions = {\n      ...(fetchMoreOptions.query ? fetchMoreOptions : (\n        {\n          ...this.options,\n          query: this.options.query,\n          ...fetchMoreOptions,\n          variables: {\n            ...this.options.variables,\n            ...fetchMoreOptions.variables,\n          },\n        }\n      )),\n      // The fetchMore request goes immediately to the network and does\n      // not automatically write its result to the cache (hence no-cache\n      // instead of network-only), because we allow the caller of\n      // fetchMore to provide an updateQuery callback that determines how\n      // the data gets written to the cache.\n      fetchPolicy: \"no-cache\",\n    } as WatchQueryOptions<TFetchVars, TFetchData>;\n\n    combinedOptions.query = this.transformDocument(combinedOptions.query);\n\n    const qid = this.queryManager.generateQueryId();\n\n    // If a temporary query is passed to `fetchMore`, we don't want to store\n    // it as the last query result since it may be an optimized query for\n    // pagination. We will however run the transforms on the original document\n    // as well as the document passed in `fetchMoreOptions` to ensure the cache\n    // uses the most up-to-date document which may rely on runtime conditionals.\n    this.lastQuery =\n      fetchMoreOptions.query ?\n        this.transformDocument(this.options.query)\n      : combinedOptions.query;\n\n    // Simulate a loading result for the original query with\n    // result.networkStatus === NetworkStatus.fetchMore.\n    const { queryInfo } = this;\n    const originalNetworkStatus = queryInfo.networkStatus;\n    queryInfo.networkStatus = NetworkStatus.fetchMore;\n    if (combinedOptions.notifyOnNetworkStatusChange) {\n      this.observe();\n    }\n\n    const updatedQuerySet = new Set<DocumentNode>();\n\n    return this.queryManager\n      .fetchQuery(qid, combinedOptions, NetworkStatus.fetchMore)\n      .then((fetchMoreResult) => {\n        this.queryManager.removeQuery(qid);\n\n        if (queryInfo.networkStatus === NetworkStatus.fetchMore) {\n          queryInfo.networkStatus = originalNetworkStatus;\n        }\n\n        // Performing this cache update inside a cache.batch transaction ensures\n        // any affected cache.watch watchers are notified at most once about any\n        // updates. Most watchers will be using the QueryInfo class, which\n        // responds to notifications by calling reobserveCacheFirst to deliver\n        // fetchMore cache results back to this ObservableQuery.\n        this.queryManager.cache.batch({\n          update: (cache) => {\n            const { updateQuery } = fetchMoreOptions;\n            if (updateQuery) {\n              cache.updateQuery(\n                {\n                  query: this.query,\n                  variables: this.variables,\n                  returnPartialData: true,\n                  optimistic: false,\n                },\n                (previous) =>\n                  updateQuery(previous!, {\n                    fetchMoreResult: fetchMoreResult.data,\n                    variables: combinedOptions.variables as TFetchVars,\n                  })\n              );\n            } else {\n              // If we're using a field policy instead of updateQuery, the only\n              // thing we need to do is write the new data to the cache using\n              // combinedOptions.variables (instead of this.variables, which is\n              // what this.updateQuery uses, because it works by abusing the\n              // original field value, keyed by the original variables).\n              cache.writeQuery({\n                query: combinedOptions.query,\n                variables: combinedOptions.variables,\n                data: fetchMoreResult.data,\n              });\n            }\n          },\n\n          onWatchUpdated: (watch) => {\n            // Record the DocumentNode associated with any watched query whose\n            // data were updated by the cache writes above.\n            updatedQuerySet.add(watch.query);\n          },\n        });\n\n        return fetchMoreResult;\n      })\n      .finally(() => {\n        // In case the cache writes above did not generate a broadcast\n        // notification (which would have been intercepted by onWatchUpdated),\n        // likely because the written data were the same as what was already in\n        // the cache, we still want fetchMore to deliver its final loading:false\n        // result with the unchanged data.\n        if (!updatedQuerySet.has(this.query)) {\n          reobserveCacheFirst(this);\n        }\n      });\n  }\n\n  // XXX the subscription variables are separate from the query variables.\n  // if you want to update subscription variables, right now you have to do that separately,\n  // and you can only do it by stopping the subscription and then subscribing again with new variables.\n  /**\n   * A function that enables you to execute a [subscription](https://www.apollographql.com/docs/react/data/subscriptions/), usually to subscribe to specific fields that were included in the query.\n   *\n   * This function returns _another_ function that you can call to terminate the subscription.\n   */\n  public subscribeToMore<\n    TSubscriptionData = TData,\n    TSubscriptionVariables extends OperationVariables = TVariables,\n  >(\n    options: SubscribeToMoreOptions<\n      TData,\n      TSubscriptionVariables,\n      TSubscriptionData\n    >\n  ) {\n    const subscription = this.queryManager\n      .startGraphQLSubscription({\n        query: options.document,\n        variables: options.variables,\n        context: options.context,\n      })\n      .subscribe({\n        next: (subscriptionData: { data: TSubscriptionData }) => {\n          const { updateQuery } = options;\n          if (updateQuery) {\n            this.updateQuery<TSubscriptionVariables>(\n              (previous, { variables }) =>\n                updateQuery(previous, {\n                  subscriptionData,\n                  variables,\n                })\n            );\n          }\n        },\n        error: (err: any) => {\n          if (options.onError) {\n            options.onError(err);\n            return;\n          }\n          invariant.error(\"Unhandled GraphQL subscription error\", err);\n        },\n      });\n\n    this.subscriptions.add(subscription);\n\n    return () => {\n      if (this.subscriptions.delete(subscription)) {\n        subscription.unsubscribe();\n      }\n    };\n  }\n\n  public setOptions(\n    newOptions: Partial<WatchQueryOptions<TVariables, TData>>\n  ): Promise<ApolloQueryResult<TData>> {\n    return this.reobserve(newOptions);\n  }\n\n  public silentSetOptions(\n    newOptions: Partial<WatchQueryOptions<TVariables, TData>>\n  ) {\n    const mergedOptions = compact(this.options, newOptions || {});\n    assign(this.options, mergedOptions);\n  }\n\n  /**\n   * Update the variables of this observable query, and fetch the new results\n   * if they've changed. Most users should prefer `refetch` instead of\n   * `setVariables` in order to to be properly notified of results even when\n   * they come from the cache.\n   *\n   * Note: the `next` callback will *not* fire if the variables have not changed\n   * or if the result is coming from cache.\n   *\n   * Note: the promise will return the old results immediately if the variables\n   * have not changed.\n   *\n   * Note: the promise will return null immediately if the query is not active\n   * (there are no subscribers).\n   *\n   * @param variables - The new set of variables. If there are missing variables,\n   * the previous values of those variables will be used.\n   */\n  public setVariables(\n    variables: TVariables\n  ): Promise<ApolloQueryResult<TData> | void> {\n    if (equal(this.variables, variables)) {\n      // If we have no observers, then we don't actually want to make a network\n      // request. As soon as someone observes the query, the request will kick\n      // off. For now, we just store any changes. (See #1077)\n      return this.observers.size ? this.result() : Promise.resolve();\n    }\n\n    this.options.variables = variables;\n\n    // See comment above\n    if (!this.observers.size) {\n      return Promise.resolve();\n    }\n\n    return this.reobserve(\n      {\n        // Reset options.fetchPolicy to its original value.\n        fetchPolicy: this.options.initialFetchPolicy,\n        variables,\n      },\n      NetworkStatus.setVariables\n    );\n  }\n\n  /**\n   * A function that enables you to update the query's cached result without executing a followup GraphQL operation.\n   *\n   * See [using updateQuery and updateFragment](https://www.apollographql.com/docs/react/caching/cache-interaction/#using-updatequery-and-updatefragment) for additional information.\n   */\n  public updateQuery<TVars extends OperationVariables = TVariables>(\n    mapFn: (\n      previousQueryResult: TData,\n      options: Pick<WatchQueryOptions<TVars, TData>, \"variables\">\n    ) => TData\n  ): void {\n    const { queryManager } = this;\n    const { result } = queryManager.cache.diff<TData>({\n      query: this.options.query,\n      variables: this.variables,\n      returnPartialData: true,\n      optimistic: false,\n    });\n\n    const newResult = mapFn(result!, {\n      variables: (this as any).variables,\n    });\n\n    if (newResult) {\n      queryManager.cache.writeQuery({\n        query: this.options.query,\n        data: newResult,\n        variables: this.variables,\n      });\n\n      queryManager.broadcastQueries();\n    }\n  }\n\n  /**\n   * A function that instructs the query to begin re-executing at a specified interval (in milliseconds).\n   */\n  public startPolling(pollInterval: number) {\n    this.options.pollInterval = pollInterval;\n    this.updatePolling();\n  }\n\n  /**\n   * A function that instructs the query to stop polling after a previous call to `startPolling`.\n   */\n  public stopPolling() {\n    this.options.pollInterval = 0;\n    this.updatePolling();\n  }\n\n  // Update options.fetchPolicy according to options.nextFetchPolicy.\n  private applyNextFetchPolicy(\n    reason: NextFetchPolicyContext<TData, TVariables>[\"reason\"],\n    // It's possible to use this method to apply options.nextFetchPolicy to\n    // options.fetchPolicy even if options !== this.options, though that happens\n    // most often when the options are temporary, used for only one request and\n    // then thrown away, so nextFetchPolicy may not end up mattering.\n    options: WatchQueryOptions<TVariables, TData>\n  ) {\n    if (options.nextFetchPolicy) {\n      const { fetchPolicy = \"cache-first\", initialFetchPolicy = fetchPolicy } =\n        options;\n\n      if (fetchPolicy === \"standby\") {\n        // Do nothing, leaving options.fetchPolicy unchanged.\n      } else if (typeof options.nextFetchPolicy === \"function\") {\n        // When someone chooses \"cache-and-network\" or \"network-only\" as their\n        // initial FetchPolicy, they often do not want future cache updates to\n        // trigger unconditional network requests, which is what repeatedly\n        // applying the \"cache-and-network\" or \"network-only\" policies would\n        // seem to imply. Instead, when the cache reports an update after the\n        // initial network request, it may be desirable for subsequent network\n        // requests to be triggered only if the cache result is incomplete. To\n        // that end, the options.nextFetchPolicy option provides an easy way to\n        // update options.fetchPolicy after the initial network request, without\n        // having to call observableQuery.setOptions.\n        options.fetchPolicy = options.nextFetchPolicy(fetchPolicy, {\n          reason,\n          options,\n          observable: this,\n          initialFetchPolicy,\n        });\n      } else if (reason === \"variables-changed\") {\n        options.fetchPolicy = initialFetchPolicy;\n      } else {\n        options.fetchPolicy = options.nextFetchPolicy;\n      }\n    }\n\n    return options.fetchPolicy;\n  }\n\n  private fetch(\n    options: WatchQueryOptions<TVariables, TData>,\n    newNetworkStatus?: NetworkStatus,\n    query?: DocumentNode\n  ) {\n    // TODO Make sure we update the networkStatus (and infer fetchVariables)\n    // before actually committing to the fetch.\n    this.queryManager.setObservableQuery(this);\n    return this.queryManager[\"fetchConcastWithInfo\"](\n      this.queryId,\n      options,\n      newNetworkStatus,\n      query\n    );\n  }\n\n  // Turns polling on or off based on this.options.pollInterval.\n  private updatePolling() {\n    // Avoid polling in SSR mode\n    if (this.queryManager.ssrMode) {\n      return;\n    }\n\n    const {\n      pollingInfo,\n      options: { pollInterval },\n    } = this;\n\n    if (!pollInterval) {\n      if (pollingInfo) {\n        clearTimeout(pollingInfo.timeout);\n        delete this.pollingInfo;\n      }\n      return;\n    }\n\n    if (pollingInfo && pollingInfo.interval === pollInterval) {\n      return;\n    }\n\n    invariant(\n      pollInterval,\n      \"Attempted to start a polling query without a polling interval.\"\n    );\n\n    const info = pollingInfo || (this.pollingInfo = {} as any);\n    info.interval = pollInterval;\n\n    const maybeFetch = () => {\n      if (this.pollingInfo) {\n        if (\n          !isNetworkRequestInFlight(this.queryInfo.networkStatus) &&\n          !this.options.skipPollAttempt?.()\n        ) {\n          this.reobserve(\n            {\n              // Most fetchPolicy options don't make sense to use in a polling context, as\n              // users wouldn't want to be polling the cache directly. However, network-only and\n              // no-cache are both useful for when the user wants to control whether or not the\n              // polled results are written to the cache.\n              fetchPolicy:\n                this.options.initialFetchPolicy === \"no-cache\" ?\n                  \"no-cache\"\n                : \"network-only\",\n            },\n            NetworkStatus.poll\n          ).then(poll, poll);\n        } else {\n          poll();\n        }\n      }\n    };\n\n    const poll = () => {\n      const info = this.pollingInfo;\n      if (info) {\n        clearTimeout(info.timeout);\n        info.timeout = setTimeout(maybeFetch, info.interval);\n      }\n    };\n\n    poll();\n  }\n\n  private updateLastResult(\n    newResult: ApolloQueryResult<TData>,\n    variables = this.variables\n  ) {\n    let error: ApolloError | undefined = this.getLastError();\n    // Preserve this.last.error unless the variables have changed.\n    if (error && this.last && !equal(variables, this.last.variables)) {\n      error = void 0;\n    }\n    return (this.last = {\n      result:\n        this.queryManager.assumeImmutableResults ?\n          newResult\n        : cloneDeep(newResult),\n      variables,\n      ...(error ? { error } : null),\n    });\n  }\n\n  public reobserveAsConcast(\n    newOptions?: Partial<WatchQueryOptions<TVariables, TData>>,\n    newNetworkStatus?: NetworkStatus\n  ): Concast<ApolloQueryResult<TData>> {\n    this.isTornDown = false;\n\n    const useDisposableConcast =\n      // Refetching uses a disposable Concast to allow refetches using different\n      // options/variables, without permanently altering the options of the\n      // original ObservableQuery.\n      newNetworkStatus === NetworkStatus.refetch ||\n      // The fetchMore method does not actually call the reobserve method, but,\n      // if it did, it would definitely use a disposable Concast.\n      newNetworkStatus === NetworkStatus.fetchMore ||\n      // Polling uses a disposable Concast so the polling options (which force\n      // fetchPolicy to be \"network-only\" or \"no-cache\") won't override the original options.\n      newNetworkStatus === NetworkStatus.poll;\n\n    // Save the old variables, since Object.assign may modify them below.\n    const oldVariables = this.options.variables;\n    const oldFetchPolicy = this.options.fetchPolicy;\n\n    const mergedOptions = compact(this.options, newOptions || {});\n    const options =\n      useDisposableConcast ?\n        // Disposable Concast fetches receive a shallow copy of this.options\n        // (merged with newOptions), leaving this.options unmodified.\n        mergedOptions\n      : assign(this.options, mergedOptions);\n\n    // Don't update options.query with the transformed query to avoid\n    // overwriting this.options.query when we aren't using a disposable concast.\n    // We want to ensure we can re-run the custom document transforms the next\n    // time a request is made against the original query.\n    const query = this.transformDocument(options.query);\n\n    this.lastQuery = query;\n\n    if (!useDisposableConcast) {\n      // We can skip calling updatePolling if we're not changing this.options.\n      this.updatePolling();\n\n      // Reset options.fetchPolicy to its original value when variables change,\n      // unless a new fetchPolicy was provided by newOptions.\n      if (\n        newOptions &&\n        newOptions.variables &&\n        !equal(newOptions.variables, oldVariables) &&\n        // Don't mess with the fetchPolicy if it's currently \"standby\".\n        options.fetchPolicy !== \"standby\" &&\n        // If we're changing the fetchPolicy anyway, don't try to change it here\n        // using applyNextFetchPolicy. The explicit options.fetchPolicy wins.\n        options.fetchPolicy === oldFetchPolicy\n      ) {\n        this.applyNextFetchPolicy(\"variables-changed\", options);\n        if (newNetworkStatus === void 0) {\n          newNetworkStatus = NetworkStatus.setVariables;\n        }\n      }\n    }\n\n    this.waitForOwnResult &&= skipCacheDataFor(options.fetchPolicy);\n    const finishWaitingForOwnResult = () => {\n      if (this.concast === concast) {\n        this.waitForOwnResult = false;\n      }\n    };\n\n    const variables = options.variables && { ...options.variables };\n    const { concast, fromLink } = this.fetch(options, newNetworkStatus, query);\n    const observer: Observer<ApolloQueryResult<TData>> = {\n      next: (result) => {\n        if (equal(this.variables, variables)) {\n          finishWaitingForOwnResult();\n          this.reportResult(result, variables);\n        }\n      },\n      error: (error) => {\n        if (equal(this.variables, variables)) {\n          finishWaitingForOwnResult();\n          this.reportError(error, variables);\n        }\n      },\n    };\n\n    if (!useDisposableConcast && (fromLink || !this.concast)) {\n      // We use the {add,remove}Observer methods directly to avoid wrapping\n      // observer with an unnecessary SubscriptionObserver object.\n      if (this.concast && this.observer) {\n        this.concast.removeObserver(this.observer);\n      }\n\n      this.concast = concast;\n      this.observer = observer;\n    }\n\n    concast.addObserver(observer);\n\n    return concast;\n  }\n\n  public reobserve(\n    newOptions?: Partial<WatchQueryOptions<TVariables, TData>>,\n    newNetworkStatus?: NetworkStatus\n  ): Promise<ApolloQueryResult<TData>> {\n    return this.reobserveAsConcast(newOptions, newNetworkStatus)\n      .promise as TODO;\n  }\n\n  public resubscribeAfterError(\n    onNext: (value: ApolloQueryResult<TData>) => void,\n    onError?: (error: any) => void,\n    onComplete?: () => void\n  ): ObservableSubscription;\n\n  public resubscribeAfterError(\n    observer: Observer<ApolloQueryResult<TData>>\n  ): ObservableSubscription;\n\n  public resubscribeAfterError(...args: [any, any?, any?]) {\n    // If `lastError` is set in the current when the subscription is re-created,\n    // the subscription will immediately receive the error, which will\n    // cause it to terminate again. To avoid this, we first clear\n    // the last error/result from the `observableQuery` before re-starting\n    // the subscription, and restore the last value afterwards so that the\n    // subscription has a chance to stay open.\n    const last = this.last;\n    this.resetLastResults();\n\n    const subscription = this.subscribe(...args);\n    this.last = last;\n\n    return subscription;\n  }\n\n  // (Re)deliver the current result to this.observers without applying fetch\n  // policies or making network requests.\n  private observe() {\n    this.reportResult(\n      // Passing false is important so that this.getCurrentResult doesn't\n      // save the fetchMore result as this.lastResult, causing it to be\n      // ignored due to the this.isDifferentFromLastResult check in\n      // this.reportResult.\n      this.getCurrentResult(false),\n      this.variables\n    );\n  }\n\n  private reportResult(\n    result: ApolloQueryResult<TData>,\n    variables: TVariables | undefined\n  ) {\n    const lastError = this.getLastError();\n    const isDifferent = this.isDifferentFromLastResult(result, variables);\n    // Update the last result even when isDifferentFromLastResult returns false,\n    // because the query may be using the @nonreactive directive, and we want to\n    // save the the latest version of any nonreactive subtrees (in case\n    // getCurrentResult is called), even though we skip broadcasting changes.\n    if (lastError || !result.partial || this.options.returnPartialData) {\n      this.updateLastResult(result, variables);\n    }\n    if (lastError || isDifferent) {\n      iterateObserversSafely(this.observers, \"next\", result);\n    }\n  }\n\n  private reportError(error: ApolloError, variables: TVariables | undefined) {\n    // Since we don't get the current result on errors, only the error, we\n    // must mirror the updates that occur in QueryStore.markQueryError here\n    const errorResult = {\n      ...this.getLastResult(),\n      error,\n      errors: error.graphQLErrors,\n      networkStatus: NetworkStatus.error,\n      loading: false,\n    } as ApolloQueryResult<TData>;\n\n    this.updateLastResult(errorResult, variables);\n\n    iterateObserversSafely(this.observers, \"error\", (this.last!.error = error));\n  }\n\n  public hasObservers() {\n    return this.observers.size > 0;\n  }\n\n  private tearDownQuery() {\n    if (this.isTornDown) return;\n    if (this.concast && this.observer) {\n      this.concast.removeObserver(this.observer);\n      delete this.concast;\n      delete this.observer;\n    }\n\n    this.stopPolling();\n    // stop all active GraphQL subscriptions\n    this.subscriptions.forEach((sub) => sub.unsubscribe());\n    this.subscriptions.clear();\n    this.queryManager.stopQuery(this.queryId);\n    this.observers.clear();\n    this.isTornDown = true;\n  }\n\n  private transformDocument(document: DocumentNode) {\n    return this.queryManager.transform(document);\n  }\n}\n\n// Necessary because the ObservableQuery constructor has a different\n// signature than the Observable constructor.\nfixObservableSubclass(ObservableQuery);\n\n// Reobserve with fetchPolicy effectively set to \"cache-first\", triggering\n// delivery of any new data from the cache, possibly falling back to the network\n// if any cache data are missing. This allows _complete_ cache results to be\n// delivered without also kicking off unnecessary network requests when\n// this.options.fetchPolicy is \"cache-and-network\" or \"network-only\". When\n// this.options.fetchPolicy is any other policy (\"cache-first\", \"cache-only\",\n// \"standby\", or \"no-cache\"), we call this.reobserve() as usual.\nexport function reobserveCacheFirst<TData, TVars extends OperationVariables>(\n  obsQuery: ObservableQuery<TData, TVars>\n) {\n  const { fetchPolicy, nextFetchPolicy } = obsQuery.options;\n\n  if (fetchPolicy === \"cache-and-network\" || fetchPolicy === \"network-only\") {\n    return obsQuery.reobserve({\n      fetchPolicy: \"cache-first\",\n      // Use a temporary nextFetchPolicy function that replaces itself with the\n      // previous nextFetchPolicy value and returns the original fetchPolicy.\n      nextFetchPolicy(\n        this: WatchQueryOptions<TVars, TData>,\n        currentFetchPolicy: WatchQueryFetchPolicy,\n        context: NextFetchPolicyContext<TData, TVars>\n      ) {\n        // Replace this nextFetchPolicy function in the options object with the\n        // original this.options.nextFetchPolicy value.\n        this.nextFetchPolicy = nextFetchPolicy;\n        // If the original nextFetchPolicy value was a function, give it a\n        // chance to decide what happens here.\n        if (typeof this.nextFetchPolicy === \"function\") {\n          return this.nextFetchPolicy(currentFetchPolicy, context);\n        }\n        // Otherwise go back to the original this.options.fetchPolicy.\n        return fetchPolicy!;\n      },\n    });\n  }\n\n  return obsQuery.reobserve();\n}\n\nfunction defaultSubscriptionObserverErrorCallback(error: ApolloError) {\n  invariant.error(\"Unhandled error\", error.message, error.stack);\n}\n\nexport function logMissingFieldErrors(\n  missing: MissingFieldError[] | MissingTree | undefined\n) {\n  if (__DEV__ && missing) {\n    invariant.debug(`Missing cache result fields: %o`, missing);\n  }\n}\n\nfunction skipCacheDataFor(\n  fetchPolicy?: WatchQueryFetchPolicy /* `undefined` would mean `\"cache-first\"` */\n) {\n  return (\n    fetchPolicy === \"network-only\" ||\n    fetchPolicy === \"no-cache\" ||\n    fetchPolicy === \"standby\"\n  );\n}\n","import { Kind } from './kinds.mjs';\nexport function isDefinitionNode(node) {\n  return (\n    isExecutableDefinitionNode(node) ||\n    isTypeSystemDefinitionNode(node) ||\n    isTypeSystemExtensionNode(node)\n  );\n}\nexport function isExecutableDefinitionNode(node) {\n  return (\n    node.kind === Kind.OPERATION_DEFINITION ||\n    node.kind === Kind.FRAGMENT_DEFINITION\n  );\n}\nexport function isSelectionNode(node) {\n  return (\n    node.kind === Kind.FIELD ||\n    node.kind === Kind.FRAGMENT_SPREAD ||\n    node.kind === Kind.INLINE_FRAGMENT\n  );\n}\nexport function isValueNode(node) {\n  return (\n    node.kind === Kind.VARIABLE ||\n    node.kind === Kind.INT ||\n    node.kind === Kind.FLOAT ||\n    node.kind === Kind.STRING ||\n    node.kind === Kind.BOOLEAN ||\n    node.kind === Kind.NULL ||\n    node.kind === Kind.ENUM ||\n    node.kind === Kind.LIST ||\n    node.kind === Kind.OBJECT\n  );\n}\nexport function isConstValueNode(node) {\n  return (\n    isValueNode(node) &&\n    (node.kind === Kind.LIST\n      ? node.values.some(isConstValueNode)\n      : node.kind === Kind.OBJECT\n      ? node.fields.some((field) => isConstValueNode(field.value))\n      : node.kind !== Kind.VARIABLE)\n  );\n}\nexport function isTypeNode(node) {\n  return (\n    node.kind === Kind.NAMED_TYPE ||\n    node.kind === Kind.LIST_TYPE ||\n    node.kind === Kind.NON_NULL_TYPE\n  );\n}\nexport function isTypeSystemDefinitionNode(node) {\n  return (\n    node.kind === Kind.SCHEMA_DEFINITION ||\n    isTypeDefinitionNode(node) ||\n    node.kind === Kind.DIRECTIVE_DEFINITION\n  );\n}\nexport function isTypeDefinitionNode(node) {\n  return (\n    node.kind === Kind.SCALAR_TYPE_DEFINITION ||\n    node.kind === Kind.OBJECT_TYPE_DEFINITION ||\n    node.kind === Kind.INTERFACE_TYPE_DEFINITION ||\n    node.kind === Kind.UNION_TYPE_DEFINITION ||\n    node.kind === Kind.ENUM_TYPE_DEFINITION ||\n    node.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION\n  );\n}\nexport function isTypeSystemExtensionNode(node) {\n  return node.kind === Kind.SCHEMA_EXTENSION || isTypeExtensionNode(node);\n}\nexport function isTypeExtensionNode(node) {\n  return (\n    node.kind === Kind.SCALAR_TYPE_EXTENSION ||\n    node.kind === Kind.OBJECT_TYPE_EXTENSION ||\n    node.kind === Kind.INTERFACE_TYPE_EXTENSION ||\n    node.kind === Kind.UNION_TYPE_EXTENSION ||\n    node.kind === Kind.ENUM_TYPE_EXTENSION ||\n    node.kind === Kind.INPUT_OBJECT_TYPE_EXTENSION\n  );\n}\n","import type { OptimisticDependencyFunction } from \"optimism\";\nimport { dep, Slot } from \"optimism\";\nimport type { InMemoryCache } from \"./inMemoryCache.js\";\nimport type { ApolloCache } from \"../../core/index.js\";\n\nexport interface ReactiveVar<T> {\n  (newValue?: T): T;\n  onNextChange(listener: ReactiveListener<T>): () => void;\n  attachCache(cache: ApolloCache<any>): this;\n  forgetCache(cache: ApolloCache<any>): boolean;\n}\n\nexport type ReactiveListener<T> = (value: T) => any;\n\n// Contextual Slot that acquires its value when custom read functions are\n// called in Policies#readField.\nexport const cacheSlot = new Slot<ApolloCache<any>>();\n\nconst cacheInfoMap = new WeakMap<\n  ApolloCache<any>,\n  {\n    vars: Set<ReactiveVar<any>>;\n    dep: OptimisticDependencyFunction<ReactiveVar<any>>;\n  }\n>();\n\nfunction getCacheInfo(cache: ApolloCache<any>) {\n  let info = cacheInfoMap.get(cache)!;\n  if (!info) {\n    cacheInfoMap.set(\n      cache,\n      (info = {\n        vars: new Set(),\n        dep: dep(),\n      })\n    );\n  }\n  return info;\n}\n\nexport function forgetCache(cache: ApolloCache<any>) {\n  getCacheInfo(cache).vars.forEach((rv) => rv.forgetCache(cache));\n}\n\n// Calling forgetCache(cache) serves to silence broadcasts and allows the\n// cache to be garbage collected. However, the varsByCache WeakMap\n// preserves the set of reactive variables that were previously associated\n// with this cache, which makes it possible to \"recall\" the cache at a\n// later time, by reattaching it to those variables. If the cache has been\n// garbage collected in the meantime, because it is no longer reachable,\n// you won't be able to call recallCache(cache), and the cache will\n// automatically disappear from the varsByCache WeakMap.\nexport function recallCache(cache: ApolloCache<any>) {\n  getCacheInfo(cache).vars.forEach((rv) => rv.attachCache(cache));\n}\n\nexport function makeVar<T>(value: T): ReactiveVar<T> {\n  const caches = new Set<ApolloCache<any>>();\n  const listeners = new Set<ReactiveListener<T>>();\n\n  const rv: ReactiveVar<T> = function (newValue) {\n    if (arguments.length > 0) {\n      if (value !== newValue) {\n        value = newValue!;\n        caches.forEach((cache) => {\n          // Invalidate any fields with custom read functions that\n          // consumed this variable, so query results involving those\n          // fields will be recomputed the next time we read them.\n          getCacheInfo(cache).dep.dirty(rv);\n          // Broadcast changes to any caches that have previously read\n          // from this variable.\n          broadcast(cache);\n        });\n        // Finally, notify any listeners added via rv.onNextChange.\n        const oldListeners = Array.from(listeners);\n        listeners.clear();\n        oldListeners.forEach((listener) => listener(value));\n      }\n    } else {\n      // When reading from the variable, obtain the current cache from\n      // context via cacheSlot. This isn't entirely foolproof, but it's\n      // the same system that powers varDep.\n      const cache = cacheSlot.getValue();\n      if (cache) {\n        attach(cache);\n        getCacheInfo(cache).dep(rv);\n      }\n    }\n\n    return value;\n  };\n\n  rv.onNextChange = (listener) => {\n    listeners.add(listener);\n    return () => {\n      listeners.delete(listener);\n    };\n  };\n\n  const attach = (rv.attachCache = (cache) => {\n    caches.add(cache);\n    getCacheInfo(cache).vars.add(rv);\n    return rv;\n  });\n\n  rv.forgetCache = (cache) => caches.delete(cache);\n\n  return rv;\n}\n\ntype Broadcastable = ApolloCache<any> & {\n  // This method is protected in InMemoryCache, which we are ignoring, but\n  // we still want some semblance of type safety when we call it.\n  broadcastWatches?: InMemoryCache[\"broadcastWatches\"];\n};\n\nfunction broadcast(cache: Broadcastable) {\n  if (cache.broadcastWatches) {\n    cache.broadcastWatches();\n  }\n}\n","import { invariant } from \"../utilities/globals/index.js\";\n\nimport type {\n  DocumentNode,\n  OperationDefinitionNode,\n  SelectionSetNode,\n  SelectionNode,\n  InlineFragmentNode,\n  FragmentDefinitionNode,\n  FieldNode,\n  ASTNode,\n  DirectiveNode,\n  FragmentSpreadNode,\n  ExecutableDefinitionNode,\n} from \"graphql\";\nimport { visit, BREAK, isSelectionNode } from \"graphql\";\n\nimport type { ApolloCache } from \"../cache/index.js\";\nimport type { FragmentMap, StoreObject } from \"../utilities/index.js\";\nimport {\n  argumentsObjectFromField,\n  buildQueryFromSelectionSet,\n  createFragmentMap,\n  getFragmentDefinitions,\n  getMainDefinition,\n  hasDirectives,\n  isField,\n  isInlineFragment,\n  mergeDeep,\n  mergeDeepArray,\n  removeClientSetsFromDocument,\n  resultKeyNameFromField,\n  shouldInclude,\n} from \"../utilities/index.js\";\nimport type { ApolloClient } from \"./ApolloClient.js\";\nimport type { Resolvers, OperationVariables } from \"./types.js\";\nimport type { FetchResult } from \"../link/core/index.js\";\nimport { cacheSlot } from \"../cache/index.js\";\n\nexport type Resolver = (\n  rootValue?: any,\n  args?: any,\n  context?: any,\n  info?: {\n    field: FieldNode;\n    fragmentMap: FragmentMap;\n  }\n) => any;\n\nexport type VariableMap = { [name: string]: any };\n\nexport type FragmentMatcher = (\n  rootValue: any,\n  typeCondition: string,\n  context: any\n) => boolean;\n\nexport type ExecContext = {\n  fragmentMap: FragmentMap;\n  context: any;\n  variables: VariableMap;\n  fragmentMatcher: FragmentMatcher;\n  defaultOperationType: string;\n  exportedVariables: Record<string, any>;\n  onlyRunForcedResolvers: boolean;\n  selectionsToResolve: Set<SelectionNode>;\n};\n\nexport type LocalStateOptions<TCacheShape> = {\n  cache: ApolloCache<TCacheShape>;\n  client?: ApolloClient<TCacheShape>;\n  resolvers?: Resolvers | Resolvers[];\n  fragmentMatcher?: FragmentMatcher;\n};\n\nexport class LocalState<TCacheShape> {\n  private cache: ApolloCache<TCacheShape>;\n  private client?: ApolloClient<TCacheShape>;\n  private resolvers?: Resolvers;\n  private fragmentMatcher?: FragmentMatcher;\n  private selectionsToResolveCache = new WeakMap<\n    ExecutableDefinitionNode,\n    Set<SelectionNode>\n  >();\n\n  constructor({\n    cache,\n    client,\n    resolvers,\n    fragmentMatcher,\n  }: LocalStateOptions<TCacheShape>) {\n    this.cache = cache;\n\n    if (client) {\n      this.client = client;\n    }\n\n    if (resolvers) {\n      this.addResolvers(resolvers);\n    }\n\n    if (fragmentMatcher) {\n      this.setFragmentMatcher(fragmentMatcher);\n    }\n  }\n\n  public addResolvers(resolvers: Resolvers | Resolvers[]) {\n    this.resolvers = this.resolvers || {};\n    if (Array.isArray(resolvers)) {\n      resolvers.forEach((resolverGroup) => {\n        this.resolvers = mergeDeep(this.resolvers, resolverGroup);\n      });\n    } else {\n      this.resolvers = mergeDeep(this.resolvers, resolvers);\n    }\n  }\n\n  public setResolvers(resolvers: Resolvers | Resolvers[]) {\n    this.resolvers = {};\n    this.addResolvers(resolvers);\n  }\n\n  public getResolvers() {\n    return this.resolvers || {};\n  }\n\n  // Run local client resolvers against the incoming query and remote data.\n  // Locally resolved field values are merged with the incoming remote data,\n  // and returned. Note that locally resolved fields will overwrite\n  // remote data using the same field name.\n  public async runResolvers<TData>({\n    document,\n    remoteResult,\n    context,\n    variables,\n    onlyRunForcedResolvers = false,\n  }: {\n    document: DocumentNode | null;\n    remoteResult: FetchResult<TData>;\n    context?: Record<string, any>;\n    variables?: Record<string, any>;\n    onlyRunForcedResolvers?: boolean;\n  }): Promise<FetchResult<TData>> {\n    if (document) {\n      return this.resolveDocument(\n        document,\n        remoteResult.data,\n        context,\n        variables,\n        this.fragmentMatcher,\n        onlyRunForcedResolvers\n      ).then((localResult) => ({\n        ...remoteResult,\n        data: localResult.result,\n      }));\n    }\n\n    return remoteResult;\n  }\n\n  public setFragmentMatcher(fragmentMatcher: FragmentMatcher) {\n    this.fragmentMatcher = fragmentMatcher;\n  }\n\n  public getFragmentMatcher(): FragmentMatcher | undefined {\n    return this.fragmentMatcher;\n  }\n\n  // Client queries contain everything in the incoming document (if a @client\n  // directive is found).\n  public clientQuery(document: DocumentNode) {\n    if (hasDirectives([\"client\"], document)) {\n      if (this.resolvers) {\n        return document;\n      }\n    }\n    return null;\n  }\n\n  // Server queries are stripped of all @client based selection sets.\n  public serverQuery(document: DocumentNode) {\n    return removeClientSetsFromDocument(document);\n  }\n\n  public prepareContext(context?: Record<string, any>) {\n    const { cache } = this;\n    return {\n      ...context,\n      cache,\n      // Getting an entry's cache key is useful for local state resolvers.\n      getCacheKey(obj: StoreObject) {\n        return cache.identify(obj);\n      },\n    };\n  }\n\n  // To support `@client @export(as: \"someVar\")` syntax, we'll first resolve\n  // @client @export fields locally, then pass the resolved values back to be\n  // used alongside the original operation variables.\n  public async addExportedVariables<TVars extends OperationVariables>(\n    document: DocumentNode,\n    variables: TVars = {} as TVars,\n    context = {}\n  ): /* returns at least the variables that were passed in */ Promise<TVars> {\n    if (document) {\n      return this.resolveDocument(\n        document,\n        this.buildRootValueFromCache(document, variables) || {},\n        this.prepareContext(context),\n        variables\n      ).then((data) => ({\n        ...variables,\n        ...data.exportedVariables,\n      }));\n    }\n\n    return {\n      ...variables,\n    };\n  }\n\n  public shouldForceResolvers(document: ASTNode) {\n    let forceResolvers = false;\n    visit(document, {\n      Directive: {\n        enter(node) {\n          if (node.name.value === \"client\" && node.arguments) {\n            forceResolvers = node.arguments.some(\n              (arg) =>\n                arg.name.value === \"always\" &&\n                arg.value.kind === \"BooleanValue\" &&\n                arg.value.value === true\n            );\n            if (forceResolvers) {\n              return BREAK;\n            }\n          }\n        },\n      },\n    });\n    return forceResolvers;\n  }\n\n  // Query the cache and return matching data.\n  private buildRootValueFromCache(\n    document: DocumentNode,\n    variables?: Record<string, any>\n  ) {\n    return this.cache.diff({\n      query: buildQueryFromSelectionSet(document),\n      variables,\n      returnPartialData: true,\n      optimistic: false,\n    }).result;\n  }\n\n  private async resolveDocument<TData>(\n    document: DocumentNode,\n    rootValue: TData,\n    context: any = {},\n    variables: VariableMap = {},\n    fragmentMatcher: FragmentMatcher = () => true,\n    onlyRunForcedResolvers: boolean = false\n  ) {\n    const mainDefinition = getMainDefinition(\n      document\n    ) as OperationDefinitionNode;\n    const fragments = getFragmentDefinitions(document);\n    const fragmentMap = createFragmentMap(fragments);\n    const selectionsToResolve = this.collectSelectionsToResolve(\n      mainDefinition,\n      fragmentMap\n    );\n\n    const definitionOperation = mainDefinition.operation;\n\n    const defaultOperationType =\n      definitionOperation ?\n        definitionOperation.charAt(0).toUpperCase() +\n        definitionOperation.slice(1)\n      : \"Query\";\n\n    const { cache, client } = this;\n    const execContext: ExecContext = {\n      fragmentMap,\n      context: {\n        ...context,\n        cache,\n        client,\n      },\n      variables,\n      fragmentMatcher,\n      defaultOperationType,\n      exportedVariables: {},\n      selectionsToResolve,\n      onlyRunForcedResolvers,\n    };\n    const isClientFieldDescendant = false;\n\n    return this.resolveSelectionSet(\n      mainDefinition.selectionSet,\n      isClientFieldDescendant,\n      rootValue,\n      execContext\n    ).then((result) => ({\n      result,\n      exportedVariables: execContext.exportedVariables,\n    }));\n  }\n\n  private async resolveSelectionSet<TData>(\n    selectionSet: SelectionSetNode,\n    isClientFieldDescendant: boolean,\n    rootValue: TData,\n    execContext: ExecContext\n  ) {\n    const { fragmentMap, context, variables } = execContext;\n    const resultsToMerge: TData[] = [rootValue];\n\n    const execute = async (selection: SelectionNode): Promise<void> => {\n      if (\n        !isClientFieldDescendant &&\n        !execContext.selectionsToResolve.has(selection)\n      ) {\n        // Skip selections without @client directives\n        // (still processing if one of the ancestors or one of the child fields has @client directive)\n        return;\n      }\n      if (!shouldInclude(selection, variables)) {\n        // Skip this entirely.\n        return;\n      }\n\n      if (isField(selection)) {\n        return this.resolveField(\n          selection,\n          isClientFieldDescendant,\n          rootValue,\n          execContext\n        ).then((fieldResult) => {\n          if (typeof fieldResult !== \"undefined\") {\n            resultsToMerge.push({\n              [resultKeyNameFromField(selection)]: fieldResult,\n            } as TData);\n          }\n        });\n      }\n\n      let fragment: InlineFragmentNode | FragmentDefinitionNode;\n\n      if (isInlineFragment(selection)) {\n        fragment = selection;\n      } else {\n        // This is a named fragment.\n        fragment = fragmentMap[selection.name.value];\n        invariant(fragment, `No fragment named %s`, selection.name.value);\n      }\n\n      if (fragment && fragment.typeCondition) {\n        const typeCondition = fragment.typeCondition.name.value;\n        if (execContext.fragmentMatcher(rootValue, typeCondition, context)) {\n          return this.resolveSelectionSet(\n            fragment.selectionSet,\n            isClientFieldDescendant,\n            rootValue,\n            execContext\n          ).then((fragmentResult) => {\n            resultsToMerge.push(fragmentResult);\n          });\n        }\n      }\n    };\n\n    return Promise.all(selectionSet.selections.map(execute)).then(function () {\n      return mergeDeepArray(resultsToMerge);\n    });\n  }\n\n  private async resolveField(\n    field: FieldNode,\n    isClientFieldDescendant: boolean,\n    rootValue: any,\n    execContext: ExecContext\n  ): Promise<any> {\n    if (!rootValue) {\n      return null;\n    }\n\n    const { variables } = execContext;\n    const fieldName = field.name.value;\n    const aliasedFieldName = resultKeyNameFromField(field);\n    const aliasUsed = fieldName !== aliasedFieldName;\n    const defaultResult = rootValue[aliasedFieldName] || rootValue[fieldName];\n    let resultPromise = Promise.resolve(defaultResult);\n\n    // Usually all local resolvers are run when passing through here, but\n    // if we've specifically identified that we only want to run forced\n    // resolvers (that is, resolvers for fields marked with\n    // `@client(always: true)`), then we'll skip running non-forced resolvers.\n    if (\n      !execContext.onlyRunForcedResolvers ||\n      this.shouldForceResolvers(field)\n    ) {\n      const resolverType =\n        rootValue.__typename || execContext.defaultOperationType;\n      const resolverMap = this.resolvers && this.resolvers[resolverType];\n      if (resolverMap) {\n        const resolve = resolverMap[aliasUsed ? fieldName : aliasedFieldName];\n        if (resolve) {\n          resultPromise = Promise.resolve(\n            // In case the resolve function accesses reactive variables,\n            // set cacheSlot to the current cache instance.\n            cacheSlot.withValue(this.cache, resolve, [\n              rootValue,\n              argumentsObjectFromField(field, variables),\n              execContext.context,\n              { field, fragmentMap: execContext.fragmentMap },\n            ])\n          );\n        }\n      }\n    }\n\n    return resultPromise.then((result = defaultResult) => {\n      // If an @export directive is associated with the current field, store\n      // the `as` export variable name and current result for later use.\n      if (field.directives) {\n        field.directives.forEach((directive) => {\n          if (directive.name.value === \"export\" && directive.arguments) {\n            directive.arguments.forEach((arg) => {\n              if (arg.name.value === \"as\" && arg.value.kind === \"StringValue\") {\n                execContext.exportedVariables[arg.value.value] = result;\n              }\n            });\n          }\n        });\n      }\n\n      // Handle all scalar types here.\n      if (!field.selectionSet) {\n        return result;\n      }\n\n      // From here down, the field has a selection set, which means it's trying\n      // to query a GraphQLObjectType.\n      if (result == null) {\n        // Basically any field in a GraphQL response can be null, or missing\n        return result;\n      }\n\n      const isClientField =\n        field.directives?.some((d) => d.name.value === \"client\") ?? false;\n\n      if (Array.isArray(result)) {\n        return this.resolveSubSelectedArray(\n          field,\n          isClientFieldDescendant || isClientField,\n          result,\n          execContext\n        );\n      }\n\n      // Returned value is an object, and the query has a sub-selection. Recurse.\n      if (field.selectionSet) {\n        return this.resolveSelectionSet(\n          field.selectionSet,\n          isClientFieldDescendant || isClientField,\n          result,\n          execContext\n        );\n      }\n    });\n  }\n\n  private resolveSubSelectedArray(\n    field: FieldNode,\n    isClientFieldDescendant: boolean,\n    result: any[],\n    execContext: ExecContext\n  ): any {\n    return Promise.all(\n      result.map((item) => {\n        if (item === null) {\n          return null;\n        }\n\n        // This is a nested array, recurse.\n        if (Array.isArray(item)) {\n          return this.resolveSubSelectedArray(\n            field,\n            isClientFieldDescendant,\n            item,\n            execContext\n          );\n        }\n\n        // This is an object, run the selection set on it.\n        if (field.selectionSet) {\n          return this.resolveSelectionSet(\n            field.selectionSet,\n            isClientFieldDescendant,\n            item,\n            execContext\n          );\n        }\n      })\n    );\n  }\n\n  // Collect selection nodes on paths from document root down to all @client directives.\n  // This function takes into account transitive fragment spreads.\n  // Complexity equals to a single `visit` over the full document.\n  private collectSelectionsToResolve(\n    mainDefinition: OperationDefinitionNode,\n    fragmentMap: FragmentMap\n  ): Set<SelectionNode> {\n    const isSingleASTNode = (\n      node: ASTNode | readonly ASTNode[]\n    ): node is ASTNode => !Array.isArray(node);\n    const selectionsToResolveCache = this.selectionsToResolveCache;\n\n    function collectByDefinition(\n      definitionNode: ExecutableDefinitionNode\n    ): Set<SelectionNode> {\n      if (!selectionsToResolveCache.has(definitionNode)) {\n        const matches = new Set<SelectionNode>();\n        selectionsToResolveCache.set(definitionNode, matches);\n\n        visit(definitionNode, {\n          Directive(node: DirectiveNode, _, __, ___, ancestors) {\n            if (node.name.value === \"client\") {\n              ancestors.forEach((node) => {\n                if (isSingleASTNode(node) && isSelectionNode(node)) {\n                  matches.add(node);\n                }\n              });\n            }\n          },\n          FragmentSpread(spread: FragmentSpreadNode, _, __, ___, ancestors) {\n            const fragment = fragmentMap[spread.name.value];\n            invariant(fragment, `No fragment named %s`, spread.name.value);\n\n            const fragmentSelections = collectByDefinition(fragment);\n            if (fragmentSelections.size > 0) {\n              // Fragment for this spread contains @client directive (either directly or transitively)\n              // Collect selection nodes on paths from the root down to fields with the @client directive\n              ancestors.forEach((node) => {\n                if (isSingleASTNode(node) && isSelectionNode(node)) {\n                  matches.add(node);\n                }\n              });\n              matches.add(spread);\n              fragmentSelections.forEach((selection) => {\n                matches.add(selection);\n              });\n            }\n          },\n        });\n      }\n      return selectionsToResolveCache.get(definitionNode)!;\n    }\n    return collectByDefinition(mainDefinition);\n  }\n}\n","import type { DocumentNode, GraphQLError } from \"graphql\";\nimport { equal } from \"@wry/equality\";\n\nimport type { Cache, ApolloCache } from \"../cache/index.js\";\nimport { DeepMerger } from \"../utilities/index.js\";\nimport { mergeIncrementalData } from \"../utilities/index.js\";\nimport type { WatchQueryOptions, ErrorPolicy } from \"./watchQueryOptions.js\";\nimport type { ObservableQuery } from \"./ObservableQuery.js\";\nimport { reobserveCacheFirst } from \"./ObservableQuery.js\";\nimport type { QueryListener } from \"./types.js\";\nimport type { FetchResult } from \"../link/core/index.js\";\nimport {\n  isNonEmptyArray,\n  graphQLResultHasError,\n  canUseWeakMap,\n} from \"../utilities/index.js\";\nimport { NetworkStatus, isNetworkRequestInFlight } from \"./networkStatus.js\";\nimport type { ApolloError } from \"../errors/index.js\";\nimport type { QueryManager } from \"./QueryManager.js\";\n\nexport type QueryStoreValue = Pick<\n  QueryInfo,\n  \"variables\" | \"networkStatus\" | \"networkError\" | \"graphQLErrors\"\n>;\n\nexport const enum CacheWriteBehavior {\n  FORBID,\n  OVERWRITE,\n  MERGE,\n}\n\nconst destructiveMethodCounts = new (canUseWeakMap ? WeakMap : Map)<\n  ApolloCache<any>,\n  number\n>();\n\nfunction wrapDestructiveCacheMethod(\n  cache: ApolloCache<any>,\n  methodName: \"evict\" | \"modify\" | \"reset\"\n) {\n  const original = cache[methodName];\n  if (typeof original === \"function\") {\n    // @ts-expect-error this is just too generic to be typed correctly\n    cache[methodName] = function () {\n      destructiveMethodCounts.set(\n        cache,\n        // The %1e15 allows the count to wrap around to 0 safely every\n        // quadrillion evictions, so there's no risk of overflow. To be\n        // clear, this is more of a pedantic principle than something\n        // that matters in any conceivable practical scenario.\n        (destructiveMethodCounts.get(cache)! + 1) % 1e15\n      );\n      // @ts-expect-error this is just too generic to be typed correctly\n      return original.apply(this, arguments);\n    };\n  }\n}\n\nfunction cancelNotifyTimeout(info: QueryInfo) {\n  if (info[\"notifyTimeout\"]) {\n    clearTimeout(info[\"notifyTimeout\"]);\n    info[\"notifyTimeout\"] = void 0;\n  }\n}\n\n// A QueryInfo object represents a single query managed by the\n// QueryManager, which tracks all QueryInfo objects by queryId in its\n// this.queries Map. QueryInfo objects store the latest results and errors\n// for the given query, and are responsible for reporting those results to\n// the corresponding ObservableQuery, via the QueryInfo.notify method.\n// Results are reported asynchronously whenever setDiff marks the\n// QueryInfo object as dirty, though a call to the QueryManager's\n// broadcastQueries method may trigger the notification before it happens\n// automatically. This class used to be a simple interface type without\n// any field privacy or meaningful methods, which is why it still has so\n// many public fields. The effort to lock down and simplify the QueryInfo\n// interface is ongoing, and further improvements are welcome.\nexport class QueryInfo {\n  listeners = new Set<QueryListener>();\n  document: DocumentNode | null = null;\n  lastRequestId = 1;\n  variables?: Record<string, any>;\n  networkStatus?: NetworkStatus;\n  networkError?: Error | null;\n  graphQLErrors?: ReadonlyArray<GraphQLError>;\n  stopped = false;\n\n  private cache: ApolloCache<any>;\n\n  constructor(\n    queryManager: QueryManager<any>,\n    public readonly queryId = queryManager.generateQueryId()\n  ) {\n    const cache = (this.cache = queryManager.cache);\n\n    // Track how often cache.evict is called, since we want eviction to\n    // override the feud-stopping logic in the markResult method, by\n    // causing shouldWrite to return true. Wrapping the cache.evict method\n    // is a bit of a hack, but it saves us from having to make eviction\n    // counting an official part of the ApolloCache API.\n    if (!destructiveMethodCounts.has(cache)) {\n      destructiveMethodCounts.set(cache, 0);\n      wrapDestructiveCacheMethod(cache, \"evict\");\n      wrapDestructiveCacheMethod(cache, \"modify\");\n      wrapDestructiveCacheMethod(cache, \"reset\");\n    }\n  }\n\n  public init(query: {\n    document: DocumentNode;\n    variables: Record<string, any> | undefined;\n    // The initial networkStatus for this fetch, most often\n    // NetworkStatus.loading, but also possibly fetchMore, poll, refetch,\n    // or setVariables.\n    networkStatus?: NetworkStatus;\n    observableQuery?: ObservableQuery<any, any>;\n    lastRequestId?: number;\n  }): this {\n    let networkStatus = query.networkStatus || NetworkStatus.loading;\n    if (\n      this.variables &&\n      this.networkStatus !== NetworkStatus.loading &&\n      !equal(this.variables, query.variables)\n    ) {\n      networkStatus = NetworkStatus.setVariables;\n    }\n\n    if (!equal(query.variables, this.variables)) {\n      this.lastDiff = void 0;\n    }\n\n    Object.assign(this, {\n      document: query.document,\n      variables: query.variables,\n      networkError: null,\n      graphQLErrors: this.graphQLErrors || [],\n      networkStatus,\n    });\n\n    if (query.observableQuery) {\n      this.setObservableQuery(query.observableQuery);\n    }\n\n    if (query.lastRequestId) {\n      this.lastRequestId = query.lastRequestId;\n    }\n\n    return this;\n  }\n\n  private dirty: boolean = false;\n\n  private notifyTimeout?: ReturnType<typeof setTimeout>;\n\n  reset() {\n    cancelNotifyTimeout(this);\n    this.dirty = false;\n  }\n\n  resetDiff() {\n    this.lastDiff = void 0;\n  }\n\n  getDiff(): Cache.DiffResult<any> {\n    const options = this.getDiffOptions();\n\n    if (this.lastDiff && equal(options, this.lastDiff.options)) {\n      return this.lastDiff.diff;\n    }\n\n    this.updateWatch(this.variables);\n\n    const oq = this.observableQuery;\n    if (oq && oq.options.fetchPolicy === \"no-cache\") {\n      return { complete: false };\n    }\n\n    const diff = this.cache.diff(options);\n    this.updateLastDiff(diff, options);\n    return diff;\n  }\n\n  private lastDiff?: {\n    diff: Cache.DiffResult<any>;\n    options: Cache.DiffOptions;\n  };\n\n  private updateLastDiff(\n    diff: Cache.DiffResult<any> | null,\n    options?: Cache.DiffOptions\n  ) {\n    this.lastDiff =\n      diff ?\n        {\n          diff,\n          options: options || this.getDiffOptions(),\n        }\n      : void 0;\n  }\n\n  private getDiffOptions(variables = this.variables): Cache.DiffOptions {\n    return {\n      query: this.document!,\n      variables,\n      returnPartialData: true,\n      optimistic: true,\n      canonizeResults: this.observableQuery?.options.canonizeResults,\n    };\n  }\n\n  setDiff(diff: Cache.DiffResult<any> | null) {\n    const oldDiff = this.lastDiff && this.lastDiff.diff;\n\n    // If we do not tolerate partial results, skip this update to prevent it\n    // from being reported. This prevents a situtuation where a query that\n    // errors and another succeeds with overlapping data does not report the\n    // partial data result to the errored query.\n    //\n    // See https://github.com/apollographql/apollo-client/issues/11400 for more\n    // information on this issue.\n    if (\n      diff &&\n      !diff.complete &&\n      !this.observableQuery?.options.returnPartialData &&\n      // In the case of a cache eviction, the diff will become partial so we\n      // schedule a notification to send a network request (this.oqListener) to\n      // go and fetch the missing data.\n      !(oldDiff && oldDiff.complete)\n    ) {\n      return;\n    }\n\n    this.updateLastDiff(diff);\n\n    if (!this.dirty && !equal(oldDiff && oldDiff.result, diff && diff.result)) {\n      this.dirty = true;\n      if (!this.notifyTimeout) {\n        this.notifyTimeout = setTimeout(() => this.notify(), 0);\n      }\n    }\n  }\n\n  public readonly observableQuery: ObservableQuery<any, any> | null = null;\n  private oqListener?: QueryListener;\n\n  setObservableQuery(oq: ObservableQuery<any, any> | null) {\n    if (oq === this.observableQuery) return;\n\n    if (this.oqListener) {\n      this.listeners.delete(this.oqListener);\n    }\n\n    (this as any).observableQuery = oq;\n\n    if (oq) {\n      oq[\"queryInfo\"] = this;\n      this.listeners.add(\n        (this.oqListener = () => {\n          const diff = this.getDiff();\n          if (diff.fromOptimisticTransaction) {\n            // If this diff came from an optimistic transaction, deliver the\n            // current cache data to the ObservableQuery, but don't perform a\n            // reobservation, since oq.reobserveCacheFirst might make a network\n            // request, and we never want to trigger network requests in the\n            // middle of optimistic updates.\n            oq[\"observe\"]();\n          } else {\n            // Otherwise, make the ObservableQuery \"reobserve\" the latest data\n            // using a temporary fetch policy of \"cache-first\", so complete cache\n            // results have a chance to be delivered without triggering additional\n            // network requests, even when options.fetchPolicy is \"network-only\"\n            // or \"cache-and-network\". All other fetch policies are preserved by\n            // this method, and are handled by calling oq.reobserve(). If this\n            // reobservation is spurious, isDifferentFromLastResult still has a\n            // chance to catch it before delivery to ObservableQuery subscribers.\n            reobserveCacheFirst(oq);\n          }\n        })\n      );\n    } else {\n      delete this.oqListener;\n    }\n  }\n\n  notify() {\n    cancelNotifyTimeout(this);\n\n    if (this.shouldNotify()) {\n      this.listeners.forEach((listener) => listener(this));\n    }\n\n    this.dirty = false;\n  }\n\n  private shouldNotify() {\n    if (!this.dirty || !this.listeners.size) {\n      return false;\n    }\n\n    if (isNetworkRequestInFlight(this.networkStatus) && this.observableQuery) {\n      const { fetchPolicy } = this.observableQuery.options;\n      if (fetchPolicy !== \"cache-only\" && fetchPolicy !== \"cache-and-network\") {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  public stop() {\n    if (!this.stopped) {\n      this.stopped = true;\n\n      // Cancel the pending notify timeout\n      this.reset();\n\n      this.cancel();\n      // Revert back to the no-op version of cancel inherited from\n      // QueryInfo.prototype.\n      this.cancel = QueryInfo.prototype.cancel;\n\n      const oq = this.observableQuery;\n      if (oq) oq.stopPolling();\n    }\n  }\n\n  // This method is a no-op by default, until/unless overridden by the\n  // updateWatch method.\n  private cancel() {}\n\n  private lastWatch?: Cache.WatchOptions;\n\n  private updateWatch(variables = this.variables) {\n    const oq = this.observableQuery;\n    if (oq && oq.options.fetchPolicy === \"no-cache\") {\n      return;\n    }\n\n    const watchOptions: Cache.WatchOptions = {\n      // Although this.getDiffOptions returns Cache.DiffOptions instead of\n      // Cache.WatchOptions, all the overlapping options should be the same, so\n      // we can reuse getDiffOptions here, for consistency.\n      ...this.getDiffOptions(variables),\n      watcher: this,\n      callback: (diff) => this.setDiff(diff),\n    };\n\n    if (!this.lastWatch || !equal(watchOptions, this.lastWatch)) {\n      this.cancel();\n      this.cancel = this.cache.watch((this.lastWatch = watchOptions));\n    }\n  }\n\n  private lastWrite?: {\n    result: FetchResult<any>;\n    variables: WatchQueryOptions[\"variables\"];\n    dmCount: number | undefined;\n  };\n\n  public resetLastWrite() {\n    this.lastWrite = void 0;\n  }\n\n  private shouldWrite(\n    result: FetchResult<any>,\n    variables: WatchQueryOptions[\"variables\"]\n  ) {\n    const { lastWrite } = this;\n    return !(\n      lastWrite &&\n      // If cache.evict has been called since the last time we wrote this\n      // data into the cache, there's a chance writing this result into\n      // the cache will repair what was evicted.\n      lastWrite.dmCount === destructiveMethodCounts.get(this.cache) &&\n      equal(variables, lastWrite.variables) &&\n      equal(result.data, lastWrite.result.data)\n    );\n  }\n\n  public markResult<T>(\n    result: FetchResult<T>,\n    document: DocumentNode,\n    options: Pick<\n      WatchQueryOptions,\n      \"variables\" | \"fetchPolicy\" | \"errorPolicy\"\n    >,\n    cacheWriteBehavior: CacheWriteBehavior\n  ) {\n    const merger = new DeepMerger();\n    const graphQLErrors =\n      isNonEmptyArray(result.errors) ? result.errors.slice(0) : [];\n\n    // Cancel the pending notify timeout (if it exists) to prevent extraneous network\n    // requests. To allow future notify timeouts, diff and dirty are reset as well.\n    this.reset();\n\n    if (\"incremental\" in result && isNonEmptyArray(result.incremental)) {\n      const mergedData = mergeIncrementalData(this.getDiff().result, result);\n      result.data = mergedData;\n\n      // Detect the first chunk of a deferred query and merge it with existing\n      // cache data. This ensures a `cache-first` fetch policy that returns\n      // partial cache data or a `cache-and-network` fetch policy that already\n      // has full data in the cache does not complain when trying to merge the\n      // initial deferred server data with existing cache data.\n    } else if (\"hasNext\" in result && result.hasNext) {\n      const diff = this.getDiff();\n      result.data = merger.merge(diff.result, result.data);\n    }\n\n    this.graphQLErrors = graphQLErrors;\n\n    if (options.fetchPolicy === \"no-cache\") {\n      this.updateLastDiff(\n        { result: result.data, complete: true },\n        this.getDiffOptions(options.variables)\n      );\n    } else if (cacheWriteBehavior !== CacheWriteBehavior.FORBID) {\n      if (shouldWriteResult(result, options.errorPolicy)) {\n        // Using a transaction here so we have a chance to read the result\n        // back from the cache before the watch callback fires as a result\n        // of writeQuery, so we can store the new diff quietly and ignore\n        // it when we receive it redundantly from the watch callback.\n        this.cache.performTransaction((cache) => {\n          if (this.shouldWrite(result, options.variables)) {\n            cache.writeQuery({\n              query: document,\n              data: result.data as T,\n              variables: options.variables,\n              overwrite: cacheWriteBehavior === CacheWriteBehavior.OVERWRITE,\n            });\n\n            this.lastWrite = {\n              result,\n              variables: options.variables,\n              dmCount: destructiveMethodCounts.get(this.cache),\n            };\n          } else {\n            // If result is the same as the last result we received from\n            // the network (and the variables match too), avoid writing\n            // result into the cache again. The wisdom of skipping this\n            // cache write is far from obvious, since any cache write\n            // could be the one that puts the cache back into a desired\n            // state, fixing corruption or missing data. However, if we\n            // always write every network result into the cache, we enable\n            // feuds between queries competing to update the same data in\n            // incompatible ways, which can lead to an endless cycle of\n            // cache broadcasts and useless network requests. As with any\n            // feud, eventually one side must step back from the brink,\n            // letting the other side(s) have the last word(s). There may\n            // be other points where we could break this cycle, such as\n            // silencing the broadcast for cache.writeQuery (not a good\n            // idea, since it just delays the feud a bit) or somehow\n            // avoiding the network request that just happened (also bad,\n            // because the server could return useful new data). All\n            // options considered, skipping this cache write seems to be\n            // the least damaging place to break the cycle, because it\n            // reflects the intuition that we recently wrote this exact\n            // result into the cache, so the cache *should* already/still\n            // contain this data. If some other query has clobbered that\n            // data in the meantime, that's too bad, but there will be no\n            // winners if every query blindly reverts to its own version\n            // of the data. This approach also gives the network a chance\n            // to return new data, which will be written into the cache as\n            // usual, notifying only those queries that are directly\n            // affected by the cache updates, as usual. In the future, an\n            // even more sophisticated cache could perhaps prevent or\n            // mitigate the clobbering somehow, but that would make this\n            // particular cache write even less important, and thus\n            // skipping it would be even safer than it is today.\n            if (this.lastDiff && this.lastDiff.diff.complete) {\n              // Reuse data from the last good (complete) diff that we\n              // received, when possible.\n              result.data = this.lastDiff.diff.result;\n              return;\n            }\n            // If the previous this.diff was incomplete, fall through to\n            // re-reading the latest data with cache.diff, below.\n          }\n\n          const diffOptions = this.getDiffOptions(options.variables);\n          const diff = cache.diff<T>(diffOptions);\n\n          // In case the QueryManager stops this QueryInfo before its\n          // results are delivered, it's important to avoid restarting the\n          // cache watch when markResult is called. We also avoid updating\n          // the watch if we are writing a result that doesn't match the current\n          // variables to avoid race conditions from broadcasting the wrong\n          // result.\n          if (!this.stopped && equal(this.variables, options.variables)) {\n            // Any time we're about to update this.diff, we need to make\n            // sure we've started watching the cache.\n            this.updateWatch(options.variables);\n          }\n\n          // If we're allowed to write to the cache, and we can read a\n          // complete result from the cache, update result.data to be the\n          // result from the cache, rather than the raw network result.\n          // Set without setDiff to avoid triggering a notify call, since\n          // we have other ways of notifying for this result.\n          this.updateLastDiff(diff, diffOptions);\n          if (diff.complete) {\n            result.data = diff.result;\n          }\n        });\n      } else {\n        this.lastWrite = void 0;\n      }\n    }\n  }\n\n  public markReady() {\n    this.networkError = null;\n    return (this.networkStatus = NetworkStatus.ready);\n  }\n\n  public markError(error: ApolloError) {\n    this.networkStatus = NetworkStatus.error;\n    this.lastWrite = void 0;\n\n    this.reset();\n\n    if (error.graphQLErrors) {\n      this.graphQLErrors = error.graphQLErrors;\n    }\n\n    if (error.networkError) {\n      this.networkError = error.networkError;\n    }\n\n    return error;\n  }\n}\n\nexport function shouldWriteResult<T>(\n  result: FetchResult<T>,\n  errorPolicy: ErrorPolicy = \"none\"\n) {\n  const ignoreErrors = errorPolicy === \"ignore\" || errorPolicy === \"all\";\n  let writeWithErrors = !graphQLResultHasError(result);\n  if (!writeWithErrors && ignoreErrors && result.data) {\n    writeWithErrors = true;\n  }\n  return writeWithErrors;\n}\n","import { invariant, newInvariantError } from \"../utilities/globals/index.js\";\n\nimport type { DocumentNode } from \"graphql\";\n// TODO(brian): A hack until this issue is resolved (https://github.com/graphql/graphql-js/issues/3356)\ntype OperationTypeNode = any;\nimport { equal } from \"@wry/equality\";\n\nimport type { ApolloLink, FetchResult } from \"../link/core/index.js\";\nimport { execute } from \"../link/core/index.js\";\nimport {\n  defaultCacheSizes,\n  hasDirectives,\n  isExecutionPatchIncrementalResult,\n  isExecutionPatchResult,\n  removeDirectivesFromDocument,\n} from \"../utilities/index.js\";\nimport type { Cache, ApolloCache } from \"../cache/index.js\";\nimport { canonicalStringify } from \"../cache/index.js\";\n\nimport type {\n  ObservableSubscription,\n  ConcastSourcesArray,\n} from \"../utilities/index.js\";\nimport {\n  getDefaultValues,\n  getOperationDefinition,\n  getOperationName,\n  hasClientExports,\n  graphQLResultHasError,\n  getGraphQLErrorsFromResult,\n  Observable,\n  asyncMap,\n  isNonEmptyArray,\n  Concast,\n  makeUniqueId,\n  isDocumentNode,\n  isNonNullObject,\n  DocumentTransform,\n} from \"../utilities/index.js\";\nimport { mergeIncrementalData } from \"../utilities/common/incrementalResult.js\";\nimport {\n  ApolloError,\n  isApolloError,\n  graphQLResultHasProtocolErrors,\n} from \"../errors/index.js\";\nimport type {\n  QueryOptions,\n  WatchQueryOptions,\n  SubscriptionOptions,\n  MutationOptions,\n  ErrorPolicy,\n  MutationFetchPolicy,\n} from \"./watchQueryOptions.js\";\nimport { ObservableQuery, logMissingFieldErrors } from \"./ObservableQuery.js\";\nimport { NetworkStatus, isNetworkRequestInFlight } from \"./networkStatus.js\";\nimport type {\n  ApolloQueryResult,\n  OperationVariables,\n  MutationUpdaterFunction,\n  OnQueryUpdated,\n  InternalRefetchQueriesInclude,\n  InternalRefetchQueriesOptions,\n  InternalRefetchQueriesResult,\n  InternalRefetchQueriesMap,\n  DefaultContext,\n} from \"./types.js\";\nimport { LocalState } from \"./LocalState.js\";\n\nimport type { QueryStoreValue } from \"./QueryInfo.js\";\nimport {\n  QueryInfo,\n  shouldWriteResult,\n  CacheWriteBehavior,\n} from \"./QueryInfo.js\";\nimport type { ApolloErrorOptions } from \"../errors/index.js\";\nimport { PROTOCOL_ERRORS_SYMBOL } from \"../errors/index.js\";\nimport { print } from \"../utilities/index.js\";\nimport type { IgnoreModifier } from \"../cache/core/types/common.js\";\nimport type { TODO } from \"../utilities/types/TODO.js\";\n\nconst { hasOwnProperty } = Object.prototype;\n\nconst IGNORE: IgnoreModifier = Object.create(null);\n\ninterface MutationStoreValue {\n  mutation: DocumentNode;\n  variables: Record<string, any>;\n  loading: boolean;\n  error: Error | null;\n}\n\ntype UpdateQueries<TData> = MutationOptions<TData, any, any>[\"updateQueries\"];\n\ninterface TransformCacheEntry {\n  hasClientExports: boolean;\n  hasForcedResolvers: boolean;\n  hasNonreactiveDirective: boolean;\n  clientQuery: DocumentNode | null;\n  serverQuery: DocumentNode | null;\n  defaultVars: OperationVariables;\n  asQuery: DocumentNode;\n}\n\nimport type { DefaultOptions } from \"./ApolloClient.js\";\nimport { Trie } from \"@wry/trie\";\nimport { AutoCleanedWeakCache, cacheSizes } from \"../utilities/index.js\";\n\nexport class QueryManager<TStore> {\n  public cache: ApolloCache<TStore>;\n  public link: ApolloLink;\n  public defaultOptions: DefaultOptions;\n\n  public readonly assumeImmutableResults: boolean;\n  public readonly documentTransform: DocumentTransform;\n  public readonly ssrMode: boolean;\n  public readonly defaultContext: Partial<DefaultContext>;\n\n  private queryDeduplication: boolean;\n  private clientAwareness: Record<string, string> = {};\n  private localState: LocalState<TStore>;\n\n  private onBroadcast?: () => void;\n  public mutationStore?: {\n    [mutationId: string]: MutationStoreValue;\n  };\n\n  // All the queries that the QueryManager is currently managing (not\n  // including mutations and subscriptions).\n  private queries = new Map<string, QueryInfo>();\n\n  // Maps from queryId strings to Promise rejection functions for\n  // currently active queries and fetches.\n  // Use protected instead of private field so\n  // @apollo/experimental-nextjs-app-support can access type info.\n  protected fetchCancelFns = new Map<string, (error: any) => any>();\n\n  constructor({\n    cache,\n    link,\n    defaultOptions,\n    documentTransform,\n    queryDeduplication = false,\n    onBroadcast,\n    ssrMode = false,\n    clientAwareness = {},\n    localState,\n    assumeImmutableResults = !!cache.assumeImmutableResults,\n    defaultContext,\n  }: {\n    cache: ApolloCache<TStore>;\n    link: ApolloLink;\n    defaultOptions?: DefaultOptions;\n    documentTransform?: DocumentTransform;\n    queryDeduplication?: boolean;\n    onBroadcast?: () => void;\n    ssrMode?: boolean;\n    clientAwareness?: Record<string, string>;\n    localState?: LocalState<TStore>;\n    assumeImmutableResults?: boolean;\n    defaultContext?: Partial<DefaultContext>;\n  }) {\n    const defaultDocumentTransform = new DocumentTransform(\n      (document) => this.cache.transformDocument(document),\n      // Allow the apollo cache to manage its own transform caches\n      { cache: false }\n    );\n\n    this.cache = cache;\n    this.link = link;\n    this.defaultOptions = defaultOptions || Object.create(null);\n    this.queryDeduplication = queryDeduplication;\n    this.clientAwareness = clientAwareness;\n    this.localState = localState || new LocalState({ cache });\n    this.ssrMode = ssrMode;\n    this.assumeImmutableResults = assumeImmutableResults;\n    this.documentTransform =\n      documentTransform ?\n        defaultDocumentTransform\n          .concat(documentTransform)\n          // The custom document transform may add new fragment spreads or new\n          // field selections, so we want to give the cache a chance to run\n          // again. For example, the InMemoryCache adds __typename to field\n          // selections and fragments from the fragment registry.\n          .concat(defaultDocumentTransform)\n      : defaultDocumentTransform;\n    this.defaultContext = defaultContext || Object.create(null);\n\n    if ((this.onBroadcast = onBroadcast)) {\n      this.mutationStore = Object.create(null);\n    }\n  }\n\n  /**\n   * Call this method to terminate any active query processes, making it safe\n   * to dispose of this QueryManager instance.\n   */\n  public stop() {\n    this.queries.forEach((_info, queryId) => {\n      this.stopQueryNoBroadcast(queryId);\n    });\n\n    this.cancelPendingFetches(\n      newInvariantError(\"QueryManager stopped while query was in flight\")\n    );\n  }\n\n  private cancelPendingFetches(error: Error) {\n    this.fetchCancelFns.forEach((cancel) => cancel(error));\n    this.fetchCancelFns.clear();\n  }\n\n  public async mutate<\n    TData,\n    TVariables extends OperationVariables,\n    TContext extends Record<string, any>,\n    TCache extends ApolloCache<any>,\n  >({\n    mutation,\n    variables,\n    optimisticResponse,\n    updateQueries,\n    refetchQueries = [],\n    awaitRefetchQueries = false,\n    update: updateWithProxyFn,\n    onQueryUpdated,\n    fetchPolicy = this.defaultOptions.mutate?.fetchPolicy || \"network-only\",\n    errorPolicy = this.defaultOptions.mutate?.errorPolicy || \"none\",\n    keepRootFields,\n    context,\n  }: MutationOptions<TData, TVariables, TContext>): Promise<\n    FetchResult<TData>\n  > {\n    invariant(\n      mutation,\n      \"mutation option is required. You must specify your GraphQL document in the mutation option.\"\n    );\n\n    invariant(\n      fetchPolicy === \"network-only\" || fetchPolicy === \"no-cache\",\n      \"Mutations support only 'network-only' or 'no-cache' fetchPolicy strings. The default `network-only` behavior automatically writes mutation results to the cache. Passing `no-cache` skips the cache write.\"\n    );\n\n    const mutationId = this.generateMutationId();\n\n    mutation = this.cache.transformForLink(this.transform(mutation));\n    const { hasClientExports } = this.getDocumentInfo(mutation);\n\n    variables = this.getVariables(mutation, variables) as TVariables;\n    if (hasClientExports) {\n      variables = (await this.localState.addExportedVariables(\n        mutation,\n        variables,\n        context\n      )) as TVariables;\n    }\n\n    const mutationStoreValue =\n      this.mutationStore &&\n      (this.mutationStore[mutationId] = {\n        mutation,\n        variables,\n        loading: true,\n        error: null,\n      } as MutationStoreValue);\n\n    const isOptimistic =\n      optimisticResponse &&\n      this.markMutationOptimistic<TData, TVariables, TContext, TCache>(\n        optimisticResponse,\n        {\n          mutationId,\n          document: mutation,\n          variables,\n          fetchPolicy,\n          errorPolicy,\n          context,\n          updateQueries,\n          update: updateWithProxyFn,\n          keepRootFields,\n        }\n      );\n\n    this.broadcastQueries();\n\n    const self = this;\n\n    return new Promise((resolve, reject) => {\n      return asyncMap(\n        self.getObservableFromLink(\n          mutation,\n          {\n            ...context,\n            optimisticResponse: isOptimistic ? optimisticResponse : void 0,\n          },\n          variables,\n          false\n        ),\n\n        (result: FetchResult<TData>) => {\n          if (graphQLResultHasError(result) && errorPolicy === \"none\") {\n            throw new ApolloError({\n              graphQLErrors: getGraphQLErrorsFromResult(result),\n            });\n          }\n\n          if (mutationStoreValue) {\n            mutationStoreValue.loading = false;\n            mutationStoreValue.error = null;\n          }\n\n          const storeResult: typeof result = { ...result };\n\n          if (typeof refetchQueries === \"function\") {\n            refetchQueries = refetchQueries(storeResult);\n          }\n\n          if (errorPolicy === \"ignore\" && graphQLResultHasError(storeResult)) {\n            delete storeResult.errors;\n          }\n\n          return self.markMutationResult<TData, TVariables, TContext, TCache>({\n            mutationId,\n            result: storeResult,\n            document: mutation,\n            variables,\n            fetchPolicy,\n            errorPolicy,\n            context,\n            update: updateWithProxyFn,\n            updateQueries,\n            awaitRefetchQueries,\n            refetchQueries,\n            removeOptimistic: isOptimistic ? mutationId : void 0,\n            onQueryUpdated,\n            keepRootFields,\n          });\n        }\n      ).subscribe({\n        next(storeResult) {\n          self.broadcastQueries();\n\n          // Since mutations might receive multiple payloads from the\n          // ApolloLink chain (e.g. when used with @defer),\n          // we resolve with a SingleExecutionResult or after the final\n          // ExecutionPatchResult has arrived and we have assembled the\n          // multipart response into a single result.\n          if (!(\"hasNext\" in storeResult) || storeResult.hasNext === false) {\n            resolve(storeResult);\n          }\n        },\n\n        error(err: Error) {\n          if (mutationStoreValue) {\n            mutationStoreValue.loading = false;\n            mutationStoreValue.error = err;\n          }\n\n          if (isOptimistic) {\n            self.cache.removeOptimistic(mutationId);\n          }\n\n          self.broadcastQueries();\n\n          reject(\n            err instanceof ApolloError ? err : (\n              new ApolloError({\n                networkError: err,\n              })\n            )\n          );\n        },\n      });\n    });\n  }\n\n  public markMutationResult<\n    TData,\n    TVariables,\n    TContext,\n    TCache extends ApolloCache<any>,\n  >(\n    mutation: {\n      mutationId: string;\n      result: FetchResult<TData>;\n      document: DocumentNode;\n      variables?: TVariables;\n      fetchPolicy?: MutationFetchPolicy;\n      errorPolicy: ErrorPolicy;\n      context?: TContext;\n      updateQueries: UpdateQueries<TData>;\n      update?: MutationUpdaterFunction<TData, TVariables, TContext, TCache>;\n      awaitRefetchQueries?: boolean;\n      refetchQueries?: InternalRefetchQueriesInclude;\n      removeOptimistic?: string;\n      onQueryUpdated?: OnQueryUpdated<any>;\n      keepRootFields?: boolean;\n    },\n    cache = this.cache\n  ): Promise<FetchResult<TData>> {\n    let { result } = mutation;\n    const cacheWrites: Cache.WriteOptions[] = [];\n    const skipCache = mutation.fetchPolicy === \"no-cache\";\n\n    if (!skipCache && shouldWriteResult(result, mutation.errorPolicy)) {\n      if (!isExecutionPatchIncrementalResult(result)) {\n        cacheWrites.push({\n          result: result.data,\n          dataId: \"ROOT_MUTATION\",\n          query: mutation.document,\n          variables: mutation.variables,\n        });\n      }\n      if (\n        isExecutionPatchIncrementalResult(result) &&\n        isNonEmptyArray(result.incremental)\n      ) {\n        const diff = cache.diff<TData>({\n          id: \"ROOT_MUTATION\",\n          // The cache complains if passed a mutation where it expects a\n          // query, so we transform mutations and subscriptions to queries\n          // (only once, thanks to this.transformCache).\n          query: this.getDocumentInfo(mutation.document).asQuery,\n          variables: mutation.variables,\n          optimistic: false,\n          returnPartialData: true,\n        });\n        let mergedData;\n        if (diff.result) {\n          mergedData = mergeIncrementalData(diff.result, result);\n        }\n        if (typeof mergedData !== \"undefined\") {\n          // cast the ExecutionPatchResult to FetchResult here since\n          // ExecutionPatchResult never has `data` when returned from the server\n          (result as FetchResult).data = mergedData;\n          cacheWrites.push({\n            result: mergedData,\n            dataId: \"ROOT_MUTATION\",\n            query: mutation.document,\n            variables: mutation.variables,\n          });\n        }\n      }\n\n      const { updateQueries } = mutation;\n      if (updateQueries) {\n        this.queries.forEach(({ observableQuery }, queryId) => {\n          const queryName = observableQuery && observableQuery.queryName;\n          if (!queryName || !hasOwnProperty.call(updateQueries, queryName)) {\n            return;\n          }\n          const updater = updateQueries[queryName];\n          const { document, variables } = this.queries.get(queryId)!;\n\n          // Read the current query result from the store.\n          const { result: currentQueryResult, complete } = cache.diff<TData>({\n            query: document!,\n            variables,\n            returnPartialData: true,\n            optimistic: false,\n          });\n\n          if (complete && currentQueryResult) {\n            // Run our reducer using the current query result and the mutation result.\n            const nextQueryResult = updater(currentQueryResult, {\n              mutationResult: result,\n              queryName: (document && getOperationName(document)) || void 0,\n              queryVariables: variables!,\n            });\n\n            // Write the modified result back into the store if we got a new result.\n            if (nextQueryResult) {\n              cacheWrites.push({\n                result: nextQueryResult,\n                dataId: \"ROOT_QUERY\",\n                query: document!,\n                variables,\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      cacheWrites.length > 0 ||\n      (mutation.refetchQueries || \"\").length > 0 ||\n      mutation.update ||\n      mutation.onQueryUpdated ||\n      mutation.removeOptimistic\n    ) {\n      const results: any[] = [];\n\n      this.refetchQueries({\n        updateCache: (cache) => {\n          if (!skipCache) {\n            cacheWrites.forEach((write) => cache.write(write));\n          }\n\n          // If the mutation has some writes associated with it then we need to\n          // apply those writes to the store by running this reducer again with\n          // a write action.\n          const { update } = mutation;\n          // Determine whether result is a SingleExecutionResult,\n          // or the final ExecutionPatchResult.\n          const isFinalResult =\n            !isExecutionPatchResult(result) ||\n            (isExecutionPatchIncrementalResult(result) && !result.hasNext);\n\n          if (update) {\n            if (!skipCache) {\n              // Re-read the ROOT_MUTATION data we just wrote into the cache\n              // (the first cache.write call in the cacheWrites.forEach loop\n              // above), so field read functions have a chance to run for\n              // fields within mutation result objects.\n              const diff = cache.diff<TData>({\n                id: \"ROOT_MUTATION\",\n                // The cache complains if passed a mutation where it expects a\n                // query, so we transform mutations and subscriptions to queries\n                // (only once, thanks to this.transformCache).\n                query: this.getDocumentInfo(mutation.document).asQuery,\n                variables: mutation.variables,\n                optimistic: false,\n                returnPartialData: true,\n              });\n\n              if (diff.complete) {\n                result = { ...(result as FetchResult), data: diff.result };\n                if (\"incremental\" in result) {\n                  delete result.incremental;\n                }\n                if (\"hasNext\" in result) {\n                  delete result.hasNext;\n                }\n              }\n            }\n\n            // If we've received the whole response,\n            // either a SingleExecutionResult or the final ExecutionPatchResult,\n            // call the update function.\n            if (isFinalResult) {\n              update(cache as TCache, result, {\n                context: mutation.context,\n                variables: mutation.variables,\n              });\n            }\n          }\n\n          // TODO Do this with cache.evict({ id: 'ROOT_MUTATION' }) but make it\n          // shallow to allow rolling back optimistic evictions.\n          if (!skipCache && !mutation.keepRootFields && isFinalResult) {\n            cache.modify({\n              id: \"ROOT_MUTATION\",\n              fields(value, { fieldName, DELETE }) {\n                return fieldName === \"__typename\" ? value : DELETE;\n              },\n            });\n          }\n        },\n\n        include: mutation.refetchQueries,\n\n        // Write the final mutation.result to the root layer of the cache.\n        optimistic: false,\n\n        // Remove the corresponding optimistic layer at the same time as we\n        // write the final non-optimistic result.\n        removeOptimistic: mutation.removeOptimistic,\n\n        // Let the caller of client.mutate optionally determine the refetching\n        // behavior for watched queries after the mutation.update function runs.\n        // If no onQueryUpdated function was provided for this mutation, pass\n        // null instead of undefined to disable the default refetching behavior.\n        onQueryUpdated: mutation.onQueryUpdated || null,\n      }).forEach((result) => results.push(result));\n\n      if (mutation.awaitRefetchQueries || mutation.onQueryUpdated) {\n        // Returning a promise here makes the mutation await that promise, so we\n        // include results in that promise's work if awaitRefetchQueries or an\n        // onQueryUpdated function was specified.\n        return Promise.all(results).then(() => result);\n      }\n    }\n\n    return Promise.resolve(result);\n  }\n\n  public markMutationOptimistic<\n    TData,\n    TVariables,\n    TContext,\n    TCache extends ApolloCache<any>,\n  >(\n    optimisticResponse: any,\n    mutation: {\n      mutationId: string;\n      document: DocumentNode;\n      variables?: TVariables;\n      fetchPolicy?: MutationFetchPolicy;\n      errorPolicy: ErrorPolicy;\n      context?: TContext;\n      updateQueries: UpdateQueries<TData>;\n      update?: MutationUpdaterFunction<TData, TVariables, TContext, TCache>;\n      keepRootFields?: boolean;\n    }\n  ) {\n    const data =\n      typeof optimisticResponse === \"function\" ?\n        optimisticResponse(mutation.variables, { IGNORE })\n      : optimisticResponse;\n\n    if (data === IGNORE) {\n      return false;\n    }\n\n    this.cache.recordOptimisticTransaction((cache) => {\n      try {\n        this.markMutationResult<TData, TVariables, TContext, TCache>(\n          {\n            ...mutation,\n            result: { data },\n          },\n          cache\n        );\n      } catch (error) {\n        invariant.error(error);\n      }\n    }, mutation.mutationId);\n\n    return true;\n  }\n\n  public fetchQuery<TData, TVars extends OperationVariables>(\n    queryId: string,\n    options: WatchQueryOptions<TVars, TData>,\n    networkStatus?: NetworkStatus\n  ): Promise<ApolloQueryResult<TData>> {\n    return this.fetchConcastWithInfo(queryId, options, networkStatus).concast\n      .promise as TODO;\n  }\n\n  public getQueryStore() {\n    const store: Record<string, QueryStoreValue> = Object.create(null);\n    this.queries.forEach((info, queryId) => {\n      store[queryId] = {\n        variables: info.variables,\n        networkStatus: info.networkStatus,\n        networkError: info.networkError,\n        graphQLErrors: info.graphQLErrors,\n      };\n    });\n    return store;\n  }\n\n  public resetErrors(queryId: string) {\n    const queryInfo = this.queries.get(queryId);\n    if (queryInfo) {\n      queryInfo.networkError = undefined;\n      queryInfo.graphQLErrors = [];\n    }\n  }\n\n  public transform(document: DocumentNode) {\n    return this.documentTransform.transformDocument(document);\n  }\n\n  private transformCache = new AutoCleanedWeakCache<\n    DocumentNode,\n    TransformCacheEntry\n  >(\n    cacheSizes[\"queryManager.getDocumentInfo\"] ||\n      defaultCacheSizes[\"queryManager.getDocumentInfo\"]\n  );\n\n  public getDocumentInfo(document: DocumentNode) {\n    const { transformCache } = this;\n\n    if (!transformCache.has(document)) {\n      const cacheEntry: TransformCacheEntry = {\n        // TODO These three calls (hasClientExports, shouldForceResolvers, and\n        // usesNonreactiveDirective) are performing independent full traversals\n        // of the transformed document. We should consider merging these\n        // traversals into a single pass in the future, though the work is\n        // cached after the first time.\n        hasClientExports: hasClientExports(document),\n        hasForcedResolvers: this.localState.shouldForceResolvers(document),\n        hasNonreactiveDirective: hasDirectives([\"nonreactive\"], document),\n        clientQuery: this.localState.clientQuery(document),\n        serverQuery: removeDirectivesFromDocument(\n          [\n            { name: \"client\", remove: true },\n            { name: \"connection\" },\n            { name: \"nonreactive\" },\n          ],\n          document\n        ),\n        defaultVars: getDefaultValues(\n          getOperationDefinition(document)\n        ) as OperationVariables,\n        // Transform any mutation or subscription operations to query operations\n        // so we can read/write them from/to the cache.\n        asQuery: {\n          ...document,\n          definitions: document.definitions.map((def) => {\n            if (\n              def.kind === \"OperationDefinition\" &&\n              def.operation !== \"query\"\n            ) {\n              return { ...def, operation: \"query\" as OperationTypeNode };\n            }\n            return def;\n          }),\n        },\n      };\n\n      transformCache.set(document, cacheEntry);\n    }\n\n    return transformCache.get(document)!;\n  }\n\n  private getVariables<TVariables>(\n    document: DocumentNode,\n    variables?: TVariables\n  ): OperationVariables {\n    return {\n      ...this.getDocumentInfo(document).defaultVars,\n      ...variables,\n    };\n  }\n\n  public watchQuery<\n    T,\n    TVariables extends OperationVariables = OperationVariables,\n  >(options: WatchQueryOptions<TVariables, T>): ObservableQuery<T, TVariables> {\n    const query = this.transform(options.query);\n\n    // assign variable default values if supplied\n    // NOTE: We don't modify options.query here with the transformed query to\n    // ensure observable.options.query is set to the raw untransformed query.\n    options = {\n      ...options,\n      variables: this.getVariables(query, options.variables) as TVariables,\n    };\n\n    if (typeof options.notifyOnNetworkStatusChange === \"undefined\") {\n      options.notifyOnNetworkStatusChange = false;\n    }\n\n    const queryInfo = new QueryInfo(this);\n    const observable = new ObservableQuery<T, TVariables>({\n      queryManager: this,\n      queryInfo,\n      options,\n    });\n    observable[\"lastQuery\"] = query;\n\n    this.queries.set(observable.queryId, queryInfo);\n\n    // We give queryInfo the transformed query to ensure the first cache diff\n    // uses the transformed query instead of the raw query\n    queryInfo.init({\n      document: query,\n      observableQuery: observable,\n      variables: observable.variables,\n    });\n\n    return observable;\n  }\n\n  public query<TData, TVars extends OperationVariables = OperationVariables>(\n    options: QueryOptions<TVars, TData>,\n    queryId = this.generateQueryId()\n  ): Promise<ApolloQueryResult<TData>> {\n    invariant(\n      options.query,\n      \"query option is required. You must specify your GraphQL document \" +\n        \"in the query option.\"\n    );\n\n    invariant(\n      options.query.kind === \"Document\",\n      'You must wrap the query string in a \"gql\" tag.'\n    );\n\n    invariant(\n      !(options as any).returnPartialData,\n      \"returnPartialData option only supported on watchQuery.\"\n    );\n\n    invariant(\n      !(options as any).pollInterval,\n      \"pollInterval option only supported on watchQuery.\"\n    );\n\n    return this.fetchQuery<TData, TVars>(queryId, {\n      ...options,\n      query: this.transform(options.query),\n    }).finally(() => this.stopQuery(queryId));\n  }\n\n  private queryIdCounter = 1;\n  public generateQueryId() {\n    return String(this.queryIdCounter++);\n  }\n\n  private requestIdCounter = 1;\n  public generateRequestId() {\n    return this.requestIdCounter++;\n  }\n\n  private mutationIdCounter = 1;\n  public generateMutationId() {\n    return String(this.mutationIdCounter++);\n  }\n\n  public stopQueryInStore(queryId: string) {\n    this.stopQueryInStoreNoBroadcast(queryId);\n    this.broadcastQueries();\n  }\n\n  private stopQueryInStoreNoBroadcast(queryId: string) {\n    const queryInfo = this.queries.get(queryId);\n    if (queryInfo) queryInfo.stop();\n  }\n\n  public clearStore(\n    options: Cache.ResetOptions = {\n      discardWatches: true,\n    }\n  ): Promise<void> {\n    // Before we have sent the reset action to the store, we can no longer\n    // rely on the results returned by in-flight requests since these may\n    // depend on values that previously existed in the data portion of the\n    // store. So, we cancel the promises and observers that we have issued\n    // so far and not yet resolved (in the case of queries).\n    this.cancelPendingFetches(\n      newInvariantError(\n        \"Store reset while query was in flight (not completed in link chain)\"\n      )\n    );\n\n    this.queries.forEach((queryInfo) => {\n      if (queryInfo.observableQuery) {\n        // Set loading to true so listeners don't trigger unless they want\n        // results with partial data.\n        queryInfo.networkStatus = NetworkStatus.loading;\n      } else {\n        queryInfo.stop();\n      }\n    });\n\n    if (this.mutationStore) {\n      this.mutationStore = Object.create(null);\n    }\n\n    // begin removing data from the store\n    return this.cache.reset(options);\n  }\n\n  public getObservableQueries(\n    include: InternalRefetchQueriesInclude = \"active\"\n  ) {\n    const queries = new Map<string, ObservableQuery<any>>();\n    const queryNamesAndDocs = new Map<string | DocumentNode, boolean>();\n    const legacyQueryOptions = new Set<QueryOptions>();\n\n    if (Array.isArray(include)) {\n      include.forEach((desc) => {\n        if (typeof desc === \"string\") {\n          queryNamesAndDocs.set(desc, false);\n        } else if (isDocumentNode(desc)) {\n          queryNamesAndDocs.set(this.transform(desc), false);\n        } else if (isNonNullObject(desc) && desc.query) {\n          legacyQueryOptions.add(desc);\n        }\n      });\n    }\n\n    this.queries.forEach(({ observableQuery: oq, document }, queryId) => {\n      if (oq) {\n        if (include === \"all\") {\n          queries.set(queryId, oq);\n          return;\n        }\n\n        const {\n          queryName,\n          options: { fetchPolicy },\n        } = oq;\n\n        if (\n          fetchPolicy === \"standby\" ||\n          (include === \"active\" && !oq.hasObservers())\n        ) {\n          return;\n        }\n\n        if (\n          include === \"active\" ||\n          (queryName && queryNamesAndDocs.has(queryName)) ||\n          (document && queryNamesAndDocs.has(document))\n        ) {\n          queries.set(queryId, oq);\n          if (queryName) queryNamesAndDocs.set(queryName, true);\n          if (document) queryNamesAndDocs.set(document, true);\n        }\n      }\n    });\n\n    if (legacyQueryOptions.size) {\n      legacyQueryOptions.forEach((options: QueryOptions) => {\n        // We will be issuing a fresh network request for this query, so we\n        // pre-allocate a new query ID here, using a special prefix to enable\n        // cleaning up these temporary queries later, after fetching.\n        const queryId = makeUniqueId(\"legacyOneTimeQuery\");\n        const queryInfo = this.getQuery(queryId).init({\n          document: options.query,\n          variables: options.variables,\n        });\n        const oq = new ObservableQuery({\n          queryManager: this,\n          queryInfo,\n          options: {\n            ...options,\n            fetchPolicy: \"network-only\",\n          },\n        });\n        invariant(oq.queryId === queryId);\n        queryInfo.setObservableQuery(oq);\n        queries.set(queryId, oq);\n      });\n    }\n\n    if (__DEV__ && queryNamesAndDocs.size) {\n      queryNamesAndDocs.forEach((included, nameOrDoc) => {\n        if (!included) {\n          invariant.warn(\n            typeof nameOrDoc === \"string\" ?\n              `Unknown query named \"%s\" requested in refetchQueries options.include array`\n            : `Unknown query %o requested in refetchQueries options.include array`,\n            nameOrDoc\n          );\n        }\n      });\n    }\n\n    return queries;\n  }\n\n  public reFetchObservableQueries(\n    includeStandby: boolean = false\n  ): Promise<ApolloQueryResult<any>[]> {\n    const observableQueryPromises: Promise<ApolloQueryResult<any>>[] = [];\n\n    this.getObservableQueries(includeStandby ? \"all\" : \"active\").forEach(\n      (observableQuery, queryId) => {\n        const { fetchPolicy } = observableQuery.options;\n        observableQuery.resetLastResults();\n        if (\n          includeStandby ||\n          (fetchPolicy !== \"standby\" && fetchPolicy !== \"cache-only\")\n        ) {\n          observableQueryPromises.push(observableQuery.refetch());\n        }\n        this.getQuery(queryId).setDiff(null);\n      }\n    );\n\n    this.broadcastQueries();\n\n    return Promise.all(observableQueryPromises);\n  }\n\n  public setObservableQuery(observableQuery: ObservableQuery<any, any>) {\n    this.getQuery(observableQuery.queryId).setObservableQuery(observableQuery);\n  }\n\n  public startGraphQLSubscription<T = any>({\n    query,\n    fetchPolicy,\n    errorPolicy = \"none\",\n    variables,\n    context = {},\n  }: SubscriptionOptions): Observable<FetchResult<T>> {\n    query = this.transform(query);\n    variables = this.getVariables(query, variables);\n\n    const makeObservable = (variables: OperationVariables) =>\n      this.getObservableFromLink<T>(query, context, variables).map((result) => {\n        if (fetchPolicy !== \"no-cache\") {\n          // the subscription interface should handle not sending us results we no longer subscribe to.\n          // XXX I don't think we ever send in an object with errors, but we might in the future...\n          if (shouldWriteResult(result, errorPolicy)) {\n            this.cache.write({\n              query,\n              result: result.data,\n              dataId: \"ROOT_SUBSCRIPTION\",\n              variables: variables,\n            });\n          }\n\n          this.broadcastQueries();\n        }\n\n        const hasErrors = graphQLResultHasError(result);\n        const hasProtocolErrors = graphQLResultHasProtocolErrors(result);\n        if (hasErrors || hasProtocolErrors) {\n          const errors: ApolloErrorOptions = {};\n          if (hasErrors) {\n            errors.graphQLErrors = result.errors;\n          }\n          if (hasProtocolErrors) {\n            errors.protocolErrors = result.extensions[PROTOCOL_ERRORS_SYMBOL];\n          }\n\n          // `errorPolicy` is a mechanism for handling GraphQL errors, according\n          // to our documentation, so we throw protocol errors regardless of the\n          // set error policy.\n          if (errorPolicy === \"none\" || hasProtocolErrors) {\n            throw new ApolloError(errors);\n          }\n        }\n\n        if (errorPolicy === \"ignore\") {\n          delete result.errors;\n        }\n\n        return result;\n      });\n\n    if (this.getDocumentInfo(query).hasClientExports) {\n      const observablePromise = this.localState\n        .addExportedVariables(query, variables, context)\n        .then(makeObservable);\n\n      return new Observable<FetchResult<T>>((observer) => {\n        let sub: ObservableSubscription | null = null;\n        observablePromise.then(\n          (observable) => (sub = observable.subscribe(observer)),\n          observer.error\n        );\n        return () => sub && sub.unsubscribe();\n      });\n    }\n\n    return makeObservable(variables);\n  }\n\n  public stopQuery(queryId: string) {\n    this.stopQueryNoBroadcast(queryId);\n    this.broadcastQueries();\n  }\n\n  private stopQueryNoBroadcast(queryId: string) {\n    this.stopQueryInStoreNoBroadcast(queryId);\n    this.removeQuery(queryId);\n  }\n\n  public removeQuery(queryId: string) {\n    // teardown all links\n    // Both `QueryManager.fetchRequest` and `QueryManager.query` create separate promises\n    // that each add their reject functions to fetchCancelFns.\n    // A query created with `QueryManager.query()` could trigger a `QueryManager.fetchRequest`.\n    // The same queryId could have two rejection fns for two promises\n    this.fetchCancelFns.delete(queryId);\n    if (this.queries.has(queryId)) {\n      this.getQuery(queryId).stop();\n      this.queries.delete(queryId);\n    }\n  }\n\n  public broadcastQueries() {\n    if (this.onBroadcast) this.onBroadcast();\n    this.queries.forEach((info) => info.notify());\n  }\n\n  public getLocalState(): LocalState<TStore> {\n    return this.localState;\n  }\n\n  // Use protected instead of private field so\n  // @apollo/experimental-nextjs-app-support can access type info.\n  protected inFlightLinkObservables = new Trie<{\n    observable?: Observable<FetchResult<any>>;\n  }>(false);\n\n  private getObservableFromLink<T = any>(\n    query: DocumentNode,\n    context: any,\n    variables?: OperationVariables,\n    // Prefer context.queryDeduplication if specified.\n    deduplication: boolean = context?.queryDeduplication ??\n      this.queryDeduplication\n  ): Observable<FetchResult<T>> {\n    let observable: Observable<FetchResult<T>> | undefined;\n\n    const { serverQuery, clientQuery } = this.getDocumentInfo(query);\n    if (serverQuery) {\n      const { inFlightLinkObservables, link } = this;\n\n      const operation = {\n        query: serverQuery,\n        variables,\n        operationName: getOperationName(serverQuery) || void 0,\n        context: this.prepareContext({\n          ...context,\n          forceFetch: !deduplication,\n        }),\n      };\n\n      context = operation.context;\n\n      if (deduplication) {\n        const printedServerQuery = print(serverQuery);\n        const varJson = canonicalStringify(variables);\n\n        const entry = inFlightLinkObservables.lookup(\n          printedServerQuery,\n          varJson\n        );\n\n        observable = entry.observable;\n        if (!observable) {\n          const concast = new Concast([\n            execute(link, operation) as Observable<FetchResult<T>>,\n          ]);\n          observable = entry.observable = concast;\n\n          concast.beforeNext(() => {\n            inFlightLinkObservables.remove(printedServerQuery, varJson);\n          });\n        }\n      } else {\n        observable = new Concast([\n          execute(link, operation) as Observable<FetchResult<T>>,\n        ]);\n      }\n    } else {\n      observable = new Concast([Observable.of({ data: {} } as FetchResult<T>)]);\n      context = this.prepareContext(context);\n    }\n\n    if (clientQuery) {\n      observable = asyncMap(observable, (result) => {\n        return this.localState.runResolvers({\n          document: clientQuery,\n          remoteResult: result,\n          context,\n          variables,\n        });\n      });\n    }\n\n    return observable;\n  }\n\n  private getResultsFromLink<TData, TVars extends OperationVariables>(\n    queryInfo: QueryInfo,\n    cacheWriteBehavior: CacheWriteBehavior,\n    options: Pick<\n      WatchQueryOptions<TVars, TData>,\n      \"query\" | \"variables\" | \"context\" | \"fetchPolicy\" | \"errorPolicy\"\n    >\n  ): Observable<ApolloQueryResult<TData>> {\n    const requestId = (queryInfo.lastRequestId = this.generateRequestId());\n\n    // Performing transformForLink here gives this.cache a chance to fill in\n    // missing fragment definitions (for example) before sending this document\n    // through the link chain.\n    const linkDocument = this.cache.transformForLink(options.query);\n\n    return asyncMap(\n      this.getObservableFromLink(\n        linkDocument,\n        options.context,\n        options.variables\n      ),\n\n      (result) => {\n        const graphQLErrors = getGraphQLErrorsFromResult(result);\n        const hasErrors = graphQLErrors.length > 0;\n\n        // If we interrupted this request by calling getResultsFromLink again\n        // with the same QueryInfo object, we ignore the old results.\n        if (requestId >= queryInfo.lastRequestId) {\n          if (hasErrors && options.errorPolicy === \"none\") {\n            // Throwing here effectively calls observer.error.\n            throw queryInfo.markError(\n              new ApolloError({\n                graphQLErrors,\n              })\n            );\n          }\n          // Use linkDocument rather than queryInfo.document so the\n          // operation/fragments used to write the result are the same as the\n          // ones used to obtain it from the link.\n          queryInfo.markResult(\n            result,\n            linkDocument,\n            options,\n            cacheWriteBehavior\n          );\n          queryInfo.markReady();\n        }\n\n        const aqr: ApolloQueryResult<TData> = {\n          data: result.data,\n          loading: false,\n          networkStatus: NetworkStatus.ready,\n        };\n\n        if (hasErrors && options.errorPolicy !== \"ignore\") {\n          aqr.errors = graphQLErrors;\n          aqr.networkStatus = NetworkStatus.error;\n        }\n\n        return aqr;\n      },\n\n      (networkError) => {\n        const error =\n          isApolloError(networkError) ? networkError : (\n            new ApolloError({ networkError })\n          );\n\n        // Avoid storing errors from older interrupted queries.\n        if (requestId >= queryInfo.lastRequestId) {\n          queryInfo.markError(error);\n        }\n\n        throw error;\n      }\n    );\n  }\n\n  private fetchConcastWithInfo<TData, TVars extends OperationVariables>(\n    queryId: string,\n    options: WatchQueryOptions<TVars, TData>,\n    // The initial networkStatus for this fetch, most often\n    // NetworkStatus.loading, but also possibly fetchMore, poll, refetch,\n    // or setVariables.\n    networkStatus = NetworkStatus.loading,\n    query = options.query\n  ): ConcastAndInfo<TData> {\n    const variables = this.getVariables(query, options.variables) as TVars;\n    const queryInfo = this.getQuery(queryId);\n\n    const defaults = this.defaultOptions.watchQuery;\n    let {\n      fetchPolicy = (defaults && defaults.fetchPolicy) || \"cache-first\",\n      errorPolicy = (defaults && defaults.errorPolicy) || \"none\",\n      returnPartialData = false,\n      notifyOnNetworkStatusChange = false,\n      context = {},\n    } = options;\n\n    const normalized = Object.assign({}, options, {\n      query,\n      variables,\n      fetchPolicy,\n      errorPolicy,\n      returnPartialData,\n      notifyOnNetworkStatusChange,\n      context,\n    });\n\n    const fromVariables = (variables: TVars) => {\n      // Since normalized is always a fresh copy of options, it's safe to\n      // modify its properties here, rather than creating yet another new\n      // WatchQueryOptions object.\n      normalized.variables = variables;\n\n      const sourcesWithInfo = this.fetchQueryByPolicy<TData, TVars>(\n        queryInfo,\n        normalized,\n        networkStatus\n      );\n\n      if (\n        // If we're in standby, postpone advancing options.fetchPolicy using\n        // applyNextFetchPolicy.\n        normalized.fetchPolicy !== \"standby\" &&\n        // The \"standby\" policy currently returns [] from fetchQueryByPolicy, so\n        // this is another way to detect when nothing was done/fetched.\n        sourcesWithInfo.sources.length > 0 &&\n        queryInfo.observableQuery\n      ) {\n        queryInfo.observableQuery[\"applyNextFetchPolicy\"](\n          \"after-fetch\",\n          options\n        );\n      }\n\n      return sourcesWithInfo;\n    };\n\n    // This cancel function needs to be set before the concast is created,\n    // in case concast creation synchronously cancels the request.\n    const cleanupCancelFn = () => this.fetchCancelFns.delete(queryId);\n    this.fetchCancelFns.set(queryId, (reason) => {\n      cleanupCancelFn();\n      // This delay ensures the concast variable has been initialized.\n      setTimeout(() => concast.cancel(reason));\n    });\n\n    let concast: Concast<ApolloQueryResult<TData>>,\n      containsDataFromLink: boolean;\n    // If the query has @export(as: ...) directives, then we need to\n    // process those directives asynchronously. When there are no\n    // @export directives (the common case), we deliberately avoid\n    // wrapping the result of this.fetchQueryByPolicy in a Promise,\n    // since the timing of result delivery is (unfortunately) important\n    // for backwards compatibility. TODO This code could be simpler if\n    // we deprecated and removed LocalState.\n    if (this.getDocumentInfo(normalized.query).hasClientExports) {\n      concast = new Concast(\n        this.localState\n          .addExportedVariables(\n            normalized.query,\n            normalized.variables,\n            normalized.context\n          )\n          .then(fromVariables)\n          .then((sourcesWithInfo) => sourcesWithInfo.sources)\n      );\n      // there is just no way we can synchronously get the *right* value here,\n      // so we will assume `true`, which is the behaviour before the bug fix in\n      // #10597. This means that bug is not fixed in that case, and is probably\n      // un-fixable with reasonable effort for the edge case of @export as\n      // directives.\n      containsDataFromLink = true;\n    } else {\n      const sourcesWithInfo = fromVariables(normalized.variables);\n      containsDataFromLink = sourcesWithInfo.fromLink;\n      concast = new Concast(sourcesWithInfo.sources);\n    }\n\n    concast.promise.then(cleanupCancelFn, cleanupCancelFn);\n\n    return {\n      concast,\n      fromLink: containsDataFromLink,\n    };\n  }\n\n  public refetchQueries<TResult>({\n    updateCache,\n    include,\n    optimistic = false,\n    removeOptimistic = optimistic ? makeUniqueId(\"refetchQueries\") : void 0,\n    onQueryUpdated,\n  }: InternalRefetchQueriesOptions<\n    ApolloCache<TStore>,\n    TResult\n  >): InternalRefetchQueriesMap<TResult> {\n    const includedQueriesById = new Map<\n      string,\n      {\n        oq: ObservableQuery<any>;\n        lastDiff?: Cache.DiffResult<any>;\n        diff?: Cache.DiffResult<any>;\n      }\n    >();\n\n    if (include) {\n      this.getObservableQueries(include).forEach((oq, queryId) => {\n        includedQueriesById.set(queryId, {\n          oq,\n          lastDiff: this.getQuery(queryId).getDiff(),\n        });\n      });\n    }\n\n    const results: InternalRefetchQueriesMap<TResult> = new Map();\n\n    if (updateCache) {\n      this.cache.batch({\n        update: updateCache,\n\n        // Since you can perform any combination of cache reads and/or writes in\n        // the cache.batch update function, its optimistic option can be either\n        // a boolean or a string, representing three distinct modes of\n        // operation:\n        //\n        // * false: read/write only the root layer\n        // * true: read/write the topmost layer\n        // * string: read/write a fresh optimistic layer with that ID string\n        //\n        // When typeof optimistic === \"string\", a new optimistic layer will be\n        // temporarily created within cache.batch with that string as its ID. If\n        // we then pass that same string as the removeOptimistic option, we can\n        // make cache.batch immediately remove the optimistic layer after\n        // running the updateCache function, triggering only one broadcast.\n        //\n        // However, the refetchQueries method accepts only true or false for its\n        // optimistic option (not string). We interpret true to mean a temporary\n        // optimistic layer should be created, to allow efficiently rolling back\n        // the effect of the updateCache function, which involves passing a\n        // string instead of true as the optimistic option to cache.batch, when\n        // refetchQueries receives optimistic: true.\n        //\n        // In other words, we are deliberately not supporting the use case of\n        // writing to an *existing* optimistic layer (using the refetchQueries\n        // updateCache function), since that would potentially interfere with\n        // other optimistic updates in progress. Instead, you can read/write\n        // only the root layer by passing optimistic: false to refetchQueries,\n        // or you can read/write a brand new optimistic layer that will be\n        // automatically removed by passing optimistic: true.\n        optimistic: (optimistic && removeOptimistic) || false,\n\n        // The removeOptimistic option can also be provided by itself, even if\n        // optimistic === false, to remove some previously-added optimistic\n        // layer safely and efficiently, like we do in markMutationResult.\n        //\n        // If an explicit removeOptimistic string is provided with optimistic:\n        // true, the removeOptimistic string will determine the ID of the\n        // temporary optimistic layer, in case that ever matters.\n        removeOptimistic,\n\n        onWatchUpdated(watch, diff, lastDiff) {\n          const oq =\n            watch.watcher instanceof QueryInfo && watch.watcher.observableQuery;\n\n          if (oq) {\n            if (onQueryUpdated) {\n              // Since we're about to handle this query now, remove it from\n              // includedQueriesById, in case it was added earlier because of\n              // options.include.\n              includedQueriesById.delete(oq.queryId);\n\n              let result: TResult | boolean | Promise<ApolloQueryResult<any>> =\n                onQueryUpdated(oq, diff, lastDiff);\n\n              if (result === true) {\n                // The onQueryUpdated function requested the default refetching\n                // behavior by returning true.\n                result = oq.refetch();\n              }\n\n              // Record the result in the results Map, as long as onQueryUpdated\n              // did not return false to skip/ignore this result.\n              if (result !== false) {\n                results.set(\n                  oq,\n                  result as InternalRefetchQueriesResult<TResult>\n                );\n              }\n\n              // Allow the default cache broadcast to happen, except when\n              // onQueryUpdated returns false.\n              return result;\n            }\n\n            if (onQueryUpdated !== null) {\n              // If we don't have an onQueryUpdated function, and onQueryUpdated\n              // was not disabled by passing null, make sure this query is\n              // \"included\" like any other options.include-specified query.\n              includedQueriesById.set(oq.queryId, { oq, lastDiff, diff });\n            }\n          }\n        },\n      });\n    }\n\n    if (includedQueriesById.size) {\n      includedQueriesById.forEach(({ oq, lastDiff, diff }, queryId) => {\n        let result:\n          | TResult\n          | boolean\n          | Promise<ApolloQueryResult<any>>\n          | undefined;\n\n        // If onQueryUpdated is provided, we want to use it for all included\n        // queries, even the QueryOptions ones.\n        if (onQueryUpdated) {\n          if (!diff) {\n            const info = oq[\"queryInfo\"];\n            info.reset(); // Force info.getDiff() to read from cache.\n            diff = info.getDiff();\n          }\n          result = onQueryUpdated(oq, diff, lastDiff);\n        }\n\n        // Otherwise, we fall back to refetching.\n        if (!onQueryUpdated || result === true) {\n          result = oq.refetch();\n        }\n\n        if (result !== false) {\n          results.set(oq, result as InternalRefetchQueriesResult<TResult>);\n        }\n\n        if (queryId.indexOf(\"legacyOneTimeQuery\") >= 0) {\n          this.stopQueryNoBroadcast(queryId);\n        }\n      });\n    }\n\n    if (removeOptimistic) {\n      // In case no updateCache callback was provided (so cache.batch was not\n      // called above, and thus did not already remove the optimistic layer),\n      // remove it here. Since this is a no-op when the layer has already been\n      // removed, we do it even if we called cache.batch above, since it's\n      // possible this.cache is an instance of some ApolloCache subclass other\n      // than InMemoryCache, and does not fully support the removeOptimistic\n      // option for cache.batch.\n      this.cache.removeOptimistic(removeOptimistic);\n    }\n\n    return results;\n  }\n\n  private fetchQueryByPolicy<TData, TVars extends OperationVariables>(\n    queryInfo: QueryInfo,\n    {\n      query,\n      variables,\n      fetchPolicy,\n      refetchWritePolicy,\n      errorPolicy,\n      returnPartialData,\n      context,\n      notifyOnNetworkStatusChange,\n    }: WatchQueryOptions<TVars, TData>,\n    // The initial networkStatus for this fetch, most often\n    // NetworkStatus.loading, but also possibly fetchMore, poll, refetch,\n    // or setVariables.\n    networkStatus: NetworkStatus\n  ): SourcesAndInfo<TData> {\n    const oldNetworkStatus = queryInfo.networkStatus;\n\n    queryInfo.init({\n      document: query,\n      variables,\n      networkStatus,\n    });\n\n    const readCache = () => queryInfo.getDiff();\n\n    const resultsFromCache = (\n      diff: Cache.DiffResult<TData>,\n      networkStatus = queryInfo.networkStatus || NetworkStatus.loading\n    ) => {\n      const data = diff.result;\n\n      if (__DEV__ && !returnPartialData && !equal(data, {})) {\n        logMissingFieldErrors(diff.missing);\n      }\n\n      const fromData = (data: TData | undefined) =>\n        Observable.of({\n          data,\n          loading: isNetworkRequestInFlight(networkStatus),\n          networkStatus,\n          ...(diff.complete ? null : { partial: true }),\n        } as ApolloQueryResult<TData>);\n\n      if (data && this.getDocumentInfo(query).hasForcedResolvers) {\n        return this.localState\n          .runResolvers({\n            document: query,\n            remoteResult: { data },\n            context,\n            variables,\n            onlyRunForcedResolvers: true,\n          })\n          .then((resolved) => fromData(resolved.data || void 0));\n      }\n\n      // Resolves https://github.com/apollographql/apollo-client/issues/10317.\n      // If errorPolicy is 'none' and notifyOnNetworkStatusChange is true,\n      // data was incorrectly returned from the cache on refetch:\n      // if diff.missing exists, we should not return cache data.\n      if (\n        errorPolicy === \"none\" &&\n        networkStatus === NetworkStatus.refetch &&\n        Array.isArray(diff.missing)\n      ) {\n        return fromData(void 0);\n      }\n\n      return fromData(data);\n    };\n\n    const cacheWriteBehavior =\n      fetchPolicy === \"no-cache\" ? CacheWriteBehavior.FORBID\n        // Watched queries must opt into overwriting existing data on refetch,\n        // by passing refetchWritePolicy: \"overwrite\" in their WatchQueryOptions.\n      : (\n        networkStatus === NetworkStatus.refetch &&\n        refetchWritePolicy !== \"merge\"\n      ) ?\n        CacheWriteBehavior.OVERWRITE\n      : CacheWriteBehavior.MERGE;\n\n    const resultsFromLink = () =>\n      this.getResultsFromLink<TData, TVars>(queryInfo, cacheWriteBehavior, {\n        query,\n        variables,\n        context,\n        fetchPolicy,\n        errorPolicy,\n      });\n\n    const shouldNotify =\n      notifyOnNetworkStatusChange &&\n      typeof oldNetworkStatus === \"number\" &&\n      oldNetworkStatus !== networkStatus &&\n      isNetworkRequestInFlight(networkStatus);\n\n    switch (fetchPolicy) {\n      default:\n      case \"cache-first\": {\n        const diff = readCache();\n\n        if (diff.complete) {\n          return {\n            fromLink: false,\n            sources: [resultsFromCache(diff, queryInfo.markReady())],\n          };\n        }\n\n        if (returnPartialData || shouldNotify) {\n          return {\n            fromLink: true,\n            sources: [resultsFromCache(diff), resultsFromLink()],\n          };\n        }\n\n        return { fromLink: true, sources: [resultsFromLink()] };\n      }\n\n      case \"cache-and-network\": {\n        const diff = readCache();\n\n        if (diff.complete || returnPartialData || shouldNotify) {\n          return {\n            fromLink: true,\n            sources: [resultsFromCache(diff), resultsFromLink()],\n          };\n        }\n\n        return { fromLink: true, sources: [resultsFromLink()] };\n      }\n\n      case \"cache-only\":\n        return {\n          fromLink: false,\n          sources: [resultsFromCache(readCache(), queryInfo.markReady())],\n        };\n\n      case \"network-only\":\n        if (shouldNotify) {\n          return {\n            fromLink: true,\n            sources: [resultsFromCache(readCache()), resultsFromLink()],\n          };\n        }\n\n        return { fromLink: true, sources: [resultsFromLink()] };\n\n      case \"no-cache\":\n        if (shouldNotify) {\n          return {\n            fromLink: true,\n            // Note that queryInfo.getDiff() for no-cache queries does not call\n            // cache.diff, but instead returns a { complete: false } stub result\n            // when there is no queryInfo.diff already defined.\n            sources: [resultsFromCache(queryInfo.getDiff()), resultsFromLink()],\n          };\n        }\n\n        return { fromLink: true, sources: [resultsFromLink()] };\n\n      case \"standby\":\n        return { fromLink: false, sources: [] };\n    }\n  }\n\n  private getQuery(queryId: string): QueryInfo {\n    if (queryId && !this.queries.has(queryId)) {\n      this.queries.set(queryId, new QueryInfo(this, queryId));\n    }\n    return this.queries.get(queryId)!;\n  }\n\n  private prepareContext(context = {}) {\n    const newContext = this.localState.prepareContext(context);\n    return {\n      ...this.defaultContext,\n      ...newContext,\n      clientAwareness: this.clientAwareness,\n    };\n  }\n}\n\n// Return types used by fetchQueryByPolicy and other private methods above.\ninterface FetchConcastInfo {\n  // Metadata properties that can be returned in addition to the Concast.\n  fromLink: boolean;\n}\ninterface SourcesAndInfo<TData> extends FetchConcastInfo {\n  sources: ConcastSourcesArray<ApolloQueryResult<TData>>;\n}\ninterface ConcastAndInfo<TData> extends FetchConcastInfo {\n  concast: Concast<ApolloQueryResult<TData>>;\n}\n","import type {\n  QueryOptions,\n  WatchQueryOptions,\n  MutationOptions,\n  OperationVariables,\n} from \"../../core/index.js\";\n\nimport { compact } from \"./compact.js\";\n\ntype OptionsUnion<TData, TVariables extends OperationVariables, TContext> =\n  | WatchQueryOptions<TVariables, TData>\n  | QueryOptions<TVariables, TData>\n  | MutationOptions<TData, TVariables, TContext, any>;\n\nexport function mergeOptions<\n  TDefaultOptions extends Partial<OptionsUnion<any, any, any>>,\n  TOptions extends TDefaultOptions,\n>(\n  defaults: TDefaultOptions | Partial<TDefaultOptions> | undefined,\n  options: TOptions | Partial<TOptions>\n): TOptions & TDefaultOptions {\n  return compact(\n    defaults,\n    options,\n    options.variables && {\n      variables: compact({\n        ...(defaults && defaults.variables),\n        ...options.variables,\n      }),\n    }\n  );\n}\n","import { invariant, newInvariantError } from \"../utilities/globals/index.js\";\n\nimport type { ExecutionResult, DocumentNode } from \"graphql\";\n\nimport type { FetchResult, GraphQLRequest } from \"../link/core/index.js\";\nimport { ApolloLink, execute } from \"../link/core/index.js\";\nimport type { ApolloCache, DataProxy, Reference } from \"../cache/index.js\";\nimport type { DocumentTransform, Observable } from \"../utilities/index.js\";\nimport { version } from \"../version.js\";\nimport type { UriFunction } from \"../link/http/index.js\";\nimport { HttpLink } from \"../link/http/index.js\";\n\nimport { QueryManager } from \"./QueryManager.js\";\nimport type { ObservableQuery } from \"./ObservableQuery.js\";\n\nimport type {\n  ApolloQueryResult,\n  DefaultContext,\n  OperationVariables,\n  Resolvers,\n  RefetchQueriesOptions,\n  RefetchQueriesResult,\n  InternalRefetchQueriesResult,\n  RefetchQueriesInclude,\n} from \"./types.js\";\n\nimport type {\n  QueryOptions,\n  WatchQueryOptions,\n  MutationOptions,\n  SubscriptionOptions,\n  WatchQueryFetchPolicy,\n} from \"./watchQueryOptions.js\";\n\nimport type { FragmentMatcher } from \"./LocalState.js\";\nimport { LocalState } from \"./LocalState.js\";\n\nexport interface DefaultOptions {\n  watchQuery?: Partial<WatchQueryOptions<any, any>>;\n  query?: Partial<QueryOptions<any, any>>;\n  mutate?: Partial<MutationOptions<any, any, any>>;\n}\n\nlet hasSuggestedDevtools = false;\n\nexport interface ApolloClientOptions<TCacheShape> {\n  /**\n   * The URI of the GraphQL endpoint that Apollo Client will communicate with.\n   *\n   * One of `uri` or `link` is **required**. If you provide both, `link` takes precedence.\n   */\n  uri?: string | UriFunction;\n  credentials?: string;\n  /**\n   * An object representing headers to include in every HTTP request, such as `{Authorization: 'Bearer 1234'}`\n   *\n   * This value will be ignored when using the `link` option.\n   */\n  headers?: Record<string, string>;\n  /**\n   * You can provide an `ApolloLink` instance to serve as Apollo Client's network layer. For more information, see [Advanced HTTP networking](https://www.apollographql.com/docs/react/networking/advanced-http-networking/).\n   *\n   * One of `uri` or `link` is **required**. If you provide both, `link` takes precedence.\n   */\n  link?: ApolloLink;\n  /**\n   * The cache that Apollo Client should use to store query results locally. The recommended cache is `InMemoryCache`, which is provided by the `@apollo/client` package.\n   *\n   * For more information, see [Configuring the cache](https://www.apollographql.com/docs/react/caching/cache-configuration/).\n   */\n  cache: ApolloCache<TCacheShape>;\n  /**\n   * The time interval (in milliseconds) before Apollo Client force-fetches queries after a server-side render.\n   *\n   * @defaultValue `0` (no delay)\n   */\n  ssrForceFetchDelay?: number;\n  /**\n   * When using Apollo Client for [server-side rendering](https://www.apollographql.com/docs/react/performance/server-side-rendering/), set this to `true` so that the [`getDataFromTree` function](../react/ssr/#getdatafromtree) can work effectively.\n   *\n   * @defaultValue `false`\n   */\n  ssrMode?: boolean;\n  /**\n   * If `true`, the [Apollo Client Devtools](https://www.apollographql.com/docs/react/development-testing/developer-tooling/#apollo-client-devtools) browser extension can connect to Apollo Client.\n   *\n   * The default value is `false` in production and `true` in development (if there is a `window` object).\n   */\n  connectToDevTools?: boolean;\n  /**\n   * If `false`, Apollo Client sends every created query to the server, even if a _completely_ identical query (identical in terms of query string, variable values, and operationName) is already in flight.\n   *\n   * @defaultValue `true`\n   */\n  queryDeduplication?: boolean;\n  /**\n   * Provide this object to set application-wide default values for options you can provide to the `watchQuery`, `query`, and `mutate` functions. See below for an example object.\n   *\n   * See this [example object](https://www.apollographql.com/docs/react/api/core/ApolloClient#example-defaultoptions-object).\n   */\n  defaultOptions?: DefaultOptions;\n  defaultContext?: Partial<DefaultContext>;\n  /**\n   * If `true`, Apollo Client will assume results read from the cache are never mutated by application code, which enables substantial performance optimizations.\n   *\n   * @defaultValue `false`\n   */\n  assumeImmutableResults?: boolean;\n  resolvers?: Resolvers | Resolvers[];\n  typeDefs?: string | string[] | DocumentNode | DocumentNode[];\n  fragmentMatcher?: FragmentMatcher;\n  /**\n   * A custom name (e.g., `iOS`) that identifies this particular client among your set of clients. Apollo Server and Apollo Studio use this property as part of the [client awareness](https://www.apollographql.com/docs/apollo-server/monitoring/metrics#identifying-distinct-clients) feature.\n   */\n  name?: string;\n  /**\n   * A custom version that identifies the current version of this particular client (e.g., `1.2`). Apollo Server and Apollo Studio use this property as part of the [client awareness](https://www.apollographql.com/docs/apollo-server/monitoring/metrics#identifying-distinct-clients) feature.\n   *\n   * This is **not** the version of Apollo Client that you are using, but rather any version string that helps you differentiate between versions of your client.\n   */\n  version?: string;\n  documentTransform?: DocumentTransform;\n}\n\n// Though mergeOptions now resides in @apollo/client/utilities, it was\n// previously declared and exported from this module, and then reexported from\n// @apollo/client/core. Since we need to preserve that API anyway, the easiest\n// solution is to reexport mergeOptions where it was previously declared (here).\nimport { mergeOptions } from \"../utilities/index.js\";\nimport { getApolloClientMemoryInternals } from \"../utilities/caching/getMemoryInternals.js\";\nimport type {\n  WatchFragmentOptions,\n  WatchFragmentResult,\n} from \"../cache/core/cache.js\";\nexport { mergeOptions };\n\n/**\n * This is the primary Apollo Client class. It is used to send GraphQL documents (i.e. queries\n * and mutations) to a GraphQL spec-compliant server over an `ApolloLink` instance,\n * receive results from the server and cache the results in a store. It also delivers updates\n * to GraphQL queries through `Observable` instances.\n */\nexport class ApolloClient<TCacheShape> implements DataProxy {\n  public link: ApolloLink;\n  public cache: ApolloCache<TCacheShape>;\n  public disableNetworkFetches: boolean;\n  public version: string;\n  public queryDeduplication: boolean;\n  public defaultOptions: DefaultOptions;\n  public readonly typeDefs: ApolloClientOptions<TCacheShape>[\"typeDefs\"];\n\n  private queryManager: QueryManager<TCacheShape>;\n  private devToolsHookCb?: Function;\n  private resetStoreCallbacks: Array<() => Promise<any>> = [];\n  private clearStoreCallbacks: Array<() => Promise<any>> = [];\n  private localState: LocalState<TCacheShape>;\n\n  /**\n   * Constructs an instance of `ApolloClient`.\n   *\n   * @example\n   * ```js\n   * import { ApolloClient, InMemoryCache } from '@apollo/client';\n   *\n   * const cache = new InMemoryCache();\n   *\n   * const client = new ApolloClient({\n   *   // Provide required constructor fields\n   *   cache: cache,\n   *   uri: 'http://localhost:4000/',\n   *\n   *   // Provide some optional constructor fields\n   *   name: 'react-web-client',\n   *   version: '1.3',\n   *   queryDeduplication: false,\n   *   defaultOptions: {\n   *     watchQuery: {\n   *       fetchPolicy: 'cache-and-network',\n   *     },\n   *   },\n   * });\n   * ```\n   */\n  constructor(options: ApolloClientOptions<TCacheShape>) {\n    if (!options.cache) {\n      throw newInvariantError(\n        \"To initialize Apollo Client, you must specify a 'cache' property \" +\n          \"in the options object. \\n\" +\n          \"For more information, please visit: https://go.apollo.dev/c/docs\"\n      );\n    }\n\n    const {\n      uri,\n      credentials,\n      headers,\n      cache,\n      documentTransform,\n      ssrMode = false,\n      ssrForceFetchDelay = 0,\n      // Expose the client instance as window.__APOLLO_CLIENT__ and call\n      // onBroadcast in queryManager.broadcastQueries to enable browser\n      // devtools, but disable them by default in production.\n      connectToDevTools = typeof window === \"object\" &&\n        !(window as any).__APOLLO_CLIENT__ &&\n        __DEV__,\n      queryDeduplication = true,\n      defaultOptions,\n      defaultContext,\n      assumeImmutableResults = cache.assumeImmutableResults,\n      resolvers,\n      typeDefs,\n      fragmentMatcher,\n      name: clientAwarenessName,\n      version: clientAwarenessVersion,\n    } = options;\n\n    let { link } = options;\n\n    if (!link) {\n      link =\n        uri ? new HttpLink({ uri, credentials, headers }) : ApolloLink.empty();\n    }\n\n    this.link = link;\n    this.cache = cache;\n    this.disableNetworkFetches = ssrMode || ssrForceFetchDelay > 0;\n    this.queryDeduplication = queryDeduplication;\n    this.defaultOptions = defaultOptions || Object.create(null);\n    this.typeDefs = typeDefs;\n\n    if (ssrForceFetchDelay) {\n      setTimeout(\n        () => (this.disableNetworkFetches = false),\n        ssrForceFetchDelay\n      );\n    }\n\n    this.watchQuery = this.watchQuery.bind(this);\n    this.query = this.query.bind(this);\n    this.mutate = this.mutate.bind(this);\n    this.watchFragment = this.watchFragment.bind(this);\n    this.resetStore = this.resetStore.bind(this);\n    this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this);\n\n    this.version = version;\n\n    this.localState = new LocalState({\n      cache,\n      client: this,\n      resolvers,\n      fragmentMatcher,\n    });\n\n    this.queryManager = new QueryManager({\n      cache: this.cache,\n      link: this.link,\n      defaultOptions: this.defaultOptions,\n      defaultContext,\n      documentTransform,\n      queryDeduplication,\n      ssrMode,\n      clientAwareness: {\n        name: clientAwarenessName!,\n        version: clientAwarenessVersion!,\n      },\n      localState: this.localState,\n      assumeImmutableResults,\n      onBroadcast:\n        connectToDevTools ?\n          () => {\n            if (this.devToolsHookCb) {\n              this.devToolsHookCb({\n                action: {},\n                state: {\n                  queries: this.queryManager.getQueryStore(),\n                  mutations: this.queryManager.mutationStore || {},\n                },\n                dataWithOptimisticResults: this.cache.extract(true),\n              });\n            }\n          }\n        : void 0,\n    });\n\n    if (connectToDevTools) this.connectToDevTools();\n  }\n\n  private connectToDevTools() {\n    if (typeof window === \"object\") {\n      type DevToolsConnector = {\n        push(client: ApolloClient<any>): void;\n      };\n      const windowWithDevTools = window as Window & {\n        [devtoolsSymbol]?: DevToolsConnector;\n        __APOLLO_CLIENT__?: ApolloClient<any>;\n      };\n      const devtoolsSymbol = Symbol.for(\"apollo.devtools\");\n      (windowWithDevTools[devtoolsSymbol] =\n        windowWithDevTools[devtoolsSymbol] || ([] as DevToolsConnector)).push(\n        this\n      );\n      windowWithDevTools.__APOLLO_CLIENT__ = this;\n    }\n\n    /**\n     * Suggest installing the devtools for developers who don't have them\n     */\n    if (!hasSuggestedDevtools && __DEV__) {\n      hasSuggestedDevtools = true;\n      setTimeout(() => {\n        if (\n          typeof window !== \"undefined\" &&\n          window.document &&\n          window.top === window.self &&\n          !(window as any).__APOLLO_DEVTOOLS_GLOBAL_HOOK__\n        ) {\n          const nav = window.navigator;\n          const ua = nav && nav.userAgent;\n          let url: string | undefined;\n          if (typeof ua === \"string\") {\n            if (ua.indexOf(\"Chrome/\") > -1) {\n              url =\n                \"https://chrome.google.com/webstore/detail/\" +\n                \"apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm\";\n            } else if (ua.indexOf(\"Firefox/\") > -1) {\n              url =\n                \"https://addons.mozilla.org/en-US/firefox/addon/apollo-developer-tools/\";\n            }\n          }\n          if (url) {\n            invariant.log(\n              \"Download the Apollo DevTools for a better development \" +\n                \"experience: %s\",\n              url\n            );\n          }\n        }\n      }, 10000);\n    }\n  }\n\n  /**\n   * The `DocumentTransform` used to modify GraphQL documents before a request\n   * is made. If a custom `DocumentTransform` is not provided, this will be the\n   * default document transform.\n   */\n  get documentTransform() {\n    return this.queryManager.documentTransform;\n  }\n\n  /**\n   * Call this method to terminate any active client processes, making it safe\n   * to dispose of this `ApolloClient` instance.\n   */\n  public stop() {\n    this.queryManager.stop();\n  }\n\n  /**\n   * This watches the cache store of the query according to the options specified and\n   * returns an `ObservableQuery`. We can subscribe to this `ObservableQuery` and\n   * receive updated results through an observer when the cache store changes.\n   *\n   * Note that this method is not an implementation of GraphQL subscriptions. Rather,\n   * it uses Apollo's store in order to reactively deliver updates to your query results.\n   *\n   * For example, suppose you call watchQuery on a GraphQL query that fetches a person's\n   * first and last name and this person has a particular object identifier, provided by\n   * dataIdFromObject. Later, a different query fetches that same person's\n   * first and last name and the first name has now changed. Then, any observers associated\n   * with the results of the first query will be updated with a new result object.\n   *\n   * Note that if the cache does not change, the subscriber will *not* be notified.\n   *\n   * See [here](https://medium.com/apollo-stack/the-concepts-of-graphql-bc68bd819be3#.3mb0cbcmc) for\n   * a description of store reactivity.\n   */\n  public watchQuery<\n    T = any,\n    TVariables extends OperationVariables = OperationVariables,\n  >(options: WatchQueryOptions<TVariables, T>): ObservableQuery<T, TVariables> {\n    if (this.defaultOptions.watchQuery) {\n      options = mergeOptions(this.defaultOptions.watchQuery, options);\n    }\n\n    // XXX Overwriting options is probably not the best way to do this long term...\n    if (\n      this.disableNetworkFetches &&\n      (options.fetchPolicy === \"network-only\" ||\n        options.fetchPolicy === \"cache-and-network\")\n    ) {\n      options = { ...options, fetchPolicy: \"cache-first\" };\n    }\n\n    return this.queryManager.watchQuery<T, TVariables>(options);\n  }\n\n  /**\n   * This resolves a single query according to the options specified and\n   * returns a `Promise` which is either resolved with the resulting data\n   * or rejected with an error.\n   *\n   * @param options - An object of type `QueryOptions` that allows us to\n   * describe how this query should be treated e.g. whether it should hit the\n   * server at all or just resolve from the cache, etc.\n   */\n  public query<\n    T = any,\n    TVariables extends OperationVariables = OperationVariables,\n  >(options: QueryOptions<TVariables, T>): Promise<ApolloQueryResult<T>> {\n    if (this.defaultOptions.query) {\n      options = mergeOptions(this.defaultOptions.query, options);\n    }\n\n    invariant(\n      (options.fetchPolicy as WatchQueryFetchPolicy) !== \"cache-and-network\",\n      \"The cache-and-network fetchPolicy does not work with client.query, because \" +\n        \"client.query can only return a single result. Please use client.watchQuery \" +\n        \"to receive multiple results from the cache and the network, or consider \" +\n        \"using a different fetchPolicy, such as cache-first or network-only.\"\n    );\n\n    if (this.disableNetworkFetches && options.fetchPolicy === \"network-only\") {\n      options = { ...options, fetchPolicy: \"cache-first\" };\n    }\n\n    return this.queryManager.query<T, TVariables>(options);\n  }\n\n  /**\n   * This resolves a single mutation according to the options specified and returns a\n   * Promise which is either resolved with the resulting data or rejected with an\n   * error. In some cases both `data` and `errors` might be undefined, for example\n   * when `errorPolicy` is set to `'ignore'`.\n   *\n   * It takes options as an object with the following keys and values:\n   */\n  public mutate<\n    TData = any,\n    TVariables extends OperationVariables = OperationVariables,\n    TContext extends Record<string, any> = DefaultContext,\n    TCache extends ApolloCache<any> = ApolloCache<any>,\n  >(\n    options: MutationOptions<TData, TVariables, TContext>\n  ): Promise<FetchResult<TData>> {\n    if (this.defaultOptions.mutate) {\n      options = mergeOptions(this.defaultOptions.mutate, options);\n    }\n    return this.queryManager.mutate<TData, TVariables, TContext, TCache>(\n      options\n    );\n  }\n\n  /**\n   * This subscribes to a graphql subscription according to the options specified and returns an\n   * `Observable` which either emits received data or an error.\n   */\n  public subscribe<\n    T = any,\n    TVariables extends OperationVariables = OperationVariables,\n  >(options: SubscriptionOptions<TVariables, T>): Observable<FetchResult<T>> {\n    return this.queryManager.startGraphQLSubscription<T>(options);\n  }\n\n  /**\n   * Tries to read some data from the store in the shape of the provided\n   * GraphQL query without making a network request. This method will start at\n   * the root query. To start at a specific id returned by `dataIdFromObject`\n   * use `readFragment`.\n   *\n   * @param optimistic - Set to `true` to allow `readQuery` to return\n   * optimistic results. Is `false` by default.\n   */\n  public readQuery<T = any, TVariables = OperationVariables>(\n    options: DataProxy.Query<TVariables, T>,\n    optimistic: boolean = false\n  ): T | null {\n    return this.cache.readQuery<T, TVariables>(options, optimistic);\n  }\n\n  /**\n   * Watches the cache store of the fragment according to the options specified\n   * and returns an `Observable`. We can subscribe to this\n   * `Observable` and receive updated results through an\n   * observer when the cache store changes.\n   *\n   * You must pass in a GraphQL document with a single fragment or a document\n   * with multiple fragments that represent what you are reading. If you pass\n   * in a document with multiple fragments then you must also specify a\n   * `fragmentName`.\n   *\n   * @since 3.10.0\n   * @param options - An object of type `WatchFragmentOptions` that allows\n   * the cache to identify the fragment and optionally specify whether to react\n   * to optimistic updates.\n   */\n\n  public watchFragment<\n    TFragmentData = unknown,\n    TVariables = OperationVariables,\n  >(\n    options: WatchFragmentOptions<TFragmentData, TVariables>\n  ): Observable<WatchFragmentResult<TFragmentData>> {\n    return this.cache.watchFragment<TFragmentData, TVariables>(options);\n  }\n\n  /**\n   * Tries to read some data from the store in the shape of the provided\n   * GraphQL fragment without making a network request. This method will read a\n   * GraphQL fragment from any arbitrary id that is currently cached, unlike\n   * `readQuery` which will only read from the root query.\n   *\n   * You must pass in a GraphQL document with a single fragment or a document\n   * with multiple fragments that represent what you are reading. If you pass\n   * in a document with multiple fragments then you must also specify a\n   * `fragmentName`.\n   *\n   * @param optimistic - Set to `true` to allow `readFragment` to return\n   * optimistic results. Is `false` by default.\n   */\n  public readFragment<T = any, TVariables = OperationVariables>(\n    options: DataProxy.Fragment<TVariables, T>,\n    optimistic: boolean = false\n  ): T | null {\n    return this.cache.readFragment<T, TVariables>(options, optimistic);\n  }\n\n  /**\n   * Writes some data in the shape of the provided GraphQL query directly to\n   * the store. This method will start at the root query. To start at a\n   * specific id returned by `dataIdFromObject` then use `writeFragment`.\n   */\n  public writeQuery<TData = any, TVariables = OperationVariables>(\n    options: DataProxy.WriteQueryOptions<TData, TVariables>\n  ): Reference | undefined {\n    const ref = this.cache.writeQuery<TData, TVariables>(options);\n\n    if (options.broadcast !== false) {\n      this.queryManager.broadcastQueries();\n    }\n\n    return ref;\n  }\n\n  /**\n   * Writes some data in the shape of the provided GraphQL fragment directly to\n   * the store. This method will write to a GraphQL fragment from any arbitrary\n   * id that is currently cached, unlike `writeQuery` which will only write\n   * from the root query.\n   *\n   * You must pass in a GraphQL document with a single fragment or a document\n   * with multiple fragments that represent what you are writing. If you pass\n   * in a document with multiple fragments then you must also specify a\n   * `fragmentName`.\n   */\n  public writeFragment<TData = any, TVariables = OperationVariables>(\n    options: DataProxy.WriteFragmentOptions<TData, TVariables>\n  ): Reference | undefined {\n    const ref = this.cache.writeFragment<TData, TVariables>(options);\n\n    if (options.broadcast !== false) {\n      this.queryManager.broadcastQueries();\n    }\n\n    return ref;\n  }\n\n  public __actionHookForDevTools(cb: () => any) {\n    this.devToolsHookCb = cb;\n  }\n\n  public __requestRaw(payload: GraphQLRequest): Observable<ExecutionResult> {\n    return execute(this.link, payload);\n  }\n\n  /**\n   * Resets your entire store by clearing out your cache and then re-executing\n   * all of your active queries. This makes it so that you may guarantee that\n   * there is no data left in your store from a time before you called this\n   * method.\n   *\n   * `resetStore()` is useful when your user just logged out. You’ve removed the\n   * user session, and you now want to make sure that any references to data you\n   * might have fetched while the user session was active is gone.\n   *\n   * It is important to remember that `resetStore()` *will* refetch any active\n   * queries. This means that any components that might be mounted will execute\n   * their queries again using your network interface. If you do not want to\n   * re-execute any queries then you should make sure to stop watching any\n   * active queries.\n   */\n  public resetStore(): Promise<ApolloQueryResult<any>[] | null> {\n    return Promise.resolve()\n      .then(() =>\n        this.queryManager.clearStore({\n          discardWatches: false,\n        })\n      )\n      .then(() => Promise.all(this.resetStoreCallbacks.map((fn) => fn())))\n      .then(() => this.reFetchObservableQueries());\n  }\n\n  /**\n   * Remove all data from the store. Unlike `resetStore`, `clearStore` will\n   * not refetch any active queries.\n   */\n  public clearStore(): Promise<any[]> {\n    return Promise.resolve()\n      .then(() =>\n        this.queryManager.clearStore({\n          discardWatches: true,\n        })\n      )\n      .then(() => Promise.all(this.clearStoreCallbacks.map((fn) => fn())));\n  }\n\n  /**\n   * Allows callbacks to be registered that are executed when the store is\n   * reset. `onResetStore` returns an unsubscribe function that can be used\n   * to remove registered callbacks.\n   */\n  public onResetStore(cb: () => Promise<any>): () => void {\n    this.resetStoreCallbacks.push(cb);\n    return () => {\n      this.resetStoreCallbacks = this.resetStoreCallbacks.filter(\n        (c) => c !== cb\n      );\n    };\n  }\n\n  /**\n   * Allows callbacks to be registered that are executed when the store is\n   * cleared. `onClearStore` returns an unsubscribe function that can be used\n   * to remove registered callbacks.\n   */\n  public onClearStore(cb: () => Promise<any>): () => void {\n    this.clearStoreCallbacks.push(cb);\n    return () => {\n      this.clearStoreCallbacks = this.clearStoreCallbacks.filter(\n        (c) => c !== cb\n      );\n    };\n  }\n\n  /**\n   * Refetches all of your active queries.\n   *\n   * `reFetchObservableQueries()` is useful if you want to bring the client back to proper state in case of a network outage\n   *\n   * It is important to remember that `reFetchObservableQueries()` *will* refetch any active\n   * queries. This means that any components that might be mounted will execute\n   * their queries again using your network interface. If you do not want to\n   * re-execute any queries then you should make sure to stop watching any\n   * active queries.\n   * Takes optional parameter `includeStandby` which will include queries in standby-mode when refetching.\n   */\n  public reFetchObservableQueries(\n    includeStandby?: boolean\n  ): Promise<ApolloQueryResult<any>[]> {\n    return this.queryManager.reFetchObservableQueries(includeStandby);\n  }\n\n  /**\n   * Refetches specified active queries. Similar to \"reFetchObservableQueries()\" but with a specific list of queries.\n   *\n   * `refetchQueries()` is useful for use cases to imperatively refresh a selection of queries.\n   *\n   * It is important to remember that `refetchQueries()` *will* refetch specified active\n   * queries. This means that any components that might be mounted will execute\n   * their queries again using your network interface. If you do not want to\n   * re-execute any queries then you should make sure to stop watching any\n   * active queries.\n   */\n  public refetchQueries<\n    TCache extends ApolloCache<any> = ApolloCache<TCacheShape>,\n    TResult = Promise<ApolloQueryResult<any>>,\n  >(\n    options: RefetchQueriesOptions<TCache, TResult>\n  ): RefetchQueriesResult<TResult> {\n    const map = this.queryManager.refetchQueries(\n      options as RefetchQueriesOptions<ApolloCache<TCacheShape>, TResult>\n    );\n    const queries: ObservableQuery<any>[] = [];\n    const results: InternalRefetchQueriesResult<TResult>[] = [];\n\n    map.forEach((result, obsQuery) => {\n      queries.push(obsQuery);\n      results.push(result);\n    });\n\n    const result = Promise.all<TResult>(\n      results as TResult[]\n    ) as RefetchQueriesResult<TResult>;\n\n    // In case you need the raw results immediately, without awaiting\n    // Promise.all(results):\n    result.queries = queries;\n    result.results = results;\n\n    // If you decide to ignore the result Promise because you're using\n    // result.queries and result.results instead, you shouldn't have to worry\n    // about preventing uncaught rejections for the Promise.all result.\n    result.catch((error) => {\n      invariant.debug(\n        `In client.refetchQueries, Promise.all promise rejected with error %o`,\n        error\n      );\n    });\n\n    return result;\n  }\n\n  /**\n   * Get all currently active `ObservableQuery` objects, in a `Map` keyed by\n   * query ID strings.\n   *\n   * An \"active\" query is one that has observers and a `fetchPolicy` other than\n   * \"standby\" or \"cache-only\".\n   *\n   * You can include all `ObservableQuery` objects (including the inactive ones)\n   * by passing \"all\" instead of \"active\", or you can include just a subset of\n   * active queries by passing an array of query names or DocumentNode objects.\n   */\n  public getObservableQueries(\n    include: RefetchQueriesInclude = \"active\"\n  ): Map<string, ObservableQuery<any>> {\n    return this.queryManager.getObservableQueries(include);\n  }\n\n  /**\n   * Exposes the cache's complete state, in a serializable format for later restoration.\n   */\n  public extract(optimistic?: boolean): TCacheShape {\n    return this.cache.extract(optimistic);\n  }\n\n  /**\n   * Replaces existing state in the cache (if any) with the values expressed by\n   * `serializedState`.\n   *\n   * Called when hydrating a cache (server side rendering, or offline storage),\n   * and also (potentially) during hot reloads.\n   */\n  public restore(serializedState: TCacheShape): ApolloCache<TCacheShape> {\n    return this.cache.restore(serializedState);\n  }\n\n  /**\n   * Add additional local resolvers.\n   */\n  public addResolvers(resolvers: Resolvers | Resolvers[]) {\n    this.localState.addResolvers(resolvers);\n  }\n\n  /**\n   * Set (override existing) local resolvers.\n   */\n  public setResolvers(resolvers: Resolvers | Resolvers[]) {\n    this.localState.setResolvers(resolvers);\n  }\n\n  /**\n   * Get all registered local resolvers.\n   */\n  public getResolvers() {\n    return this.localState.getResolvers();\n  }\n\n  /**\n   * Set a custom local state fragment matcher.\n   */\n  public setLocalStateFragmentMatcher(fragmentMatcher: FragmentMatcher) {\n    this.localState.setFragmentMatcher(fragmentMatcher);\n  }\n\n  /**\n   * Define a new ApolloLink (or link chain) that Apollo Client will use.\n   */\n  public setLink(newLink: ApolloLink) {\n    this.link = this.queryManager.link = newLink;\n  }\n\n  public get defaultContext() {\n    return this.queryManager.defaultContext;\n  }\n\n  /**\n   * @experimental\n   * This is not a stable API - it is used in development builds to expose\n   * information to the DevTools.\n   * Use at your own risk!\n   * For more details, see [Memory Management](https://www.apollographql.com/docs/react/caching/memory-management/#measuring-cache-usage)\n   *\n   * @example\n   * ```ts\n   * console.log(client.getMemoryInternals())\n   * ```\n   * Logs output in the following JSON format:\n   * @example\n   * ```json\n   *{\n   *  limits:     {\n   *    parser: 1000,\n   *    canonicalStringify: 1000,\n   *    print: 2000,\n   *    'documentTransform.cache': 2000,\n   *    'queryManager.getDocumentInfo': 2000,\n   *    'PersistedQueryLink.persistedQueryHashes': 2000,\n   *    'fragmentRegistry.transform': 2000,\n   *    'fragmentRegistry.lookup': 1000,\n   *    'fragmentRegistry.findFragmentSpreads': 4000,\n   *    'cache.fragmentQueryDocuments': 1000,\n   *    'removeTypenameFromVariables.getVariableDefinitions': 2000,\n   *    'inMemoryCache.maybeBroadcastWatch': 5000,\n   *    'inMemoryCache.executeSelectionSet': 10000,\n   *    'inMemoryCache.executeSubSelectedArray': 5000\n   *  },\n   *  sizes: {\n   *    parser: 26,\n   *    canonicalStringify: 4,\n   *    print: 14,\n   *    addTypenameDocumentTransform: [\n   *      {\n   *        cache: 14,\n   *      },\n   *    ],\n   *    queryManager: {\n   *      getDocumentInfo: 14,\n   *      documentTransforms: [\n   *        {\n   *          cache: 14,\n   *        },\n   *        {\n   *          cache: 14,\n   *        },\n   *      ],\n   *    },\n   *    fragmentRegistry: {\n   *      findFragmentSpreads: 34,\n   *      lookup: 20,\n   *      transform: 14,\n   *    },\n   *    cache: {\n   *      fragmentQueryDocuments: 22,\n   *    },\n   *    inMemoryCache: {\n   *      executeSelectionSet: 4345,\n   *      executeSubSelectedArray: 1206,\n   *      maybeBroadcastWatch: 32,\n   *    },\n   *    links: [\n   *      {\n   *        PersistedQueryLink: {\n   *          persistedQueryHashes: 14,\n   *        },\n   *      },\n   *      {\n   *        removeTypenameFromVariables: {\n   *          getVariableDefinitions: 14,\n   *        },\n   *      },\n   *    ],\n   *  },\n   * }\n   *```\n   */\n  public getMemoryInternals?: typeof getApolloClientMemoryInternals;\n}\n\nif (__DEV__) {\n  ApolloClient.prototype.getMemoryInternals = getApolloClientMemoryInternals;\n}\n","import { ApolloLink } from \"./ApolloLink.js\";\n\nexport const from = ApolloLink.from;\n","import type { DocumentNode } from \"graphql\";\nimport { wrap } from \"optimism\";\n\nimport type {\n  StoreObject,\n  Reference,\n  DeepPartial,\n} from \"../../utilities/index.js\";\nimport {\n  Observable,\n  cacheSizes,\n  defaultCacheSizes,\n  getFragmentQueryDocument,\n  mergeDeepArray,\n} from \"../../utilities/index.js\";\nimport type { DataProxy } from \"./types/DataProxy.js\";\nimport type { Cache } from \"./types/Cache.js\";\nimport { WeakCache } from \"@wry/caches\";\nimport { getApolloCacheMemoryInternals } from \"../../utilities/caching/getMemoryInternals.js\";\nimport type {\n  OperationVariables,\n  TypedDocumentNode,\n} from \"../../core/types.js\";\nimport { equal } from \"@wry/equality\";\nimport type { MissingTree } from \"./types/common.js\";\n\nexport type Transaction<T> = (c: ApolloCache<T>) => void;\n\n/**\n * Watched fragment options.\n */\nexport interface WatchFragmentOptions<TData, TVars> {\n  /**\n   * A GraphQL fragment document parsed into an AST with the `gql`\n   * template literal.\n   *\n   * @docGroup 1. Required options\n   */\n  fragment: DocumentNode | TypedDocumentNode<TData, TVars>;\n  /**\n   * An object containing a `__typename` and primary key fields\n   * (such as `id`) identifying the entity object from which the fragment will\n   * be retrieved, or a `{ __ref: \"...\" }` reference, or a `string` ID\n   * (uncommon).\n   *\n   * @docGroup 1. Required options\n   */\n  from: StoreObject | Reference | string;\n  /**\n   * Any variables that the GraphQL fragment may depend on.\n   *\n   * @docGroup 2. Cache options\n   */\n  variables?: TVars;\n  /**\n   * The name of the fragment defined in the fragment document.\n   *\n   * Required if the fragment document includes more than one fragment,\n   * optional otherwise.\n   *\n   * @docGroup 2. Cache options\n   */\n  fragmentName?: string;\n  /**\n   * If `true`, `watchFragment` returns optimistic results.\n   *\n   * The default value is `true`.\n   *\n   * @docGroup 2. Cache options\n   */\n  optimistic?: boolean;\n  /**\n   * @deprecated\n   * Using `canonizeResults` can result in memory leaks so we generally do not\n   * recommend using this option anymore.\n   * A future version of Apollo Client will contain a similar feature.\n   *\n   * Whether to canonize cache results before returning them. Canonization\n   * takes some extra time, but it speeds up future deep equality comparisons.\n   * Defaults to false.\n   */\n  canonizeResults?: boolean;\n}\n\n/**\n * Watched fragment results.\n */\nexport type WatchFragmentResult<TData> =\n  | {\n      data: TData;\n      complete: true;\n      missing?: never;\n    }\n  | {\n      data: DeepPartial<TData>;\n      complete: false;\n      missing: MissingTree;\n    };\n\nexport abstract class ApolloCache<TSerialized> implements DataProxy {\n  public readonly assumeImmutableResults: boolean = false;\n\n  // required to implement\n  // core API\n  public abstract read<TData = any, TVariables = any>(\n    query: Cache.ReadOptions<TVariables, TData>\n  ): TData | null;\n  public abstract write<TData = any, TVariables = any>(\n    write: Cache.WriteOptions<TData, TVariables>\n  ): Reference | undefined;\n  public abstract diff<T>(query: Cache.DiffOptions): Cache.DiffResult<T>;\n  public abstract watch<TData = any, TVariables = any>(\n    watch: Cache.WatchOptions<TData, TVariables>\n  ): () => void;\n\n  // Empty the cache and restart all current watches (unless\n  // options.discardWatches is true).\n  public abstract reset(options?: Cache.ResetOptions): Promise<void>;\n\n  // Remove whole objects from the cache by passing just options.id, or\n  // specific fields by passing options.field and/or options.args. If no\n  // options.args are provided, all fields matching options.field (even\n  // those with arguments) will be removed. Returns true iff any data was\n  // removed from the cache.\n  public abstract evict(options: Cache.EvictOptions): boolean;\n\n  // initializer / offline / ssr API\n  /**\n   * Replaces existing state in the cache (if any) with the values expressed by\n   * `serializedState`.\n   *\n   * Called when hydrating a cache (server side rendering, or offline storage),\n   * and also (potentially) during hot reloads.\n   */\n  public abstract restore(\n    serializedState: TSerialized\n  ): ApolloCache<TSerialized>;\n\n  /**\n   * Exposes the cache's complete state, in a serializable format for later restoration.\n   */\n  public abstract extract(optimistic?: boolean): TSerialized;\n\n  // Optimistic API\n\n  public abstract removeOptimistic(id: string): void;\n\n  // Transactional API\n\n  // The batch method is intended to replace/subsume both performTransaction\n  // and recordOptimisticTransaction, but performTransaction came first, so we\n  // provide a default batch implementation that's just another way of calling\n  // performTransaction. Subclasses of ApolloCache (such as InMemoryCache) can\n  // override the batch method to do more interesting things with its options.\n  public batch<U>(options: Cache.BatchOptions<this, U>): U {\n    const optimisticId =\n      typeof options.optimistic === \"string\" ? options.optimistic\n      : options.optimistic === false ? null\n      : void 0;\n    let updateResult: U;\n    this.performTransaction(\n      () => (updateResult = options.update(this)),\n      optimisticId\n    );\n    return updateResult!;\n  }\n\n  public abstract performTransaction(\n    transaction: Transaction<TSerialized>,\n    // Although subclasses may implement recordOptimisticTransaction\n    // however they choose, the default implementation simply calls\n    // performTransaction with a string as the second argument, allowing\n    // performTransaction to handle both optimistic and non-optimistic\n    // (broadcast-batching) transactions. Passing null for optimisticId is\n    // also allowed, and indicates that performTransaction should apply\n    // the transaction non-optimistically (ignoring optimistic data).\n    optimisticId?: string | null\n  ): void;\n\n  public recordOptimisticTransaction(\n    transaction: Transaction<TSerialized>,\n    optimisticId: string\n  ) {\n    this.performTransaction(transaction, optimisticId);\n  }\n\n  // Optional API\n\n  // Called once per input document, allowing the cache to make static changes\n  // to the query, such as adding __typename fields.\n  public transformDocument(document: DocumentNode): DocumentNode {\n    return document;\n  }\n\n  // Called before each ApolloLink request, allowing the cache to make dynamic\n  // changes to the query, such as filling in missing fragment definitions.\n  public transformForLink(document: DocumentNode): DocumentNode {\n    return document;\n  }\n\n  public identify(object: StoreObject | Reference): string | undefined {\n    return;\n  }\n\n  public gc(): string[] {\n    return [];\n  }\n\n  public modify<Entity extends Record<string, any> = Record<string, any>>(\n    options: Cache.ModifyOptions<Entity>\n  ): boolean {\n    return false;\n  }\n\n  // DataProxy API\n  public readQuery<QueryType, TVariables = any>(\n    options: Cache.ReadQueryOptions<QueryType, TVariables>,\n    optimistic = !!options.optimistic\n  ): QueryType | null {\n    return this.read({\n      ...options,\n      rootId: options.id || \"ROOT_QUERY\",\n      optimistic,\n    });\n  }\n\n  /** {@inheritDoc @apollo/client!ApolloClient#watchFragment:member(1)} */\n  public watchFragment<TData = any, TVars = OperationVariables>(\n    options: WatchFragmentOptions<TData, TVars>\n  ): Observable<WatchFragmentResult<TData>> {\n    const { fragment, fragmentName, from, optimistic = true } = options;\n\n    const diffOptions: Cache.DiffOptions<TData, TVars> = {\n      returnPartialData: true,\n      id: typeof from === \"string\" ? from : this.identify(from),\n      query: this.getFragmentDoc(fragment, fragmentName),\n      optimistic,\n    };\n\n    let latestDiff: DataProxy.DiffResult<TData> | undefined;\n\n    return new Observable((observer) => {\n      return this.watch<TData, TVars>({\n        ...diffOptions,\n        immediate: true,\n        query: this.getFragmentDoc(fragment, fragmentName),\n        callback(diff) {\n          if (equal(diff, latestDiff)) {\n            return;\n          }\n\n          const result = {\n            data: diff.result as DeepPartial<TData>,\n            complete: !!diff.complete,\n          } as WatchFragmentResult<TData>;\n\n          if (diff.missing) {\n            result.missing = mergeDeepArray(\n              diff.missing.map((error) => error.missing)\n            );\n          }\n\n          latestDiff = diff;\n          observer.next(result);\n        },\n      });\n    });\n  }\n\n  // Make sure we compute the same (===) fragment query document every\n  // time we receive the same fragment in readFragment.\n  private getFragmentDoc = wrap(getFragmentQueryDocument, {\n    max:\n      cacheSizes[\"cache.fragmentQueryDocuments\"] ||\n      defaultCacheSizes[\"cache.fragmentQueryDocuments\"],\n    cache: WeakCache,\n  });\n\n  public readFragment<FragmentType, TVariables = any>(\n    options: Cache.ReadFragmentOptions<FragmentType, TVariables>,\n    optimistic = !!options.optimistic\n  ): FragmentType | null {\n    return this.read({\n      ...options,\n      query: this.getFragmentDoc(options.fragment, options.fragmentName),\n      rootId: options.id,\n      optimistic,\n    });\n  }\n\n  public writeQuery<TData = any, TVariables = any>({\n    id,\n    data,\n    ...options\n  }: Cache.WriteQueryOptions<TData, TVariables>): Reference | undefined {\n    return this.write(\n      Object.assign(options, {\n        dataId: id || \"ROOT_QUERY\",\n        result: data,\n      })\n    );\n  }\n\n  public writeFragment<TData = any, TVariables = any>({\n    id,\n    data,\n    fragment,\n    fragmentName,\n    ...options\n  }: Cache.WriteFragmentOptions<TData, TVariables>): Reference | undefined {\n    return this.write(\n      Object.assign(options, {\n        query: this.getFragmentDoc(fragment, fragmentName),\n        dataId: id,\n        result: data,\n      })\n    );\n  }\n\n  public updateQuery<TData = any, TVariables = any>(\n    options: Cache.UpdateQueryOptions<TData, TVariables>,\n    update: (data: TData | null) => TData | null | void\n  ): TData | null {\n    return this.batch({\n      update(cache) {\n        const value = cache.readQuery<TData, TVariables>(options);\n        const data = update(value);\n        if (data === void 0 || data === null) return value;\n        cache.writeQuery<TData, TVariables>({ ...options, data });\n        return data;\n      },\n    });\n  }\n\n  public updateFragment<TData = any, TVariables = any>(\n    options: Cache.UpdateFragmentOptions<TData, TVariables>,\n    update: (data: TData | null) => TData | null | void\n  ): TData | null {\n    return this.batch({\n      update(cache) {\n        const value = cache.readFragment<TData, TVariables>(options);\n        const data = update(value);\n        if (data === void 0 || data === null) return value;\n        cache.writeFragment<TData, TVariables>({ ...options, data });\n        return data;\n      },\n    });\n  }\n\n  /**\n   * @experimental\n   * @internal\n   * This is not a stable API - it is used in development builds to expose\n   * information to the DevTools.\n   * Use at your own risk!\n   */\n  public getMemoryInternals?: typeof getApolloCacheMemoryInternals;\n}\n\nif (__DEV__) {\n  ApolloCache.prototype.getMemoryInternals = getApolloCacheMemoryInternals;\n}\n","import type { DocumentNode, FieldNode } from \"graphql\";\n\nimport type {\n  Reference,\n  StoreObject,\n  StoreValue,\n  isReference,\n  AsStoreObject,\n} from \"../../../utilities/index.js\";\n\nimport type { StorageType } from \"../../inmemory/policies.js\";\n\n// The Readonly<T> type only really works for object types, since it marks\n// all of the object's properties as readonly, but there are many cases when\n// a generic type parameter like TExisting might be a string or some other\n// primitive type, in which case we need to avoid wrapping it with Readonly.\n// SafeReadonly<string> collapses to just string, which makes string\n// assignable to SafeReadonly<any>, whereas string is not assignable to\n// Readonly<any>, somewhat surprisingly.\nexport type SafeReadonly<T> = T extends object ? Readonly<T> : T;\n\nexport type MissingTree =\n  | string\n  | {\n      readonly [key: string]: MissingTree;\n    };\n\nexport class MissingFieldError extends Error {\n  constructor(\n    public readonly message: string,\n    public readonly path: MissingTree | Array<string | number>,\n    public readonly query: DocumentNode,\n    public readonly variables?: Record<string, any>\n  ) {\n    // 'Error' breaks prototype chain here\n    super(message);\n\n    if (Array.isArray(this.path)) {\n      this.missing = this.message;\n      for (let i = this.path.length - 1; i >= 0; --i) {\n        this.missing = { [this.path[i]]: this.missing };\n      }\n    } else {\n      this.missing = this.path;\n    }\n\n    // We're not using `Object.setPrototypeOf` here as it isn't fully supported\n    // on Android (see issue #3236).\n    (this as any).__proto__ = MissingFieldError.prototype;\n  }\n\n  public readonly missing: MissingTree;\n}\n\nexport interface FieldSpecifier {\n  typename?: string;\n  fieldName: string;\n  field?: FieldNode;\n  args?: Record<string, any>;\n  variables?: Record<string, any>;\n}\n\nexport interface ReadFieldOptions extends FieldSpecifier {\n  from?: StoreObject | Reference;\n}\n\nexport interface ReadFieldFunction {\n  <V = StoreValue>(options: ReadFieldOptions): SafeReadonly<V> | undefined;\n  <V = StoreValue>(\n    fieldName: string,\n    from?: StoreObject | Reference\n  ): SafeReadonly<V> | undefined;\n}\n\nexport type ToReferenceFunction = (\n  objOrIdOrRef: StoreObject | string | Reference,\n  mergeIntoStore?: boolean\n) => Reference | undefined;\n\nexport type CanReadFunction = (value: StoreValue) => boolean;\n\ndeclare const _deleteModifier: unique symbol;\nexport interface DeleteModifier {\n  [_deleteModifier]: true;\n}\ndeclare const _invalidateModifier: unique symbol;\nexport interface InvalidateModifier {\n  [_invalidateModifier]: true;\n}\ndeclare const _ignoreModifier: unique symbol;\nexport interface IgnoreModifier {\n  [_ignoreModifier]: true;\n}\n\nexport type ModifierDetails = {\n  DELETE: DeleteModifier;\n  INVALIDATE: InvalidateModifier;\n  fieldName: string;\n  storeFieldName: string;\n  readField: ReadFieldFunction;\n  canRead: CanReadFunction;\n  isReference: typeof isReference;\n  toReference: ToReferenceFunction;\n  storage: StorageType;\n};\n\nexport type Modifier<T> = (\n  value: T,\n  details: ModifierDetails\n) => T | DeleteModifier | InvalidateModifier;\n\ntype StoreObjectValueMaybeReference<StoreVal> =\n  StoreVal extends Array<Record<string, any>> ?\n    StoreVal extends Array<infer Item> ?\n      Item extends Record<string, any> ?\n        ReadonlyArray<AsStoreObject<Item> | Reference>\n      : never\n    : never\n  : StoreVal extends Record<string, any> ? AsStoreObject<StoreVal> | Reference\n  : StoreVal;\n\nexport type AllFieldsModifier<Entity extends Record<string, any>> = Modifier<\n  Entity[keyof Entity] extends infer Value ?\n    StoreObjectValueMaybeReference<Exclude<Value, undefined>>\n  : never\n>;\n\nexport type Modifiers<T extends Record<string, any> = Record<string, unknown>> =\n  Partial<{\n    [FieldName in keyof T]: Modifier<\n      StoreObjectValueMaybeReference<Exclude<T[FieldName], undefined>>\n    >;\n  }>;\n","import { isNonNullObject } from \"./objects.js\";\n\nfunction deepFreeze(value: any) {\n  const workSet = new Set([value]);\n  workSet.forEach((obj) => {\n    if (isNonNullObject(obj) && shallowFreeze(obj) === obj) {\n      Object.getOwnPropertyNames(obj).forEach((name) => {\n        if (isNonNullObject(obj[name])) workSet.add(obj[name]);\n      });\n    }\n  });\n  return value;\n}\n\nfunction shallowFreeze<T extends object>(obj: T): T | null {\n  if (__DEV__ && !Object.isFrozen(obj)) {\n    try {\n      Object.freeze(obj);\n    } catch (e) {\n      // Some types like Uint8Array and Node.js's Buffer cannot be frozen, but\n      // they all throw a TypeError when you try, so we re-throw any exceptions\n      // that are not TypeErrors, since that would be unexpected.\n      if (e instanceof TypeError) return null;\n      throw e;\n    }\n  }\n  return obj;\n}\n\nexport function maybeDeepFreeze<T>(obj: T): T {\n  if (__DEV__) {\n    deepFreeze(obj);\n  }\n  return obj;\n}\n","import type {\n  DocumentNode,\n  FragmentDefinitionNode,\n  SelectionSetNode,\n} from \"graphql\";\n\nimport type { NormalizedCache, InMemoryCacheConfig } from \"./types.js\";\n\nimport type { KeyFieldsContext } from \"./policies.js\";\nimport type { FragmentRegistryAPI } from \"./fragmentRegistry.js\";\n\nimport type {\n  Reference,\n  StoreValue,\n  StoreObject,\n  FragmentMap,\n  FragmentMapFunction,\n} from \"../../utilities/index.js\";\nimport {\n  isReference,\n  isField,\n  DeepMerger,\n  resultKeyNameFromField,\n  shouldInclude,\n  isNonNullObject,\n  compact,\n  createFragmentMap,\n  getFragmentDefinitions,\n  isArray,\n} from \"../../utilities/index.js\";\n\nexport const { hasOwnProperty: hasOwn } = Object.prototype;\n\nexport function isNullish(value: any): value is null | undefined {\n  return value === null || value === void 0;\n}\n\nexport { isArray };\n\nexport function defaultDataIdFromObject(\n  { __typename, id, _id }: Readonly<StoreObject>,\n  context?: KeyFieldsContext\n): string | undefined {\n  if (typeof __typename === \"string\") {\n    if (context) {\n      context.keyObject =\n        !isNullish(id) ? { id }\n        : !isNullish(_id) ? { _id }\n        : void 0;\n    }\n\n    // If there is no object.id, fall back to object._id.\n    if (isNullish(id) && !isNullish(_id)) {\n      id = _id;\n    }\n\n    if (!isNullish(id)) {\n      return `${__typename}:${\n        typeof id === \"number\" || typeof id === \"string\" ?\n          id\n        : JSON.stringify(id)\n      }`;\n    }\n  }\n}\n\nconst defaultConfig = {\n  dataIdFromObject: defaultDataIdFromObject,\n  addTypename: true,\n  resultCaching: true,\n  // Thanks to the shouldCanonizeResults helper, this should be the only line\n  // you have to change to reenable canonization by default in the future.\n  canonizeResults: false,\n};\n\nexport function normalizeConfig(config: InMemoryCacheConfig) {\n  return compact(defaultConfig, config);\n}\n\nexport function shouldCanonizeResults(\n  config: Pick<InMemoryCacheConfig, \"canonizeResults\">\n): boolean {\n  const value = config.canonizeResults;\n  return value === void 0 ? defaultConfig.canonizeResults : value;\n}\n\nexport function getTypenameFromStoreObject(\n  store: NormalizedCache,\n  objectOrReference: StoreObject | Reference\n): string | undefined {\n  return isReference(objectOrReference) ?\n      (store.get(objectOrReference.__ref, \"__typename\") as string)\n    : objectOrReference && objectOrReference.__typename;\n}\n\nexport const TypeOrFieldNameRegExp = /^[_a-z][_0-9a-z]*/i;\n\nexport function fieldNameFromStoreName(storeFieldName: string): string {\n  const match = storeFieldName.match(TypeOrFieldNameRegExp);\n  return match ? match[0] : storeFieldName;\n}\n\nexport function selectionSetMatchesResult(\n  selectionSet: SelectionSetNode,\n  result: Record<string, any>,\n  variables?: Record<string, any>\n): boolean {\n  if (isNonNullObject(result)) {\n    return isArray(result) ?\n        result.every((item) =>\n          selectionSetMatchesResult(selectionSet, item, variables)\n        )\n      : selectionSet.selections.every((field) => {\n          if (isField(field) && shouldInclude(field, variables)) {\n            const key = resultKeyNameFromField(field);\n            return (\n              hasOwn.call(result, key) &&\n              (!field.selectionSet ||\n                selectionSetMatchesResult(\n                  field.selectionSet,\n                  result[key],\n                  variables\n                ))\n            );\n          }\n          // If the selection has been skipped with @skip(true) or\n          // @include(false), it should not count against the matching. If\n          // the selection is not a field, it must be a fragment (inline or\n          // named). We will determine if selectionSetMatchesResult for that\n          // fragment when we get to it, so for now we return true.\n          return true;\n        });\n  }\n  return false;\n}\n\nexport function storeValueIsStoreObject(\n  value: StoreValue\n): value is StoreObject {\n  return isNonNullObject(value) && !isReference(value) && !isArray(value);\n}\n\nexport function makeProcessedFieldsMerger() {\n  return new DeepMerger();\n}\n\nexport function extractFragmentContext(\n  document: DocumentNode,\n  fragments?: FragmentRegistryAPI\n): {\n  fragmentMap: FragmentMap;\n  lookupFragment: FragmentMapFunction;\n} {\n  // FragmentMap consisting only of fragments defined directly in document, not\n  // including other fragments registered in the FragmentRegistry.\n  const fragmentMap = createFragmentMap(getFragmentDefinitions(document));\n  return {\n    fragmentMap,\n    lookupFragment(name) {\n      let def: FragmentDefinitionNode | null = fragmentMap[name];\n      if (!def && fragments) {\n        def = fragments.lookup(name);\n      }\n      return def || null;\n    },\n  };\n}\n","import { invariant } from \"../../utilities/globals/index.js\";\nimport type { OptimisticDependencyFunction } from \"optimism\";\nimport { dep } from \"optimism\";\nimport { equal } from \"@wry/equality\";\nimport { Trie } from \"@wry/trie\";\n\nimport type {\n  StoreValue,\n  StoreObject,\n  Reference,\n} from \"../../utilities/index.js\";\nimport {\n  isReference,\n  makeReference,\n  DeepMerger,\n  maybeDeepFreeze,\n  canUseWeakMap,\n  isNonNullObject,\n} from \"../../utilities/index.js\";\nimport type { NormalizedCache, NormalizedCacheObject } from \"./types.js\";\nimport { hasOwn, fieldNameFromStoreName } from \"./helpers.js\";\nimport type { Policies, StorageType } from \"./policies.js\";\nimport type { Cache } from \"../core/types/Cache.js\";\nimport type {\n  SafeReadonly,\n  Modifier,\n  Modifiers,\n  ReadFieldOptions,\n  ToReferenceFunction,\n  CanReadFunction,\n  InvalidateModifier,\n  DeleteModifier,\n  ModifierDetails,\n} from \"../core/types/common.js\";\nimport type { DocumentNode, FieldNode, SelectionSetNode } from \"graphql\";\n\nconst DELETE: DeleteModifier = Object.create(null);\nconst delModifier: Modifier<any> = () => DELETE;\nconst INVALIDATE: InvalidateModifier = Object.create(null);\n\nexport abstract class EntityStore implements NormalizedCache {\n  protected data: NormalizedCacheObject = Object.create(null);\n\n  constructor(\n    public readonly policies: Policies,\n    public readonly group: CacheGroup\n  ) {}\n\n  public abstract addLayer(\n    layerId: string,\n    replay: (layer: EntityStore) => any\n  ): Layer;\n\n  public abstract removeLayer(layerId: string): EntityStore;\n\n  // Although the EntityStore class is abstract, it contains concrete\n  // implementations of the various NormalizedCache interface methods that\n  // are inherited by the Root and Layer subclasses.\n\n  public toObject(): NormalizedCacheObject {\n    return { ...this.data };\n  }\n\n  public has(dataId: string): boolean {\n    return this.lookup(dataId, true) !== void 0;\n  }\n\n  public get(dataId: string, fieldName: string): StoreValue {\n    this.group.depend(dataId, fieldName);\n    if (hasOwn.call(this.data, dataId)) {\n      const storeObject = this.data[dataId];\n      if (storeObject && hasOwn.call(storeObject, fieldName)) {\n        return storeObject[fieldName];\n      }\n    }\n    if (\n      fieldName === \"__typename\" &&\n      hasOwn.call(this.policies.rootTypenamesById, dataId)\n    ) {\n      return this.policies.rootTypenamesById[dataId];\n    }\n    if (this instanceof Layer) {\n      return this.parent.get(dataId, fieldName);\n    }\n  }\n\n  protected lookup(\n    dataId: string,\n    dependOnExistence?: boolean\n  ): StoreObject | undefined {\n    // The has method (above) calls lookup with dependOnExistence = true, so\n    // that it can later be invalidated when we add or remove a StoreObject for\n    // this dataId. Any consumer who cares about the contents of the StoreObject\n    // should not rely on this dependency, since the contents could change\n    // without the object being added or removed.\n    if (dependOnExistence) this.group.depend(dataId, \"__exists\");\n\n    if (hasOwn.call(this.data, dataId)) {\n      return this.data[dataId];\n    }\n\n    if (this instanceof Layer) {\n      return this.parent.lookup(dataId, dependOnExistence);\n    }\n\n    if (this.policies.rootTypenamesById[dataId]) {\n      return Object.create(null);\n    }\n  }\n\n  public merge(older: string | StoreObject, newer: StoreObject | string): void {\n    let dataId: string | undefined;\n\n    // Convert unexpected references to ID strings.\n    if (isReference(older)) older = older.__ref;\n    if (isReference(newer)) newer = newer.__ref;\n\n    const existing: StoreObject | undefined =\n      typeof older === \"string\" ? this.lookup((dataId = older)) : older;\n\n    const incoming: StoreObject | undefined =\n      typeof newer === \"string\" ? this.lookup((dataId = newer)) : newer;\n\n    // If newer was a string ID, but that ID was not defined in this store,\n    // then there are no fields to be merged, so we're done.\n    if (!incoming) return;\n\n    invariant(typeof dataId === \"string\", \"store.merge expects a string ID\");\n\n    const merged: StoreObject = new DeepMerger(storeObjectReconciler).merge(\n      existing,\n      incoming\n    );\n\n    // Even if merged === existing, existing may have come from a lower\n    // layer, so we always need to set this.data[dataId] on this level.\n    this.data[dataId] = merged;\n\n    if (merged !== existing) {\n      delete this.refs[dataId];\n      if (this.group.caching) {\n        const fieldsToDirty: Record<string, 1> = Object.create(null);\n\n        // If we added a new StoreObject where there was previously none, dirty\n        // anything that depended on the existence of this dataId, such as the\n        // EntityStore#has method.\n        if (!existing) fieldsToDirty.__exists = 1;\n\n        // Now invalidate dependents who called getFieldValue for any fields\n        // that are changing as a result of this merge.\n        Object.keys(incoming).forEach((storeFieldName) => {\n          if (\n            !existing ||\n            existing[storeFieldName] !== merged[storeFieldName]\n          ) {\n            // Always dirty the full storeFieldName, which may include\n            // serialized arguments following the fieldName prefix.\n            fieldsToDirty[storeFieldName] = 1;\n\n            // Also dirty fieldNameFromStoreName(storeFieldName) if it's\n            // different from storeFieldName and this field does not have\n            // keyArgs configured, because that means the cache can't make\n            // any assumptions about how field values with the same field\n            // name but different arguments might be interrelated, so it\n            // must err on the side of invalidating all field values that\n            // share the same short fieldName, regardless of arguments.\n            const fieldName = fieldNameFromStoreName(storeFieldName);\n            if (\n              fieldName !== storeFieldName &&\n              !this.policies.hasKeyArgs(merged.__typename, fieldName)\n            ) {\n              fieldsToDirty[fieldName] = 1;\n            }\n\n            // If merged[storeFieldName] has become undefined, and this is the\n            // Root layer, actually delete the property from the merged object,\n            // which is guaranteed to have been created fresh in this method.\n            if (merged[storeFieldName] === void 0 && !(this instanceof Layer)) {\n              delete merged[storeFieldName];\n            }\n          }\n        });\n\n        if (\n          fieldsToDirty.__typename &&\n          !(existing && existing.__typename) &&\n          // Since we return default root __typename strings\n          // automatically from store.get, we don't need to dirty the\n          // ROOT_QUERY.__typename field if merged.__typename is equal\n          // to the default string (usually \"Query\").\n          this.policies.rootTypenamesById[dataId] === merged.__typename\n        ) {\n          delete fieldsToDirty.__typename;\n        }\n\n        Object.keys(fieldsToDirty).forEach((fieldName) =>\n          this.group.dirty(dataId as string, fieldName)\n        );\n      }\n    }\n  }\n\n  public modify(\n    dataId: string,\n    fields: Modifier<any> | Modifiers<Record<string, any>>\n  ): boolean {\n    const storeObject = this.lookup(dataId);\n\n    if (storeObject) {\n      const changedFields: Record<string, any> = Object.create(null);\n      let needToMerge = false;\n      let allDeleted = true;\n\n      const sharedDetails = {\n        DELETE,\n        INVALIDATE,\n        isReference,\n        toReference: this.toReference,\n        canRead: this.canRead,\n        readField: <V = StoreValue>(\n          fieldNameOrOptions: string | ReadFieldOptions,\n          from?: StoreObject | Reference\n        ) =>\n          this.policies.readField<V>(\n            typeof fieldNameOrOptions === \"string\" ?\n              {\n                fieldName: fieldNameOrOptions,\n                from: from || makeReference(dataId),\n              }\n            : fieldNameOrOptions,\n            { store: this }\n          ),\n      } satisfies Partial<ModifierDetails>;\n\n      Object.keys(storeObject).forEach((storeFieldName) => {\n        const fieldName = fieldNameFromStoreName(storeFieldName);\n        let fieldValue = storeObject[storeFieldName];\n        if (fieldValue === void 0) return;\n        const modify: Modifier<StoreValue> | undefined =\n          typeof fields === \"function\" ? fields : (\n            fields[storeFieldName] || fields[fieldName]\n          );\n        if (modify) {\n          let newValue =\n            modify === delModifier ? DELETE : (\n              modify(maybeDeepFreeze(fieldValue), {\n                ...sharedDetails,\n                fieldName,\n                storeFieldName,\n                storage: this.getStorage(dataId, storeFieldName),\n              })\n            );\n          if (newValue === INVALIDATE) {\n            this.group.dirty(dataId, storeFieldName);\n          } else {\n            if (newValue === DELETE) newValue = void 0;\n            if (newValue !== fieldValue) {\n              changedFields[storeFieldName] = newValue;\n              needToMerge = true;\n              fieldValue = newValue;\n\n              if (__DEV__) {\n                const checkReference = (ref: Reference) => {\n                  if (this.lookup(ref.__ref) === undefined) {\n                    invariant.warn(\n                      \"cache.modify: You are trying to write a Reference that is not part of the store: %o\\n\" +\n                        \"Please make sure to set the `mergeIntoStore` parameter to `true` when creating a Reference that is not part of the store yet:\\n\" +\n                        \"`toReference(object, true)`\",\n                      ref\n                    );\n                    return true;\n                  }\n                };\n                if (isReference(newValue)) {\n                  checkReference(newValue);\n                } else if (Array.isArray(newValue)) {\n                  // Warn about writing \"mixed\" arrays of Reference and non-Reference objects\n                  let seenReference: boolean = false;\n                  let someNonReference: unknown;\n                  for (const value of newValue) {\n                    if (isReference(value)) {\n                      seenReference = true;\n                      if (checkReference(value)) break;\n                    } else {\n                      // Do not warn on primitive values, since those could never be represented\n                      // by a reference. This is a valid (albeit uncommon) use case.\n                      if (typeof value === \"object\" && !!value) {\n                        const [id] = this.policies.identify(value);\n                        // check if object could even be referenced, otherwise we are not interested in it for this warning\n                        if (id) {\n                          someNonReference = value;\n                        }\n                      }\n                    }\n                    if (seenReference && someNonReference !== undefined) {\n                      invariant.warn(\n                        \"cache.modify: Writing an array with a mix of both References and Objects will not result in the Objects being normalized correctly.\\n\" +\n                          \"Please convert the object instance %o to a Reference before writing it to the cache by calling `toReference(object, true)`.\",\n                        someNonReference\n                      );\n                      break;\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (fieldValue !== void 0) {\n          allDeleted = false;\n        }\n      });\n\n      if (needToMerge) {\n        this.merge(dataId, changedFields);\n\n        if (allDeleted) {\n          if (this instanceof Layer) {\n            this.data[dataId] = void 0;\n          } else {\n            delete this.data[dataId];\n          }\n          this.group.dirty(dataId, \"__exists\");\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  // If called with only one argument, removes the entire entity\n  // identified by dataId. If called with a fieldName as well, removes all\n  // fields of that entity whose names match fieldName according to the\n  // fieldNameFromStoreName helper function. If called with a fieldName\n  // and variables, removes all fields of that entity whose names match fieldName\n  // and whose arguments when cached exactly match the variables passed.\n  public delete(\n    dataId: string,\n    fieldName?: string,\n    args?: Record<string, any>\n  ) {\n    const storeObject = this.lookup(dataId);\n    if (storeObject) {\n      const typename = this.getFieldValue<string>(storeObject, \"__typename\");\n      const storeFieldName =\n        fieldName && args ?\n          this.policies.getStoreFieldName({ typename, fieldName, args })\n        : fieldName;\n      return this.modify(\n        dataId,\n        storeFieldName ?\n          {\n            [storeFieldName]: delModifier,\n          }\n        : delModifier\n      );\n    }\n    return false;\n  }\n\n  public evict(options: Cache.EvictOptions, limit: EntityStore): boolean {\n    let evicted = false;\n    if (options.id) {\n      if (hasOwn.call(this.data, options.id)) {\n        evicted = this.delete(options.id, options.fieldName, options.args);\n      }\n      if (this instanceof Layer && this !== limit) {\n        evicted = this.parent.evict(options, limit) || evicted;\n      }\n      // Always invalidate the field to trigger rereading of watched\n      // queries, even if no cache data was modified by the eviction,\n      // because queries may depend on computed fields with custom read\n      // functions, whose values are not stored in the EntityStore.\n      if (options.fieldName || evicted) {\n        this.group.dirty(options.id, options.fieldName || \"__exists\");\n      }\n    }\n    return evicted;\n  }\n\n  public clear(): void {\n    this.replace(null);\n  }\n\n  public extract(): NormalizedCacheObject {\n    const obj = this.toObject();\n    const extraRootIds: string[] = [];\n    this.getRootIdSet().forEach((id) => {\n      if (!hasOwn.call(this.policies.rootTypenamesById, id)) {\n        extraRootIds.push(id);\n      }\n    });\n    if (extraRootIds.length) {\n      obj.__META = { extraRootIds: extraRootIds.sort() };\n    }\n    return obj;\n  }\n\n  public replace(newData: NormalizedCacheObject | null): void {\n    Object.keys(this.data).forEach((dataId) => {\n      if (!(newData && hasOwn.call(newData, dataId))) {\n        this.delete(dataId);\n      }\n    });\n    if (newData) {\n      const { __META, ...rest } = newData;\n      Object.keys(rest).forEach((dataId) => {\n        this.merge(dataId, rest[dataId] as StoreObject);\n      });\n      if (__META) {\n        __META.extraRootIds.forEach(this.retain, this);\n      }\n    }\n  }\n\n  public abstract getStorage(\n    idOrObj: string | StoreObject,\n    ...storeFieldNames: (string | number)[]\n  ): StorageType;\n\n  // Maps root entity IDs to the number of times they have been retained, minus\n  // the number of times they have been released. Retained entities keep other\n  // entities they reference (even indirectly) from being garbage collected.\n  private rootIds: {\n    [rootId: string]: number;\n  } = Object.create(null);\n\n  public retain(rootId: string): number {\n    return (this.rootIds[rootId] = (this.rootIds[rootId] || 0) + 1);\n  }\n\n  public release(rootId: string): number {\n    if (this.rootIds[rootId] > 0) {\n      const count = --this.rootIds[rootId];\n      if (!count) delete this.rootIds[rootId];\n      return count;\n    }\n    return 0;\n  }\n\n  // Return a Set<string> of all the ID strings that have been retained by\n  // this layer/root *and* any layers/roots beneath it.\n  public getRootIdSet(ids = new Set<string>()) {\n    Object.keys(this.rootIds).forEach(ids.add, ids);\n    if (this instanceof Layer) {\n      this.parent.getRootIdSet(ids);\n    } else {\n      // Official singleton IDs like ROOT_QUERY and ROOT_MUTATION are\n      // always considered roots for garbage collection, regardless of\n      // their retainment counts in this.rootIds.\n      Object.keys(this.policies.rootTypenamesById).forEach(ids.add, ids);\n    }\n    return ids;\n  }\n\n  // The goal of garbage collection is to remove IDs from the Root layer of the\n  // store that are no longer reachable starting from any IDs that have been\n  // explicitly retained (see retain and release, above). Returns an array of\n  // dataId strings that were removed from the store.\n  public gc() {\n    const ids = this.getRootIdSet();\n    const snapshot = this.toObject();\n    ids.forEach((id) => {\n      if (hasOwn.call(snapshot, id)) {\n        // Because we are iterating over an ECMAScript Set, the IDs we add here\n        // will be visited in later iterations of the forEach loop only if they\n        // were not previously contained by the Set.\n        Object.keys(this.findChildRefIds(id)).forEach(ids.add, ids);\n        // By removing IDs from the snapshot object here, we protect them from\n        // getting removed from the root store layer below.\n        delete snapshot[id];\n      }\n    });\n    const idsToRemove = Object.keys(snapshot);\n    if (idsToRemove.length) {\n      let root: EntityStore = this;\n      while (root instanceof Layer) root = root.parent;\n      idsToRemove.forEach((id) => root.delete(id));\n    }\n    return idsToRemove;\n  }\n\n  // Lazily tracks { __ref: <dataId> } strings contained by this.data[dataId].\n  private refs: {\n    [dataId: string]: Record<string, true>;\n  } = Object.create(null);\n\n  public findChildRefIds(dataId: string): Record<string, true> {\n    if (!hasOwn.call(this.refs, dataId)) {\n      const found = (this.refs[dataId] = Object.create(null));\n      const root = this.data[dataId];\n      if (!root) return found;\n\n      const workSet = new Set<Record<string | number, any>>([root]);\n      // Within the store, only arrays and objects can contain child entity\n      // references, so we can prune the traversal using this predicate:\n      workSet.forEach((obj) => {\n        if (isReference(obj)) {\n          found[obj.__ref] = true;\n          // In rare cases, a { __ref } Reference object may have other fields.\n          // This often indicates a mismerging of References with StoreObjects,\n          // but garbage collection should not be fooled by a stray __ref\n          // property in a StoreObject (ignoring all the other fields just\n          // because the StoreObject looks like a Reference). To avoid this\n          // premature termination of findChildRefIds recursion, we fall through\n          // to the code below, which will handle any other properties of obj.\n        }\n        if (isNonNullObject(obj)) {\n          Object.keys(obj).forEach((key) => {\n            const child = obj[key];\n            // No need to add primitive values to the workSet, since they cannot\n            // contain reference objects.\n            if (isNonNullObject(child)) {\n              workSet.add(child);\n            }\n          });\n        }\n      });\n    }\n    return this.refs[dataId];\n  }\n\n  // Used to compute cache keys specific to this.group.\n  /** overload for `InMemoryCache.maybeBroadcastWatch` */\n  public makeCacheKey(\n    document: DocumentNode,\n    callback: Cache.WatchCallback<any>,\n    details: string\n  ): object;\n  /** overload for `StoreReader.executeSelectionSet` */\n  public makeCacheKey(\n    selectionSet: SelectionSetNode,\n    parent: string /* = ( Reference.__ref ) */ | StoreObject,\n    varString: string | undefined,\n    canonizeResults: boolean\n  ): object;\n  /** overload for `StoreReader.executeSubSelectedArray` */\n  public makeCacheKey(\n    field: FieldNode,\n    array: readonly any[],\n    varString: string | undefined\n  ): object;\n  /** @deprecated This is only meant for internal usage,\n   * in your own code please use a `Trie` instance instead. */\n  public makeCacheKey(...args: any[]): object;\n  public makeCacheKey() {\n    return this.group.keyMaker.lookupArray(arguments);\n  }\n\n  // Bound function that can be passed around to provide easy access to fields\n  // of Reference objects as well as ordinary objects.\n  public getFieldValue = <T = StoreValue>(\n    objectOrReference: StoreObject | Reference | undefined,\n    storeFieldName: string\n  ) =>\n    maybeDeepFreeze(\n      isReference(objectOrReference) ?\n        this.get(objectOrReference.__ref, storeFieldName)\n      : objectOrReference && objectOrReference[storeFieldName]\n    ) as SafeReadonly<T>;\n\n  // Returns true for non-normalized StoreObjects and non-dangling\n  // References, indicating that readField(name, objOrRef) has a chance of\n  // working. Useful for filtering out dangling references from lists.\n  public canRead: CanReadFunction = (objOrRef) => {\n    return isReference(objOrRef) ?\n        this.has(objOrRef.__ref)\n      : typeof objOrRef === \"object\";\n  };\n\n  // Bound function that converts an id or an object with a __typename and\n  // primary key fields to a Reference object. If called with a Reference object,\n  // that same Reference object is returned. Pass true for mergeIntoStore to persist\n  // an object into the store.\n  public toReference: ToReferenceFunction = (objOrIdOrRef, mergeIntoStore) => {\n    if (typeof objOrIdOrRef === \"string\") {\n      return makeReference(objOrIdOrRef);\n    }\n\n    if (isReference(objOrIdOrRef)) {\n      return objOrIdOrRef;\n    }\n\n    const [id] = this.policies.identify(objOrIdOrRef);\n\n    if (id) {\n      const ref = makeReference(id);\n      if (mergeIntoStore) {\n        this.merge(id, objOrIdOrRef);\n      }\n      return ref;\n    }\n  };\n}\n\nexport type FieldValueGetter = EntityStore[\"getFieldValue\"];\n\n// A single CacheGroup represents a set of one or more EntityStore objects,\n// typically the Root store in a CacheGroup by itself, and all active Layer\n// stores in a group together. A single EntityStore object belongs to only\n// one CacheGroup, store.group. The CacheGroup is responsible for tracking\n// dependencies, so store.group is helpful for generating unique keys for\n// cached results that need to be invalidated when/if those dependencies\n// change. If we used the EntityStore objects themselves as cache keys (that\n// is, store rather than store.group), the cache would become unnecessarily\n// fragmented by all the different Layer objects. Instead, the CacheGroup\n// approach allows all optimistic Layer objects in the same linked list to\n// belong to one CacheGroup, with the non-optimistic Root object belonging\n// to another CacheGroup, allowing resultCaching dependencies to be tracked\n// separately for optimistic and non-optimistic entity data.\nclass CacheGroup {\n  private d: OptimisticDependencyFunction<string> | null = null;\n\n  // Used by the EntityStore#makeCacheKey method to compute cache keys\n  // specific to this CacheGroup.\n  public keyMaker!: Trie<object>;\n\n  constructor(\n    public readonly caching: boolean,\n    private parent: CacheGroup | null = null\n  ) {\n    this.resetCaching();\n  }\n\n  public resetCaching() {\n    this.d = this.caching ? dep<string>() : null;\n    this.keyMaker = new Trie(canUseWeakMap);\n  }\n\n  public depend(dataId: string, storeFieldName: string) {\n    if (this.d) {\n      this.d(makeDepKey(dataId, storeFieldName));\n      const fieldName = fieldNameFromStoreName(storeFieldName);\n      if (fieldName !== storeFieldName) {\n        // Fields with arguments that contribute extra identifying\n        // information to the fieldName (thus forming the storeFieldName)\n        // depend not only on the full storeFieldName but also on the\n        // short fieldName, so the field can be invalidated using either\n        // level of specificity.\n        this.d(makeDepKey(dataId, fieldName));\n      }\n      if (this.parent) {\n        this.parent.depend(dataId, storeFieldName);\n      }\n    }\n  }\n\n  public dirty(dataId: string, storeFieldName: string) {\n    if (this.d) {\n      this.d.dirty(\n        makeDepKey(dataId, storeFieldName),\n        // When storeFieldName === \"__exists\", that means the entity identified\n        // by dataId has either disappeared from the cache or was newly added,\n        // so the result caching system would do well to \"forget everything it\n        // knows\" about that object. To achieve that kind of invalidation, we\n        // not only dirty the associated result cache entry, but also remove it\n        // completely from the dependency graph. For the optimism implementation\n        // details, see https://github.com/benjamn/optimism/pull/195.\n        storeFieldName === \"__exists\" ? \"forget\" : \"setDirty\"\n      );\n    }\n  }\n}\n\nfunction makeDepKey(dataId: string, storeFieldName: string) {\n  // Since field names cannot have '#' characters in them, this method\n  // of joining the field name and the ID should be unambiguous, and much\n  // cheaper than JSON.stringify([dataId, fieldName]).\n  return storeFieldName + \"#\" + dataId;\n}\n\nexport function maybeDependOnExistenceOfEntity(\n  store: NormalizedCache,\n  entityId: string\n) {\n  if (supportsResultCaching(store)) {\n    // We use this pseudo-field __exists elsewhere in the EntityStore code to\n    // represent changes in the existence of the entity object identified by\n    // entityId. This dependency gets reliably dirtied whenever an object with\n    // this ID is deleted (or newly created) within this group, so any result\n    // cache entries (for example, StoreReader#executeSelectionSet results) that\n    // depend on __exists for this entityId will get dirtied as well, leading to\n    // the eventual recomputation (instead of reuse) of those result objects the\n    // next time someone reads them from the cache.\n    store.group.depend(entityId, \"__exists\");\n  }\n}\n\nexport namespace EntityStore {\n  // Refer to this class as EntityStore.Root outside this namespace.\n  export class Root extends EntityStore {\n    constructor({\n      policies,\n      resultCaching = true,\n      seed,\n    }: {\n      policies: Policies;\n      resultCaching?: boolean;\n      seed?: NormalizedCacheObject;\n    }) {\n      super(policies, new CacheGroup(resultCaching));\n      if (seed) this.replace(seed);\n    }\n\n    public readonly stump = new Stump(this);\n\n    public addLayer(\n      layerId: string,\n      replay: (layer: EntityStore) => any\n    ): Layer {\n      // Adding an optimistic Layer on top of the Root actually adds the Layer\n      // on top of the Stump, so the Stump always comes between the Root and\n      // any Layer objects that we've added.\n      return this.stump.addLayer(layerId, replay);\n    }\n\n    public removeLayer(): Root {\n      // Never remove the root layer.\n      return this;\n    }\n\n    public readonly storageTrie = new Trie<StorageType>(canUseWeakMap);\n    public getStorage(): StorageType {\n      return this.storageTrie.lookupArray(arguments);\n    }\n  }\n}\n\n// Not exported, since all Layer instances are created by the addLayer method\n// of the EntityStore.Root class.\nclass Layer extends EntityStore {\n  constructor(\n    public readonly id: string,\n    public readonly parent: EntityStore,\n    public readonly replay: (layer: EntityStore) => any,\n    public readonly group: CacheGroup\n  ) {\n    super(parent.policies, group);\n    replay(this);\n  }\n\n  public addLayer(layerId: string, replay: (layer: EntityStore) => any): Layer {\n    return new Layer(layerId, this, replay, this.group);\n  }\n\n  public removeLayer(layerId: string): EntityStore {\n    // Remove all instances of the given id, not just the first one.\n    const parent = this.parent.removeLayer(layerId);\n\n    if (layerId === this.id) {\n      if (this.group.caching) {\n        // Dirty every ID we're removing. Technically we might be able to avoid\n        // dirtying fields that have values in higher layers, but we don't have\n        // easy access to higher layers here, and we're about to recreate those\n        // layers anyway (see parent.addLayer below).\n        Object.keys(this.data).forEach((dataId) => {\n          const ownStoreObject = this.data[dataId];\n          const parentStoreObject = parent[\"lookup\"](dataId);\n          if (!parentStoreObject) {\n            // The StoreObject identified by dataId was defined in this layer\n            // but will be undefined in the parent layer, so we can delete the\n            // whole entity using this.delete(dataId). Since we're about to\n            // throw this layer away, the only goal of this deletion is to dirty\n            // the removed fields.\n            this.delete(dataId);\n          } else if (!ownStoreObject) {\n            // This layer had an entry for dataId but it was undefined, which\n            // means the entity was deleted in this layer, and it's about to\n            // become undeleted when we remove this layer, so we need to dirty\n            // all fields that are about to be reexposed.\n            this.group.dirty(dataId, \"__exists\");\n            Object.keys(parentStoreObject).forEach((storeFieldName) => {\n              this.group.dirty(dataId, storeFieldName);\n            });\n          } else if (ownStoreObject !== parentStoreObject) {\n            // If ownStoreObject is not exactly the same as parentStoreObject,\n            // dirty any fields whose values will change as a result of this\n            // removal.\n            Object.keys(ownStoreObject).forEach((storeFieldName) => {\n              if (\n                !equal(\n                  ownStoreObject[storeFieldName],\n                  parentStoreObject[storeFieldName]\n                )\n              ) {\n                this.group.dirty(dataId, storeFieldName);\n              }\n            });\n          }\n        });\n      }\n\n      return parent;\n    }\n\n    // No changes are necessary if the parent chain remains identical.\n    if (parent === this.parent) return this;\n\n    // Recreate this layer on top of the new parent.\n    return parent.addLayer(this.id, this.replay);\n  }\n\n  public toObject(): NormalizedCacheObject {\n    return {\n      ...this.parent.toObject(),\n      ...this.data,\n    };\n  }\n\n  public findChildRefIds(dataId: string): Record<string, true> {\n    const fromParent = this.parent.findChildRefIds(dataId);\n    return hasOwn.call(this.data, dataId) ?\n        {\n          ...fromParent,\n          ...super.findChildRefIds(dataId),\n        }\n      : fromParent;\n  }\n\n  public getStorage(): StorageType {\n    let p: EntityStore = this.parent;\n    while ((p as Layer).parent) p = (p as Layer).parent;\n    return p.getStorage.apply(\n      p,\n      // @ts-expect-error\n      arguments\n    );\n  }\n}\n\n// Represents a Layer permanently installed just above the Root, which allows\n// reading optimistically (and registering optimistic dependencies) even when\n// no optimistic layers are currently active. The stump.group CacheGroup object\n// is shared by any/all Layer objects added on top of the Stump.\nclass Stump extends Layer {\n  constructor(root: EntityStore.Root) {\n    super(\n      \"EntityStore.Stump\",\n      root,\n      () => {},\n      new CacheGroup(root.group.caching, root.group)\n    );\n  }\n\n  public removeLayer() {\n    // Never remove the Stump layer.\n    return this;\n  }\n\n  public merge(older: string | StoreObject, newer: string | StoreObject) {\n    // We never want to write any data into the Stump, so we forward any merge\n    // calls to the Root instead. Another option here would be to throw an\n    // exception, but the toReference(object, true) function can sometimes\n    // trigger Stump writes (which used to be Root writes, before the Stump\n    // concept was introduced).\n    return this.parent.merge(older, newer);\n  }\n}\n\nfunction storeObjectReconciler(\n  existingObject: StoreObject,\n  incomingObject: StoreObject,\n  property: string | number\n): StoreValue {\n  const existingValue = existingObject[property];\n  const incomingValue = incomingObject[property];\n  // Wherever there is a key collision, prefer the incoming value, unless\n  // it is deeply equal to the existing value. It's worth checking deep\n  // equality here (even though blindly returning incoming would be\n  // logically correct) because preserving the referential identity of\n  // existing data can prevent needless rereading and rerendering.\n  return equal(existingValue, incomingValue) ? existingValue : incomingValue;\n}\n\nexport function supportsResultCaching(store: any): store is EntityStore {\n  // When result caching is disabled, store.depend will be null.\n  return !!(store instanceof EntityStore && store.group.caching);\n}\n","import { Trie } from \"@wry/trie\";\nimport {\n  canUseWeakMap,\n  canUseWeakSet,\n  isNonNullObject as isObjectOrArray,\n} from \"../../utilities/index.js\";\nimport { isArray } from \"./helpers.js\";\n\nfunction shallowCopy<T>(value: T): T {\n  if (isObjectOrArray(value)) {\n    return isArray(value) ?\n        (value.slice(0) as any as T)\n      : { __proto__: Object.getPrototypeOf(value), ...value };\n  }\n  return value;\n}\n\n// When programmers talk about the \"canonical form\" of an object, they\n// usually have the following meaning in mind, which I've copied from\n// https://en.wiktionary.org/wiki/canonical_form:\n//\n// 1. A standard or normal presentation of a mathematical entity [or\n//    object]. A canonical form is an element of a set of representatives\n//    of equivalence classes of forms such that there is a function or\n//    procedure which projects every element of each equivalence class\n//    onto that one element, the canonical form of that equivalence\n//    class. The canonical form is expected to be simpler than the rest of\n//    the forms in some way.\n//\n// That's a long-winded way of saying any two objects that have the same\n// canonical form may be considered equivalent, even if they are !==,\n// which usually means the objects are structurally equivalent (deeply\n// equal), but don't necessarily use the same memory.\n//\n// Like a literary or musical canon, this ObjectCanon class represents a\n// collection of unique canonical items (JavaScript objects), with the\n// important property that canon.admit(a) === canon.admit(b) if a and b\n// are deeply equal to each other. In terms of the definition above, the\n// canon.admit method is the \"function or procedure which projects every\"\n// object \"onto that one element, the canonical form.\"\n//\n// In the worst case, the canonicalization process may involve looking at\n// every property in the provided object tree, so it takes the same order\n// of time as deep equality checking. Fortunately, already-canonicalized\n// objects are returned immediately from canon.admit, so the presence of\n// canonical subtrees tends to speed up canonicalization.\n//\n// Since consumers of canonical objects can check for deep equality in\n// constant time, canonicalizing cache results can massively improve the\n// performance of application code that skips re-rendering unchanged\n// results, such as \"pure\" UI components in a framework like React.\n//\n// Of course, since canonical objects may be shared widely between\n// unrelated consumers, it's important to think of them as immutable, even\n// though they are not actually frozen with Object.freeze in production,\n// due to the extra performance overhead that comes with frozen objects.\n//\n// Custom scalar objects whose internal class name is neither Array nor\n// Object can be included safely in the admitted tree, but they will not\n// be replaced with a canonical version (to put it another way, they are\n// assumed to be canonical already).\n//\n// If we ignore custom objects, no detection of cycles or repeated object\n// references is currently required by the StoreReader class, since\n// GraphQL result objects are JSON-serializable trees (and thus contain\n// neither cycles nor repeated subtrees), so we can avoid the complexity\n// of keeping track of objects we've already seen during the recursion of\n// the admit method.\n//\n// In the future, we may consider adding additional cases to the switch\n// statement to handle other common object types, such as \"[object Date]\"\n// objects, as needed.\nexport class ObjectCanon {\n  // Set of all canonical objects this ObjectCanon has admitted, allowing\n  // canon.admit to return previously-canonicalized objects immediately.\n  private known = new (canUseWeakSet ? WeakSet : Set)<object>();\n\n  // Efficient storage/lookup structure for canonical objects.\n  private pool = new Trie<{\n    array?: any[];\n    object?: Record<string, any>;\n    keys?: SortedKeysInfo;\n  }>(canUseWeakMap);\n\n  public isKnown(value: any): boolean {\n    return isObjectOrArray(value) && this.known.has(value);\n  }\n\n  // Make the ObjectCanon assume this value has already been\n  // canonicalized.\n  private passes = new WeakMap<object, object>();\n  public pass<T>(value: T): T;\n  public pass(value: any) {\n    if (isObjectOrArray(value)) {\n      const copy = shallowCopy(value);\n      this.passes.set(copy, value);\n      return copy;\n    }\n    return value;\n  }\n\n  // Returns the canonical version of value.\n  public admit<T>(value: T): T;\n  public admit(value: any) {\n    if (isObjectOrArray(value)) {\n      const original = this.passes.get(value);\n      if (original) return original;\n\n      const proto = Object.getPrototypeOf(value);\n      switch (proto) {\n        case Array.prototype: {\n          if (this.known.has(value)) return value;\n          const array: any[] = (value as any[]).map(this.admit, this);\n          // Arrays are looked up in the Trie using their recursively\n          // canonicalized elements, and the known version of the array is\n          // preserved as node.array.\n          const node = this.pool.lookupArray(array);\n          if (!node.array) {\n            this.known.add((node.array = array));\n            // Since canonical arrays may be shared widely between\n            // unrelated consumers, it's important to regard them as\n            // immutable, even if they are not frozen in production.\n            if (__DEV__) {\n              Object.freeze(array);\n            }\n          }\n          return node.array;\n        }\n\n        case null:\n        case Object.prototype: {\n          if (this.known.has(value)) return value;\n          const proto = Object.getPrototypeOf(value);\n          const array = [proto];\n          const keys = this.sortedKeys(value);\n          array.push(keys.json);\n          const firstValueIndex = array.length;\n          keys.sorted.forEach((key) => {\n            array.push(this.admit((value as any)[key]));\n          });\n          // Objects are looked up in the Trie by their prototype (which\n          // is *not* recursively canonicalized), followed by a JSON\n          // representation of their (sorted) keys, followed by the\n          // sequence of recursively canonicalized values corresponding to\n          // those keys. To keep the final results unambiguous with other\n          // sequences (such as arrays that just happen to contain [proto,\n          // keys.json, value1, value2, ...]), the known version of the\n          // object is stored as node.object.\n          const node = this.pool.lookupArray(array);\n          if (!node.object) {\n            const obj = (node.object = Object.create(proto));\n            this.known.add(obj);\n            keys.sorted.forEach((key, i) => {\n              obj[key] = array[firstValueIndex + i];\n            });\n            // Since canonical objects may be shared widely between\n            // unrelated consumers, it's important to regard them as\n            // immutable, even if they are not frozen in production.\n            if (__DEV__) {\n              Object.freeze(obj);\n            }\n          }\n          return node.object;\n        }\n      }\n    }\n    return value;\n  }\n\n  // It's worthwhile to cache the sorting of arrays of strings, since the\n  // same initial unsorted arrays tend to be encountered many times.\n  // Fortunately, we can reuse the Trie machinery to look up the sorted\n  // arrays in linear time (which is faster than sorting large arrays).\n  private sortedKeys(obj: object) {\n    const keys = Object.keys(obj);\n    const node = this.pool.lookupArray(keys);\n    if (!node.keys) {\n      keys.sort();\n      const json = JSON.stringify(keys);\n      if (!(node.keys = this.keysByJSON.get(json))) {\n        this.keysByJSON.set(json, (node.keys = { sorted: keys, json }));\n      }\n    }\n    return node.keys;\n  }\n  // Arrays that contain the same elements in a different order can share\n  // the same SortedKeysInfo object, to save memory.\n  private keysByJSON = new Map<string, SortedKeysInfo>();\n\n  // This has to come last because it depends on keysByJSON.\n  public readonly empty = this.admit({});\n}\n\ntype SortedKeysInfo = {\n  sorted: string[];\n  json: string;\n};\n","import { invariant, newInvariantError } from \"../../utilities/globals/index.js\";\n\nimport type { DocumentNode, FieldNode, SelectionSetNode } from \"graphql\";\nimport { Kind } from \"graphql\";\nimport type { OptimisticWrapperFunction } from \"optimism\";\nimport { wrap } from \"optimism\";\n\nimport type {\n  Reference,\n  StoreObject,\n  FragmentMap,\n  FragmentMapFunction,\n} from \"../../utilities/index.js\";\nimport {\n  isField,\n  resultKeyNameFromField,\n  isReference,\n  makeReference,\n  shouldInclude,\n  addTypenameToDocument,\n  getDefaultValues,\n  getMainDefinition,\n  getQueryDefinition,\n  getFragmentFromSelection,\n  maybeDeepFreeze,\n  mergeDeepArray,\n  DeepMerger,\n  isNonNullObject,\n  canUseWeakMap,\n  compact,\n  canonicalStringify,\n  cacheSizes,\n  defaultCacheSizes,\n} from \"../../utilities/index.js\";\nimport type { Cache } from \"../core/types/Cache.js\";\nimport type {\n  DiffQueryAgainstStoreOptions,\n  InMemoryCacheConfig,\n  NormalizedCache,\n  ReadMergeModifyContext,\n} from \"./types.js\";\nimport {\n  maybeDependOnExistenceOfEntity,\n  supportsResultCaching,\n} from \"./entityStore.js\";\nimport {\n  isArray,\n  extractFragmentContext,\n  getTypenameFromStoreObject,\n  shouldCanonizeResults,\n} from \"./helpers.js\";\nimport type { Policies } from \"./policies.js\";\nimport type { InMemoryCache } from \"./inMemoryCache.js\";\nimport type { MissingTree } from \"../core/types/common.js\";\nimport { MissingFieldError } from \"../core/types/common.js\";\nimport { ObjectCanon } from \"./object-canon.js\";\n\nexport type VariableMap = { [name: string]: any };\n\ninterface ReadContext extends ReadMergeModifyContext {\n  query: DocumentNode;\n  policies: Policies;\n  canonizeResults: boolean;\n  fragmentMap: FragmentMap;\n  lookupFragment: FragmentMapFunction;\n}\n\nexport type ExecResult<R = any> = {\n  result: R;\n  missing?: MissingTree;\n};\n\ntype ExecSelectionSetOptions = {\n  selectionSet: SelectionSetNode;\n  objectOrReference: StoreObject | Reference;\n  enclosingRef: Reference;\n  context: ReadContext;\n};\n\ntype ExecSubSelectedArrayOptions = {\n  field: FieldNode;\n  array: readonly any[];\n  enclosingRef: Reference;\n  context: ReadContext;\n};\n\nexport interface StoreReaderConfig {\n  cache: InMemoryCache;\n  addTypename?: boolean;\n  resultCacheMaxSize?: number;\n  canonizeResults?: boolean;\n  canon?: ObjectCanon;\n  fragments?: InMemoryCacheConfig[\"fragments\"];\n}\n\n// Arguments type after keyArgs translation.\ntype ExecSelectionSetKeyArgs = [\n  SelectionSetNode,\n  StoreObject | Reference,\n  ReadMergeModifyContext,\n  boolean,\n];\n\nfunction execSelectionSetKeyArgs(\n  options: ExecSelectionSetOptions\n): ExecSelectionSetKeyArgs {\n  return [\n    options.selectionSet,\n    options.objectOrReference,\n    options.context,\n    // We split out this property so we can pass different values\n    // independently without modifying options.context itself.\n    options.context.canonizeResults,\n  ];\n}\n\nexport class StoreReader {\n  // cached version of executeSelectionSet\n  private executeSelectionSet: OptimisticWrapperFunction<\n    [ExecSelectionSetOptions], // Actual arguments tuple type.\n    ExecResult, // Actual return type.\n    ExecSelectionSetKeyArgs\n  >;\n\n  // cached version of executeSubSelectedArray\n  private executeSubSelectedArray: OptimisticWrapperFunction<\n    [ExecSubSelectedArrayOptions],\n    ExecResult<any>,\n    [ExecSubSelectedArrayOptions]\n  >;\n\n  private config: {\n    cache: InMemoryCache;\n    addTypename: boolean;\n    resultCacheMaxSize?: number;\n    canonizeResults: boolean;\n    fragments?: InMemoryCacheConfig[\"fragments\"];\n  };\n\n  private knownResults = new (canUseWeakMap ? WeakMap : Map)<\n    Record<string, any>,\n    SelectionSetNode\n  >();\n\n  public canon: ObjectCanon;\n  public resetCanon() {\n    this.canon = new ObjectCanon();\n  }\n\n  constructor(config: StoreReaderConfig) {\n    this.config = compact(config, {\n      addTypename: config.addTypename !== false,\n      canonizeResults: shouldCanonizeResults(config),\n    });\n\n    this.canon = config.canon || new ObjectCanon();\n\n    // memoized functions in this class will be \"garbage-collected\"\n    // by recreating the whole `StoreReader` in\n    // `InMemoryCache.resetResultsCache`\n    // (triggered from `InMemoryCache.gc` with `resetResultCache: true`)\n    this.executeSelectionSet = wrap(\n      (options) => {\n        const { canonizeResults } = options.context;\n\n        const peekArgs = execSelectionSetKeyArgs(options);\n\n        // Negate this boolean option so we can find out if we've already read\n        // this result using the other boolean value.\n        peekArgs[3] = !canonizeResults;\n\n        const other = this.executeSelectionSet.peek(...peekArgs);\n\n        if (other) {\n          if (canonizeResults) {\n            return {\n              ...other,\n              // If we previously read this result without canonizing it, we can\n              // reuse that result simply by canonizing it now.\n              result: this.canon.admit(other.result),\n            };\n          }\n          // If we previously read this result with canonization enabled, we can\n          // return that canonized result as-is.\n          return other;\n        }\n\n        maybeDependOnExistenceOfEntity(\n          options.context.store,\n          options.enclosingRef.__ref\n        );\n\n        // Finally, if we didn't find any useful previous results, run the real\n        // execSelectionSetImpl method with the given options.\n        return this.execSelectionSetImpl(options);\n      },\n      {\n        max:\n          this.config.resultCacheMaxSize ||\n          cacheSizes[\"inMemoryCache.executeSelectionSet\"] ||\n          defaultCacheSizes[\"inMemoryCache.executeSelectionSet\"],\n        keyArgs: execSelectionSetKeyArgs,\n        // Note that the parameters of makeCacheKey are determined by the\n        // array returned by keyArgs.\n        makeCacheKey(selectionSet, parent, context, canonizeResults) {\n          if (supportsResultCaching(context.store)) {\n            return context.store.makeCacheKey(\n              selectionSet,\n              isReference(parent) ? parent.__ref : parent,\n              context.varString,\n              canonizeResults\n            );\n          }\n        },\n      }\n    );\n\n    this.executeSubSelectedArray = wrap(\n      (options: ExecSubSelectedArrayOptions) => {\n        maybeDependOnExistenceOfEntity(\n          options.context.store,\n          options.enclosingRef.__ref\n        );\n        return this.execSubSelectedArrayImpl(options);\n      },\n      {\n        max:\n          this.config.resultCacheMaxSize ||\n          cacheSizes[\"inMemoryCache.executeSubSelectedArray\"] ||\n          defaultCacheSizes[\"inMemoryCache.executeSubSelectedArray\"],\n        makeCacheKey({ field, array, context }) {\n          if (supportsResultCaching(context.store)) {\n            return context.store.makeCacheKey(field, array, context.varString);\n          }\n        },\n      }\n    );\n  }\n\n  /**\n   * Given a store and a query, return as much of the result as possible and\n   * identify if any data was missing from the store.\n   */\n  public diffQueryAgainstStore<T>({\n    store,\n    query,\n    rootId = \"ROOT_QUERY\",\n    variables,\n    returnPartialData = true,\n    canonizeResults = this.config.canonizeResults,\n  }: DiffQueryAgainstStoreOptions): Cache.DiffResult<T> {\n    const policies = this.config.cache.policies;\n\n    variables = {\n      ...getDefaultValues(getQueryDefinition(query)),\n      ...variables!,\n    };\n\n    const rootRef = makeReference(rootId);\n    const execResult = this.executeSelectionSet({\n      selectionSet: getMainDefinition(query).selectionSet,\n      objectOrReference: rootRef,\n      enclosingRef: rootRef,\n      context: {\n        store,\n        query,\n        policies,\n        variables,\n        varString: canonicalStringify(variables),\n        canonizeResults,\n        ...extractFragmentContext(query, this.config.fragments),\n      },\n    });\n\n    let missing: MissingFieldError[] | undefined;\n    if (execResult.missing) {\n      // For backwards compatibility we still report an array of\n      // MissingFieldError objects, even though there will only ever be at most\n      // one of them, now that all missing field error messages are grouped\n      // together in the execResult.missing tree.\n      missing = [\n        new MissingFieldError(\n          firstMissing(execResult.missing)!,\n          execResult.missing,\n          query,\n          variables\n        ),\n      ];\n      if (!returnPartialData) {\n        throw missing[0];\n      }\n    }\n\n    return {\n      result: execResult.result,\n      complete: !missing,\n      missing,\n    };\n  }\n\n  public isFresh(\n    result: Record<string, any>,\n    parent: StoreObject | Reference,\n    selectionSet: SelectionSetNode,\n    context: ReadMergeModifyContext\n  ): boolean {\n    if (\n      supportsResultCaching(context.store) &&\n      this.knownResults.get(result) === selectionSet\n    ) {\n      const latest = this.executeSelectionSet.peek(\n        selectionSet,\n        parent,\n        context,\n        // If result is canonical, then it could only have been previously\n        // cached by the canonizing version of executeSelectionSet, so we can\n        // avoid checking both possibilities here.\n        this.canon.isKnown(result)\n      );\n      if (latest && result === latest.result) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // Uncached version of executeSelectionSet.\n  private execSelectionSetImpl({\n    selectionSet,\n    objectOrReference,\n    enclosingRef,\n    context,\n  }: ExecSelectionSetOptions): ExecResult {\n    if (\n      isReference(objectOrReference) &&\n      !context.policies.rootTypenamesById[objectOrReference.__ref] &&\n      !context.store.has(objectOrReference.__ref)\n    ) {\n      return {\n        result: this.canon.empty,\n        missing: `Dangling reference to missing ${objectOrReference.__ref} object`,\n      };\n    }\n\n    const { variables, policies, store } = context;\n    const typename = store.getFieldValue<string>(\n      objectOrReference,\n      \"__typename\"\n    );\n\n    const objectsToMerge: Record<string, any>[] = [];\n    let missing: MissingTree | undefined;\n    const missingMerger = new DeepMerger();\n\n    if (\n      this.config.addTypename &&\n      typeof typename === \"string\" &&\n      !policies.rootIdsByTypename[typename]\n    ) {\n      // Ensure we always include a default value for the __typename\n      // field, if we have one, and this.config.addTypename is true. Note\n      // that this field can be overridden by other merged objects.\n      objectsToMerge.push({ __typename: typename });\n    }\n\n    function handleMissing<T>(result: ExecResult<T>, resultName: string): T {\n      if (result.missing) {\n        missing = missingMerger.merge(missing, {\n          [resultName]: result.missing,\n        });\n      }\n      return result.result;\n    }\n\n    const workSet = new Set(selectionSet.selections);\n\n    workSet.forEach((selection) => {\n      // Omit fields with directives @skip(if: <truthy value>) or\n      // @include(if: <falsy value>).\n      if (!shouldInclude(selection, variables)) return;\n\n      if (isField(selection)) {\n        let fieldValue = policies.readField(\n          {\n            fieldName: selection.name.value,\n            field: selection,\n            variables: context.variables,\n            from: objectOrReference,\n          },\n          context\n        );\n\n        const resultName = resultKeyNameFromField(selection);\n\n        if (fieldValue === void 0) {\n          if (!addTypenameToDocument.added(selection)) {\n            missing = missingMerger.merge(missing, {\n              [resultName]: `Can't find field '${selection.name.value}' on ${\n                isReference(objectOrReference) ?\n                  objectOrReference.__ref + \" object\"\n                : \"object \" + JSON.stringify(objectOrReference, null, 2)\n              }`,\n            });\n          }\n        } else if (isArray(fieldValue)) {\n          if (fieldValue.length > 0) {\n            fieldValue = handleMissing(\n              this.executeSubSelectedArray({\n                field: selection,\n                array: fieldValue,\n                enclosingRef,\n                context,\n              }),\n              resultName\n            );\n          }\n        } else if (!selection.selectionSet) {\n          // If the field does not have a selection set, then we handle it\n          // as a scalar value. To keep this.canon from canonicalizing\n          // this value, we use this.canon.pass to wrap fieldValue in a\n          // Pass object that this.canon.admit will later unwrap as-is.\n          if (context.canonizeResults) {\n            fieldValue = this.canon.pass(fieldValue);\n          }\n        } else if (fieldValue != null) {\n          // In this case, because we know the field has a selection set,\n          // it must be trying to query a GraphQLObjectType, which is why\n          // fieldValue must be != null.\n          fieldValue = handleMissing(\n            this.executeSelectionSet({\n              selectionSet: selection.selectionSet,\n              objectOrReference: fieldValue as StoreObject | Reference,\n              enclosingRef: isReference(fieldValue) ? fieldValue : enclosingRef,\n              context,\n            }),\n            resultName\n          );\n        }\n\n        if (fieldValue !== void 0) {\n          objectsToMerge.push({ [resultName]: fieldValue });\n        }\n      } else {\n        const fragment = getFragmentFromSelection(\n          selection,\n          context.lookupFragment\n        );\n\n        if (!fragment && selection.kind === Kind.FRAGMENT_SPREAD) {\n          throw newInvariantError(`No fragment named %s`, selection.name.value);\n        }\n\n        if (fragment && policies.fragmentMatches(fragment, typename)) {\n          fragment.selectionSet.selections.forEach(workSet.add, workSet);\n        }\n      }\n    });\n\n    const result = mergeDeepArray(objectsToMerge);\n    const finalResult: ExecResult = { result, missing };\n    const frozen =\n      context.canonizeResults ?\n        this.canon.admit(finalResult)\n        // Since this.canon is normally responsible for freezing results (only in\n        // development), freeze them manually if canonization is disabled.\n      : maybeDeepFreeze(finalResult);\n\n    // Store this result with its selection set so that we can quickly\n    // recognize it again in the StoreReader#isFresh method.\n    if (frozen.result) {\n      this.knownResults.set(frozen.result, selectionSet);\n    }\n\n    return frozen;\n  }\n\n  // Uncached version of executeSubSelectedArray.\n  private execSubSelectedArrayImpl({\n    field,\n    array,\n    enclosingRef,\n    context,\n  }: ExecSubSelectedArrayOptions): ExecResult {\n    let missing: MissingTree | undefined;\n    let missingMerger = new DeepMerger<MissingTree[]>();\n\n    function handleMissing<T>(childResult: ExecResult<T>, i: number): T {\n      if (childResult.missing) {\n        missing = missingMerger.merge(missing, { [i]: childResult.missing });\n      }\n      return childResult.result;\n    }\n\n    if (field.selectionSet) {\n      array = array.filter(context.store.canRead);\n    }\n\n    array = array.map((item, i) => {\n      // null value in array\n      if (item === null) {\n        return null;\n      }\n\n      // This is a nested array, recurse\n      if (isArray(item)) {\n        return handleMissing(\n          this.executeSubSelectedArray({\n            field,\n            array: item,\n            enclosingRef,\n            context,\n          }),\n          i\n        );\n      }\n\n      // This is an object, run the selection set on it\n      if (field.selectionSet) {\n        return handleMissing(\n          this.executeSelectionSet({\n            selectionSet: field.selectionSet,\n            objectOrReference: item,\n            enclosingRef: isReference(item) ? item : enclosingRef,\n            context,\n          }),\n          i\n        );\n      }\n\n      if (__DEV__) {\n        assertSelectionSetForIdValue(context.store, field, item);\n      }\n\n      return item;\n    });\n\n    return {\n      result: context.canonizeResults ? this.canon.admit(array) : array,\n      missing,\n    };\n  }\n}\n\nfunction firstMissing(tree: MissingTree): string | undefined {\n  try {\n    JSON.stringify(tree, (_, value) => {\n      if (typeof value === \"string\") throw value;\n      return value;\n    });\n  } catch (result) {\n    return result as string;\n  }\n}\n\nfunction assertSelectionSetForIdValue(\n  store: NormalizedCache,\n  field: FieldNode,\n  fieldValue: any\n) {\n  if (!field.selectionSet) {\n    const workSet = new Set([fieldValue]);\n    workSet.forEach((value) => {\n      if (isNonNullObject(value)) {\n        invariant(\n          !isReference(value),\n          `Missing selection set for object of type %s returned for query field %s`,\n          getTypenameFromStoreObject(store, value),\n          field.name.value\n        );\n        Object.values(value).forEach(workSet.add, workSet);\n      }\n    });\n  }\n}\n","import { invariant } from \"../../utilities/globals/index.js\";\n\nimport {\n  argumentsObjectFromField,\n  DeepMerger,\n  isNonEmptyArray,\n  isNonNullObject,\n} from \"../../utilities/index.js\";\n\nimport { hasOwn, isArray } from \"./helpers.js\";\nimport type {\n  KeySpecifier,\n  KeyFieldsFunction,\n  KeyArgsFunction,\n} from \"./policies.js\";\n\n// Mapping from JSON-encoded KeySpecifier strings to associated information.\nconst specifierInfoCache: Record<\n  string,\n  {\n    paths?: string[][];\n    keyFieldsFn?: KeyFieldsFunction;\n    keyArgsFn?: KeyArgsFunction;\n  }\n> = Object.create(null);\n\nfunction lookupSpecifierInfo(spec: KeySpecifier) {\n  // It's safe to encode KeySpecifier arrays with JSON.stringify, since they're\n  // just arrays of strings or nested KeySpecifier arrays, and the order of the\n  // array elements is important (and suitably preserved by JSON.stringify).\n  const cacheKey = JSON.stringify(spec);\n  return (\n    specifierInfoCache[cacheKey] ||\n    (specifierInfoCache[cacheKey] = Object.create(null))\n  );\n}\n\nexport function keyFieldsFnFromSpecifier(\n  specifier: KeySpecifier\n): KeyFieldsFunction {\n  const info = lookupSpecifierInfo(specifier);\n\n  return (\n    info.keyFieldsFn ||\n    (info.keyFieldsFn = (object, context) => {\n      const extract: typeof extractKey = (from, key) =>\n        context.readField(key, from);\n\n      const keyObject = (context.keyObject = collectSpecifierPaths(\n        specifier,\n        (schemaKeyPath) => {\n          let extracted = extractKeyPath(\n            context.storeObject,\n            schemaKeyPath,\n            // Using context.readField to extract paths from context.storeObject\n            // allows the extraction to see through Reference objects and respect\n            // custom read functions.\n            extract\n          );\n\n          if (\n            extracted === void 0 &&\n            object !== context.storeObject &&\n            hasOwn.call(object, schemaKeyPath[0])\n          ) {\n            // If context.storeObject fails to provide a value for the requested\n            // path, fall back to the raw result object, if it has a top-level key\n            // matching the first key in the path (schemaKeyPath[0]). This allows\n            // key fields included in the written data to be saved in the cache\n            // even if they are not selected explicitly in context.selectionSet.\n            // Not being mentioned by context.selectionSet is convenient here,\n            // since it means these extra fields cannot be affected by field\n            // aliasing, which is why we can use extractKey instead of\n            // context.readField for this extraction.\n            extracted = extractKeyPath(object, schemaKeyPath, extractKey);\n          }\n\n          invariant(\n            extracted !== void 0,\n            `Missing field '%s' while extracting keyFields from %s`,\n            schemaKeyPath.join(\".\"),\n            object\n          );\n\n          return extracted;\n        }\n      ));\n\n      return `${context.typename}:${JSON.stringify(keyObject)}`;\n    })\n  );\n}\n\n// The keyArgs extraction process is roughly analogous to keyFields extraction,\n// but there are no aliases involved, missing fields are tolerated (by merely\n// omitting them from the key), and drawing from field.directives or variables\n// is allowed (in addition to drawing from the field's arguments object).\n// Concretely, these differences mean passing a different key path extractor\n// function to collectSpecifierPaths, reusing the shared extractKeyPath helper\n// wherever possible.\nexport function keyArgsFnFromSpecifier(\n  specifier: KeySpecifier\n): KeyArgsFunction {\n  const info = lookupSpecifierInfo(specifier);\n\n  return (\n    info.keyArgsFn ||\n    (info.keyArgsFn = (args, { field, variables, fieldName }) => {\n      const collected = collectSpecifierPaths(specifier, (keyPath) => {\n        const firstKey = keyPath[0];\n        const firstChar = firstKey.charAt(0);\n\n        if (firstChar === \"@\") {\n          if (field && isNonEmptyArray(field.directives)) {\n            const directiveName = firstKey.slice(1);\n            // If the directive appears multiple times, only the first\n            // occurrence's arguments will be used. TODO Allow repetition?\n            // TODO Cache this work somehow, a la aliasMap?\n            const d = field.directives.find(\n              (d) => d.name.value === directiveName\n            );\n            // Fortunately argumentsObjectFromField works for DirectiveNode!\n            const directiveArgs = d && argumentsObjectFromField(d, variables);\n            // For directives without arguments (d defined, but directiveArgs ===\n            // null), the presence or absence of the directive still counts as\n            // part of the field key, so we return null in those cases. If no\n            // directive with this name was found for this field (d undefined and\n            // thus directiveArgs undefined), we return undefined, which causes\n            // this value to be omitted from the key object returned by\n            // collectSpecifierPaths.\n            return (\n              directiveArgs &&\n              extractKeyPath(\n                directiveArgs,\n                // If keyPath.length === 1, this code calls extractKeyPath with an\n                // empty path, which works because it uses directiveArgs as the\n                // extracted value.\n                keyPath.slice(1)\n              )\n            );\n          }\n          // If the key started with @ but there was no corresponding directive,\n          // we want to omit this value from the key object, not fall through to\n          // treating @whatever as a normal argument name.\n          return;\n        }\n\n        if (firstChar === \"$\") {\n          const variableName = firstKey.slice(1);\n          if (variables && hasOwn.call(variables, variableName)) {\n            const varKeyPath = keyPath.slice(0);\n            varKeyPath[0] = variableName;\n            return extractKeyPath(variables, varKeyPath);\n          }\n          // If the key started with $ but there was no corresponding variable, we\n          // want to omit this value from the key object, not fall through to\n          // treating $whatever as a normal argument name.\n          return;\n        }\n\n        if (args) {\n          return extractKeyPath(args, keyPath);\n        }\n      });\n\n      const suffix = JSON.stringify(collected);\n\n      // If no arguments were passed to this field, and it didn't have any other\n      // field key contributions from directives or variables, hide the empty\n      // :{} suffix from the field key. However, a field passed no arguments can\n      // still end up with a non-empty :{...} suffix if its key configuration\n      // refers to directives or variables.\n      if (args || suffix !== \"{}\") {\n        fieldName += \":\" + suffix;\n      }\n\n      return fieldName;\n    })\n  );\n}\n\nexport function collectSpecifierPaths(\n  specifier: KeySpecifier,\n  extractor: (path: string[]) => any\n): Record<string, any> {\n  // For each path specified by specifier, invoke the extractor, and repeatedly\n  // merge the results together, with appropriate ancestor context.\n  const merger = new DeepMerger();\n  return getSpecifierPaths(specifier).reduce((collected, path) => {\n    let toMerge = extractor(path);\n    if (toMerge !== void 0) {\n      // This path is not expected to contain array indexes, so the toMerge\n      // reconstruction will not contain arrays. TODO Fix this?\n      for (let i = path.length - 1; i >= 0; --i) {\n        toMerge = { [path[i]]: toMerge };\n      }\n      collected = merger.merge(collected, toMerge);\n    }\n    return collected;\n  }, Object.create(null));\n}\n\nexport function getSpecifierPaths(spec: KeySpecifier): string[][] {\n  const info = lookupSpecifierInfo(spec);\n\n  if (!info.paths) {\n    const paths: string[][] = (info.paths = []);\n    const currentPath: string[] = [];\n\n    spec.forEach((s, i) => {\n      if (isArray(s)) {\n        getSpecifierPaths(s).forEach((p) => paths.push(currentPath.concat(p)));\n        currentPath.length = 0;\n      } else {\n        currentPath.push(s);\n        if (!isArray(spec[i + 1])) {\n          paths.push(currentPath.slice(0));\n          currentPath.length = 0;\n        }\n      }\n    });\n  }\n\n  return info.paths!;\n}\n\nfunction extractKey<TObj extends Record<string, any>, TKey extends string>(\n  object: TObj,\n  key: TKey\n): TObj[TKey] | undefined {\n  return object[key];\n}\n\nexport function extractKeyPath(\n  object: Record<string, any>,\n  path: string[],\n  extract?: typeof extractKey\n): any {\n  // For each key in path, extract the corresponding child property from obj,\n  // flattening arrays if encountered (uncommon for keyFields and keyArgs, but\n  // possible). The final result of path.reduce is normalized so unexpected leaf\n  // objects have their keys safely sorted. That final result is difficult to\n  // type as anything other than any. You're welcome to try to improve the\n  // return type, but keep in mind extractKeyPath is not a public function\n  // (exported only for testing), so the effort may not be worthwhile unless the\n  // limited set of actual callers (see above) pass arguments that TypeScript\n  // can statically type. If we know only that path is some array of strings\n  // (and not, say, a specific tuple of statically known strings), any (or\n  // possibly unknown) is the honest answer.\n  extract = extract || extractKey;\n  return normalize(\n    path.reduce(function reducer(obj, key): any {\n      return isArray(obj) ?\n          obj.map((child) => reducer(child, key))\n        : obj && extract!(obj, key);\n    }, object)\n  );\n}\n\nfunction normalize<T>(value: T): T {\n  // Usually the extracted value will be a scalar value, since most primary\n  // key fields are scalar, but just in case we get an object or an array, we\n  // need to do some normalization of the order of (nested) keys.\n  if (isNonNullObject(value)) {\n    if (isArray(value)) {\n      return value.map(normalize) as any;\n    }\n    return collectSpecifierPaths(Object.keys(value).sort(), (path) =>\n      extractKeyPath(value, path)\n    ) as T;\n  }\n  return value;\n}\n","import { invariant, newInvariantError } from \"../../utilities/globals/index.js\";\n\nimport type {\n  InlineFragmentNode,\n  FragmentDefinitionNode,\n  SelectionSetNode,\n  FieldNode,\n} from \"graphql\";\n\nimport type {\n  FragmentMap,\n  StoreValue,\n  StoreObject,\n  Reference,\n} from \"../../utilities/index.js\";\nimport {\n  storeKeyNameFromField,\n  argumentsObjectFromField,\n  isReference,\n  getStoreKeyName,\n  isNonNullObject,\n  stringifyForDisplay,\n} from \"../../utilities/index.js\";\nimport type {\n  IdGetter,\n  MergeInfo,\n  NormalizedCache,\n  ReadMergeModifyContext,\n} from \"./types.js\";\nimport {\n  hasOwn,\n  fieldNameFromStoreName,\n  storeValueIsStoreObject,\n  selectionSetMatchesResult,\n  TypeOrFieldNameRegExp,\n  defaultDataIdFromObject,\n  isArray,\n} from \"./helpers.js\";\nimport { cacheSlot } from \"./reactiveVars.js\";\nimport type { InMemoryCache } from \"./inMemoryCache.js\";\nimport type {\n  SafeReadonly,\n  FieldSpecifier,\n  ToReferenceFunction,\n  ReadFieldFunction,\n  ReadFieldOptions,\n  CanReadFunction,\n} from \"../core/types/common.js\";\nimport type { WriteContext } from \"./writeToStore.js\";\n\nimport {\n  keyArgsFnFromSpecifier,\n  keyFieldsFnFromSpecifier,\n} from \"./key-extractor.js\";\n\nexport type TypePolicies = {\n  [__typename: string]: TypePolicy;\n};\n\n// TypeScript 3.7 will allow recursive type aliases, so this should work:\n// type KeySpecifier = (string | KeySpecifier)[]\nexport type KeySpecifier = ReadonlyArray<string | KeySpecifier>;\n\nexport type KeyFieldsContext = {\n  // The __typename of the incoming object, even if the __typename field was\n  // aliased to another name in the raw result object. May be undefined when\n  // dataIdFromObject is called for objects without __typename fields.\n  typename: string | undefined;\n\n  // The object to be identified, after processing to remove aliases and\n  // normalize identifiable child objects with references.\n  storeObject: StoreObject;\n\n  // Handy tool for reading additional fields from context.storeObject, either\n  // readField(\"fieldName\") to read storeObject[fieldName], or readField(\"name\",\n  // objectOrReference) to read from another object or Reference. If you read a\n  // field with a read function, that function will be invoked.\n  readField: ReadFieldFunction;\n\n  // If you are writing a custom keyFields function, and you plan to use the raw\n  // result object passed as the first argument, you may also need access to the\n  // selection set and available fragments for this object, just in case any\n  // fields have aliases. Since this logic is tricky to get right, and these\n  // context properties are not even always provided (for example, they are\n  // omitted when calling cache.identify(object), where object is assumed to be\n  // a StoreObject), we recommend you use context.storeObject (which has already\n  // been de-aliased) and context.readField (which can read from references as\n  // well as objects) instead of the raw result object in your keyFields\n  // functions, or just rely on the internal implementation of keyFields:[...]\n  // syntax to get these details right for you.\n  selectionSet?: SelectionSetNode;\n  fragmentMap?: FragmentMap;\n\n  // Internal. May be set by the KeyFieldsFunction to report fields that were\n  // involved in computing the ID. Never passed in by the caller.\n  keyObject?: Record<string, any>;\n};\n\nexport type KeyFieldsFunction = (\n  object: Readonly<StoreObject>,\n  context: KeyFieldsContext\n) => KeySpecifier | false | ReturnType<IdGetter>;\n\ntype KeyFieldsResult = Exclude<ReturnType<KeyFieldsFunction>, KeySpecifier>;\n\n// TODO Should TypePolicy be a generic type, with a TObject or TEntity\n// type parameter?\nexport type TypePolicy = {\n  // Allows defining the primary key fields for this type, either using an\n  // array of field names or a function that returns an arbitrary string.\n  keyFields?: KeySpecifier | KeyFieldsFunction | false;\n\n  // Allows defining a merge function (or merge:true/false shorthand) to\n  // be used for merging objects of this type wherever they appear, unless\n  // the parent field also defines a merge function/boolean (that is,\n  // parent field merge functions take precedence over type policy merge\n  // functions). In many cases, defining merge:true for a given type\n  // policy can save you from specifying merge:true for all the field\n  // policies where that type might be encountered.\n  merge?: FieldMergeFunction | boolean;\n\n  // In the rare event that your schema happens to use a different\n  // __typename for the root Query, Mutation, and/or Schema types, you can\n  // express your deviant preferences by enabling one of these options.\n  queryType?: true;\n  mutationType?: true;\n  subscriptionType?: true;\n\n  fields?: {\n    [fieldName: string]: FieldPolicy<any> | FieldReadFunction<any>;\n  };\n};\n\nexport type KeyArgsFunction = (\n  args: Record<string, any> | null,\n  context: {\n    typename: string;\n    fieldName: string;\n    field: FieldNode | null;\n    variables?: Record<string, any>;\n  }\n) => KeySpecifier | false | ReturnType<IdGetter>;\n\nexport type FieldPolicy<\n  // The internal representation used to store the field's data in the\n  // cache. Must be JSON-serializable if you plan to serialize the result\n  // of cache.extract() using JSON.\n  TExisting = any,\n  // The type of the incoming parameter passed to the merge function,\n  // typically matching the GraphQL response format, but with Reference\n  // objects substituted for any identifiable child objects. Often the\n  // same as TExisting, but not necessarily.\n  TIncoming = TExisting,\n  // The type that the read function actually returns, using TExisting\n  // data and options.args as input. Usually the same as TIncoming.\n  TReadResult = TIncoming,\n  // Allows FieldFunctionOptions definition to be overwritten by the\n  // developer\n  TOptions extends FieldFunctionOptions = FieldFunctionOptions,\n> = {\n  keyArgs?: KeySpecifier | KeyArgsFunction | false;\n  read?: FieldReadFunction<TExisting, TReadResult, TOptions>;\n  merge?: FieldMergeFunction<TExisting, TIncoming, TOptions> | boolean;\n};\n\nexport type StorageType = Record<string, any>;\n\nfunction argsFromFieldSpecifier(spec: FieldSpecifier) {\n  return (\n    spec.args !== void 0 ? spec.args\n    : spec.field ? argumentsObjectFromField(spec.field, spec.variables)\n    : null\n  );\n}\n\nexport interface FieldFunctionOptions<\n  TArgs = Record<string, any>,\n  TVars = Record<string, any>,\n> {\n  args: TArgs | null;\n\n  // The name of the field, equal to options.field.name.value when\n  // options.field is available. Useful if you reuse the same function for\n  // multiple fields, and you need to know which field you're currently\n  // processing. Always a string, even when options.field is null.\n  fieldName: string;\n\n  // The full field key used internally, including serialized key arguments.\n  storeFieldName: string;\n\n  // The FieldNode object used to read this field. Useful if you need to\n  // know about other attributes of the field, such as its directives. This\n  // option will be null when a string was passed to options.readField.\n  field: FieldNode | null;\n\n  variables?: TVars;\n\n  // Utilities for dealing with { __ref } objects.\n  isReference: typeof isReference;\n  toReference: ToReferenceFunction;\n\n  // A handy place to put field-specific data that you want to survive\n  // across multiple read function calls. Useful for field-level caching,\n  // if your read function does any expensive work.\n  storage: StorageType;\n\n  cache: InMemoryCache;\n\n  // Helper function for reading other fields within the current object.\n  // If a foreign object or reference is provided, the field will be read\n  // from that object instead of the current object, so this function can\n  // be used (together with isReference) to examine the cache outside the\n  // current object. If a FieldNode is passed instead of a string, and\n  // that FieldNode has arguments, the same options.variables will be used\n  // to compute the argument values. Note that this function will invoke\n  // custom read functions for other fields, if defined. Always returns\n  // immutable data (enforced with Object.freeze in development).\n  readField: ReadFieldFunction;\n\n  // Returns true for non-normalized StoreObjects and non-dangling\n  // References, indicating that readField(name, objOrRef) has a chance of\n  // working. Useful for filtering out dangling references from lists.\n  canRead: CanReadFunction;\n\n  // Instead of just merging objects with { ...existing, ...incoming }, this\n  // helper function can be used to merge objects in a way that respects any\n  // custom merge functions defined for their fields.\n  mergeObjects: MergeObjectsFunction;\n}\n\ntype MergeObjectsFunction = <T extends StoreObject | Reference>(\n  existing: T,\n  incoming: T\n) => T;\n\nexport type FieldReadFunction<\n  TExisting = any,\n  TReadResult = TExisting,\n  TOptions extends FieldFunctionOptions = FieldFunctionOptions,\n> = (\n  // When reading a field, one often needs to know about any existing\n  // value stored for that field. If the field is read before any value\n  // has been written to the cache, this existing parameter will be\n  // undefined, which makes it easy to use a default parameter expression\n  // to supply the initial value. This parameter is positional (rather\n  // than one of the named options) because that makes it possible for the\n  // developer to annotate it with a type, without also having to provide\n  // a whole new type for the options object.\n  existing: SafeReadonly<TExisting> | undefined,\n  options: TOptions\n) => TReadResult | undefined;\n\nexport type FieldMergeFunction<\n  TExisting = any,\n  TIncoming = TExisting,\n  // Passing the whole FieldFunctionOptions makes the current definition\n  // independent from its implementation\n  TOptions extends FieldFunctionOptions = FieldFunctionOptions,\n> = (\n  existing: SafeReadonly<TExisting> | undefined,\n  // The incoming parameter needs to be positional as well, for the same\n  // reasons discussed in FieldReadFunction above.\n  incoming: SafeReadonly<TIncoming>,\n  options: TOptions\n) => SafeReadonly<TExisting>;\n\nconst nullKeyFieldsFn: KeyFieldsFunction = () => void 0;\nconst simpleKeyArgsFn: KeyArgsFunction = (_args, context) => context.fieldName;\n\n// These merge functions can be selected by specifying merge:true or\n// merge:false in a field policy.\nconst mergeTrueFn: FieldMergeFunction<any> = (\n  existing,\n  incoming,\n  { mergeObjects }\n) => mergeObjects(existing, incoming);\nconst mergeFalseFn: FieldMergeFunction<any> = (_, incoming) => incoming;\n\nexport type PossibleTypesMap = {\n  [supertype: string]: string[];\n};\n\nexport class Policies {\n  private typePolicies: {\n    [__typename: string]: {\n      keyFn?: KeyFieldsFunction;\n      merge?: FieldMergeFunction<any>;\n      fields: {\n        [fieldName: string]: {\n          keyFn?: KeyArgsFunction;\n          read?: FieldReadFunction<any>;\n          merge?: FieldMergeFunction<any>;\n        };\n      };\n    };\n  } = Object.create(null);\n\n  private toBeAdded: {\n    [__typename: string]: TypePolicy[];\n  } = Object.create(null);\n\n  // Map from subtype names to sets of supertype names. Note that this\n  // representation inverts the structure of possibleTypes (whose keys are\n  // supertypes and whose values are arrays of subtypes) because it tends\n  // to be much more efficient to search upwards than downwards.\n  private supertypeMap = new Map<string, Set<string>>();\n\n  // Any fuzzy subtypes specified by possibleTypes will be converted to\n  // RegExp objects and recorded here. Every key of this map can also be\n  // found in supertypeMap. In many cases this Map will be empty, which\n  // means no fuzzy subtype checking will happen in fragmentMatches.\n  private fuzzySubtypes = new Map<string, RegExp>();\n\n  public readonly cache: InMemoryCache;\n\n  public readonly rootIdsByTypename: Record<string, string> =\n    Object.create(null);\n  public readonly rootTypenamesById: Record<string, string> =\n    Object.create(null);\n\n  public readonly usingPossibleTypes = false;\n\n  constructor(\n    private config: {\n      cache: InMemoryCache;\n      dataIdFromObject?: KeyFieldsFunction;\n      possibleTypes?: PossibleTypesMap;\n      typePolicies?: TypePolicies;\n    }\n  ) {\n    this.config = {\n      dataIdFromObject: defaultDataIdFromObject,\n      ...config,\n    };\n\n    this.cache = this.config.cache;\n\n    this.setRootTypename(\"Query\");\n    this.setRootTypename(\"Mutation\");\n    this.setRootTypename(\"Subscription\");\n\n    if (config.possibleTypes) {\n      this.addPossibleTypes(config.possibleTypes);\n    }\n\n    if (config.typePolicies) {\n      this.addTypePolicies(config.typePolicies);\n    }\n  }\n\n  public identify(\n    object: StoreObject,\n    partialContext?: Partial<KeyFieldsContext>\n  ): [string?, StoreObject?] {\n    const policies = this;\n\n    const typename =\n      (partialContext &&\n        (partialContext.typename || partialContext.storeObject?.__typename)) ||\n      object.__typename;\n\n    // It should be possible to write root Query fields with writeFragment,\n    // using { __typename: \"Query\", ... } as the data, but it does not make\n    // sense to allow the same identification behavior for the Mutation and\n    // Subscription types, since application code should never be writing\n    // directly to (or reading directly from) those root objects.\n    if (typename === this.rootTypenamesById.ROOT_QUERY) {\n      return [\"ROOT_QUERY\"];\n    }\n\n    // Default context.storeObject to object if not otherwise provided.\n    const storeObject =\n      (partialContext && partialContext.storeObject) || object;\n\n    const context: KeyFieldsContext = {\n      ...partialContext,\n      typename,\n      storeObject,\n      readField:\n        (partialContext && partialContext.readField) ||\n        function () {\n          const options = normalizeReadFieldOptions(arguments, storeObject);\n          return policies.readField(options, {\n            store: policies.cache[\"data\"],\n            variables: options.variables,\n          });\n        },\n    };\n\n    let id: KeyFieldsResult;\n\n    const policy = typename && this.getTypePolicy(typename);\n    let keyFn = (policy && policy.keyFn) || this.config.dataIdFromObject;\n    while (keyFn) {\n      const specifierOrId = keyFn({ ...object, ...storeObject }, context);\n      if (isArray(specifierOrId)) {\n        keyFn = keyFieldsFnFromSpecifier(specifierOrId);\n      } else {\n        id = specifierOrId;\n        break;\n      }\n    }\n\n    id = id ? String(id) : void 0;\n    return context.keyObject ? [id, context.keyObject] : [id];\n  }\n\n  public addTypePolicies(typePolicies: TypePolicies) {\n    Object.keys(typePolicies).forEach((typename) => {\n      const { queryType, mutationType, subscriptionType, ...incoming } =\n        typePolicies[typename];\n\n      // Though {query,mutation,subscription}Type configurations are rare,\n      // it's important to call setRootTypename as early as possible,\n      // since these configurations should apply consistently for the\n      // entire lifetime of the cache. Also, since only one __typename can\n      // qualify as one of these root types, these three properties cannot\n      // be inherited, unlike the rest of the incoming properties. That\n      // restriction is convenient, because the purpose of this.toBeAdded\n      // is to delay the processing of type/field policies until the first\n      // time they're used, allowing policies to be added in any order as\n      // long as all relevant policies (including policies for supertypes)\n      // have been added by the time a given policy is used for the first\n      // time. In other words, since inheritance doesn't matter for these\n      // properties, there's also no need to delay their processing using\n      // the this.toBeAdded queue.\n      if (queryType) this.setRootTypename(\"Query\", typename);\n      if (mutationType) this.setRootTypename(\"Mutation\", typename);\n      if (subscriptionType) this.setRootTypename(\"Subscription\", typename);\n\n      if (hasOwn.call(this.toBeAdded, typename)) {\n        this.toBeAdded[typename].push(incoming);\n      } else {\n        this.toBeAdded[typename] = [incoming];\n      }\n    });\n  }\n\n  private updateTypePolicy(typename: string, incoming: TypePolicy) {\n    const existing = this.getTypePolicy(typename);\n    const { keyFields, fields } = incoming;\n\n    function setMerge(\n      existing: { merge?: FieldMergeFunction | boolean },\n      merge?: FieldMergeFunction | boolean\n    ) {\n      existing.merge =\n        typeof merge === \"function\" ? merge\n          // Pass merge:true as a shorthand for a merge implementation\n          // that returns options.mergeObjects(existing, incoming).\n        : merge === true ? mergeTrueFn\n          // Pass merge:false to make incoming always replace existing\n          // without any warnings about data clobbering.\n        : merge === false ? mergeFalseFn\n        : existing.merge;\n    }\n\n    // Type policies can define merge functions, as an alternative to\n    // using field policies to merge child objects.\n    setMerge(existing, incoming.merge);\n\n    existing.keyFn =\n      // Pass false to disable normalization for this typename.\n      keyFields === false ? nullKeyFieldsFn\n        // Pass an array of strings to use those fields to compute a\n        // composite ID for objects of this typename.\n      : isArray(keyFields) ? keyFieldsFnFromSpecifier(keyFields)\n        // Pass a function to take full control over identification.\n      : typeof keyFields === \"function\" ? keyFields\n        // Leave existing.keyFn unchanged if above cases fail.\n      : existing.keyFn;\n\n    if (fields) {\n      Object.keys(fields).forEach((fieldName) => {\n        const existing = this.getFieldPolicy(typename, fieldName, true)!;\n        const incoming = fields[fieldName];\n\n        if (typeof incoming === \"function\") {\n          existing.read = incoming;\n        } else {\n          const { keyArgs, read, merge } = incoming;\n\n          existing.keyFn =\n            // Pass false to disable argument-based differentiation of\n            // field identities.\n            keyArgs === false ? simpleKeyArgsFn\n              // Pass an array of strings to use named arguments to\n              // compute a composite identity for the field.\n            : isArray(keyArgs) ? keyArgsFnFromSpecifier(keyArgs)\n              // Pass a function to take full control over field identity.\n            : typeof keyArgs === \"function\" ? keyArgs\n              // Leave existing.keyFn unchanged if above cases fail.\n            : existing.keyFn;\n\n          if (typeof read === \"function\") {\n            existing.read = read;\n          }\n\n          setMerge(existing, merge);\n        }\n\n        if (existing.read && existing.merge) {\n          // If we have both a read and a merge function, assume\n          // keyArgs:false, because read and merge together can take\n          // responsibility for interpreting arguments in and out. This\n          // default assumption can always be overridden by specifying\n          // keyArgs explicitly in the FieldPolicy.\n          existing.keyFn = existing.keyFn || simpleKeyArgsFn;\n        }\n      });\n    }\n  }\n\n  private setRootTypename(\n    which: \"Query\" | \"Mutation\" | \"Subscription\",\n    typename: string = which\n  ) {\n    const rootId = \"ROOT_\" + which.toUpperCase();\n    const old = this.rootTypenamesById[rootId];\n    if (typename !== old) {\n      invariant(\n        !old || old === which,\n        `Cannot change root %s __typename more than once`,\n        which\n      );\n      // First, delete any old __typename associated with this rootId from\n      // rootIdsByTypename.\n      if (old) delete this.rootIdsByTypename[old];\n      // Now make this the only __typename that maps to this rootId.\n      this.rootIdsByTypename[typename] = rootId;\n      // Finally, update the __typename associated with this rootId.\n      this.rootTypenamesById[rootId] = typename;\n    }\n  }\n\n  public addPossibleTypes(possibleTypes: PossibleTypesMap) {\n    (this.usingPossibleTypes as boolean) = true;\n    Object.keys(possibleTypes).forEach((supertype) => {\n      // Make sure all types have an entry in this.supertypeMap, even if\n      // their supertype set is empty, so we can return false immediately\n      // from policies.fragmentMatches for unknown supertypes.\n      this.getSupertypeSet(supertype, true);\n\n      possibleTypes[supertype].forEach((subtype) => {\n        this.getSupertypeSet(subtype, true)!.add(supertype);\n        const match = subtype.match(TypeOrFieldNameRegExp);\n        if (!match || match[0] !== subtype) {\n          // TODO Don't interpret just any invalid typename as a RegExp.\n          this.fuzzySubtypes.set(subtype, new RegExp(subtype));\n        }\n      });\n    });\n  }\n\n  private getTypePolicy(typename: string): Policies[\"typePolicies\"][string] {\n    if (!hasOwn.call(this.typePolicies, typename)) {\n      const policy: Policies[\"typePolicies\"][string] = (this.typePolicies[\n        typename\n      ] = Object.create(null));\n      policy.fields = Object.create(null);\n\n      // When the TypePolicy for typename is first accessed, instead of\n      // starting with an empty policy object, inherit any properties or\n      // fields from the type policies of the supertypes of typename.\n      //\n      // Any properties or fields defined explicitly within the TypePolicy\n      // for typename will take precedence, and if there are multiple\n      // supertypes, the properties of policies whose types were added\n      // later via addPossibleTypes will take precedence over those of\n      // earlier supertypes. TODO Perhaps we should warn about these\n      // conflicts in development, and recommend defining the property\n      // explicitly in the subtype policy?\n      //\n      // Field policy inheritance is atomic/shallow: you can't inherit a\n      // field policy and then override just its read function, since read\n      // and merge functions often need to cooperate, so changing only one\n      // of them would be a recipe for inconsistency.\n      //\n      // Once the TypePolicy for typename has been accessed, its properties can\n      // still be updated directly using addTypePolicies, but future changes to\n      // inherited supertype policies will not be reflected in this subtype\n      // policy, because this code runs at most once per typename.\n      let supertypes = this.supertypeMap.get(typename);\n      if (!supertypes && this.fuzzySubtypes.size) {\n        // To make the inheritance logic work for unknown typename strings that\n        // may have fuzzy supertypes, we give this typename an empty supertype\n        // set and then populate it with any fuzzy supertypes that match.\n        supertypes = this.getSupertypeSet(typename, true)!;\n        // This only works for typenames that are directly matched by a fuzzy\n        // supertype. What if there is an intermediate chain of supertypes?\n        // While possible, that situation can only be solved effectively by\n        // specifying the intermediate relationships via possibleTypes, manually\n        // and in a non-fuzzy way.\n        this.fuzzySubtypes.forEach((regExp, fuzzy) => {\n          if (regExp.test(typename)) {\n            // The fuzzy parameter is just the original string version of regExp\n            // (not a valid __typename string), but we can look up the\n            // associated supertype(s) in this.supertypeMap.\n            const fuzzySupertypes = this.supertypeMap.get(fuzzy);\n            if (fuzzySupertypes) {\n              fuzzySupertypes.forEach((supertype) =>\n                supertypes!.add(supertype)\n              );\n            }\n          }\n        });\n      }\n      if (supertypes && supertypes.size) {\n        supertypes.forEach((supertype) => {\n          const { fields, ...rest } = this.getTypePolicy(supertype);\n          Object.assign(policy, rest);\n          Object.assign(policy.fields, fields);\n        });\n      }\n    }\n\n    const inbox = this.toBeAdded[typename];\n    if (inbox && inbox.length) {\n      // Merge the pending policies into this.typePolicies, in the order they\n      // were originally passed to addTypePolicy.\n      inbox.splice(0).forEach((policy) => {\n        this.updateTypePolicy(typename, policy);\n      });\n    }\n\n    return this.typePolicies[typename];\n  }\n\n  private getFieldPolicy(\n    typename: string | undefined,\n    fieldName: string,\n    createIfMissing: boolean\n  ):\n    | {\n        keyFn?: KeyArgsFunction;\n        read?: FieldReadFunction<any>;\n        merge?: FieldMergeFunction<any>;\n      }\n    | undefined {\n    if (typename) {\n      const fieldPolicies = this.getTypePolicy(typename).fields;\n      return (\n        fieldPolicies[fieldName] ||\n        (createIfMissing && (fieldPolicies[fieldName] = Object.create(null)))\n      );\n    }\n  }\n\n  private getSupertypeSet(\n    subtype: string,\n    createIfMissing: boolean\n  ): Set<string> | undefined {\n    let supertypeSet = this.supertypeMap.get(subtype);\n    if (!supertypeSet && createIfMissing) {\n      this.supertypeMap.set(subtype, (supertypeSet = new Set<string>()));\n    }\n    return supertypeSet;\n  }\n\n  public fragmentMatches(\n    fragment: InlineFragmentNode | FragmentDefinitionNode,\n    typename: string | undefined,\n    result?: Record<string, any>,\n    variables?: Record<string, any>\n  ): boolean {\n    if (!fragment.typeCondition) return true;\n\n    // If the fragment has a type condition but the object we're matching\n    // against does not have a __typename, the fragment cannot match.\n    if (!typename) return false;\n\n    const supertype = fragment.typeCondition.name.value;\n    // Common case: fragment type condition and __typename are the same.\n    if (typename === supertype) return true;\n\n    if (this.usingPossibleTypes && this.supertypeMap.has(supertype)) {\n      const typenameSupertypeSet = this.getSupertypeSet(typename, true)!;\n      const workQueue = [typenameSupertypeSet];\n      const maybeEnqueue = (subtype: string) => {\n        const supertypeSet = this.getSupertypeSet(subtype, false);\n        if (\n          supertypeSet &&\n          supertypeSet.size &&\n          workQueue.indexOf(supertypeSet) < 0\n        ) {\n          workQueue.push(supertypeSet);\n        }\n      };\n\n      // We need to check fuzzy subtypes only if we encountered fuzzy\n      // subtype strings in addPossibleTypes, and only while writing to\n      // the cache, since that's when selectionSetMatchesResult gives a\n      // strong signal of fragment matching. The StoreReader class calls\n      // policies.fragmentMatches without passing a result object, so\n      // needToCheckFuzzySubtypes is always false while reading.\n      let needToCheckFuzzySubtypes = !!(result && this.fuzzySubtypes.size);\n      let checkingFuzzySubtypes = false;\n\n      // It's important to keep evaluating workQueue.length each time through\n      // the loop, because the queue can grow while we're iterating over it.\n      for (let i = 0; i < workQueue.length; ++i) {\n        const supertypeSet = workQueue[i];\n\n        if (supertypeSet.has(supertype)) {\n          if (!typenameSupertypeSet.has(supertype)) {\n            if (checkingFuzzySubtypes) {\n              invariant.warn(\n                `Inferring subtype %s of supertype %s`,\n                typename,\n                supertype\n              );\n            }\n            // Record positive results for faster future lookup.\n            // Unfortunately, we cannot safely cache negative results,\n            // because new possibleTypes data could always be added to the\n            // Policies class.\n            typenameSupertypeSet.add(supertype);\n          }\n          return true;\n        }\n\n        supertypeSet.forEach(maybeEnqueue);\n\n        if (\n          needToCheckFuzzySubtypes &&\n          // Start checking fuzzy subtypes only after exhausting all\n          // non-fuzzy subtypes (after the final iteration of the loop).\n          i === workQueue.length - 1 &&\n          // We could wait to compare fragment.selectionSet to result\n          // after we verify the supertype, but this check is often less\n          // expensive than that search, and we will have to do the\n          // comparison anyway whenever we find a potential match.\n          selectionSetMatchesResult(fragment.selectionSet, result!, variables)\n        ) {\n          // We don't always need to check fuzzy subtypes (if no result\n          // was provided, or !this.fuzzySubtypes.size), but, when we do,\n          // we only want to check them once.\n          needToCheckFuzzySubtypes = false;\n          checkingFuzzySubtypes = true;\n\n          // If we find any fuzzy subtypes that match typename, extend the\n          // workQueue to search through the supertypes of those fuzzy\n          // subtypes. Otherwise the for-loop will terminate and we'll\n          // return false below.\n          this.fuzzySubtypes.forEach((regExp, fuzzyString) => {\n            const match = typename.match(regExp);\n            if (match && match[0] === typename) {\n              maybeEnqueue(fuzzyString);\n            }\n          });\n        }\n      }\n    }\n\n    return false;\n  }\n\n  public hasKeyArgs(typename: string | undefined, fieldName: string) {\n    const policy = this.getFieldPolicy(typename, fieldName, false);\n    return !!(policy && policy.keyFn);\n  }\n\n  public getStoreFieldName(fieldSpec: FieldSpecifier): string {\n    const { typename, fieldName } = fieldSpec;\n    const policy = this.getFieldPolicy(typename, fieldName, false);\n    let storeFieldName: Exclude<ReturnType<KeyArgsFunction>, KeySpecifier>;\n\n    let keyFn = policy && policy.keyFn;\n    if (keyFn && typename) {\n      const context: Parameters<KeyArgsFunction>[1] = {\n        typename,\n        fieldName,\n        field: fieldSpec.field || null,\n        variables: fieldSpec.variables,\n      };\n      const args = argsFromFieldSpecifier(fieldSpec);\n      while (keyFn) {\n        const specifierOrString = keyFn(args, context);\n        if (isArray(specifierOrString)) {\n          keyFn = keyArgsFnFromSpecifier(specifierOrString);\n        } else {\n          // If the custom keyFn returns a falsy value, fall back to\n          // fieldName instead.\n          storeFieldName = specifierOrString || fieldName;\n          break;\n        }\n      }\n    }\n\n    if (storeFieldName === void 0) {\n      storeFieldName =\n        fieldSpec.field ?\n          storeKeyNameFromField(fieldSpec.field, fieldSpec.variables)\n        : getStoreKeyName(fieldName, argsFromFieldSpecifier(fieldSpec));\n    }\n\n    // Returning false from a keyArgs function is like configuring\n    // keyArgs: false, but more dynamic.\n    if (storeFieldName === false) {\n      return fieldName;\n    }\n\n    // Make sure custom field names start with the actual field.name.value\n    // of the field, so we can always figure out which properties of a\n    // StoreObject correspond to which original field names.\n    return fieldName === fieldNameFromStoreName(storeFieldName) ? storeFieldName\n      : fieldName + \":\" + storeFieldName;\n  }\n\n  public readField<V = StoreValue>(\n    options: ReadFieldOptions,\n    context: ReadMergeModifyContext\n  ): SafeReadonly<V> | undefined {\n    const objectOrReference = options.from;\n    if (!objectOrReference) return;\n\n    const nameOrField = options.field || options.fieldName;\n    if (!nameOrField) return;\n\n    if (options.typename === void 0) {\n      const typename = context.store.getFieldValue<string>(\n        objectOrReference,\n        \"__typename\"\n      );\n      if (typename) options.typename = typename;\n    }\n\n    const storeFieldName = this.getStoreFieldName(options);\n    const fieldName = fieldNameFromStoreName(storeFieldName);\n    const existing = context.store.getFieldValue<V>(\n      objectOrReference,\n      storeFieldName\n    );\n    const policy = this.getFieldPolicy(options.typename, fieldName, false);\n    const read = policy && policy.read;\n\n    if (read) {\n      const readOptions = makeFieldFunctionOptions(\n        this,\n        objectOrReference,\n        options,\n        context,\n        context.store.getStorage(\n          isReference(objectOrReference) ?\n            objectOrReference.__ref\n          : objectOrReference,\n          storeFieldName\n        )\n      );\n\n      // Call read(existing, readOptions) with cacheSlot holding this.cache.\n      return cacheSlot.withValue(this.cache, read, [\n        existing,\n        readOptions,\n      ]) as SafeReadonly<V>;\n    }\n\n    return existing;\n  }\n\n  public getReadFunction(\n    typename: string | undefined,\n    fieldName: string\n  ): FieldReadFunction | undefined {\n    const policy = this.getFieldPolicy(typename, fieldName, false);\n    return policy && policy.read;\n  }\n\n  public getMergeFunction(\n    parentTypename: string | undefined,\n    fieldName: string,\n    childTypename: string | undefined\n  ): FieldMergeFunction | undefined {\n    let policy:\n      | Policies[\"typePolicies\"][string]\n      | Policies[\"typePolicies\"][string][\"fields\"][string]\n      | undefined = this.getFieldPolicy(parentTypename, fieldName, false);\n    let merge = policy && policy.merge;\n    if (!merge && childTypename) {\n      policy = this.getTypePolicy(childTypename);\n      merge = policy && policy.merge;\n    }\n    return merge;\n  }\n\n  public runMergeFunction(\n    existing: StoreValue,\n    incoming: StoreValue,\n    { field, typename, merge }: MergeInfo,\n    context: WriteContext,\n    storage?: StorageType\n  ) {\n    if (merge === mergeTrueFn) {\n      // Instead of going to the trouble of creating a full\n      // FieldFunctionOptions object and calling mergeTrueFn, we can\n      // simply call mergeObjects, as mergeTrueFn would.\n      return makeMergeObjectsFunction(context.store)(\n        existing as StoreObject,\n        incoming as StoreObject\n      );\n    }\n\n    if (merge === mergeFalseFn) {\n      // Likewise for mergeFalseFn, whose implementation is even simpler.\n      return incoming;\n    }\n\n    // If cache.writeQuery or cache.writeFragment was called with\n    // options.overwrite set to true, we still call merge functions, but\n    // the existing data is always undefined, so the merge function will\n    // not attempt to combine the incoming data with the existing data.\n    if (context.overwrite) {\n      existing = void 0;\n    }\n\n    return merge(\n      existing,\n      incoming,\n      makeFieldFunctionOptions(\n        this,\n        // Unlike options.readField for read functions, we do not fall\n        // back to the current object if no foreignObjOrRef is provided,\n        // because it's not clear what the current object should be for\n        // merge functions: the (possibly undefined) existing object, or\n        // the incoming object? If you think your merge function needs\n        // to read sibling fields in order to produce a new value for\n        // the current field, you might want to rethink your strategy,\n        // because that's a recipe for making merge behavior sensitive\n        // to the order in which fields are written into the cache.\n        // However, readField(name, ref) is useful for merge functions\n        // that need to deduplicate child objects and references.\n        void 0,\n        {\n          typename,\n          fieldName: field.name.value,\n          field,\n          variables: context.variables,\n        },\n        context,\n        storage || Object.create(null)\n      )\n    );\n  }\n}\n\nfunction makeFieldFunctionOptions(\n  policies: Policies,\n  objectOrReference: StoreObject | Reference | undefined,\n  fieldSpec: FieldSpecifier,\n  context: ReadMergeModifyContext,\n  storage: StorageType\n): FieldFunctionOptions {\n  const storeFieldName = policies.getStoreFieldName(fieldSpec);\n  const fieldName = fieldNameFromStoreName(storeFieldName);\n  const variables = fieldSpec.variables || context.variables;\n  const { toReference, canRead } = context.store;\n\n  return {\n    args: argsFromFieldSpecifier(fieldSpec),\n    field: fieldSpec.field || null,\n    fieldName,\n    storeFieldName,\n    variables,\n    isReference,\n    toReference,\n    storage,\n    cache: policies.cache,\n    canRead,\n    readField<T>() {\n      return policies.readField<T>(\n        normalizeReadFieldOptions(arguments, objectOrReference, variables),\n        context\n      );\n    },\n    mergeObjects: makeMergeObjectsFunction(context.store),\n  };\n}\n\nexport function normalizeReadFieldOptions(\n  readFieldArgs: IArguments,\n  objectOrReference: StoreObject | Reference | undefined,\n  variables?: ReadMergeModifyContext[\"variables\"]\n): ReadFieldOptions {\n  const { 0: fieldNameOrOptions, 1: from, length: argc } = readFieldArgs;\n\n  let options: ReadFieldOptions;\n\n  if (typeof fieldNameOrOptions === \"string\") {\n    options = {\n      fieldName: fieldNameOrOptions,\n      // Default to objectOrReference only when no second argument was\n      // passed for the from parameter, not when undefined is explicitly\n      // passed as the second argument.\n      from: argc > 1 ? from : objectOrReference,\n    };\n  } else {\n    options = { ...fieldNameOrOptions };\n    // Default to objectOrReference only when fieldNameOrOptions.from is\n    // actually omitted, rather than just undefined.\n    if (!hasOwn.call(options, \"from\")) {\n      options.from = objectOrReference;\n    }\n  }\n\n  if (__DEV__ && options.from === void 0) {\n    invariant.warn(\n      `Undefined 'from' passed to readField with arguments %s`,\n      stringifyForDisplay(Array.from(readFieldArgs))\n    );\n  }\n\n  if (void 0 === options.variables) {\n    options.variables = variables;\n  }\n\n  return options;\n}\n\nfunction makeMergeObjectsFunction(\n  store: NormalizedCache\n): MergeObjectsFunction {\n  return function mergeObjects(existing, incoming) {\n    if (isArray(existing) || isArray(incoming)) {\n      throw newInvariantError(\"Cannot automatically merge arrays\");\n    }\n\n    // These dynamic checks are necessary because the parameters of a\n    // custom merge function can easily have the any type, so the type\n    // system cannot always enforce the StoreObject | Reference parameter\n    // types of options.mergeObjects.\n    if (isNonNullObject(existing) && isNonNullObject(incoming)) {\n      const eType = store.getFieldValue(existing, \"__typename\");\n      const iType = store.getFieldValue(incoming, \"__typename\");\n      const typesDiffer = eType && iType && eType !== iType;\n\n      if (typesDiffer) {\n        return incoming;\n      }\n\n      if (isReference(existing) && storeValueIsStoreObject(incoming)) {\n        // Update the normalized EntityStore for the entity identified by\n        // existing.__ref, preferring/overwriting any fields contributed by the\n        // newer incoming StoreObject.\n        store.merge(existing.__ref, incoming);\n        return existing;\n      }\n\n      if (storeValueIsStoreObject(existing) && isReference(incoming)) {\n        // Update the normalized EntityStore for the entity identified by\n        // incoming.__ref, taking fields from the older existing object only if\n        // those fields are not already present in the newer StoreObject\n        // identified by incoming.__ref.\n        store.merge(existing, incoming.__ref);\n        return incoming;\n      }\n\n      if (\n        storeValueIsStoreObject(existing) &&\n        storeValueIsStoreObject(incoming)\n      ) {\n        return { ...existing, ...incoming };\n      }\n    }\n\n    return incoming;\n  };\n}\n","import { invariant, newInvariantError } from \"../../utilities/globals/index.js\";\nimport { equal } from \"@wry/equality\";\nimport { Trie } from \"@wry/trie\";\nimport type { SelectionSetNode, FieldNode } from \"graphql\";\nimport { Kind } from \"graphql\";\n\nimport type {\n  FragmentMap,\n  FragmentMapFunction,\n  StoreValue,\n  StoreObject,\n  Reference,\n} from \"../../utilities/index.js\";\nimport {\n  getFragmentFromSelection,\n  getDefaultValues,\n  getOperationDefinition,\n  getTypenameFromResult,\n  makeReference,\n  isField,\n  resultKeyNameFromField,\n  isReference,\n  shouldInclude,\n  cloneDeep,\n  addTypenameToDocument,\n  isNonEmptyArray,\n  argumentsObjectFromField,\n  canonicalStringify,\n} from \"../../utilities/index.js\";\n\nimport type {\n  NormalizedCache,\n  ReadMergeModifyContext,\n  MergeTree,\n  InMemoryCacheConfig,\n} from \"./types.js\";\nimport {\n  isArray,\n  makeProcessedFieldsMerger,\n  fieldNameFromStoreName,\n  storeValueIsStoreObject,\n  extractFragmentContext,\n} from \"./helpers.js\";\nimport type { StoreReader } from \"./readFromStore.js\";\nimport type { InMemoryCache } from \"./inMemoryCache.js\";\nimport type { EntityStore } from \"./entityStore.js\";\nimport type { Cache } from \"../../core/index.js\";\nimport { normalizeReadFieldOptions } from \"./policies.js\";\nimport type { ReadFieldFunction } from \"../core/types/common.js\";\n\nexport interface WriteContext extends ReadMergeModifyContext {\n  readonly written: {\n    [dataId: string]: SelectionSetNode[];\n  };\n  readonly fragmentMap: FragmentMap;\n  lookupFragment: FragmentMapFunction;\n  // General-purpose deep-merge function for use during writes.\n  merge<T>(existing: T, incoming: T): T;\n  // If true, merge functions will be called with undefined existing data.\n  overwrite: boolean;\n  incomingById: Map<\n    string,\n    {\n      storeObject: StoreObject;\n      mergeTree?: MergeTree;\n      fieldNodeSet: Set<FieldNode>;\n    }\n  >;\n  // Directive metadata for @client and @defer. We could use a bitfield for this\n  // information to save some space, and use that bitfield number as the keys in\n  // the context.flavors Map.\n  clientOnly: boolean;\n  deferred: boolean;\n  flavors: Map<string, FlavorableWriteContext>;\n}\n\ntype FlavorableWriteContext = Pick<\n  WriteContext,\n  \"clientOnly\" | \"deferred\" | \"flavors\"\n>;\n\n// Since there are only four possible combinations of context.clientOnly and\n// context.deferred values, we should need at most four \"flavors\" of any given\n// WriteContext. To avoid creating multiple copies of the same context, we cache\n// the contexts in the context.flavors Map (shared by all flavors) according to\n// their clientOnly and deferred values (always in that order).\nfunction getContextFlavor<TContext extends FlavorableWriteContext>(\n  context: TContext,\n  clientOnly: TContext[\"clientOnly\"],\n  deferred: TContext[\"deferred\"]\n): TContext {\n  const key = `${clientOnly}${deferred}`;\n  let flavored = context.flavors.get(key);\n  if (!flavored) {\n    context.flavors.set(\n      key,\n      (flavored =\n        context.clientOnly === clientOnly && context.deferred === deferred ?\n          context\n        : {\n            ...context,\n            clientOnly,\n            deferred,\n          })\n    );\n  }\n  return flavored as TContext;\n}\n\ninterface ProcessSelectionSetOptions {\n  dataId?: string;\n  result: Record<string, any>;\n  selectionSet: SelectionSetNode;\n  context: WriteContext;\n  mergeTree: MergeTree;\n}\n\nexport class StoreWriter {\n  constructor(\n    public readonly cache: InMemoryCache,\n    private reader?: StoreReader,\n    private fragments?: InMemoryCacheConfig[\"fragments\"]\n  ) {}\n\n  public writeToStore(\n    store: NormalizedCache,\n    { query, result, dataId, variables, overwrite }: Cache.WriteOptions\n  ): Reference | undefined {\n    const operationDefinition = getOperationDefinition(query)!;\n    const merger = makeProcessedFieldsMerger();\n\n    variables = {\n      ...getDefaultValues(operationDefinition),\n      ...variables!,\n    };\n\n    const context: WriteContext = {\n      store,\n      written: Object.create(null),\n      merge<T>(existing: T, incoming: T) {\n        return merger.merge(existing, incoming) as T;\n      },\n      variables,\n      varString: canonicalStringify(variables),\n      ...extractFragmentContext(query, this.fragments),\n      overwrite: !!overwrite,\n      incomingById: new Map(),\n      clientOnly: false,\n      deferred: false,\n      flavors: new Map(),\n    };\n\n    const ref = this.processSelectionSet({\n      result: result || Object.create(null),\n      dataId,\n      selectionSet: operationDefinition.selectionSet,\n      mergeTree: { map: new Map() },\n      context,\n    });\n\n    if (!isReference(ref)) {\n      throw newInvariantError(`Could not identify object %s`, result);\n    }\n\n    // So far, the store has not been modified, so now it's time to process\n    // context.incomingById and merge those incoming fields into context.store.\n    context.incomingById.forEach(\n      ({ storeObject, mergeTree, fieldNodeSet }, dataId) => {\n        const entityRef = makeReference(dataId);\n\n        if (mergeTree && mergeTree.map.size) {\n          const applied = this.applyMerges(\n            mergeTree,\n            entityRef,\n            storeObject,\n            context\n          );\n          if (isReference(applied)) {\n            // Assume References returned by applyMerges have already been merged\n            // into the store. See makeMergeObjectsFunction in policies.ts for an\n            // example of how this can happen.\n            return;\n          }\n          // Otherwise, applyMerges returned a StoreObject, whose fields we should\n          // merge into the store (see store.merge statement below).\n          storeObject = applied;\n        }\n\n        if (__DEV__ && !context.overwrite) {\n          const fieldsWithSelectionSets: Record<string, true> =\n            Object.create(null);\n          fieldNodeSet.forEach((field) => {\n            if (field.selectionSet) {\n              fieldsWithSelectionSets[field.name.value] = true;\n            }\n          });\n\n          const hasSelectionSet = (storeFieldName: string) =>\n            fieldsWithSelectionSets[fieldNameFromStoreName(storeFieldName)] ===\n            true;\n\n          const hasMergeFunction = (storeFieldName: string) => {\n            const childTree = mergeTree && mergeTree.map.get(storeFieldName);\n            return Boolean(childTree && childTree.info && childTree.info.merge);\n          };\n\n          Object.keys(storeObject).forEach((storeFieldName) => {\n            // If a merge function was defined for this field, trust that it\n            // did the right thing about (not) clobbering data. If the field\n            // has no selection set, it's a scalar field, so it doesn't need\n            // a merge function (even if it's an object, like JSON data).\n            if (\n              hasSelectionSet(storeFieldName) &&\n              !hasMergeFunction(storeFieldName)\n            ) {\n              warnAboutDataLoss(\n                entityRef,\n                storeObject,\n                storeFieldName,\n                context.store\n              );\n            }\n          });\n        }\n\n        store.merge(dataId, storeObject);\n      }\n    );\n\n    // Any IDs written explicitly to the cache will be retained as\n    // reachable root IDs for garbage collection purposes. Although this\n    // logic includes root IDs like ROOT_QUERY and ROOT_MUTATION, their\n    // retainment counts are effectively ignored because cache.gc() always\n    // includes them in its root ID set.\n    store.retain(ref.__ref);\n\n    return ref;\n  }\n\n  private processSelectionSet({\n    dataId,\n    result,\n    selectionSet,\n    context,\n    // This object allows processSelectionSet to report useful information\n    // to its callers without explicitly returning that information.\n    mergeTree,\n  }: ProcessSelectionSetOptions): StoreObject | Reference {\n    const { policies } = this.cache;\n\n    // This variable will be repeatedly updated using context.merge to\n    // accumulate all fields that need to be written into the store.\n    let incoming: StoreObject = Object.create(null);\n\n    // If typename was not passed in, infer it. Note that typename is\n    // always passed in for tricky-to-infer cases such as \"Query\" for\n    // ROOT_QUERY.\n    const typename: string | undefined =\n      (dataId && policies.rootTypenamesById[dataId]) ||\n      getTypenameFromResult(result, selectionSet, context.fragmentMap) ||\n      (dataId && (context.store.get(dataId, \"__typename\") as string));\n\n    if (\"string\" === typeof typename) {\n      incoming.__typename = typename;\n    }\n\n    // This readField function will be passed as context.readField in the\n    // KeyFieldsContext object created within policies.identify (called below).\n    // In addition to reading from the existing context.store (thanks to the\n    // policies.readField(options, context) line at the very bottom), this\n    // version of readField can read from Reference objects that are currently\n    // pending in context.incomingById, which is important whenever keyFields\n    // need to be extracted from a child object that processSelectionSet has\n    // turned into a Reference.\n    const readField: ReadFieldFunction = function (this: void) {\n      const options = normalizeReadFieldOptions(\n        arguments,\n        incoming,\n        context.variables\n      );\n\n      if (isReference(options.from)) {\n        const info = context.incomingById.get(options.from.__ref);\n        if (info) {\n          const result = policies.readField(\n            {\n              ...options,\n              from: info.storeObject,\n            },\n            context\n          );\n\n          if (result !== void 0) {\n            return result;\n          }\n        }\n      }\n\n      return policies.readField(options, context);\n    };\n\n    const fieldNodeSet = new Set<FieldNode>();\n\n    this.flattenFields(\n      selectionSet,\n      result,\n      // This WriteContext will be the default context value for fields returned\n      // by the flattenFields method, but some fields may be assigned a modified\n      // context, depending on the presence of @client and other directives.\n      context,\n      typename\n    ).forEach((context, field) => {\n      const resultFieldKey = resultKeyNameFromField(field);\n      const value = result[resultFieldKey];\n\n      fieldNodeSet.add(field);\n\n      if (value !== void 0) {\n        const storeFieldName = policies.getStoreFieldName({\n          typename,\n          fieldName: field.name.value,\n          field,\n          variables: context.variables,\n        });\n\n        const childTree = getChildMergeTree(mergeTree, storeFieldName);\n\n        let incomingValue = this.processFieldValue(\n          value,\n          field,\n          // Reset context.clientOnly and context.deferred to their default\n          // values before processing nested selection sets.\n          field.selectionSet ?\n            getContextFlavor(context, false, false)\n          : context,\n          childTree\n        );\n\n        // To determine if this field holds a child object with a merge function\n        // defined in its type policy (see PR #7070), we need to figure out the\n        // child object's __typename.\n        let childTypename: string | undefined;\n\n        // The field's value can be an object that has a __typename only if the\n        // field has a selection set. Otherwise incomingValue is scalar.\n        if (\n          field.selectionSet &&\n          (isReference(incomingValue) || storeValueIsStoreObject(incomingValue))\n        ) {\n          childTypename = readField<string>(\"__typename\", incomingValue);\n        }\n\n        const merge = policies.getMergeFunction(\n          typename,\n          field.name.value,\n          childTypename\n        );\n\n        if (merge) {\n          childTree.info = {\n            // TODO Check compatibility against any existing childTree.field?\n            field,\n            typename,\n            merge,\n          };\n        } else {\n          maybeRecycleChildMergeTree(mergeTree, storeFieldName);\n        }\n\n        incoming = context.merge(incoming, {\n          [storeFieldName]: incomingValue,\n        });\n      } else if (\n        __DEV__ &&\n        !context.clientOnly &&\n        !context.deferred &&\n        !addTypenameToDocument.added(field) &&\n        // If the field has a read function, it may be a synthetic field or\n        // provide a default value, so its absence from the written data should\n        // not be cause for alarm.\n        !policies.getReadFunction(typename, field.name.value)\n      ) {\n        invariant.error(\n          `Missing field '%s' while writing result %o`,\n          resultKeyNameFromField(field),\n          result\n        );\n      }\n    });\n\n    // Identify the result object, even if dataId was already provided,\n    // since we always need keyObject below.\n    try {\n      const [id, keyObject] = policies.identify(result, {\n        typename,\n        selectionSet,\n        fragmentMap: context.fragmentMap,\n        storeObject: incoming,\n        readField,\n      });\n\n      // If dataId was not provided, fall back to the id just generated by\n      // policies.identify.\n      dataId = dataId || id;\n\n      // Write any key fields that were used during identification, even if\n      // they were not mentioned in the original query.\n      if (keyObject) {\n        // TODO Reverse the order of the arguments?\n        incoming = context.merge(incoming, keyObject);\n      }\n    } catch (e) {\n      // If dataId was provided, tolerate failure of policies.identify.\n      if (!dataId) throw e;\n    }\n\n    if (\"string\" === typeof dataId) {\n      const dataRef = makeReference(dataId);\n\n      // Avoid processing the same entity object using the same selection\n      // set more than once. We use an array instead of a Set since most\n      // entity IDs will be written using only one selection set, so the\n      // size of this array is likely to be very small, meaning indexOf is\n      // likely to be faster than Set.prototype.has.\n      const sets = context.written[dataId] || (context.written[dataId] = []);\n      if (sets.indexOf(selectionSet) >= 0) return dataRef;\n      sets.push(selectionSet);\n\n      // If we're about to write a result object into the store, but we\n      // happen to know that the exact same (===) result object would be\n      // returned if we were to reread the result with the same inputs,\n      // then we can skip the rest of the processSelectionSet work for\n      // this object, and immediately return a Reference to it.\n      if (\n        this.reader &&\n        this.reader.isFresh(result, dataRef, selectionSet, context)\n      ) {\n        return dataRef;\n      }\n\n      const previous = context.incomingById.get(dataId);\n      if (previous) {\n        previous.storeObject = context.merge(previous.storeObject, incoming);\n        previous.mergeTree = mergeMergeTrees(previous.mergeTree, mergeTree);\n        fieldNodeSet.forEach((field) => previous.fieldNodeSet.add(field));\n      } else {\n        context.incomingById.set(dataId, {\n          storeObject: incoming,\n          // Save a reference to mergeTree only if it is not empty, because\n          // empty MergeTrees may be recycled by maybeRecycleChildMergeTree and\n          // reused for entirely different parts of the result tree.\n          mergeTree: mergeTreeIsEmpty(mergeTree) ? void 0 : mergeTree,\n          fieldNodeSet,\n        });\n      }\n\n      return dataRef;\n    }\n\n    return incoming;\n  }\n\n  private processFieldValue(\n    value: any,\n    field: FieldNode,\n    context: WriteContext,\n    mergeTree: MergeTree\n  ): StoreValue {\n    if (!field.selectionSet || value === null) {\n      // In development, we need to clone scalar values so that they can be\n      // safely frozen with maybeDeepFreeze in readFromStore.ts. In production,\n      // it's cheaper to store the scalar values directly in the cache.\n      return __DEV__ ? cloneDeep(value) : value;\n    }\n\n    if (isArray(value)) {\n      return value.map((item, i) => {\n        const value = this.processFieldValue(\n          item,\n          field,\n          context,\n          getChildMergeTree(mergeTree, i)\n        );\n        maybeRecycleChildMergeTree(mergeTree, i);\n        return value;\n      });\n    }\n\n    return this.processSelectionSet({\n      result: value,\n      selectionSet: field.selectionSet,\n      context,\n      mergeTree,\n    });\n  }\n\n  // Implements https://spec.graphql.org/draft/#sec-Field-Collection, but with\n  // some additions for tracking @client and @defer directives.\n  private flattenFields<\n    TContext extends Pick<\n      WriteContext,\n      | \"clientOnly\"\n      | \"deferred\"\n      | \"flavors\"\n      | \"fragmentMap\"\n      | \"lookupFragment\"\n      | \"variables\"\n    >,\n  >(\n    selectionSet: SelectionSetNode,\n    result: Record<string, any>,\n    context: TContext,\n    typename = getTypenameFromResult(result, selectionSet, context.fragmentMap)\n  ): Map<FieldNode, TContext> {\n    const fieldMap = new Map<FieldNode, TContext>();\n    const { policies } = this.cache;\n\n    const limitingTrie = new Trie<{\n      // Tracks whether (selectionSet, clientOnly, deferred) has been flattened\n      // before. The GraphQL specification only uses the fragment name for\n      // skipping previously visited fragments, but the top-level fragment\n      // selection set corresponds 1:1 with the fagment name (and is slightly\n      // easier too work with), and we need to consider clientOnly and deferred\n      // values as well, potentially revisiting selection sets that were\n      // previously visited with different inherited configurations of those\n      // directives.\n      visited?: boolean;\n    }>(false); // No need for WeakMap, since limitingTrie does not escape.\n\n    (function flatten(\n      this: void,\n      selectionSet: SelectionSetNode,\n      inheritedContext: TContext\n    ) {\n      const visitedNode = limitingTrie.lookup(\n        selectionSet,\n        // Because we take inheritedClientOnly and inheritedDeferred into\n        // consideration here (in addition to selectionSet), it's possible for\n        // the same selection set to be flattened more than once, if it appears\n        // in the query with different @client and/or @directive configurations.\n        inheritedContext.clientOnly,\n        inheritedContext.deferred\n      );\n      if (visitedNode.visited) return;\n      visitedNode.visited = true;\n\n      selectionSet.selections.forEach((selection) => {\n        if (!shouldInclude(selection, context.variables)) return;\n\n        let { clientOnly, deferred } = inheritedContext;\n        if (\n          // Since the presence of @client or @defer on this field can only\n          // cause clientOnly or deferred to become true, we can skip the\n          // forEach loop if both clientOnly and deferred are already true.\n          !(clientOnly && deferred) &&\n          isNonEmptyArray(selection.directives)\n        ) {\n          selection.directives.forEach((dir) => {\n            const name = dir.name.value;\n            if (name === \"client\") clientOnly = true;\n            if (name === \"defer\") {\n              const args = argumentsObjectFromField(dir, context.variables);\n              // The @defer directive takes an optional args.if boolean\n              // argument, similar to @include(if: boolean). Note that\n              // @defer(if: false) does not make context.deferred false, but\n              // instead behaves as if there was no @defer directive.\n              if (!args || (args as { if?: boolean }).if !== false) {\n                deferred = true;\n              }\n              // TODO In the future, we may want to record args.label using\n              // context.deferred, if a label is specified.\n            }\n          });\n        }\n\n        if (isField(selection)) {\n          const existing = fieldMap.get(selection);\n          if (existing) {\n            // If this field has been visited along another recursive path\n            // before, the final context should have clientOnly or deferred set\n            // to true only if *all* paths have the directive (hence the &&).\n            clientOnly = clientOnly && existing.clientOnly;\n            deferred = deferred && existing.deferred;\n          }\n\n          fieldMap.set(\n            selection,\n            getContextFlavor(context, clientOnly, deferred)\n          );\n        } else {\n          const fragment = getFragmentFromSelection(\n            selection,\n            context.lookupFragment\n          );\n\n          if (!fragment && selection.kind === Kind.FRAGMENT_SPREAD) {\n            throw newInvariantError(\n              `No fragment named %s`,\n              selection.name.value\n            );\n          }\n\n          if (\n            fragment &&\n            policies.fragmentMatches(\n              fragment,\n              typename,\n              result,\n              context.variables\n            )\n          ) {\n            flatten(\n              fragment.selectionSet,\n              getContextFlavor(context, clientOnly, deferred)\n            );\n          }\n        }\n      });\n    })(selectionSet, context);\n\n    return fieldMap;\n  }\n\n  private applyMerges<T extends StoreValue>(\n    mergeTree: MergeTree,\n    existing: StoreValue,\n    incoming: T,\n    context: WriteContext,\n    getStorageArgs?: Parameters<EntityStore[\"getStorage\"]>\n  ): T | Reference {\n    if (mergeTree.map.size && !isReference(incoming)) {\n      const e: StoreObject | Reference | undefined =\n        // Items in the same position in different arrays are not\n        // necessarily related to each other, so when incoming is an array\n        // we process its elements as if there was no existing data.\n        (\n          !isArray(incoming) &&\n          // Likewise, existing must be either a Reference or a StoreObject\n          // in order for its fields to be safe to merge with the fields of\n          // the incoming object.\n          (isReference(existing) || storeValueIsStoreObject(existing))\n        ) ?\n          existing\n        : void 0;\n\n      // This narrowing is implied by mergeTree.map.size > 0 and\n      // !isReference(incoming), though TypeScript understandably cannot\n      // hope to infer this type.\n      const i = incoming as StoreObject | StoreValue[];\n\n      // The options.storage objects provided to read and merge functions\n      // are derived from the identity of the parent object plus a\n      // sequence of storeFieldName strings/numbers identifying the nested\n      // field name path of each field value to be merged.\n      if (e && !getStorageArgs) {\n        getStorageArgs = [isReference(e) ? e.__ref : e];\n      }\n\n      // It's possible that applying merge functions to this subtree will\n      // not change the incoming data, so this variable tracks the fields\n      // that did change, so we can create a new incoming object when (and\n      // only when) at least one incoming field has changed. We use a Map\n      // to preserve the type of numeric keys.\n      let changedFields: Map<string | number, StoreValue> | undefined;\n\n      const getValue = (\n        from: typeof e | typeof i,\n        name: string | number\n      ): StoreValue => {\n        return (\n          isArray(from) ?\n            typeof name === \"number\" ?\n              from[name]\n            : void 0\n          : context.store.getFieldValue(from, String(name))\n        );\n      };\n\n      mergeTree.map.forEach((childTree, storeFieldName) => {\n        const eVal = getValue(e, storeFieldName);\n        const iVal = getValue(i, storeFieldName);\n        // If we have no incoming data, leave any existing data untouched.\n        if (void 0 === iVal) return;\n        if (getStorageArgs) {\n          getStorageArgs.push(storeFieldName);\n        }\n        const aVal = this.applyMerges(\n          childTree,\n          eVal,\n          iVal,\n          context,\n          getStorageArgs\n        );\n        if (aVal !== iVal) {\n          changedFields = changedFields || new Map();\n          changedFields.set(storeFieldName, aVal);\n        }\n        if (getStorageArgs) {\n          invariant(getStorageArgs.pop() === storeFieldName);\n        }\n      });\n\n      if (changedFields) {\n        // Shallow clone i so we can add changed fields to it.\n        incoming = (isArray(i) ? i.slice(0) : { ...i }) as T;\n        changedFields.forEach((value, name) => {\n          (incoming as any)[name] = value;\n        });\n      }\n    }\n\n    if (mergeTree.info) {\n      return this.cache.policies.runMergeFunction(\n        existing,\n        incoming,\n        mergeTree.info,\n        context,\n        getStorageArgs && context.store.getStorage(...getStorageArgs)\n      );\n    }\n\n    return incoming;\n  }\n}\n\nconst emptyMergeTreePool: MergeTree[] = [];\n\nfunction getChildMergeTree(\n  { map }: MergeTree,\n  name: string | number\n): MergeTree {\n  if (!map.has(name)) {\n    map.set(name, emptyMergeTreePool.pop() || { map: new Map() });\n  }\n  return map.get(name)!;\n}\n\nfunction mergeMergeTrees(\n  left: MergeTree | undefined,\n  right: MergeTree | undefined\n): MergeTree {\n  if (left === right || !right || mergeTreeIsEmpty(right)) return left!;\n  if (!left || mergeTreeIsEmpty(left)) return right;\n\n  const info =\n    left.info && right.info ?\n      {\n        ...left.info,\n        ...right.info,\n      }\n    : left.info || right.info;\n\n  const needToMergeMaps = left.map.size && right.map.size;\n  const map =\n    needToMergeMaps ? new Map()\n    : left.map.size ? left.map\n    : right.map;\n\n  const merged = { info, map };\n\n  if (needToMergeMaps) {\n    const remainingRightKeys = new Set(right.map.keys());\n\n    left.map.forEach((leftTree, key) => {\n      merged.map.set(key, mergeMergeTrees(leftTree, right.map.get(key)));\n      remainingRightKeys.delete(key);\n    });\n\n    remainingRightKeys.forEach((key) => {\n      merged.map.set(\n        key,\n        mergeMergeTrees(right.map.get(key), left.map.get(key))\n      );\n    });\n  }\n\n  return merged;\n}\n\nfunction mergeTreeIsEmpty(tree: MergeTree | undefined): boolean {\n  return !tree || !(tree.info || tree.map.size);\n}\n\nfunction maybeRecycleChildMergeTree({ map }: MergeTree, name: string | number) {\n  const childTree = map.get(name);\n  if (childTree && mergeTreeIsEmpty(childTree)) {\n    emptyMergeTreePool.push(childTree);\n    map.delete(name);\n  }\n}\n\nconst warnings = new Set<string>();\n\n// Note that this function is unused in production, and thus should be\n// pruned by any well-configured minifier.\nfunction warnAboutDataLoss(\n  existingRef: Reference,\n  incomingObj: StoreObject,\n  storeFieldName: string,\n  store: NormalizedCache\n) {\n  const getChild = (objOrRef: StoreObject | Reference): StoreObject | false => {\n    const child = store.getFieldValue<StoreObject>(objOrRef, storeFieldName);\n    return typeof child === \"object\" && child;\n  };\n\n  const existing = getChild(existingRef);\n  if (!existing) return;\n\n  const incoming = getChild(incomingObj);\n  if (!incoming) return;\n\n  // It's always safe to replace a reference, since it refers to data\n  // safely stored elsewhere.\n  if (isReference(existing)) return;\n\n  // If the values are structurally equivalent, we do not need to worry\n  // about incoming replacing existing.\n  if (equal(existing, incoming)) return;\n\n  // If we're replacing every key of the existing object, then the\n  // existing data would be overwritten even if the objects were\n  // normalized, so warning would not be helpful here.\n  if (\n    Object.keys(existing).every(\n      (key) => store.getFieldValue(incoming, key) !== void 0\n    )\n  ) {\n    return;\n  }\n\n  const parentType =\n    store.getFieldValue<string>(existingRef, \"__typename\") ||\n    store.getFieldValue<string>(incomingObj, \"__typename\");\n  const fieldName = fieldNameFromStoreName(storeFieldName);\n  const typeDotName = `${parentType}.${fieldName}`;\n  // Avoid warning more than once for the same type and field name.\n  if (warnings.has(typeDotName)) return;\n  warnings.add(typeDotName);\n\n  const childTypenames: string[] = [];\n  // Arrays do not have __typename fields, and always need a custom merge\n  // function, even if their elements are normalized entities.\n  if (!isArray(existing) && !isArray(incoming)) {\n    [existing, incoming].forEach((child) => {\n      const typename = store.getFieldValue(child, \"__typename\");\n      if (typeof typename === \"string\" && !childTypenames.includes(typename)) {\n        childTypenames.push(typename);\n      }\n    });\n  }\n\n  invariant.warn(\n    `Cache data may be lost when replacing the %s field of a %s object.\n\nThis could cause additional (usually avoidable) network requests to fetch data that were otherwise cached.\n\nTo address this problem (which is not a bug in Apollo Client), %sdefine a custom merge function for the %s field, so InMemoryCache can safely merge these objects:\n\n  existing: %o\n  incoming: %o\n\nFor more information about these options, please refer to the documentation:\n\n  * Ensuring entity objects have IDs: https://go.apollo.dev/c/generating-unique-identifiers\n  * Defining custom merge functions: https://go.apollo.dev/c/merging-non-normalized-objects\n`,\n    fieldName,\n    parentType,\n    childTypenames.length ?\n      \"either ensure all objects of type \" +\n        childTypenames.join(\" and \") +\n        \" have an ID or a custom merge function, or \"\n    : \"\",\n    typeDotName,\n    { ...existing },\n    { ...incoming }\n  );\n}\n","import { invariant } from \"../../utilities/globals/index.js\";\n\n// Make builtins like Map and Set safe to use with non-extensible objects.\nimport \"./fixPolyfills.js\";\n\nimport type { DocumentNode } from \"graphql\";\nimport type { OptimisticWrapperFunction } from \"optimism\";\nimport { wrap } from \"optimism\";\nimport { equal } from \"@wry/equality\";\n\nimport { ApolloCache } from \"../core/cache.js\";\nimport type { Cache } from \"../core/types/Cache.js\";\nimport { MissingFieldError } from \"../core/types/common.js\";\nimport type { StoreObject, Reference } from \"../../utilities/index.js\";\nimport {\n  addTypenameToDocument,\n  isReference,\n  DocumentTransform,\n  canonicalStringify,\n  print,\n  cacheSizes,\n  defaultCacheSizes,\n} from \"../../utilities/index.js\";\nimport type { InMemoryCacheConfig, NormalizedCacheObject } from \"./types.js\";\nimport { StoreReader } from \"./readFromStore.js\";\nimport { StoreWriter } from \"./writeToStore.js\";\nimport { EntityStore, supportsResultCaching } from \"./entityStore.js\";\nimport { makeVar, forgetCache, recallCache } from \"./reactiveVars.js\";\nimport { Policies } from \"./policies.js\";\nimport { hasOwn, normalizeConfig, shouldCanonizeResults } from \"./helpers.js\";\nimport type { OperationVariables } from \"../../core/index.js\";\nimport { getInMemoryCacheMemoryInternals } from \"../../utilities/caching/getMemoryInternals.js\";\n\ntype BroadcastOptions = Pick<\n  Cache.BatchOptions<InMemoryCache>,\n  \"optimistic\" | \"onWatchUpdated\"\n>;\n\nexport class InMemoryCache extends ApolloCache<NormalizedCacheObject> {\n  private data!: EntityStore;\n  private optimisticData!: EntityStore;\n\n  protected config: InMemoryCacheConfig;\n  private watches = new Set<Cache.WatchOptions>();\n  private addTypename: boolean;\n\n  private storeReader!: StoreReader;\n  private storeWriter!: StoreWriter;\n  private addTypenameTransform = new DocumentTransform(addTypenameToDocument);\n\n  private maybeBroadcastWatch!: OptimisticWrapperFunction<\n    [Cache.WatchOptions, BroadcastOptions?],\n    any,\n    [Cache.WatchOptions]\n  >;\n\n  // Override the default value, since InMemoryCache result objects are frozen\n  // in development and expected to remain logically immutable in production.\n  public readonly assumeImmutableResults = true;\n\n  // Dynamically imported code can augment existing typePolicies or\n  // possibleTypes by calling cache.policies.addTypePolicies or\n  // cache.policies.addPossibletypes.\n  public readonly policies: Policies;\n\n  public readonly makeVar = makeVar;\n\n  constructor(config: InMemoryCacheConfig = {}) {\n    super();\n    this.config = normalizeConfig(config);\n    this.addTypename = !!this.config.addTypename;\n\n    this.policies = new Policies({\n      cache: this,\n      dataIdFromObject: this.config.dataIdFromObject,\n      possibleTypes: this.config.possibleTypes,\n      typePolicies: this.config.typePolicies,\n    });\n\n    this.init();\n  }\n\n  private init() {\n    // Passing { resultCaching: false } in the InMemoryCache constructor options\n    // will completely disable dependency tracking, which will improve memory\n    // usage but worsen the performance of repeated reads.\n    const rootStore = (this.data = new EntityStore.Root({\n      policies: this.policies,\n      resultCaching: this.config.resultCaching,\n    }));\n\n    // When no optimistic writes are currently active, cache.optimisticData ===\n    // cache.data, so there are no additional layers on top of the actual data.\n    // When an optimistic update happens, this.optimisticData will become a\n    // linked list of EntityStore Layer objects that terminates with the\n    // original this.data cache object.\n    this.optimisticData = rootStore.stump;\n\n    this.resetResultCache();\n  }\n\n  private resetResultCache(resetResultIdentities?: boolean) {\n    const previousReader = this.storeReader;\n    const { fragments } = this.config;\n\n    // The StoreWriter is mostly stateless and so doesn't really need to be\n    // reset, but it does need to have its writer.storeReader reference updated,\n    // so it's simpler to update this.storeWriter as well.\n    this.storeWriter = new StoreWriter(\n      this,\n      (this.storeReader = new StoreReader({\n        cache: this,\n        addTypename: this.addTypename,\n        resultCacheMaxSize: this.config.resultCacheMaxSize,\n        canonizeResults: shouldCanonizeResults(this.config),\n        canon:\n          resetResultIdentities ? void 0 : (\n            previousReader && previousReader.canon\n          ),\n        fragments,\n      })),\n      fragments\n    );\n\n    this.maybeBroadcastWatch = wrap(\n      (c: Cache.WatchOptions, options?: BroadcastOptions) => {\n        return this.broadcastWatch(c, options);\n      },\n      {\n        max:\n          this.config.resultCacheMaxSize ||\n          cacheSizes[\"inMemoryCache.maybeBroadcastWatch\"] ||\n          defaultCacheSizes[\"inMemoryCache.maybeBroadcastWatch\"],\n        makeCacheKey: (c: Cache.WatchOptions) => {\n          // Return a cache key (thus enabling result caching) only if we're\n          // currently using a data store that can track cache dependencies.\n          const store = c.optimistic ? this.optimisticData : this.data;\n          if (supportsResultCaching(store)) {\n            const { optimistic, id, variables } = c;\n            return store.makeCacheKey(\n              c.query,\n              // Different watches can have the same query, optimistic\n              // status, rootId, and variables, but if their callbacks are\n              // different, the (identical) result needs to be delivered to\n              // each distinct callback. The easiest way to achieve that\n              // separation is to include c.callback in the cache key for\n              // maybeBroadcastWatch calls. See issue #5733.\n              c.callback,\n              canonicalStringify({ optimistic, id, variables })\n            );\n          }\n        },\n      }\n    );\n\n    // Since we have thrown away all the cached functions that depend on the\n    // CacheGroup dependencies maintained by EntityStore, we should also reset\n    // all CacheGroup dependency information.\n    new Set([this.data.group, this.optimisticData.group]).forEach((group) =>\n      group.resetCaching()\n    );\n  }\n\n  public restore(data: NormalizedCacheObject): this {\n    this.init();\n    // Since calling this.init() discards/replaces the entire StoreReader, along\n    // with the result caches it maintains, this.data.replace(data) won't have\n    // to bother deleting the old data.\n    if (data) this.data.replace(data);\n    return this;\n  }\n\n  public extract(optimistic: boolean = false): NormalizedCacheObject {\n    return (optimistic ? this.optimisticData : this.data).extract();\n  }\n\n  public read<T>(options: Cache.ReadOptions): T | null {\n    const {\n      // Since read returns data or null, without any additional metadata\n      // about whether/where there might have been missing fields, the\n      // default behavior cannot be returnPartialData = true (like it is\n      // for the diff method), since defaulting to true would violate the\n      // integrity of the T in the return type. However, partial data may\n      // be useful in some cases, so returnPartialData:true may be\n      // specified explicitly.\n      returnPartialData = false,\n    } = options;\n    try {\n      return (\n        this.storeReader.diffQueryAgainstStore<T>({\n          ...options,\n          store: options.optimistic ? this.optimisticData : this.data,\n          config: this.config,\n          returnPartialData,\n        }).result || null\n      );\n    } catch (e) {\n      if (e instanceof MissingFieldError) {\n        // Swallow MissingFieldError and return null, so callers do not need to\n        // worry about catching \"normal\" exceptions resulting from incomplete\n        // cache data. Unexpected errors will be re-thrown. If you need more\n        // information about which fields were missing, use cache.diff instead,\n        // and examine diffResult.missing.\n        return null;\n      }\n      throw e;\n    }\n  }\n\n  public write(options: Cache.WriteOptions): Reference | undefined {\n    try {\n      ++this.txCount;\n      return this.storeWriter.writeToStore(this.data, options);\n    } finally {\n      if (!--this.txCount && options.broadcast !== false) {\n        this.broadcastWatches();\n      }\n    }\n  }\n\n  public modify<Entity extends Record<string, any> = Record<string, any>>(\n    options: Cache.ModifyOptions<Entity>\n  ): boolean {\n    if (hasOwn.call(options, \"id\") && !options.id) {\n      // To my knowledge, TypeScript does not currently provide a way to\n      // enforce that an optional property?:type must *not* be undefined\n      // when present. That ability would be useful here, because we want\n      // options.id to default to ROOT_QUERY only when no options.id was\n      // provided. If the caller attempts to pass options.id with a\n      // falsy/undefined value (perhaps because cache.identify failed), we\n      // should not assume the goal was to modify the ROOT_QUERY object.\n      // We could throw, but it seems natural to return false to indicate\n      // that nothing was modified.\n      return false;\n    }\n    const store =\n      (\n        options.optimistic // Defaults to false.\n      ) ?\n        this.optimisticData\n      : this.data;\n    try {\n      ++this.txCount;\n      return store.modify(options.id || \"ROOT_QUERY\", options.fields);\n    } finally {\n      if (!--this.txCount && options.broadcast !== false) {\n        this.broadcastWatches();\n      }\n    }\n  }\n\n  public diff<TData, TVariables extends OperationVariables = any>(\n    options: Cache.DiffOptions<TData, TVariables>\n  ): Cache.DiffResult<TData> {\n    return this.storeReader.diffQueryAgainstStore({\n      ...options,\n      store: options.optimistic ? this.optimisticData : this.data,\n      rootId: options.id || \"ROOT_QUERY\",\n      config: this.config,\n    });\n  }\n\n  public watch<TData = any, TVariables = any>(\n    watch: Cache.WatchOptions<TData, TVariables>\n  ): () => void {\n    if (!this.watches.size) {\n      // In case we previously called forgetCache(this) because\n      // this.watches became empty (see below), reattach this cache to any\n      // reactive variables on which it previously depended. It might seem\n      // paradoxical that we're able to recall something we supposedly\n      // forgot, but the point of calling forgetCache(this) is to silence\n      // useless broadcasts while this.watches is empty, and to allow the\n      // cache to be garbage collected. If, however, we manage to call\n      // recallCache(this) here, this cache object must not have been\n      // garbage collected yet, and should resume receiving updates from\n      // reactive variables, now that it has a watcher to notify.\n      recallCache(this);\n    }\n    this.watches.add(watch);\n    if (watch.immediate) {\n      this.maybeBroadcastWatch(watch);\n    }\n    return () => {\n      // Once we remove the last watch from this.watches, cache.broadcastWatches\n      // no longer does anything, so we preemptively tell the reactive variable\n      // system to exclude this cache from future broadcasts.\n      if (this.watches.delete(watch) && !this.watches.size) {\n        forgetCache(this);\n      }\n      // Remove this watch from the LRU cache managed by the\n      // maybeBroadcastWatch OptimisticWrapperFunction, to prevent memory\n      // leaks involving the closure of watch.callback.\n      this.maybeBroadcastWatch.forget(watch);\n    };\n  }\n\n  public gc(options?: {\n    // If true, also free non-essential result cache memory by bulk-releasing\n    // this.{store{Reader,Writer},maybeBroadcastWatch}. Defaults to false.\n    resetResultCache?: boolean;\n    // If resetResultCache is true, this.storeReader.canon will be preserved by\n    // default, but can also be discarded by passing resetResultIdentities:true.\n    // Defaults to false.\n    resetResultIdentities?: boolean;\n  }) {\n    canonicalStringify.reset();\n    print.reset();\n    this.addTypenameTransform.resetCache();\n    this.config.fragments?.resetCaches();\n    const ids = this.optimisticData.gc();\n    if (options && !this.txCount) {\n      if (options.resetResultCache) {\n        this.resetResultCache(options.resetResultIdentities);\n      } else if (options.resetResultIdentities) {\n        this.storeReader.resetCanon();\n      }\n    }\n    return ids;\n  }\n\n  // Call this method to ensure the given root ID remains in the cache after\n  // garbage collection, along with its transitive child entities. Note that\n  // the cache automatically retains all directly written entities. By default,\n  // the retainment persists after optimistic updates are removed. Pass true\n  // for the optimistic argument if you would prefer for the retainment to be\n  // discarded when the top-most optimistic layer is removed. Returns the\n  // resulting (non-negative) retainment count.\n  public retain(rootId: string, optimistic?: boolean): number {\n    return (optimistic ? this.optimisticData : this.data).retain(rootId);\n  }\n\n  // Call this method to undo the effect of the retain method, above. Once the\n  // retainment count falls to zero, the given ID will no longer be preserved\n  // during garbage collection, though it may still be preserved by other safe\n  // entities that refer to it. Returns the resulting (non-negative) retainment\n  // count, in case that's useful.\n  public release(rootId: string, optimistic?: boolean): number {\n    return (optimistic ? this.optimisticData : this.data).release(rootId);\n  }\n\n  // Returns the canonical ID for a given StoreObject, obeying typePolicies\n  // and keyFields (and dataIdFromObject, if you still use that). At minimum,\n  // the object must contain a __typename and any primary key fields required\n  // to identify entities of that type. If you pass a query result object, be\n  // sure that none of the primary key fields have been renamed by aliasing.\n  // If you pass a Reference object, its __ref ID string will be returned.\n  public identify(object: StoreObject | Reference): string | undefined {\n    if (isReference(object)) return object.__ref;\n    try {\n      return this.policies.identify(object)[0];\n    } catch (e) {\n      invariant.warn(e);\n    }\n  }\n\n  public evict(options: Cache.EvictOptions): boolean {\n    if (!options.id) {\n      if (hasOwn.call(options, \"id\")) {\n        // See comment in modify method about why we return false when\n        // options.id exists but is falsy/undefined.\n        return false;\n      }\n      options = { ...options, id: \"ROOT_QUERY\" };\n    }\n    try {\n      // It's unlikely that the eviction will end up invoking any other\n      // cache update operations while it's running, but {in,de}crementing\n      // this.txCount still seems like a good idea, for uniformity with\n      // the other update methods.\n      ++this.txCount;\n      // Pass this.data as a limit on the depth of the eviction, so evictions\n      // during optimistic updates (when this.data is temporarily set equal to\n      // this.optimisticData) do not escape their optimistic Layer.\n      return this.optimisticData.evict(options, this.data);\n    } finally {\n      if (!--this.txCount && options.broadcast !== false) {\n        this.broadcastWatches();\n      }\n    }\n  }\n\n  public reset(options?: Cache.ResetOptions): Promise<void> {\n    this.init();\n\n    canonicalStringify.reset();\n\n    if (options && options.discardWatches) {\n      // Similar to what happens in the unsubscribe function returned by\n      // cache.watch, applied to all current watches.\n      this.watches.forEach((watch) => this.maybeBroadcastWatch.forget(watch));\n      this.watches.clear();\n      forgetCache(this);\n    } else {\n      // Calling this.init() above unblocks all maybeBroadcastWatch caching, so\n      // this.broadcastWatches() triggers a broadcast to every current watcher\n      // (letting them know their data is now missing). This default behavior is\n      // convenient because it means the watches do not have to be manually\n      // reestablished after resetting the cache. To prevent this broadcast and\n      // cancel all watches, pass true for options.discardWatches.\n      this.broadcastWatches();\n    }\n\n    return Promise.resolve();\n  }\n\n  public removeOptimistic(idToRemove: string) {\n    const newOptimisticData = this.optimisticData.removeLayer(idToRemove);\n    if (newOptimisticData !== this.optimisticData) {\n      this.optimisticData = newOptimisticData;\n      this.broadcastWatches();\n    }\n  }\n\n  private txCount = 0;\n\n  public batch<TUpdateResult>(\n    options: Cache.BatchOptions<InMemoryCache, TUpdateResult>\n  ): TUpdateResult {\n    const {\n      update,\n      optimistic = true,\n      removeOptimistic,\n      onWatchUpdated,\n    } = options;\n\n    let updateResult: TUpdateResult;\n    const perform = (layer?: EntityStore): TUpdateResult => {\n      const { data, optimisticData } = this;\n      ++this.txCount;\n      if (layer) {\n        this.data = this.optimisticData = layer;\n      }\n      try {\n        return (updateResult = update(this));\n      } finally {\n        --this.txCount;\n        this.data = data;\n        this.optimisticData = optimisticData;\n      }\n    };\n\n    const alreadyDirty = new Set<Cache.WatchOptions>();\n\n    if (onWatchUpdated && !this.txCount) {\n      // If an options.onWatchUpdated callback is provided, we want to call it\n      // with only the Cache.WatchOptions objects affected by options.update,\n      // but there might be dirty watchers already waiting to be broadcast that\n      // have nothing to do with the update. To prevent including those watchers\n      // in the post-update broadcast, we perform this initial broadcast to\n      // collect the dirty watchers, so we can re-dirty them later, after the\n      // post-update broadcast, allowing them to receive their pending\n      // broadcasts the next time broadcastWatches is called, just as they would\n      // if we never called cache.batch.\n      this.broadcastWatches({\n        ...options,\n        onWatchUpdated(watch) {\n          alreadyDirty.add(watch);\n          return false;\n        },\n      });\n    }\n\n    if (typeof optimistic === \"string\") {\n      // Note that there can be multiple layers with the same optimistic ID.\n      // When removeOptimistic(id) is called for that id, all matching layers\n      // will be removed, and the remaining layers will be reapplied.\n      this.optimisticData = this.optimisticData.addLayer(optimistic, perform);\n    } else if (optimistic === false) {\n      // Ensure both this.data and this.optimisticData refer to the root\n      // (non-optimistic) layer of the cache during the update. Note that\n      // this.data could be a Layer if we are currently executing an optimistic\n      // update function, but otherwise will always be an EntityStore.Root\n      // instance.\n      perform(this.data);\n    } else {\n      // Otherwise, leave this.data and this.optimisticData unchanged and run\n      // the update with broadcast batching.\n      perform();\n    }\n\n    if (typeof removeOptimistic === \"string\") {\n      this.optimisticData = this.optimisticData.removeLayer(removeOptimistic);\n    }\n\n    // Note: if this.txCount > 0, then alreadyDirty.size === 0, so this code\n    // takes the else branch and calls this.broadcastWatches(options), which\n    // does nothing when this.txCount > 0.\n    if (onWatchUpdated && alreadyDirty.size) {\n      this.broadcastWatches({\n        ...options,\n        onWatchUpdated(watch, diff) {\n          const result = onWatchUpdated.call(this, watch, diff);\n          if (result !== false) {\n            // Since onWatchUpdated did not return false, this diff is\n            // about to be broadcast to watch.callback, so we don't need\n            // to re-dirty it with the other alreadyDirty watches below.\n            alreadyDirty.delete(watch);\n          }\n          return result;\n        },\n      });\n      // Silently re-dirty any watches that were already dirty before the update\n      // was performed, and were not broadcast just now.\n      if (alreadyDirty.size) {\n        alreadyDirty.forEach((watch) => this.maybeBroadcastWatch.dirty(watch));\n      }\n    } else {\n      // If alreadyDirty is empty or we don't have an onWatchUpdated\n      // function, we don't need to go to the trouble of wrapping\n      // options.onWatchUpdated.\n      this.broadcastWatches(options);\n    }\n\n    return updateResult!;\n  }\n\n  public performTransaction(\n    update: (cache: InMemoryCache) => any,\n    optimisticId?: string | null\n  ) {\n    return this.batch({\n      update,\n      optimistic: optimisticId || optimisticId !== null,\n    });\n  }\n\n  public transformDocument(document: DocumentNode): DocumentNode {\n    return this.addTypenameToDocument(this.addFragmentsToDocument(document));\n  }\n\n  protected broadcastWatches(options?: BroadcastOptions) {\n    if (!this.txCount) {\n      this.watches.forEach((c) => this.maybeBroadcastWatch(c, options));\n    }\n  }\n\n  private addFragmentsToDocument(document: DocumentNode) {\n    const { fragments } = this.config;\n    return fragments ? fragments.transform(document) : document;\n  }\n\n  private addTypenameToDocument(document: DocumentNode) {\n    if (this.addTypename) {\n      return this.addTypenameTransform.transformDocument(document);\n    }\n    return document;\n  }\n\n  // This method is wrapped by maybeBroadcastWatch, which is called by\n  // broadcastWatches, so that we compute and broadcast results only when\n  // the data that would be broadcast might have changed. It would be\n  // simpler to check for changes after recomputing a result but before\n  // broadcasting it, but this wrapping approach allows us to skip both\n  // the recomputation and the broadcast, in most cases.\n  private broadcastWatch(c: Cache.WatchOptions, options?: BroadcastOptions) {\n    const { lastDiff } = c;\n\n    // Both WatchOptions and DiffOptions extend ReadOptions, and DiffOptions\n    // currently requires no additional properties, so we can use c (a\n    // WatchOptions object) as DiffOptions, without having to allocate a new\n    // object, and without having to enumerate the relevant properties (query,\n    // variables, etc.) explicitly. There will be some additional properties\n    // (lastDiff, callback, etc.), but cache.diff ignores them.\n    const diff = this.diff<any>(c);\n\n    if (options) {\n      if (c.optimistic && typeof options.optimistic === \"string\") {\n        diff.fromOptimisticTransaction = true;\n      }\n\n      if (\n        options.onWatchUpdated &&\n        options.onWatchUpdated.call(this, c, diff, lastDiff) === false\n      ) {\n        // Returning false from the onWatchUpdated callback will prevent\n        // calling c.callback(diff) for this watcher.\n        return;\n      }\n    }\n\n    if (!lastDiff || !equal(lastDiff.result, diff.result)) {\n      c.callback((c.lastDiff = diff), lastDiff);\n    }\n  }\n\n  /**\n   * @experimental\n   * @internal\n   * This is not a stable API - it is used in development builds to expose\n   * information to the DevTools.\n   * Use at your own risk!\n   */\n  public getMemoryInternals?: typeof getInMemoryCacheMemoryInternals;\n}\n\nif (__DEV__) {\n  InMemoryCache.prototype.getMemoryInternals = getInMemoryCacheMemoryInternals;\n}\n","import type { ExecutionResult } from \"graphql\";\n\nimport type { NetworkError, GraphQLErrors } from \"../../errors/index.js\";\nimport { Observable } from \"../../utilities/index.js\";\nimport type { Operation, FetchResult, NextLink } from \"../core/index.js\";\nimport { ApolloLink } from \"../core/index.js\";\n\nexport interface ErrorResponse {\n  graphQLErrors?: GraphQLErrors;\n  networkError?: NetworkError;\n  response?: ExecutionResult;\n  operation: Operation;\n  forward: NextLink;\n}\n\nexport namespace ErrorLink {\n  /**\n   * Callback to be triggered when an error occurs within the link stack.\n   */\n  export interface ErrorHandler {\n    (error: ErrorResponse): Observable<FetchResult> | void;\n  }\n}\n\n// For backwards compatibility.\nexport import ErrorHandler = ErrorLink.ErrorHandler;\n\nexport function onError(errorHandler: ErrorHandler): ApolloLink {\n  return new ApolloLink((operation, forward) => {\n    return new Observable((observer) => {\n      let sub: any;\n      let retriedSub: any;\n      let retriedResult: any;\n\n      try {\n        sub = forward(operation).subscribe({\n          next: (result) => {\n            if (result.errors) {\n              retriedResult = errorHandler({\n                graphQLErrors: result.errors,\n                response: result,\n                operation,\n                forward,\n              });\n\n              if (retriedResult) {\n                retriedSub = retriedResult.subscribe({\n                  next: observer.next.bind(observer),\n                  error: observer.error.bind(observer),\n                  complete: observer.complete.bind(observer),\n                });\n                return;\n              }\n            }\n            observer.next(result);\n          },\n          error: (networkError) => {\n            retriedResult = errorHandler({\n              operation,\n              networkError,\n              //Network errors can return GraphQL errors on for example a 403\n              graphQLErrors:\n                networkError &&\n                networkError.result &&\n                networkError.result.errors,\n              forward,\n            });\n            if (retriedResult) {\n              retriedSub = retriedResult.subscribe({\n                next: observer.next.bind(observer),\n                error: observer.error.bind(observer),\n                complete: observer.complete.bind(observer),\n              });\n              return;\n            }\n            observer.error(networkError);\n          },\n          complete: () => {\n            // disable the previous sub from calling complete on observable\n            // if retry is in flight.\n            if (!retriedResult) {\n              observer.complete.bind(observer)();\n            }\n          },\n        });\n      } catch (e) {\n        errorHandler({ networkError: e as Error, operation, forward });\n        observer.error(e);\n      }\n\n      return () => {\n        if (sub) sub.unsubscribe();\n        if (retriedSub) sub.unsubscribe();\n      };\n    });\n  });\n}\n\nexport class ErrorLink extends ApolloLink {\n  private link: ApolloLink;\n  constructor(errorHandler: ErrorLink.ErrorHandler) {\n    super();\n    this.link = onError(errorHandler);\n  }\n\n  public request(\n    operation: Operation,\n    forward: NextLink\n  ): Observable<FetchResult> | null {\n    return this.link.request(operation, forward);\n  }\n}\n","import {\r\n    ApolloClient,\r\n    InMemoryCache,\r\n    ApolloProvider,\r\n    HttpLink,\r\n    from,\r\n  } from \"@apollo/client\";\r\n  import { onError } from \"@apollo/client/link/error\";\r\n  \r\n  // Error handling\r\n  const errorLink = onError(({ graphqlErrors, networkError }) => {\r\n    if (graphqlErrors) {\r\n      graphqlErrors.map(({ message, location, path }) => {\r\n        alert(`GraphQL error ${message}`);\r\n        return null;\r\n      });\r\n    }\r\n    if (networkError) {\r\n      console.log(`Network error: ${networkError}`);\r\n    }\r\n  });\r\n  \r\n  // HTTP connection to the API\r\n  const httpLink = new HttpLink({\r\n    uri: \"https://rickandmortyapi.com/graphql\",  \r\n  });\r\n  \r\n\r\n  const client = new ApolloClient({\r\n    link: from([errorLink, httpLink]),\r\n    cache: new InMemoryCache(),\r\n  });\r\n  \r\n  export default client;\r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { ApolloProvider } from '@apollo/client';\nimport client from './apollo-client';\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n    <App />\n    </ApolloProvider>\n  </React.StrictMode>\n);\n"],"names":["module","exports","utils","require","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","transitionalDefaults","AxiosError","CanceledError","parseProtocol","config","Promise","resolve","reject","onCanceled","requestData","data","requestHeaders","headers","responseType","done","cancelToken","unsubscribe","signal","removeEventListener","isFormData","isStandardBrowserEnv","request","XMLHttpRequest","auth","username","password","unescape","encodeURIComponent","Authorization","btoa","fullPath","baseURL","url","onloadend","responseHeaders","getAllResponseHeaders","response","responseText","status","statusText","value","err","open","method","toUpperCase","params","paramsSerializer","timeout","onreadystatechange","readyState","responseURL","indexOf","setTimeout","onabort","ECONNABORTED","onerror","ERR_NETWORK","ontimeout","timeoutErrorMessage","transitional","clarifyTimeoutError","ETIMEDOUT","xsrfValue","withCredentials","xsrfCookieName","read","undefined","xsrfHeaderName","forEach","val","key","toLowerCase","setRequestHeader","isUndefined","onDownloadProgress","addEventListener","onUploadProgress","upload","cancel","type","abort","subscribe","aborted","protocol","ERR_BAD_REQUEST","send","bind","Axios","mergeConfig","axios","createInstance","defaultConfig","context","instance","prototype","extend","create","instanceConfig","CancelToken","isCancel","VERSION","toFormData","Cancel","all","promises","spread","isAxiosError","executor","TypeError","resolvePromise","this","promise","token","then","_listeners","i","l","length","onfulfilled","_resolve","message","reason","throwIfRequested","listener","push","index","splice","source","c","call","ERR_CANCELED","name","inherits","__CANCEL__","InterceptorManager","dispatchRequest","validator","validators","defaults","interceptors","configOrUrl","assertOptions","silentJSONParsing","boolean","forcedJSONParsing","requestInterceptorChain","synchronousRequestInterceptors","interceptor","runWhen","synchronous","unshift","fulfilled","rejected","responseInterceptorChain","chain","Array","apply","concat","shift","newConfig","onFulfilled","onRejected","error","getUri","generateHTTPMethod","isForm","code","Error","toJSON","description","number","fileName","lineNumber","columnNumber","stack","descriptors","Object","defineProperties","defineProperty","from","customProps","axiosError","toFlatObject","obj","assign","handlers","use","options","eject","id","fn","h","isAbsoluteURL","combineURLs","requestedURL","transformData","throwIfCancellationRequested","transformRequest","merge","common","adapter","transformResponse","config1","config2","getMergedValue","target","isPlainObject","isArray","slice","mergeDeepProperties","prop","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","keys","configValue","validateStatus","ERR_BAD_RESPONSE","Math","floor","fns","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","process","toString","getDefaultAdapter","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","isFileList","isObjectPayload","isObject","contentType","_FormData","env","FormData","rawValue","parser","encoder","isString","JSON","parse","trim","e","stringify","stringifySafely","strictJSONParsing","maxContentLength","maxBodyLength","thisArg","args","arguments","encode","replace","serializedParams","parts","v","isDate","toISOString","join","hashmarkIndex","relativeURL","write","expires","path","domain","secure","cookie","isNumber","Date","toGMTString","document","match","RegExp","decodeURIComponent","remove","now","test","payload","originURL","msie","navigator","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","host","search","hash","hostname","port","pathname","charAt","window","location","requestURL","parsed","normalizedName","ignoreDuplicateOf","split","line","substr","exec","callback","arr","formData","convertValue","isTypedArray","Blob","Buffer","build","parentKey","fullKey","endsWith","toArray","el","append","pop","thing","deprecatedWarnings","version","formatMessage","opt","desc","opts","ERR_DEPRECATED","console","warn","schema","allowUnknown","ERR_BAD_OPTION_VALUE","result","ERR_BAD_OPTION","cache","kindOf","str","kindOfTest","getPrototypeOf","isFunction","hasOwnProperty","TypedArray","Uint8Array","constructor","pattern","ArrayBuffer","isView","pipe","product","assignValue","a","b","stripBOM","content","charCodeAt","superConstructor","props","sourceObj","destObj","filter","merged","getOwnPropertyNames","searchString","position","String","lastIndex","hasOwn","classNames","classes","arg","argType","inner","default","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","propFullName","secret","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","aa","ba","p","da","Set","ea","fa","ha","add","ia","ja","ka","la","ma","t","d","f","g","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","z","qa","ra","sa","oa","isNaN","pa","na","removeAttribute","setAttributeNS","xlinkHref","ta","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ua","Symbol","for","va","wa","xa","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","iterator","Ja","Ka","A","La","Ma","Na","prepareStackTrace","set","Reflect","construct","k","displayName","includes","Oa","tag","render","Pa","$$typeof","_context","_payload","_init","Qa","Ra","Sa","nodeName","Ua","_valueTracker","getOwnPropertyDescriptor","get","configurable","enumerable","getValue","setValue","stopTracking","Ta","Va","checked","Wa","activeElement","body","Xa","defaultChecked","defaultValue","_wrapperState","initialChecked","Ya","initialValue","controlled","Za","$a","bb","cb","ownerDocument","db","eb","selected","defaultSelected","disabled","fb","dangerouslySetInnerHTML","children","gb","hb","ib","textContent","jb","kb","lb","mb","namespaceURI","innerHTML","valueOf","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","nb","lastChild","nodeType","nodeValue","ob","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","pb","qb","rb","style","setProperty","substring","sb","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","track","wbr","tb","ub","is","vb","wb","srcElement","correspondingUseElement","parentNode","xb","yb","zb","Ab","Bb","stateNode","Cb","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","n","onError","Nb","Ob","Pb","Qb","Rb","Sb","Ub","alternate","return","flags","Vb","memoizedState","dehydrated","Wb","Yb","child","sibling","current","Xb","Zb","$b","unstable_scheduleCallback","ac","unstable_cancelCallback","bc","unstable_shouldYield","cc","unstable_requestPaint","B","unstable_now","dc","unstable_getCurrentPriorityLevel","ec","unstable_ImmediatePriority","fc","unstable_UserBlockingPriority","gc","unstable_NormalPriority","hc","unstable_LowPriority","ic","unstable_IdlePriority","jc","kc","nc","clz32","oc","pc","log","LN2","qc","rc","sc","tc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","uc","wc","xc","yc","zc","eventTimes","Bc","C","Cc","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Map","Oc","Pc","Qc","Rc","delete","pointerId","Sc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Uc","Vc","priority","isDehydrated","containerInfo","Wc","Xc","dispatchEvent","Yc","Zc","$c","ad","bd","ReactCurrentBatchConfig","cd","dd","transition","ed","fd","gd","hd","Tc","stopPropagation","jd","kd","ld","md","nd","keyCode","charCode","od","pd","qd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","cancelBubble","persist","isPersistent","vd","wd","xd","rd","eventPhase","bubbles","cancelable","timeStamp","isTrusted","sd","td","view","detail","ud","zd","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","yd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Ad","Cd","dataTransfer","Ed","Gd","animationName","elapsedTime","pseudoElement","Hd","clipboardData","Id","Kd","Ld","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Md","Nd","Alt","Control","Meta","Shift","Od","Pd","fromCharCode","repeat","locale","which","Qd","Sd","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Ud","touches","targetTouches","changedTouches","Wd","Xd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Yd","Zd","$d","ae","documentMode","be","ce","de","ee","fe","ge","he","ke","color","date","datetime","email","month","range","tel","text","time","week","le","me","ne","event","listeners","oe","pe","qe","re","se","te","ue","ve","we","xe","ye","oninput","ze","detachEvent","Ae","Be","attachEvent","Ce","De","Ee","Ge","He","Ie","Je","offset","nextSibling","Ke","contains","compareDocumentPosition","Le","HTMLIFrameElement","contentWindow","Me","contentEditable","Ne","focusedElem","selectionRange","documentElement","start","end","selectionStart","selectionEnd","min","defaultView","getSelection","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","left","scrollLeft","top","scrollTop","focus","Oe","Pe","Qe","Re","Se","Te","Ue","Ve","animationend","animationiteration","animationstart","transitionend","We","Xe","Ye","animation","Ze","$e","af","bf","cf","df","ef","ff","gf","kf","lf","mf","Tb","D","nf","has","of","pf","qf","random","rf","capture","passive","m","w","J","r","x","F","sf","tf","parentWindow","uf","vf","Z","ya","ab","ca","ie","char","je","wf","xf","yf","zf","Af","Bf","Cf","Df","__html","Ef","Ff","clearTimeout","Gf","If","queueMicrotask","catch","Hf","Jf","Kf","Lf","previousSibling","Mf","Nf","Of","Pf","Qf","Rf","Sf","Tf","E","G","Uf","H","Vf","Wf","Xf","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Yf","childContextTypes","Zf","$f","ag","getChildContext","bg","__reactInternalMemoizedMergedChildContext","cg","dg","eg","fg","gg","ig","jg","kg","defaultProps","lg","mg","ng","og","pg","qg","_currentValue","rg","childLanes","sg","dependencies","firstContext","lanes","tg","ug","memoizedValue","next","vg","wg","xg","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","interleaved","effects","yg","zg","eventTime","lane","Ag","Bg","Cg","Dg","Eg","u","q","y","Fg","Gg","Hg","Component","refs","Ig","Mg","isMounted","_reactInternals","enqueueSetState","Jg","Kg","Lg","enqueueReplaceState","enqueueForceUpdate","Ng","shouldComponentUpdate","isPureReactComponent","Og","contextType","state","updater","Pg","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Qg","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Rg","Sg","Tg","Ug","Vg","Wg","Xg","Yg","Zg","$g","ah","bh","ch","dh","eh","I","fh","gh","hh","deletions","ih","pendingProps","overflow","treeContext","retryLane","jh","mode","kh","lh","mh","memoizedProps","nh","oh","ph","ref","_owner","_stringRef","qh","rh","sh","th","uh","vh","implementation","wh","xh","yh","zh","Ah","Bh","Ch","Dh","Eh","Fh","tagName","Gh","Hh","Ih","K","Jh","revealOrder","Kh","Lh","_workInProgressVersionPrimary","Mh","ReactCurrentDispatcher","Nh","Oh","L","M","N","Ph","Qh","Rh","Sh","O","Th","Uh","Vh","Wh","Xh","Yh","Zh","$h","baseQueue","queue","ai","bi","ci","lastRenderedReducer","action","hasEagerState","eagerState","lastRenderedState","dispatch","di","ei","fi","gi","hi","getSnapshot","ii","ji","P","ki","lastEffect","stores","li","mi","ni","destroy","deps","oi","pi","qi","ri","si","ti","ui","vi","wi","xi","yi","zi","Ai","Bi","Ci","Di","Ei","Fi","Gi","readContext","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","identifierPrefix","Hi","Ii","Ti","Vi","Wi","Ji","WeakMap","Ki","Li","Mi","Ni","getDerivedStateFromError","componentDidCatch","Oi","componentStack","Pi","pingCache","Qi","Ri","Si","Xi","tailMode","tail","Q","subtreeFlags","Yi","pendingContext","Zi","wasMultiple","multiple","suppressHydrationWarning","onClick","onclick","size","createElementNS","autoFocus","createTextNode","R","$i","rendering","aj","renderingStartTime","isBackwards","last","bj","cj","dj","ReactCurrentOwner","ej","fj","gj","hj","ij","compare","jj","kj","lj","baseLanes","cachePool","transitions","mj","nj","oj","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","pj","qj","rj","sj","tj","uj","vj","fallback","wj","xj","yj","zj","_reactRetry","Aj","Bj","Cj","Dj","Ej","Gj","Hj","S","Ij","WeakSet","T","Jj","U","Kj","Lj","Nj","Oj","Pj","Qj","Rj","Sj","Tj","insertBefore","_reactRootContainer","Uj","V","Vj","Wj","Xj","onCommitFiberUnmount","componentWillUnmount","Yj","Zj","ak","bk","ck","dk","display","ek","fk","gk","hk","ik","__reactInternalSnapshotBeforeUpdate","src","Uk","jk","ceil","kk","lk","mk","W","X","Y","nk","ok","pk","qk","rk","Infinity","sk","tk","uk","vk","wk","xk","yk","zk","Ak","Bk","Ck","callbackNode","expirationTimes","expiredLanes","vc","callbackPriority","hg","Dk","Ek","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","finishedWork","finishedLanes","Ok","timeoutHandle","Pk","Qk","Rk","Sk","Tk","mutableReadLanes","Ac","Mj","onCommitFiberRoot","lc","onRecoverableError","Vk","onPostCommitFiberRoot","Wk","Xk","Zk","isReactComponent","pendingChildren","$k","mutableSourceEagerHydrationData","al","pendingSuspenseBoundaries","bl","cl","dl","fl","gl","hl","Fj","Yk","jl","reportError","kl","_internalRoot","ll","ml","nl","ol","ql","pl","unmount","unstable_scheduleHydration","querySelectorAll","form","rl","usingClientEntryPoint","Events","sl","findFiberByHostInstance","bundleType","rendererPackageName","tl","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","ul","isDisabled","supportsFiber","inject","createPortal","createRoot","unstable_strictMode","findDOMNode","flushSync","hydrate","hydrateRoot","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","checkDCE","hasElementType","Element","hasMap","hasSet","hasArrayBuffer","equal","it","entries","__self","__source","Fragment","jsx","jsxs","setState","forceUpdate","escape","_status","_result","Children","map","count","only","Profiler","PureComponent","StrictMode","Suspense","cloneElement","createContext","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","createFactory","createRef","forwardRef","isValidElement","lazy","memo","startTransition","unstable_act","__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","__SERVER_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE","sortIndex","performance","setImmediate","startTime","expirationTime","priorityLevel","scheduling","isInputPending","MessageChannel","port2","port1","onmessage","postMessage","unstable_Profiling","unstable_continueExecution","unstable_forceFrameRate","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_runWithPriority","delay","unstable_wrapCallback","warning","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","leafPrototypes","getProto","__proto__","ns","def","definition","o","globalThis","Function","toStringTag","Constructor","_defineProperties","descriptor","writable","protoProps","staticProps","_setPrototypeOf","setPrototypeOf","subClass","superClass","_isNativeReflectConstruct","sham","Proxy","Boolean","_typeof","_assertThisInitialized","self","ReferenceError","Derived","hasNativeReflectConstruct","Super","NewTarget","_arrayLikeToArray","len","arr2","_unsupportedIterableToArray","minLen","_i","_s","_e","_arr","_n","_d","NavigationContext","React","LocationContext","RouteContext","outlet","matches","invariant","cond","matchRoutes","routes","locationArg","basename","stripBasename","parsePath","branches","flattenRoutes","sort","score","siblings","every","compareIndexes","routesMeta","childrenIndex","rankRouteBranches","matchRouteBranch","parentsMeta","parentPath","route","relativePath","caseSensitive","startsWith","joinPaths","computeScore","paramRe","isSplat","s","segments","initialScore","some","reduce","segment","branch","matchedParams","matchedPathname","remainingPathname","matchPath","pathnameBase","normalizePathname","paramNames","regexpSource","_","paramName","compilePath","matcher","captureGroups","splatValue","safelyDecodeURIComponent","resolveTo","toArg","routePathnames","locationPathname","to","toPathname","routePathnameIndex","toSegments","fromPathname","resolvePathname","normalizeSearch","normalizeHash","resolvePath","nextChar","paths","useHref","useInRouterContext","useResolvedPath","joinedPathname","getToPathname","endsWithSlash","createHref","useLocation","useNavigate","routePathnamesJson","activeRef","go","_renderMatches","parentMatches","reduceRight","React.createElement","Route","_props","Router","_ref3","basenameProp","locationProp","navigationType","NavigationType","static","staticProp","navigationContext","trailingPathname","Routes","_ref4","routeMatch","parentParams","parentPathnameBase","locationFromContext","parsedLocationArg","_parsedLocationArg$pa","useRoutes","createRoutesFromChildren","BrowserRouter","historyRef","createBrowserHistory","history","listen","Link","reloadDocument","rest","internalOnClick","replaceProp","navigate","isModifiedEvent","createPath","useLinkClickHandler","setLocation","episode","setEpisode","character","setCharacter","info","className","backgroundImage","pages","iter","_defineProperty","ManagerReferenceNodeContext","ManagerReferenceNodeSetterContext","Manager","_ref","_React$useState","referenceNode","setReferenceNode","hasUnmounted","handleSetReferenceNode","unwrapArray","safeInvoke","_len","_key","setRef","fromEntries","acc","useIsomorphicLayoutEffect","getWindow","isElement","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","max","round","getBoundingClientRect","includeScale","rect","scaleX","scaleY","offsetHeight","offsetWidth","right","bottom","getWindowScroll","win","pageXOffset","pageYOffset","getNodeName","getDocumentElement","getWindowScrollBarX","getComputedStyle","isScrollParent","_getComputedStyle","overflowX","overflowY","getCompositeRect","elementOrVirtualElement","offsetParent","isFixed","isOffsetParentAnElement","offsetParentIsScaled","isElementScaled","scroll","offsets","getNodeScroll","clientLeft","clientTop","getLayoutRect","clientRect","abs","offsetLeft","offsetTop","getParentNode","assignedSlot","getScrollParent","listScrollParents","list","_element$ownerDocumen","scrollParent","isBody","visualViewport","updatedList","isTableElement","getTrueOffsetParent","getOffsetParent","isFirefox","currentNode","css","transform","perspective","contain","willChange","getContainingBlock","auto","basePlacements","viewport","popper","variationPlacements","placement","placements","modifierPhases","modifiers","visited","modifier","requires","requiresIfExists","dep","depModifier","debounce","DEFAULT_OPTIONS","strategy","areValidElements","popperGenerator","generatorOptions","_generatorOptions","_generatorOptions$def","defaultModifiers","_generatorOptions$def2","defaultOptions","reference","orderedModifiers","modifiersData","elements","attributes","styles","effectCleanupFns","isDestroyed","setOptions","setOptionsAction","cleanupModifierEffects","scrollParents","contextElement","phase","orderModifiers","existing","mergeByName","enabled","_ref3$options","effect","cleanupFn","noopFn","update","_state$elements","rects","reset","_state$orderedModifie","_state$orderedModifie2","_options","onFirstUpdate","getBasePlacement","getVariation","getMainAxisFromPlacement","computeOffsets","basePlacement","variation","commonX","commonY","mainAxis","unsetSides","mapToStyles","_ref2","_Object$assign2","popperRect","gpuAcceleration","adaptive","roundOffsets","_offsets$x","_offsets$y","hasX","hasY","sideX","sideY","heightProp","widthProp","_Object$assign","commonStyles","dpr","devicePixelRatio","roundOffsetsByDPR","_options$offset","invertDistance","skidding","distance","distanceAndSkiddingToXY","_data$state$placement","popperOffsets","getOppositePlacement","matched","getOppositeVariationPlacement","parent","rootNode","getRootNode","isSameNode","rectToClientRect","getClientRectFromMixedType","clippingParent","html","clientWidth","clientHeight","getViewportRect","getInnerBoundingClientRect","winScroll","scrollWidth","scrollHeight","direction","getDocumentRect","getClippingRect","boundary","rootBoundary","mainClippingParents","clippingParents","clipperElement","getClippingParents","firstClippingParent","clippingRect","accRect","mergePaddingObject","paddingObject","expandToHashMap","hashMap","detectOverflow","_options$placement","_options$boundary","_options$rootBoundary","_options$elementConte","elementContext","_options$altBoundary","altBoundary","_options$padding","padding","altContext","clippingClientRect","referenceClientRect","popperClientRect","elementClientRect","overflowOffsets","offsetData","multiply","axis","_skip","_options$mainAxis","checkMainAxis","_options$altAxis","altAxis","checkAltAxis","specifiedFallbackPlacements","fallbackPlacements","_options$flipVariatio","flipVariations","allowedAutoPlacements","preferredPlacement","oppositePlacement","getExpandedFallbackPlacements","_options$allowedAutoP","allPlacements","allowedPlacements","overflows","computeAutoPlacement","referenceRect","checksMap","makeFallbackChecks","firstFittingPlacement","_basePlacement","isStartVariation","isVertical","mainVariationSide","altVariationSide","checks","check","_loop","fittingPlacement","find","within","mathMax","mathMin","_options$tether","tether","_options$tetherOffset","tetherOffset","isBasePlacement","tetherOffsetValue","normalizedTetherOffsetValue","offsetModifierState","_offsetModifierState$","mainSide","altSide","additive","maxLen","arrowElement","arrow","arrowRect","arrowPaddingObject","arrowPaddingMin","arrowPaddingMax","arrowLen","minOffset","maxOffset","arrowOffsetParent","clientOffset","offsetModifierValue","tetherMax","preventedOffset","_offsetModifierState$2","_mainSide","_altSide","_offset","_min","_max","isOriginSide","_offsetModifierValue","_tetherMin","_tetherMax","_preventedOffset","withinMaxClamp","_state$modifiersData$","toPaddingObject","minProp","maxProp","endDiff","startDiff","clientSize","centerToReference","center","axisProp","centerOffset","_options$element","querySelector","getSideOffsets","preventedOffsets","isAnySideFullyClipped","side","createPopper","_options$scroll","_options$resize","resize","_ref5","_options$gpuAccelerat","_options$adaptive","_options$roundOffsets","initialStyles","margin","property","attribute","flip","preventOverflow","referenceOverflow","popperAltOverflow","referenceClippingOffsets","popperEscapeOffsets","isReferenceHidden","hasPopperEscaped","EMPTY_MODIFIERS","NOOP","NOOP_PROMISE","Popper","_ref$placement","_ref$strategy","_ref$modifiers","referenceElement","innerRef","popperElement","setPopperElement","_React$useState2","setArrowElement","_usePopper","prevOptions","optionsWithDefaults","updateStateModifier","ReactDOM","popperOptions","newOptions","isEqual","popperInstanceRef","popperInstance","defaultCreatePopper","usePopper","childrenProps","hide","arrowProps","Reference","refHandler","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","_React$Component","_this","initialStatus","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","nextCallback","prevState","_proto","updateStatus","prevProps","nextStatus","cancelNextCallback","getTimeouts","exit","mounting","performEnter","performExit","_this2","appearing","nodeRef","maybeNode","maybeAppearing","timeouts","enterTimeout","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","onExited","nextState","setNextCallback","_this4","active","handler","doesNotHaveTimeoutOrListener","addEndListener","maybeNextCallback","_this$props","childProps","excluded","sourceKeys","_objectWithoutPropertiesLoose","TransitionGroupContext","noop","propTypes","globalCssModule","getScrollbarWidth","scrollDiv","scrollbarWidth","setScrollbarWidth","paddingRight","isBodyOverflowing","innerWidth","getOriginalBodyPadding","parseInt","getPropertyValue","conditionallyUpdateScrollbar","fixedContent","bodyPadding","mapToCssModules","cssModule","omit","omitKeys","pick","pickKeys","warned","warnOnce","deprecated","propType","explanation","DOMElement","targetPropType","tagPropType","TransitionTimeouts","Fade","Collapse","Modal","Carousel","Offcanvas","TransitionPropTypeKeys","TransitionStatuses","keyCodes","esc","space","tab","up","down","home","PopperPlacements","canUseDOM","isReactRefObj","getTag","toNumber","other","isBinary","findDOMElements","selection","isArrayOrNodeList","els","getTarget","allElements","defaultToggleEvents","addMultipleEventListeners","_els","_events","useCapture","events","focusableElements","fluid","Container","Tag","containerClass","rowColsPropType","noGutters","xs","sm","xl","xxl","widths","Row","colClasses","colWidth","colSize","isXs","colWidths","stringOrNumberProp","columnProps","getColumnSizeClass","getColumnClasses","columnProp","colSizeInterfix","colClass","Col","modifiedAttributes","light","dark","full","fixed","sticky","role","container","expand","Navbar","getExpandClass","NavbarBrand","NavbarText","NavbarToggler","tabs","pills","vertical","horizontal","justified","fill","navbar","card","Nav","getVerticalClass","NavItem","NavLink","listTag","listClassName","Breadcrumb","ListTag","label","listClasses","BreadcrumbItem","variant","CloseButton","block","outline","close","Button","ariaLabel","btnOutlineColor","onBlur","onFocus","ButtonToggle","toggled","DropdownContext","a11y","group","isOpen","nav","toggle","inNavbar","setActiveFromChild","menuRole","preventDefaultKeys","Dropdown","addEvents","handleDocumentClick","handleKeyDown","removeEvents","handleMenuRef","containerRef","menuRef","getContextValue","dropup","onMenuRef","handleProps","getContainer","getMenu","getMenuCtrl","_$menuCtrl","getItemType","getMenuItems","menuContainer","menu","clickIsInContainer","clickIsInInput","classList","clickIsInMenu","isTargetMenuItem","getAttribute","isTargetMenuCtrl","isTab","click","$menuitems","charPressed","attrs","subItemIsActive","dropdownItem","ButtonDropdown","ButtonGroup","ButtonToolbar","divider","header","DropdownItem","getTabIndex","getRole","tabIndex","updateOnSelect","directionPositionMap","DropdownMenu","show","position1","position2","poperPlacement","poperModifiers","combinedStyle","tagRef","caret","DropdownToggle","baseClass","baseClassActive","otherProps","transitionProps","AccordionContext","flush","Accordion","accordionContext","defaultOpen","stayOpen","UncontrolledAccordion","setOpen","accordionId","targetId","AccordionHeader","buttonClasses","collapsed","AccordionItem","transitionStatusToClassHash","dimension","getDimension","isAppearing","collapseClass","getTransitionClass","AccordionBody","pill","Badge","inverse","Card","CardGroup","CardDeck","CardColumns","CardBody","CardLink","CardFooter","CardHeader","CardImg","cardImgClassName","CardImgOverlay","CarouselItem","startAnimation","CustomEvent","isIn","slide","isActive","directionClassName","itemClasses","CarouselContext","handleKeyPress","renderItems","hoverStart","hoverEnd","handleTouchStart","handleTouchEnd","touchStartX","touchStartY","activeIndex","indicatorClicked","ride","setInterval","clearInterval","interval","cycleInterval","pause","mouseEnter","mouseLeave","evt","keyboard","previous","enableTouch","currentX","currentY","diffX","carouselItems","item","fade","outerClasses","innerClasses","onMouseEnter","onMouseLeave","controlLeft","controlRight","indicators","wrappedIndicators","onClickHandler","onTouchStart","onTouchEnd","nextProps","newState","CarouselControl","directionText","anchorClasses","iconClasses","screenReaderClasses","cursor","CarouselIndicators","items","idx","indicatorClasses","caption","values","CarouselCaption","captionHeader","captionText","controls","autoPlay","defaultActiveIndex","goToIndex","UncontrolledCarousel","animating","nextIndex","newIndex","slides","alt","altText","CardSubtitle","CardText","CardTitle","popperClassName","placementPrefix","arrowClassName","hideArrow","boundariesElement","onClosed","PopperContent","setTargetNode","getTargetNode","getRef","_element","childNodes","targetNode","getContainerNode","renderChildren","_arrowClassName","_popperClassName","modifierNames","baseModifiers","extendedModifiers","popperTransition","ReactPopper","popperPlacement","PopperTargetHelper","popperManager","innerClassName","autohide","trigger","DEFAULT_DELAYS","isInDOMSubtree","subtreeRoot","isInDOMSubtrees","subtreeRoots","subTreeRoot","TooltipPopoverWrapper","_targets","currentTargetElement","addTargetEvents","removeTargetEvents","showWithDelay","hideWithDelay","onMouseOverTooltipContent","onMouseLeaveTooltipContent","onEscKeyDown","_isMounted","updateTarget","clearShowTimeout","clearHideTimeout","_hideTimeout","_showTimeout","getDelay","_popover","getCurrentTarget","parentElement","composedPath","triggers","addEventOnTargets","isBubble","removeEventOnTargets","newTarget","popperClasses","onMouseOver","onKeyDown","Popover","UncontrolledPopover","PopoverHeader","PopoverBody","bar","multi","animated","striped","barClassName","barStyle","barAriaValueText","barAriaLabelledBy","Progress","percent","progressClasses","progressBarProps","Portal","defaultNode","FadePropTypes","centered","fullscreen","scrollable","labelledBy","backdrop","onOpened","wrapClassName","modalClassName","backdropClassName","contentClassName","external","backdropTransition","modalTransition","unmountOnClose","returnFocusAfterClose","trapFocus","propsToOmit","_originalBodyPadding","_originalBodyOverflow","getFocusableChildren","handleBackdropClick","handleBackdropMouseDown","handleEscape","handleStaticBackdropAnimation","handleTab","manageFocusAfterClose","clearBackdropAnimationTimeout","showStaticBackdropAnimation","init","setFocus","ev","_dialog","modalIndex","openCount","getFocusedChild","currentFocus","focusableChildren","_mouseDownElement","totalFocusable","focusedIndex","_backdropAnimationTimeout","_triggeringElement","_mountContainer","modalOpenClassName","modalOpenClassNameRegex","renderModalDialog","dialogBaseClass","isModalHidden","modalAttributes","onMouseDown","onKeyUp","hasTransition","Backdrop","wrapTag","closeAriaLabel","ModalHeader","closeButton","WrapTag","ModalBody","ModalFooter","Tooltip","bordered","borderless","hover","responsive","responsiveTag","Table","ResponsiveTag","table","responsiveClassName","numbered","ListGroup","getHorizontalClass","inline","Form","submit","valid","tooltip","FormFeedback","validMode","row","switch","floating","FormGroup","switchProp","formCheck","FormText","bsSize","invalid","plaintext","addon","Input","checkInput","isNotaNumber","selectInput","rangeInput","formControlClass","InputGroup","InputGroupText","hidden","Label","htmlFor","colFormLabel","formLabel","heading","middle","Media","defaultTag","media","offcanvasTransition","offcanvasIndex","_backdrop","isOffcanvasHidden","offcanvasAttributes","visibility","OffcanvasBody","OffcanvasHeader","Pagination","PaginationItem","first","PaginationLink","defaultAriaLabel","defaultCaret","TabContext","activeTab","TabContent","activeTabId","tabId","TabPane","getClasses","closeClassName","Alert","closeClasses","alertTransition","Toast","toastTransition","ToastBody","icon","ToastHeader","tagClassName","iconProp","xmlns","preserveAspectRatio","focusable","handleDisabledOnClick","ListGroupItem","ListGroupItemHeading","ListGroupItemText","List","ListInlineItem","UncontrolledButtonDropdown","toggler","toggleEvents","UncontrolledCollapse","togglers","removeEventListeners","UncontrolledDropdown","onToggle","UncontrolledTooltip","Spinner","Placeholder","PlaceholderButton","createEvent","initCustomEvent","setInfo","episodes","setEpisodes","results","pagination","api","prev","placeholder","sName","getElementById","sEpisode","apiURL","scope","air_date","Op","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","_invoke","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","isGeneratorFunction","genFun","ctor","mark","awrap","async","reverse","skipTempReset","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptors","asyncGeneratorStep","gen","_next","_throw","allowArrayLike","normalCompletion","didErr","step","_e2","_construct","Parent","Class","_wrapNativeSuper","_cache","Wrapper","stringToByteArray","out","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","webSafe","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","encodeString","decodeString","bytes","pos","c1","c2","c3","byteArrayToString","decodeStringToByteArray","charToByteMap","byte4","DecodeBase64StringError","base64urlEncodeWithoutPadding","utf8Bytes","base64Encode","base64Decode","getDefaultsFromGlobal","global","getGlobal","__FIREBASE_DEFAULTS__","getDefaults","defaultsJsonString","getDefaultsFromEnvVariable","decoded","getDefaultsFromCookie","getDefaultEmulatorHostnameAndPort","productName","_a","_b","getDefaultEmulatorHost","separatorIndex","lastIndexOf","getDefaultAppConfig","Deferred","createMockUserToken","projectId","uid","project","iat","sub","user_id","iss","aud","exp","auth_time","firebase","sign_in_provider","identities","alg","getUA","isSafari","forceEnvironment","isNode","isIndexedDBAvailable","indexedDB","FirebaseError","customData","captureStackTrace","ErrorFactory","service","serviceName","errors","fullCode","template","replaceTemplate","fullMessage","PATTERN","aKeys","bKeys","aProp","bProp","deepEqual","getModularInstance","_delegate","instanceFactory","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","DEFAULT_ENTRY_NAME","component","instances","instancesDeferred","instancesOptions","onInitCallbacks","identifier","normalizedIdentifier","normalizeInstanceIdentifier","deferred","isInitialized","shouldAutoInitialize","getOrInitializeService","instanceIdentifier","optional","isComponentEager","instanceDeferred","services","INTERNAL","_delete","isComponentSet","normalizedDeferredIdentifier","existingCallbacks","existingInstance","callbacks","invokeOnInitCallbacks","LogLevel","ComponentContainer","providers","provider","getProvider","setComponent","addComponent","levelStringToEnum","DEBUG","VERBOSE","INFO","WARN","ERROR","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","logType","logLevel","Logger","_logLevel","_logHandler","_userLogHandler","idbProxyableTypes","cursorAdvanceMethods","cursorRequestMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","receiver","IDBTransaction","objectStoreNames","objectStore","wrapFunction","IDBDatabase","transaction","IDBCursor","advance","continue","continuePrimaryKey","unwrap","storeNames","tx","transformCachableValue","unlisten","DOMException","cacheDonePromiseForTransaction","IDBObjectStore","IDBIndex","IDBRequest","success","promisifyRequest","newValue","readMethods","writeMethods","cachedMethods","getMethod","targetFuncName","useIndex","isWrite","storeName","store","oldTraps","PlatformLoggerServiceImpl","getProviders","getComponent","isVersionServiceProvider","getImmediate","library","logString","logger","PLATFORM_LOG_STRING","appName","_apps","_serverApps","_components","_addComponent","app","debug","_registerComponent","heartbeatController","triggerHeartbeat","ERRORS","ERROR_FACTORY","FirebaseAppImpl","_isDeleted","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","checkDestroyed","isDeleted","SDK_VERSION","initializeApp","rawConfig","existingApp","newApp","registerVersion","libraryKeyOrName","libraryMismatch","versionMismatch","STORE_NAME","dbPromise","getDbPromise","blocked","upgrade","blocking","terminated","openPromise","oldVersion","newVersion","openDB","createObjectStore","originalErrorMessage","readHeartbeatsFromIndexedDB","computeKey","idbGetError","writeHeartbeatsToIndexedDB","heartbeatObject","put","appId","HeartbeatServiceImpl","_heartbeatsCache","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","platformLogger","agent","getPlatformInfoString","getUTCDateString","lastSentHeartbeatDate","heartbeats","singleDateHeartbeat","hbTimestamp","overwrite","extractHeartbeatsForHeader","heartbeatsToSend","unsentEntries","headerString","heartbeatsCache","maxSize","heartbeatEntry","dates","countBytes","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","preExist","DB_CHECK_NAME","onsuccess","deleteDatabase","onupgradeneeded","idbHeartbeatObject","heartbeatsObject","existingHeartbeatsObject","_superPropBase","blockSize","isFinite","j","pow","and","or","xor","digest","Md5","modulo","getBits","fromNumber","fromString","Integer","proxy","once","addListener","removeListener","handleEvent","Number","OPEN","STAT_EVENT","stat","NO_ERROR","TIMEOUT","getResponseHeader","TextDecoder","decode","stream","PerformanceNavigationTiming","getEntriesByType","nextHopProtocol","chrome","loadTimes","wasFetchedViaSpdy","mc","clear","decodeURI","encodeURI","onload","Headers","ga","credentials","fetch","Request","arrayBuffer","ReadableStream","getReader","mozResponseArrayBuffer","internalChannelParams","xmlHttpFactory","useFetchStreams","supportsCrossDomainXhr","concurrentRequestLimit","fastHandshake","encodeInitMessageHeaders","forceLongPolling","detectBufferingProxy","longPollingTimeout","sendBeacon","Image","AbortController","messageUrlParams","messageHeaders","clientProtocolHeaderRequired","initMessageHeaders","messageContentType","sendRawJson","httpSessionIdParam","__headers__","statusCode","__status__","__sm__","connect","OSID","OAID","__data__","createWebChannel","createWebChannelTransport","getStatEventTarget","Event","Stat","PROXY","NOPROXY","HTTP_ERROR","ErrorCode","COMPLETE","EventType","CLOSE","MESSAGE","WebChannel","FetchXmlHttpFactory","listenOnce","getLastError","getLastErrorCode","getStatus","getResponseJson","getResponseText","setWithCredentials","XhrIo","User","isAuthenticated","toKey","otherUser","UNAUTHENTICATED","__PRIVATE_logClient","__PRIVATE_getLogLevel","__PRIVATE_logDebug","msg","__PRIVATE_argToString","__PRIVATE_logError","__PRIVATE_logWarn","fail","__PRIVATE_failure","assertion","__PRIVATE_debugCast","Code","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","UNAVAILABLE","DATA_LOSS","FirestoreError","super","__PRIVATE_Deferred","__PRIVATE_OAuthToken","user","__PRIVATE_EmptyAuthCredentialsProvider","getToken","invalidateToken","asyncQueue","changeListener","enqueueRetryable","shutdown","__PRIVATE_EmulatorAuthCredentialsProvider","__PRIVATE_FirebaseAuthCredentialsProvider","__PRIVATE_authProvider","forceRefresh","__PRIVATE_lastTokenId","__PRIVATE_tokenCounter","__PRIVATE_guardedChangeListener","__PRIVATE_nextToken","__PRIVATE_tokenListener","currentUser","__PRIVATE_getUser","__PRIVATE_awaitNextToken","__PRIVATE_currentTokenAttempt","__PRIVATE_registerAuth","addAuthTokenListener","onInit","__PRIVATE_initialTokenCounter","__PRIVATE_tokenData","__PRIVATE_hardAssert","accessToken","removeAuthTokenListener","__PRIVATE_currentUid","getUid","__PRIVATE_FirstPartyToken","__PRIVATE_sessionIndex","__PRIVATE_iamToken","__PRIVATE_authTokenFactory","FIRST_PARTY","__PRIVATE__headers","__PRIVATE_getAuthToken","__PRIVATE_authHeaderTokenValue","__PRIVATE_FirstPartyAuthCredentialsProvider","AppCheckToken","__PRIVATE_FirebaseAppCheckTokenProvider","__PRIVATE_appCheckProvider","appCheck","onTokenChanged","tokenResult","__PRIVATE_tokenUpdated","__PRIVATE_latestAppCheckToken","__PRIVATE_registerAppCheck","addTokenListener","removeTokenListener","__PRIVATE_randomBytes","__PRIVATE_nBytes","crypto","msCrypto","getRandomValues","__PRIVATE_i","__PRIVATE_AutoId","__PRIVATE_chars","__PRIVATE_maxMultiple","__PRIVATE_autoId","__PRIVATE_arrayEquals","comparator","Timestamp","seconds","nanoseconds","toDate","toMillis","_compareTo","__PRIVATE_primitiveComparator","__PRIVATE_adjustedSeconds","padStart","fromMillis","getTime","milliseconds","SnapshotVersion","timestamp","compareTo","toMicroseconds","toTimestamp","BasePath","nameOrPath","limit","popFirst","popLast","firstSegment","lastSegment","isEmpty","isPrefixOf","isImmediateParentOf","potentialChild","p1","p2","ResourcePath","canonicalString","toUriEncodedString","pathComponents","__PRIVATE_identifierRegExp","FieldPath","isValidIdentifier","isKeyField","__PRIVATE_addCurrentSegment","__PRIVATE_inBackticks","DocumentKey","collectionGroup","hasCollectionId","collectionId","getCollectionGroup","getCollectionPath","emptyPath","k1","k2","FieldIndex","indexId","fields","indexState","UNKNOWN_ID","readTime","largestBatchId","__PRIVATE_successorSeconds","__PRIVATE_successorNanos","__PRIVATE_successor","fromTimestamp","IndexOffset","empty","__PRIVATE_newIndexOffsetFromDocument","documentKey","cmp","__PRIVATE_PRIMARY_LEASE_LOST_ERROR_MSG","PersistenceTransaction","onCommittedListeners","addOnCommittedListener","raiseOnCommittedEvent","__PRIVATE_ignoreIfPrimaryLeaseLoss","PersistencePromise","catchCallback","isDone","callbackAttached","nextFn","catchFn","wrapFailure","wrapSuccess","toPromise","wrapUserFunction","expectedCount","__PRIVATE_resolvedCount","predicates","predicate","__PRIVATE_isTrue","collection","__PRIVATE_promises","waitFor","condition","__PRIVATE_getAndroidVersion","__PRIVATE_ua","__PRIVATE_androidVersionRegex","__PRIVATE_isIndexedDbTransactionError","__PRIVATE_ListenSequence","previousValue","__PRIVATE_sequenceNumberSyncer","sequenceNumberHandler","sequenceNumber","__PRIVATE_setPreviousValue","__PRIVATE_writeNewSequenceNumber","writeSequenceNumber","__PRIVATE_externalPreviousValue","__PRIVATE_nextValue","__PRIVATE_isNullOrUndefined","__PRIVATE_isNegativeZero","isSafeInteger","isInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","__PRIVATE_INVALID","__PRIVATE_DbDocumentMutationPlaceholder","__PRIVATE_V11_STORES","__PRIVATE_V13_STORES","__PRIVATE_V14_STORES","__PRIVATE_objectSize","SortedMap","root","LLRBNode","EMPTY","insert","copy","BLACK","__PRIVATE_prunedNodes","minKey","maxKey","inorderTraversal","__PRIVATE_descriptions","reverseTraversal","getIterator","SortedMapIterator","getIteratorFrom","getReverseIterator","getReverseIteratorFrom","startKey","isReverse","nodeStack","getNext","hasNext","peek","RED","fixUp","removeMin","isRed","moveRedLeft","__PRIVATE_smallest","rotateRight","moveRedRight","rotateLeft","colorFlip","__PRIVATE_nl","__PRIVATE_nr","checkMaxDepth","__PRIVATE_blackDepth","SortedSet","elem","forEachInRange","forEachWhile","firstAfterOrEqual","SortedSetIterator","unionWith","__PRIVATE_thisIt","__PRIVATE_otherIt","__PRIVATE_thisElem","__PRIVATE_otherElem","__PRIVATE_res","FieldMask","extraFields","__PRIVATE_mergedMaskSet","fieldPath","covers","__PRIVATE_Base64DecodeError","ByteString","binaryString","toBase64","raw","toUint8Array","approximateByteSize","__PRIVATE_encoded","__PRIVATE_ISO_TIMESTAMP_REG_EXP","__PRIVATE_normalizeTimestamp","nanos","__PRIVATE_fraction","__PRIVATE_nanoStr","__PRIVATE_parsedDate","__PRIVATE_normalizeNumber","__PRIVATE_normalizeByteString","blob","fromBase64String","fromUint8Array","__PRIVATE_isServerTimestamp","mapValue","__type__","__PRIVATE_getPreviousValue","__previous_value__","__PRIVATE_getLocalWriteTime","localWriteTime","__local_write_time__","timestampValue","DatabaseInfo","databaseId","persistenceKey","ssl","autoDetectLongPolling","longPollingOptions","DatabaseId","database","isDefaultDatabase","MAX_VALUE","stringValue","__PRIVATE_typeOrder","__PRIVATE_isMaxValue","__PRIVATE_leftType","booleanValue","__PRIVATE_leftTimestamp","__PRIVATE_rightTimestamp","bytesValue","referenceValue","geoPointValue","latitude","longitude","integerValue","__PRIVATE_n1","doubleValue","__PRIVATE_n2","arrayValue","__PRIVATE_valueEquals","__PRIVATE_leftMap","__PRIVATE_rightMap","__PRIVATE_haystack","__PRIVATE_needle","__PRIVATE_rightType","__PRIVATE_leftNumber","__PRIVATE_rightNumber","__PRIVATE_compareTimestamps","__PRIVATE_leftBytes","__PRIVATE_rightBytes","__PRIVATE_leftPath","__PRIVATE_rightPath","__PRIVATE_leftSegments","__PRIVATE_rightSegments","comparison","__PRIVATE_leftArray","__PRIVATE_rightArray","__PRIVATE_valueCompare","__PRIVATE_leftKeys","__PRIVATE_rightKeys","__PRIVATE_keyCompare","canonicalId","__PRIVATE_canonifyValue","__PRIVATE_normalizedTimestamp","byteString","fromName","__PRIVATE_geoPoint","__PRIVATE_isNullValue","__PRIVATE_isNanValue","__PRIVATE_isMapValue","__PRIVATE_deepClone","ObjectValue","field","__PRIVATE_currentLevel","getFieldsMap","setAll","__PRIVATE_upserts","__PRIVATE_deletes","__PRIVATE_fieldsMap","applyChanges","__PRIVATE_nestedValue","__PRIVATE_inserts","clone","__PRIVATE_extractFieldMask","__PRIVATE_currentPath","__PRIVATE_nestedFields","__PRIVATE_nestedPath","MutableDocument","documentType","createTime","documentState","convertToFoundDocument","convertToNoDocument","convertToUnknownDocument","setHasCommittedMutations","setHasLocalMutations","setReadTime","hasLocalMutations","hasCommittedMutations","hasPendingWrites","isValidDocument","isFoundDocument","isNoDocument","isUnknownDocument","mutableCopy","Bound","inclusive","__PRIVATE_boundCompareToDocument","bound","orderBy","doc","__PRIVATE_orderByComponent","dir","OrderBy","Filter","FieldFilter","op","matchesComparison","isInequality","getFlattenedFilters","getFilters","createKeyFieldInFilter","__PRIVATE_KeyFieldFilter","__PRIVATE_ArrayContainsFilter","__PRIVATE_InFilter","__PRIVATE_NotInFilter","__PRIVATE_ArrayContainsAnyFilter","__PRIVATE_KeyFieldInFilter","__PRIVATE_KeyFieldNotInFilter","CompositeFilter","filters","__PRIVATE_compositeFilterIsConjunction","__PRIVATE_memoizedFlattenedFilters","__PRIVATE_subfilter","compositeFilter","__PRIVATE_compositeFilterIsFlatConjunction","__PRIVATE_compositeFilterIsFlat","__PRIVATE_canonifyFilter","__PRIVATE_canonicalIdsString","__PRIVATE_f1","__PRIVATE_f2","__PRIVATE_f1Filter","__PRIVATE_filterEquals","__PRIVATE_stringifyFilter","__PRIVATE_extractDocumentKeysFromArrayValue","__PRIVATE_arrayValueContains","nullValue","__PRIVATE_TargetImpl","startAt","endAt","__PRIVATE_newTarget","__PRIVATE_canonifyTarget","__PRIVATE_targetImpl","__PRIVATE_memoizedCanonicalId","__PRIVATE_orderByEquals","__PRIVATE_boundEquals","__PRIVATE_targetIsDocumentTarget","isDocumentKey","__PRIVATE_QueryImpl","explicitOrderBy","limitType","__PRIVATE_newQuery","__PRIVATE_newQueryForPath","__PRIVATE_queryMatchesAllDocuments","query","__PRIVATE_isCollectionGroupQuery","__PRIVATE_queryNormalizedOrderBy","__PRIVATE_queryImpl","__PRIVATE_memoizedNormalizedOrderBy","__PRIVATE_fieldsNormalized","__PRIVATE_lastDirection","__PRIVATE_inequalityFields","keyField","__PRIVATE_queryToTarget","__PRIVATE_memoizedTarget","__PRIVATE__queryToTarget","__PRIVATE_orderBys","__PRIVATE_queryWithLimit","__PRIVATE_targetEquals","__PRIVATE_canonifyQuery","__PRIVATE_stringifyQuery","__PRIVATE_docPath","__PRIVATE_boundSortsBeforeDocument","__PRIVATE_queryCollectionGroup","__PRIVATE_newQueryComparator","__PRIVATE_d1","__PRIVATE_d2","__PRIVATE_comparedOnKeyField","comp","__PRIVATE_compareDocs","v1","v2","ObjectMap","mapKeyFn","equalsFn","innerSize","__PRIVATE_otherKey","__PRIVATE_EMPTY_MUTABLE_DOCUMENT_MAP","__PRIVATE_mutableDocumentMap","__PRIVATE_EMPTY_DOCUMENT_MAP","documentMap","docs","__PRIVATE_convertOverlayedDocumentMapToDocumentMap","documents","overlayedDocument","__PRIVATE_newOverlayMap","__PRIVATE_newDocumentKeyMap","__PRIVATE_newMutationMap","__PRIVATE_EMPTY_DOCUMENT_VERSION_MAP","__PRIVATE_EMPTY_DOCUMENT_KEY_SET","__PRIVATE_EMPTY_TARGET_ID_SET","__PRIVATE_targetIdSet","serializer","useProto3Json","__PRIVATE_toInteger","__PRIVATE_toDouble","TransformOperation","__PRIVATE_applyTransformOperationToLocalView","__PRIVATE_ServerTimestampTransform","__PRIVATE_ArrayUnionTransformOperation","__PRIVATE_applyArrayUnionTransformOperation","__PRIVATE_ArrayRemoveTransformOperation","__PRIVATE_applyArrayRemoveTransformOperation","__PRIVATE_baseValue","__PRIVATE_computeTransformOperationBaseValue","sum","asNumber","__PRIVATE_operand","__PRIVATE_applyTransformOperationToRemoteDocument","__PRIVATE_transformResult","__PRIVATE_NumericIncrementTransformOperation","__PRIVATE_coercedFieldValuesArray","__PRIVATE_toUnion","__PRIVATE_toRemove","MutationResult","transformResults","Precondition","updateTime","exists","isNone","precondition","Mutation","mask","__PRIVATE_DeleteMutation","none","__PRIVATE_SetMutation","__PRIVATE_docValue","__PRIVATE_patchValue","__PRIVATE_maskSet","__PRIVATE_PatchMutation","__PRIVATE_mutationApplyToRemoteDocument","mutation","__PRIVATE_mutationResult","__PRIVATE_newData","__PRIVATE_serverTransformResults","fieldTransforms","__PRIVATE_preconditionIsValidForDocument","__PRIVATE_getPatch","__PRIVATE_mutationApplyToLocalView","__PRIVATE_previousMask","__PRIVATE_localTransformResults","fieldMask","__PRIVATE_baseObject","__PRIVATE_fieldTransform","__PRIVATE_existingValue","__PRIVATE_coercedValue","__PRIVATE_fieldTransformEquals","getFieldMask","__PRIVATE_mutableDocument","__PRIVATE_RpcCode","__PRIVATE_VerifyMutation","MutationBatch","batchId","baseMutations","mutations","applyToRemoteDocument","batchResult","mutationResults","applyToLocalView","mutatedFields","applyToLocalDocumentSet","documentsWithoutRemoteVersion","overlays","__PRIVATE_overlay","__PRIVATE_calculateOverlayMutation","__PRIVATE_documentKeySet","__PRIVATE_mutationEquals","MutationBatchResult","batch","commitVersion","docVersions","__PRIVATE_versionMap","Overlay","getKey","ExistenceFilter","unchangedNames","__PRIVATE_isPermanentError","__PRIVATE_mapCodeFromRpcCode","RpcCode","__PRIVATE_testingHooksSpi","__PRIVATE_newTextEncoder","TextEncoder","__PRIVATE_MAX_64_BIT_UNSIGNED_INTEGER","__PRIVATE_getMd5HashValue","__PRIVATE_encodedValue","__PRIVATE_md5","__PRIVATE_get64BitUints","Bytes","__PRIVATE_dataView","DataView","__PRIVATE_chunk1","getUint32","__PRIVATE_chunk2","__PRIVATE_chunk3","__PRIVATE_chunk4","BloomFilter","bitmap","hashCount","__PRIVATE_BloomFilterError","__PRIVATE_bitCount","__PRIVATE_bitCountInInteger","__PRIVATE_getBitIndex","__PRIVATE_num1","__PRIVATE_num2","__PRIVATE_hashIndex","__PRIVATE_hashValue","__PRIVATE_isBitSet","mightContain","__PRIVATE_md5HashedValue","__PRIVATE_hash1","__PRIVATE_hash2","__PRIVATE_setBit","__PRIVATE_indexOfByte","bloomFilter","RemoteEvent","snapshotVersion","targetChanges","targetMismatches","documentUpdates","resolvedLimboDocuments","resumeToken","TargetChange","createSynthesizedTargetChangeForCurrentChange","addedDocuments","modifiedDocuments","removedDocuments","__PRIVATE_DocumentWatchChange","__PRIVATE_updatedTargetIds","removedTargetIds","__PRIVATE_newDoc","__PRIVATE_ExistenceFilterChange","__PRIVATE_existenceFilter","__PRIVATE_WatchTargetChange","targetIds","EMPTY_BYTE_STRING","cause","__PRIVATE_TargetState","__PRIVATE_documentChanges","__PRIVATE_snapshotChangesMap","__PRIVATE__resumeToken","__PRIVATE__current","__PRIVATE_isPending","__PRIVATE_pendingResponses","__PRIVATE_hasPendingChanges","__PRIVATE__hasPendingChanges","__PRIVATE_updateResumeToken","__PRIVATE_toTargetChange","changeType","__PRIVATE_clearPendingChanges","__PRIVATE_addDocumentChange","__PRIVATE_removeDocumentChange","__PRIVATE_recordPendingTargetRequest","__PRIVATE_recordTargetResponse","__PRIVATE_markCurrent","__PRIVATE_WatchChangeAggregator","__PRIVATE_metadataProvider","__PRIVATE_targetStates","__PRIVATE_pendingDocumentUpdates","__PRIVATE_pendingDocumentTargetMapping","__PRIVATE_documentTargetMap","__PRIVATE_handleDocumentChange","__PRIVATE_docChange","__PRIVATE_addDocumentToTarget","__PRIVATE_removeDocumentFromTarget","__PRIVATE_handleTargetChange","targetChange","forEachTarget","__PRIVATE_targetState","__PRIVATE_ensureTargetState","__PRIVATE_isActiveTarget","removeTarget","__PRIVATE_resetTarget","__PRIVATE_handleExistenceFilter","__PRIVATE_watchChange","targetData","__PRIVATE_targetDataForActiveTarget","newNoDocument","__PRIVATE_currentSize","__PRIVATE_getCurrentDocumentCountForTarget","__PRIVATE_parseBloomFilter","__PRIVATE_applyBloomFilter","purpose","__PRIVATE_pendingTargetResets","__PRIVATE_notifyOnExistenceFilterMismatch","localCacheCount","__PRIVATE_bloomFilterStatus","existenceFilterCount","applied","bitmapLength","_c","bits","_f","__PRIVATE_getDatabaseId","__PRIVATE_normalizedBitmap","__PRIVATE_currentCount","__PRIVATE_filterRemovedDocuments","__PRIVATE_existingKeys","getRemoteKeysForTarget","__PRIVATE_removalCount","documentPath","__PRIVATE_createRemoteEvent","__PRIVATE_targetContainsDocument","__PRIVATE_targets","__PRIVATE_isOnlyLimboTarget","remoteEvent","__PRIVATE_ensureDocumentTargetMapping","__PRIVATE_updatedDocument","__PRIVATE_targetMapping","__PRIVATE_targetActive","__PRIVATE_getTargetDataForTarget","__PRIVATE_DIRECTIONS","__PRIVATE_dirs","__PRIVATE_OPERATORS","__PRIVATE_ops","__PRIVATE_COMPOSITE_OPERATORS","JsonProtoSerializer","__PRIVATE_toInt32Proto","__PRIVATE_fromVersion","__PRIVATE_toResourcePath","__PRIVATE_resourcePath","__PRIVATE_fromResourceName","__PRIVATE_resource","__PRIVATE_isValidResourceName","__PRIVATE_toResourceName","__PRIVATE_extractLocalPathFromResourceName","__PRIVATE_toQueryPath","__PRIVATE_fromQueryPath","__PRIVATE_resourceName","__PRIVATE_getEncodedDatabaseId","__PRIVATE_toMutationDocument","__PRIVATE_toName","toMutation","updateMask","__PRIVATE_toDocumentMask","verify","updateTransforms","setToServerValue","appendMissingElements","removeAllFromArray","increment","currentDocument","__PRIVATE_toVersion","__PRIVATE_queryTarget","structuredQuery","allDescendants","where","__PRIVATE_toFilter","__PRIVATE_toFieldPathReference","__PRIVATE_toDirection","before","__PRIVATE_convertQueryTargetToQuery","__PRIVATE_fromCount","__PRIVATE_filterBy","__PRIVATE_fromFilter","__PRIVATE_fromFieldPathReference","unaryFilter","__PRIVATE_nanField","NaN","__PRIVATE_nullField","__PRIVATE_notNanField","__PRIVATE_notNullField","fieldFilter","__PRIVATE_toOperatorName","__PRIVATE_toCompositeOperatorName","__PRIVATE_fieldReference","fromServerFormat","__PRIVATE_protos","__PRIVATE_canonicalFields","fieldPaths","TargetData","lastLimboFreeSnapshotVersion","withSequenceNumber","withResumeToken","withExpectedCount","withLastLimboFreeSnapshotVersion","__PRIVATE_LocalSerializer","__PRIVATE_remoteSerializer","__PRIVATE_fromBundledQuery","bundledQuery","__PRIVATE_FirestoreIndexValueWriter","__PRIVATE_writeIndexValue","__PRIVATE_encoder","__PRIVATE_writeIndexValueAux","__PRIVATE_writeInfinity","__PRIVATE_indexValue","__PRIVATE_writeValueTypeLabel","__PRIVATE_writeNumber","__PRIVATE_writeString","__PRIVATE_writeIndexString","__PRIVATE_writeTruncationMarker","__PRIVATE_writeBytes","__PRIVATE_writeIndexEntityRef","__PRIVATE_writeIndexMap","__PRIVATE_writeIndexArray","__PRIVATE_stringIndexValue","__PRIVATE_writeUnlabeledIndexString","__PRIVATE_mapIndexValue","__PRIVATE_arrayIndexValue","__PRIVATE_INSTANCE","__PRIVATE_MemoryIndexManager","__PRIVATE_collectionParentIndex","__PRIVATE_MemoryCollectionParentIndex","addToCollectionParentIndex","collectionPath","getCollectionParents","getEntries","addFieldIndex","deleteFieldIndex","deleteAllFieldIndexes","createTargetIndexes","getDocumentsMatchingTarget","getIndexType","getFieldIndexes","getNextCollectionGroupToUpdate","getMinOffset","getMinOffsetFromCollectionGroup","updateCollectionGroup","updateIndexEntries","__PRIVATE_existingParents","__PRIVATE_added","LruParams","cacheSizeCollectionThreshold","percentileToCollect","maximumSequenceNumbersToCollect","cacheSize","DEFAULT_COLLECTION_PERCENTILE","DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT","DISABLED","__PRIVATE_TargetIdGenerator","__PRIVATE_lastId","RemoteDocumentChangeBuffer","changes","changesApplied","addEntry","assertNotApplied","removeEntry","newInvalidDocument","getEntry","__PRIVATE_bufferedEntry","getFromCache","documentKeys","getAllFromCache","OverlayedDocument","LocalDocumentsView","remoteDocumentCache","mutationQueue","documentOverlayCache","indexManager","getDocument","getOverlay","getDocuments","getLocalViewOfDocuments","existenceStateChanged","populateOverlays","computeViews","__PRIVATE_computeViewsResult","getOverlayedDocuments","__PRIVATE_missingOverlays","getOverlays","__PRIVATE_recalculateDocuments","recalculateAndSaveOverlays","__PRIVATE_recalculatedFields","__PRIVATE_masks","__PRIVATE_documentsByBatchId","key1","key2","__PRIVATE_processed","getAllMutationBatchesAffectingDocumentKeys","__PRIVATE_batches","__PRIVATE_baseDoc","__PRIVATE_newSet","overlayMutation","saveOverlays","recalculateAndSaveOverlaysForDocumentKeys","getDocumentsMatchingQuery","getDocumentsMatchingDocumentQuery","getDocumentsMatchingCollectionGroupQuery","getDocumentsMatchingCollectionQuery","getNextDocuments","getAllFromCollectionGroup","__PRIVATE_originalDocs","__PRIVATE_overlaysPromise","getOverlaysForCollectionGroup","__PRIVATE_modifiedDocs","__PRIVATE_localDocs","__PRIVATE_parents","__PRIVATE_collectionQuery","getOverlaysForCollection","__PRIVATE_remoteDocuments","__PRIVATE_queryMatches","__PRIVATE_MemoryBundleCache","__PRIVATE_bundles","__PRIVATE_namedQueries","getBundleMetadata","bundleId","saveBundleMetadata","__PRIVATE_bundleMetadata","metadata","getNamedQuery","queryName","saveNamedQuery","namedQuery","__PRIVATE_MemoryDocumentOverlayCache","__PRIVATE_overlayByBatchId","__PRIVATE_saveOverlay","removeOverlaysForBatchId","sinceBatchId","__PRIVATE_immediateChildrenPathLength","prefix","__PRIVATE_batchIdToOverlays","__PRIVATE_overlaysForBatchId","__PRIVATE_batchIter","__PRIVATE_existing","__PRIVATE_ReferenceSet","__PRIVATE_DocReference","__PRIVATE_compareByKey","__PRIVATE_compareByTargetId","__PRIVATE_refsByKey","addReference","__PRIVATE_refsByTarget","__PRIVATE_addReferences","removeReference","__PRIVATE_removeRef","__PRIVATE_removeReferences","__PRIVATE_removeReferencesForId","__PRIVATE_emptyKey","__PRIVATE_startRef","__PRIVATE_endRef","__PRIVATE_removeAllReferences","__PRIVATE_referencesForId","containsKey","__PRIVATE_firstRef","__PRIVATE_targetOrBatchId","__PRIVATE_MemoryMutationQueue","referenceDelegate","checkEmpty","addMutationBatch","__PRIVATE_nextBatchId","__PRIVATE_batchesByDocumentKey","lookupMutationBatch","__PRIVATE_findMutationBatch","getNextMutationBatchAfterBatchId","__PRIVATE_rawIndex","__PRIVATE_indexOfBatchId","getHighestUnacknowledgedBatchId","getAllMutationBatches","getAllMutationBatchesAffectingDocumentKey","POSITIVE_INFINITY","__PRIVATE_uniqueBatchIDs","__PRIVATE_findMutationBatches","getAllMutationBatchesAffectingQuery","__PRIVATE_startPath","__PRIVATE_rowKeyPath","__PRIVATE_batchIDs","removeMutationBatch","__PRIVATE_indexOfExistingBatchId","__PRIVATE_references","markPotentiallyOrphaned","__PRIVATE_removeCachedMutationKeys","txn","performConsistencyCheck","__PRIVATE_MemoryRemoteDocumentCacheImpl","__PRIVATE_sizer","setIndexManager","__PRIVATE_previousSize","mutatedDocs","__PRIVATE_indexOffsetComparator","__PRIVATE_limti","__PRIVATE_forEachDocumentKey","newChangeBuffer","__PRIVATE_MemoryRemoteDocumentChangeBuffer","getSize","__PRIVATE_documentCache","__PRIVATE_MemoryTargetCache","persistence","highestTargetId","targetCount","__PRIVATE_forTargetCache","getLastRemoteSnapshotVersion","lastRemoteSnapshotVersion","getHighestSequenceNumber","__PRIVATE_highestSequenceNumber","allocateTargetId","__PRIVATE_targetIdGenerator","setTargetsMetadata","highestListenSequenceNumber","__PRIVATE_saveTargetData","addTargetData","updateTargetData","removeTargetData","removeTargets","upperBound","activeTargetIds","__PRIVATE_removals","removeMatchingKeysForTargetId","getTargetCount","getTargetData","addMatchingKeys","removeMatchingKeys","getMatchingKeysForTargetId","__PRIVATE_matchingKeys","__PRIVATE_MemoryPersistence","__PRIVATE_referenceDelegateFactory","__PRIVATE__started","__PRIVATE_targetCache","__PRIVATE_documentSize","__PRIVATE_bundleCache","started","setDatabaseDeletedListener","setNetworkEnabled","getIndexManager","getDocumentOverlayCache","getMutationQueue","__PRIVATE_queue","__PRIVATE_mutationQueues","getTargetCache","getRemoteDocumentCache","getBundleCache","runTransaction","transactionOperation","__PRIVATE_MemoryTransaction","__PRIVATE_listenSequence","__PRIVATE_onTransactionStarted","__PRIVATE_onTransactionCommitted","__PRIVATE_mutationQueuesContainKey","currentSequenceNumber","__PRIVATE_MemoryEagerDelegate","__PRIVATE_localViewReferences","__PRIVATE_orphanedDocuments","__PRIVATE__orphanedDocuments","__PRIVATE_changeBuffer","fromPath","__PRIVATE_isReferenced","updateLimboDocument","__PRIVATE_LocalViewChanges","fromCache","__PRIVATE_addedKeys","__PRIVATE_removedKeys","__PRIVATE_viewSnapshot","docChanges","QueryContext","_documentReadCount","documentReadCount","incrementDocumentReadCount","amount","__PRIVATE_QueryEngine","__PRIVATE_relativeIndexReadCostPerDocument","initialize","localDocuments","__PRIVATE_localDocumentsView","__PRIVATE_initialized","__PRIVATE_remoteKeys","__PRIVATE_queryResult","__PRIVATE_performQueryUsingIndex","__PRIVATE_performQueryUsingRemoteKeys","__PRIVATE_executeFullCollectionScan","__PRIVATE_indexAutoCreationEnabled","__PRIVATE_createCacheIndexes","__PRIVATE_resultSize","__PRIVATE_indexAutoCreationMinCollectionSize","__PRIVATE_indexType","__PRIVATE_sortedKeys","__PRIVATE_indexedDocuments","__PRIVATE_previousResults","__PRIVATE_applyQuery","__PRIVATE_needsRefill","__PRIVATE_appendRemainingResults","__PRIVATE_newIndexOffsetSuccessorFromReadTime","__PRIVATE_queryResults","__PRIVATE_maybeDoc","__PRIVATE_sortedPreviousResults","__PRIVATE_limboFreeSnapshotVersion","__PRIVATE_docAtLimitEdge","__PRIVATE_indexedResults","__PRIVATE_remainingResults","__PRIVATE_LocalStoreImpl","__PRIVATE_queryEngine","initialUser","__PRIVATE_collectionGroupReadTime","__PRIVATE_initializeUserComponents","collectGarbage","garbageCollector","collect","__PRIVATE_targetDataByTarget","__PRIVATE_newLocalStore","__PRIVATE_localStoreHandleUserChange","localStore","__PRIVATE_localStoreImpl","__PRIVATE_oldBatches","__PRIVATE_promisedOldBatches","__PRIVATE_newBatches","removedBatchIds","addedBatchIds","__PRIVATE_changedKeys","__PRIVATE_affectedDocuments","__PRIVATE_affected","__PRIVATE_documentBuffer","trackRemovals","__PRIVATE_docKeys","__PRIVATE_promiseChain","__PRIVATE_docKey","__PRIVATE_ackVersion","__PRIVATE_localStoreGetLastRemoteSnapshotVersion","__PRIVATE_remoteVersion","__PRIVATE_newTargetDataByTargetMap","__PRIVATE_change","__PRIVATE_oldTargetData","__PRIVATE_newTargetData","__PRIVATE_changedDocs","__PRIVATE_existenceChangedKeys","__PRIVATE_populateDocumentChangeBuffer","__PRIVATE_changedDocuments","__PRIVATE_updateRemoteVersion","__PRIVATE_updatedKeys","__PRIVATE_existingDocs","__PRIVATE_existingDoc","__PRIVATE_afterBatchId","__PRIVATE_cached","__PRIVATE_cachedTargetData","__PRIVATE_targetIdByTarget","__PRIVATE_localStoreReleaseTarget","__PRIVATE_keepPersistedTargetData","__PRIVATE_localStoreExecuteQuery","__PRIVATE_usePreviousResults","__PRIVATE_localStoreGetTargetData","__PRIVATE_setMaxReadTime","__PRIVATE_LocalClientState","__PRIVATE_addQueryTarget","__PRIVATE_removeQueryTarget","__PRIVATE_toWebStorageJSON","updateTimeMs","__PRIVATE_MemorySharedClientState","__PRIVATE_localState","onlineStateHandler","addPendingMutation","updateMutationState","addLocalQueryTarget","__PRIVATE_queryState","updateQueryState","removeLocalQueryTarget","isLocalQueryTarget","clearQueryState","getAllActiveQueryTargets","isActiveQueryTarget","handleUserChange","setOnlineState","onlineState","notifyBundleLoaded","collectionGroups","__PRIVATE_NoopConnectivityMonitor","__PRIVATE_addCallback","__PRIVATE_BrowserConnectivityMonitor","__PRIVATE_onNetworkAvailable","__PRIVATE_onNetworkUnavailable","__PRIVATE_configureNetworkMonitoring","__PRIVATE_callbacks","__PRIVATE_networkAvailableListener","__PRIVATE_networkUnavailableListener","__PRIVATE_lastUniqueDebugId","__PRIVATE_generateUniqueDebugId","__PRIVATE_maxResult","__PRIVATE_RPC_NAME_URL_MAPPING","__PRIVATE_StreamBridge","__PRIVATE_sendFn","__PRIVATE_closeFn","__PRIVATE_onConnected","__PRIVATE_wrappedOnConnected","__PRIVATE_onOpen","__PRIVATE_wrappedOnOpen","__PRIVATE_onClose","__PRIVATE_wrappedOnClose","onMessage","__PRIVATE_wrappedOnMessage","__PRIVATE_callOnConnected","__PRIVATE_callOnOpen","__PRIVATE_callOnClose","__PRIVATE_callOnMessage","__PRIVATE_LOG_TAG","__PRIVATE_WebChannelConnection","__PRIVATE_performRPCRequest","__PRIVATE_rpcName","streamId","__PRIVATE_xhr","json","__PRIVATE_responseError","__PRIVATE_firestoreErrorCode","__PRIVATE_serverError","__PRIVATE_requestString","__PRIVATE_openStream","__PRIVATE_authToken","appCheckToken","__PRIVATE_urlParts","__PRIVATE_baseUrl","__PRIVATE_webchannelTransport","__PRIVATE_requestStats","forwardChannelRequestTimeoutMs","__PRIVATE_longPollingTimeoutSeconds","timeoutSeconds","__PRIVATE_modifyHeadersForRequest","channel","__PRIVATE_opened","closed","__PRIVATE_streamBridge","__PRIVATE_unguardedEventListen","__PRIVATE_msgData","__PRIVATE_msgDataOrError","databaseInfo","proto","__PRIVATE_databasePath","__PRIVATE_requestParams","__PRIVATE_shouldResourcePathBeIncludedInRequest","__PRIVATE_invokeRPC","__PRIVATE_req","__PRIVATE_makeUrl","__PRIVATE_invokeStreamingRPC","__PRIVATE_expectedResponseCount","__PRIVATE_urlRpcName","terminate","__PRIVATE_newSerializer","__PRIVATE_ExponentialBackoff","timerId","__PRIVATE_initialDelayMs","__PRIVATE_backoffFactor","__PRIVATE_maxDelayMs","__PRIVATE_currentBaseMs","__PRIVATE_resetToMax","__PRIVATE_backoffAndRun","__PRIVATE_desiredDelayWithJitterMs","__PRIVATE_jitterDelayMs","__PRIVATE_delaySoFarMs","__PRIVATE_lastAttemptTime","__PRIVATE_remainingDelayMs","__PRIVATE_timerPromise","enqueueAfterDelay","__PRIVATE_skipBackoff","skipDelay","__PRIVATE_PersistentStream","__PRIVATE_connectionTimerId","__PRIVATE_idleTimerId","__PRIVATE_healthTimerId","connection","authCredentialsProvider","appCheckCredentialsProvider","__PRIVATE_backoff","__PRIVATE_isStarted","__PRIVATE_isOpen","__PRIVATE_performBackoff","__PRIVATE_inhibitBackoff","__PRIVATE_markIdle","__PRIVATE_idleTimer","__PRIVATE_handleIdleCloseTimer","__PRIVATE_sendRequest","__PRIVATE_cancelIdleCheck","__PRIVATE_cancelHealthCheck","__PRIVATE_healthCheck","__PRIVATE_finalState","__PRIVATE_closeCount","__PRIVATE_tearDown","__PRIVATE_dispatchIfNotClosed","__PRIVATE_getCloseGuardedDispatcher","__PRIVATE_startStream","__PRIVATE_rpcError","__PRIVATE_handleStreamClose","__PRIVATE_startRpc","__PRIVATE_startCloseCount","enqueueAndForget","__PRIVATE_PersistentListenStream","authCredentials","appCheckCredentials","__PRIVATE_watchChangeProto","targetChangeType","__PRIVATE_causeProto","documentChange","__PRIVATE_entityChange","newFoundDocument","documentDelete","__PRIVATE_docDelete","documentRemove","__PRIVATE_docRemove","__PRIVATE_fromWatchChange","snapshot","__PRIVATE_onWatchChange","__PRIVATE_watch","addTarget","__PRIVATE_toDocumentsTarget","__PRIVATE_toQueryTarget","__PRIVATE_toBytes","labels","__PRIVATE_toListenRequestLabels","__PRIVATE_unwatch","__PRIVATE_PersistentWriteStream","__PRIVATE_handshakeComplete","__PRIVATE_handshakeComplete_","lastStreamToken","__PRIVATE_writeMutations","__PRIVATE_responseProto","streamToken","commitTime","__PRIVATE_fromWriteResults","writeResults","__PRIVATE_onMutationResult","__PRIVATE_onHandshakeComplete","__PRIVATE_writeHandshake","writes","__PRIVATE_DatastoreImpl","__PRIVATE_verifyInitialized","__PRIVATE_terminated","__PRIVATE_OnlineStateTracker","__PRIVATE_handleWatchStreamStart","__PRIVATE_watchStreamFailures","__PRIVATE_setAndBroadcast","__PRIVATE_onlineStateTimer","__PRIVATE_logClientOfflineWarningIfNecessary","__PRIVATE_handleWatchStreamFailure","__PRIVATE_clearOnlineStateTimer","__PRIVATE_newState","__PRIVATE_shouldWarnClientIsOffline","details","__PRIVATE_RemoteStoreImpl","datastore","__PRIVATE_connectivityMonitor","remoteSyncer","__PRIVATE_listenTargets","__PRIVATE_offlineCauses","__PRIVATE_canUseNetwork","remoteStore","__PRIVATE_remoteStoreImpl","__PRIVATE_disableNetworkInternal","__PRIVATE_onlineStateTracker","__PRIVATE_enableNetworkInternal","__PRIVATE_onNetworkStatusChange","__PRIVATE_networkStatusHandler","__PRIVATE_shouldStartWatchStream","__PRIVATE_startWatchStream","__PRIVATE_ensureWatchStream","__PRIVATE_sendWatchRequest","__PRIVATE_watchStream","__PRIVATE_sendUnwatchRequest","__PRIVATE_watchChangeAggregator","__PRIVATE_cleanUpWatchStreamState","__PRIVATE_onWatchStreamConnected","__PRIVATE_onWatchStreamOpen","__PRIVATE_onWatchStreamClose","__PRIVATE_onWatchStreamChange","rejectListen","__PRIVATE_disableNetworkUntilRecovery","__PRIVATE_targetPurpose","__PRIVATE_requestTargetData","applyRemoteEvent","__PRIVATE_executeWithRecovery","__PRIVATE_fillWritePipeline","__PRIVATE_writeStream","__PRIVATE_ensureWriteStream","__PRIVATE_lastBatchIdRetrieved","__PRIVATE_writePipeline","__PRIVATE_canAddToWritePipeline","__PRIVATE_localStoreGetNextMutationBatch","__PRIVATE_addToWritePipeline","__PRIVATE_shouldStartWriteStream","__PRIVATE_startWriteStream","__PRIVATE_onWriteStreamOpen","__PRIVATE_onWriteHandshakeComplete","__PRIVATE_success","applySuccessfulWrite","__PRIVATE_onWriteStreamClose","rejectFailedWrite","__PRIVATE_remoteStoreHandleCredentialChange","verifyOperationInProgress","__PRIVATE_usesNetwork","handleCredentialChange","__PRIVATE_remoteStoreApplyPrimaryState","__PRIVATE_datastoreImpl","DelayedOperation","targetTimeMs","removalCallback","delayMs","timerHandle","handleDelayElapsed","__PRIVATE_delayedOp","__PRIVATE_ListenerDataSource","DocumentSet","keyedMap","sortedSet","__PRIVATE_thisDoc","__PRIVATE_otherDoc","__PRIVATE_docStrings","oldSet","__PRIVATE_DocumentChangeSet","__PRIVATE_oldChange","__PRIVATE_changeMap","__PRIVATE_getChanges","ViewSnapshot","oldDocs","mutatedKeys","syncStateChanged","excludesMetadataChanges","hasCachedResults","__PRIVATE_queryEquals","__PRIVATE_otherChanges","emptySet","__PRIVATE_QueryListenersInfo","__PRIVATE_hasRemoteListeners","__PRIVATE_listeners","__PRIVATE_listensToRemoteStore","__PRIVATE_EventManagerImpl","__PRIVATE_snapshotsInSyncListeners","__PRIVATE_eventManagerListen","eventManager","__PRIVATE_eventManagerImpl","__PRIVATE_listenerAction","__PRIVATE_queryInfo","queries","onListen","__PRIVATE_viewSnap","onFirstRemoteStoreListen","__PRIVATE_firestoreError","__PRIVATE_wrapInUserErrorIfRecoverable","__PRIVATE_applyOnlineStateChange","__PRIVATE_onViewSnapshot","__PRIVATE_raiseSnapshotsInSyncEvent","__PRIVATE_eventManagerUnlisten","onUnlisten","onLastRemoteStoreUnlisten","__PRIVATE_viewSnaps","__PRIVATE_raisedEvent","__PRIVATE_eventManagerOnWatchError","observer","ListenerDataSource","J_","__PRIVATE_QueryListener","__PRIVATE_queryObserver","__PRIVATE_snap","includeMetadataChanges","__PRIVATE_raisedInitialEvent","__PRIVATE_shouldRaiseEvent","__PRIVATE_shouldRaiseInitialEvent","__PRIVATE_raiseInitialEvent","__PRIVATE_maybeOnline","__PRIVATE_waitForSyncWhenOnline","__PRIVATE_hasPendingWritesChanged","fromInitialDocuments","Cache","__PRIVATE_AddedLimboDocument","__PRIVATE_RemovedLimboDocument","__PRIVATE_View","__PRIVATE__syncedDocuments","__PRIVATE_limboDocuments","__PRIVATE_docComparator","__PRIVATE_documentSet","__PRIVATE_syncedDocuments","__PRIVATE_computeDocChanges","__PRIVATE_previousChanges","__PRIVATE_changeSet","__PRIVATE_oldDocumentSet","__PRIVATE_newMutatedKeys","__PRIVATE_newDocumentSet","__PRIVATE_lastDocInLimit","__PRIVATE_firstDocInLimit","__PRIVATE_oldDoc","__PRIVATE_oldDocHadPendingMutations","__PRIVATE_newDocHasPendingMutations","__PRIVATE_changeApplied","__PRIVATE_shouldWaitForSyncedDocument","__PRIVATE_limboResolutionEnabled","__PRIVATE_targetIsPendingReset","__PRIVATE_c1","__PRIVATE_c2","__PRIVATE_applyTargetChange","__PRIVATE_limboChanges","__PRIVATE_updateLimboDocuments","__PRIVATE_newSyncState","__PRIVATE_syncState","__PRIVATE_shouldBeInLimbo","__PRIVATE_oldLimboDocuments","__PRIVATE_synchronizeWithPersistedState","__PRIVATE_computeInitialSnapshot","__PRIVATE_QueryView","LimboResolution","__PRIVATE_SyncEngineImpl","sharedClientState","maxConcurrentLimboResolutions","__PRIVATE_queriesByTarget","__PRIVATE_enqueuedLimboResolutions","__PRIVATE_activeLimboResolutionsByTarget","__PRIVATE_limboDocumentRefs","__PRIVATE_pendingWritesCallbacks","__PRIVATE_forSyncEngine","isPrimaryClient","__PRIVATE__isPrimaryClient","__PRIVATE_syncEngineListen","syncEngine","__PRIVATE_shouldListenToRemote","__PRIVATE_syncEngineImpl","__PRIVATE_ensureWatchCallbacks","__PRIVATE_queryView","__PRIVATE_queryViewsByQuery","__PRIVATE_allocateTargetAndMaybeListen","__PRIVATE_triggerRemoteStoreListen","__PRIVATE_shouldInitializeView","__PRIVATE_localStoreAllocateTarget","__PRIVATE_initializeViewAndComputeSnapshot","__PRIVATE_remoteStoreListen","__PRIVATE_applyDocChanges","__PRIVATE_viewDocChanges","__PRIVATE_viewChange","__PRIVATE_updateTrackedLimbos","__PRIVATE_synthesizedTargetChange","__PRIVATE_syncEngineUnlisten","__PRIVATE_shouldUnlistenToRemote","__PRIVATE_remoteStoreUnlisten","__PRIVATE_removeAndCleanupTarget","__PRIVATE_triggerRemoteStoreUnlisten","__PRIVATE_syncEngineWrite","__PRIVATE_userCallback","__PRIVATE_syncEngineEnsureWriteCallbacks","__PRIVATE_overlayedDocuments","__PRIVATE_mutationBatch","__PRIVATE_remoteDocs","__PRIVATE_docsWithoutRemoteVersion","__PRIVATE_mutationExtractBaseValue","__PRIVATE_newCallbacks","__PRIVATE_mutationUserCallbacks","__PRIVATE_syncEngineEmitNewSnapsAndNotifyLocalStore","__PRIVATE_syncEngineApplyRemoteEvent","__PRIVATE_localStoreApplyRemoteEventToLocalCache","__PRIVATE_limboResolution","__PRIVATE_receivedDocument","__PRIVATE_syncEngineApplyOnlineStateChange","__PRIVATE_newViewSnapshots","__PRIVATE_syncEngineListener","__PRIVATE_syncEngineRejectListen","__PRIVATE_limboKey","__PRIVATE_activeLimboTargetsByKey","__PRIVATE_pumpEnqueuedLimboResolutions","__PRIVATE_syncEngineApplySuccessfulWrite","__PRIVATE_mutationBatchResult","__PRIVATE_localStoreAcknowledgeBatch","__PRIVATE_processUserCallback","__PRIVATE_triggerPendingWritesCallbacks","__PRIVATE_syncEngineRejectFailedWrite","__PRIVATE_affectedKeys","__PRIVATE_onWatchError","__PRIVATE_removeLimboTarget","__PRIVATE_limboTargetId","__PRIVATE_limboChange","__PRIVATE_trackLimboChange","__PRIVATE_keyString","__PRIVATE_limboTargetIdGenerator","__PRIVATE_newSnaps","__PRIVATE_docChangesInAllViews","__PRIVATE_queriesProcessed","__PRIVATE_fromSnapshot","__PRIVATE_viewChanges","__PRIVATE_updatedTargetData","__PRIVATE_syncEngineHandleCredentialChange","__PRIVATE_errorMessage","__PRIVATE_keySet","__PRIVATE_syncEngineGetRemoteKeysForTarget","__PRIVATE_eventManagerOnWatchChange","MemoryOfflineComponentProvider","synchronizeTabs","cfg","createSharedClientState","createPersistence","createLocalStore","gcScheduler","createGarbageCollectionScheduler","indexBackfillerScheduler","createIndexBackfillerScheduler","__PRIVATE_factory","OnlineComponentProvider","offlineComponentProvider","createDatastore","createRemoteStore","createEventManager","createSyncEngine","__PRIVATE_isAvailable","startAsPrimary","__PRIVATE_newSyncEngine","__PRIVATE_AsyncObserver","muted","__PRIVATE_scheduleEvent","__PRIVATE_mute","__PRIVATE_eventHandler","FirestoreClient","newId","authCredentialListener","appCheckCredentialListener","__PRIVATE_newAppCheckToken","configuration","clientId","setCredentialChangeListener","setAppCheckTokenChangeListener","verifyNotTerminated","isShuttingDown","enterRestrictedMode","enqueueAndForgetEvenWhileRestricted","_onlineComponents","_offlineComponents","__PRIVATE_setOfflineComponentProvider","__PRIVATE_client","__PRIVATE_setOnlineComponentProvider","__PRIVATE_onlineComponentProvider","__PRIVATE_ensureOfflineComponents","__PRIVATE_canFallbackFromIndexedDbError","_uninitializedComponentsProvider","_offline","__PRIVATE_ensureOnlineComponents","_online","__PRIVATE_getSyncEngine","__PRIVATE_getEventManager","__PRIVATE_firestoreClientGetDocumentViaSnapshotListener","__PRIVATE_wrappedObserver","__PRIVATE_firestoreClientGetDocumentsViaSnapshotListener","__PRIVATE_cloneLongPollingOptions","__PRIVATE_datastoreInstances","__PRIVATE_validateNonEmptyArgument","__PRIVATE_functionName","__PRIVATE_argumentName","__PRIVATE_argument","__PRIVATE_validateDocumentPath","__PRIVATE_validateCollectionPath","__PRIVATE_valueDescription","__PRIVATE_customObjectName","__PRIVATE_cast","FirestoreSettingsImpl","settings","ignoreUndefinedProperties","localCache","cacheSizeBytes","__PRIVATE_validateIsNotUsedTogether","optionName1","argument1","optionName2","argument2","experimentalForceLongPolling","experimentalAutoDetectLongPolling","experimentalLongPollingOptions","__PRIVATE_options1","__PRIVATE_options2","Firestore","_authCredentials","_appCheckCredentials","_databaseId","_app","_persistenceKey","_settingsFrozen","_initialized","_terminated","_terminateTask","_setSettings","_settings","authTokenFactory","_getSettings","_freezeSettings","_terminate","firestore","connectFirestoreEmulator","__PRIVATE_newHostSetting","mockUserToken","MOCK_USER","Query","converter","_query","withConverter","DocumentReference","_path","CollectionReference","pathSegments","__PRIVATE_absolutePath","__PRIVATE_AsyncQueueImpl","visibilityState","__PRIVATE_visibilityHandler","__PRIVATE__isShuttingDown","enqueue","__PRIVATE_verifyNotFailed","__PRIVATE_enqueueInternal","purgeExistingTasks","__PRIVATE_skipNonRestrictedTasks","task","__PRIVATE_retryableOps","__PRIVATE_retryNextOp","__PRIVATE_newTail","__PRIVATE_tail","__PRIVATE_operationInProgress","__PRIVATE_timerIdsToSkip","createAndSchedule","__PRIVATE_removedOp","__PRIVATE_removeDelayedOperation","__PRIVATE_delayedOperations","__PRIVATE_currentTail","__PRIVATE_containsDelayedOperation","__PRIVATE_runAllDelayedOperationsUntil","__PRIVATE_lastTimerId","__PRIVATE_drain","__PRIVATE_skipDelaysForTimerId","_queue","_firestoreClient","__PRIVATE_configureFirestore","__PRIVATE_LiteFirestore","ensureFirestoreConfigured","_offlineComponentProvider","_offlineKind","kind","_onlineComponentProvider","_byteString","fieldNames","_internalPath","__PRIVATE_InternalFieldPath","FieldValue","_methodName","GeoPoint","_lat","_long","__PRIVATE_RESERVED_FIELD_REGEX","ParsedSetData","ParsedUpdateData","__PRIVATE_isWrite","__PRIVATE_dataSource","__PRIVATE_ParseContextImpl","__PRIVATE_validatePath","__PRIVATE_contextWith","__PRIVATE_childContextForField","__PRIVATE_childPath","__PRIVATE_arrayElement","__PRIVATE_validatePathSegment","__PRIVATE_childContextForFieldPath","__PRIVATE_childContextForArray","__PRIVATE_createError","methodName","__PRIVATE_hasConverter","__PRIVATE_targetDoc","__PRIVATE_UserDataReader","__PRIVATE_createContext","__PRIVATE_newUserDataReader","__PRIVATE_userDataReader","mergeFields","__PRIVATE_validatePlainObject","__PRIVATE_updateData","__PRIVATE_parseObject","__PRIVATE_validatedFieldPaths","__PRIVATE_stringOrFieldPath","__PRIVATE_fieldPathFromArgument","__PRIVATE_fieldMaskContains","__PRIVATE_DeleteFieldValueImpl","_toFieldTransform","__PRIVATE_parseUpdateData","__PRIVATE_fieldMaskPaths","__PRIVATE_fieldPathFromDotSeparatedString","__PRIVATE_childContext","__PRIVATE_parsedValue","__PRIVATE_parseData","moreFieldsAndValues","__PRIVATE_looksLikeJsonObject","__PRIVATE_entryIndex","__PRIVATE_parsedEntry","fromDate","__PRIVATE_thisDb","__PRIVATE_otherDb","__PRIVATE_FIELD_PATH_RESERVED","__PRIVATE_hasPath","__PRIVATE_hasDocument","DocumentSnapshot","_firestore","_userDataWriter","_document","_converter","QueryDocumentSnapshot","fromFirestore","__PRIVATE_validateHasExplicitOrderByForLimitToLast","AbstractUserDataWriter","serverTimestampBehavior","convertTimestamp","convertServerTimestamp","convertBytes","convertReference","convertGeoPoint","convertArray","convertObject","convertObjectMap","__PRIVATE_normalizedValue","convertDocumentKey","expectedDatabaseId","__PRIVATE_applyFirestoreDataConverter","toFirestore","SnapshotMetadata","userDataWriter","_firestoreImpl","serverTimestamps","__PRIVATE_LiteDocumentSnapshot","QuerySnapshot","_snapshot","_cachedChanges","_cachedChangesIncludeMetadataChanges","__PRIVATE_querySnapshot","oldIndex","__PRIVATE_indexTracker","__PRIVATE_resultChangeType","getDoc","__PRIVATE_convertToDocSnapshot","__PRIVATE_ExpUserDataWriter","getDocs","updateDoc","__PRIVATE_fieldOrUpdateData","__PRIVATE_dataReader","executeWrite","__PRIVATE_parseUpdateVarargs","addDoc","__PRIVATE_docRef","__PRIVATE_convertedValue","__PRIVATE_parseSetData","__PRIVATE_registerFirestore","__PRIVATE_firestoreInstance","setMultipleInstances","__PRIVATE_appOrDatabaseId","__PRIVATE_optionalDatabaseId","getApp","_getProvider","__PRIVATE_emulator","getFirestore","apiKey","authDomain","storageBucket","messagingSenderId","locations","setLocations","setCustomLocations","fetchLocations","apiResult","querySnapshot","firestoreLocations","sType","sDimension","gender","characters","setCharacters","option","sGender","sStatus","sSpecies","apiUrl","backgroundColor","alignItems","justifyContent","fontSize","image","species","loading","setLoading","residents","fetchCharacters","requests","responses","charactersData","res","MainPage","DetailCard","toggleModal","modalOpen","assignCharacter","selectedLocationId","alert","locationRef","locationDoc","locationData","htmlLink","page","origin","maxWidth","onChange","NotFoundPage","class","setFormData","handleChange","handleSubmit","created","docRef","fetchedLocations","onSubmit","required","App","extendStatics","__extends","__","__assign","__rest","propertyIsEnumerable","__awaiter","_arguments","__generator","trys","ops","verb","__spreadArray","pack","ar","genericMessage","_super","InvariantError","verbosityLevels","verbosityLevel","wrapConsoleMethod","maybe","thunk","prefixCounts","makeUniqueId","stringifyForDisplay","undefId","arg0","getHandledErrorMsg","getFallbackErrorMsg","originalInvariant","newInvariantError","optionalParams","ApolloErrorMessageHandler","messageArgs","__DEV__","canUseWeakMap","HermesInternal","canUseWeakSet","canUseSymbol","canUseAsyncIteratorSymbol","contextKey","getApolloContext","ApolloProvider","client","ApolloContext","parentContext","_createForOfIteratorHelperLoose","_createClass","hasSymbols","hasSymbol","getSymbol","observable","SymbolIterator","SymbolObservable","SymbolSpecies","getSpecies","Observable","isObservable","hostReportError","cleanupSubscription","subscription","cleanup","_cleanup","closeSubscription","_observer","_state","notifySubscription","onNotify","flushSubscription","Subscription","subscriber","subscriptionObserver","SubscriptionObserver","_subscription","_proto2","_subscriber","_proto3","hasSeed","hasValue","seed","_this5","sources","startNext","flatMap","_this6","subscriptions","outer","completeIfDone","_step","_iterator","_len2","_key2","isNonNullObject","getFragmentQueryDocument","fragmentName","actualFragmentName","fragments","definitions","createFragmentMap","symTable","getFragmentFromSelection","fragmentMap","fragment","defaultDispose","_WeakRef","WeakRef","deref","_WeakMap","_FinalizationRegistry","FinalizationRegistry","register","unregister","WeakCache","dispose","newest","oldest","unfinalizedNodes","finalizationScheduled","finalize","keyRef","registry","deleteNode","getNode","older","newer","scheduleFinalization","StrongCache","scheduledCleanup","schedule","clean","AutoCleanedWeakCache","ret","AutoCleanedStrongCache","cacheSizeSymbol","cacheSizes","globalCaches","registerGlobalCache","getApolloClientMemoryInternals","limits","getCurrentCacheSizes","sizes","print","canonicalStringify","links","linkInfo","queryManager","getDocumentInfo","documentTransforms","transformInfo","documentTransform","getMemoryInternals","getInMemoryCacheMemoryInternals","_getApolloCacheMemoryInternals","addTypenameDocumentTransform","inMemoryCache","executeSelectionSet","getWrapperInformation","executeSubSelectedArray","maybeBroadcastWatch","fragmentRegistry","findFragmentSpreads","lookup","getApolloCacheMemoryInternals","fragmentQueryDocuments","isWrapper","isDefined","recurseTransformInfo","sortingMap","stableObjectReplacer","everyKeyInOrder","unsortedKey","sortedKeys","sortedKey","sortedObject_1","makeReference","__ref","isReference","valueToObjectRepresentation","argObj","variables","isIntValue","isFloatValue","isBooleanValue","isStringValue","isObjectValue","nestedArgObj_1","isVariable","variableValue","isListValue","listValue","nestedArgArrayObj","isEnumValue","isNullValue","KNOWN_DIRECTIVES","directives","filteredArgs_1","filterKeys","storeKeyNameStringify","completeFieldName","setStringify","argObj_1","resultKeyNameFromField","getTypenameFromResult","selectionSet","isField","typename","checkDocument","operations","getOperationDefinition","getOperationName","getFragmentDefinitions","getQueryDefinition","queryDef","operation","getMainDefinition","queryDoc","fragmentDefinition","getDefaultValues","defaultValues","defs","variableDefinitions","variable","passthrough","forward","toLink","ApolloLink","isTerminating","leftLink","rightLink","starting","createOperation","transformedOperation","extensions","operationName","transformOperation","OPERATION_FIELDS","validateOperation","second","firstLink","nextLink","devAssert","inspect","formatValue","seenValues","previouslySeenValues","isJSONable","jsonValue","remaining","formatArray","getObjectTag","properties","formatObject","formatObjectValue","OperationTypeNode","Kind","QueryDocumentKeys","Name","Document","OperationDefinition","VariableDefinition","Variable","SelectionSet","Field","Argument","FragmentSpread","InlineFragment","FragmentDefinition","IntValue","FloatValue","StringValue","BooleanValue","NullValue","EnumValue","ListValue","ObjectField","Directive","NamedType","ListType","NonNullType","SchemaDefinition","OperationTypeDefinition","ScalarTypeDefinition","ObjectTypeDefinition","FieldDefinition","InputValueDefinition","InterfaceTypeDefinition","UnionTypeDefinition","EnumTypeDefinition","EnumValueDefinition","InputObjectTypeDefinition","DirectiveDefinition","SchemaExtension","ScalarTypeExtension","ObjectTypeExtension","InterfaceTypeExtension","UnionTypeExtension","EnumTypeExtension","InputObjectTypeExtension","kindValues","maybeKind","BREAK","freeze","visit","visitor","visitorKeys","enterLeaveMap","getEnterLeaveForKind","inArray","edits","ancestors","isLeaving","isEdited","editOffset","editKey","editValue","arrayKey","_node$kind","_enterLeaveMap$get","_enterLeaveMap$get2","visitFn","leave","kindVisitor","shouldInclude","directive","isInclusionDirective","directiveArguments","directiveName","ifArgument","ifValue","getInclusionDirectives","evaledValue","hasDirectives","names","nameSet","uniqueCount","hasClientExports","serializeFetchParameter","serialized","parseError","nodeStreamIterator","waiting","onData","chunk","shiftedArr","pair","onEnd","on","readerIterator","reader","responseIterator","isAsyncIterableIterator","isReadableStream","isStreamableBlob","resolved","promiseIterator","isNodeReadableStream","throwServerError","PROTOCOL_ERRORS_SYMBOL","graphQLErrors","protocolErrors","clientErrors","networkError","errorMessage","extraInfo","generateErrorMessage","ApolloError","isNonEmptyArray","mergeDeep","mergeDeepArray","merger","DeepMerger","defaultReconciler","reconciler","pastCopies","sourceKey","targetValue","shallowCopyForMerge","isExecutionPatchIncrementalResult","isApolloPayloadResult","mergeIncrementalData","prevResult","mergedData","incremental","parent_1","headerText","headersInit","name_1","parseJsonBody","bodyText","getResult","isWhiteSpace","escapedRegExp","escapedReplacer","escapeSequences","printCache","printDocASTReducer","varDefs","selections","alias","argsLine","indent","typeCondition","escapedValue","lines","isSingleLine","forceLeadingNewLine","hasTrailingTripleQuotes","hasTrailingQuote","hasTrailingSlash","forceTrailingNewline","printAsMultipleLines","minimize","skipLeadingNewLine","printBlockString","operationTypes","interfaces","hasMultilineItems","types","repeatable","maybeArray","_maybeArray$filter$jo","separator","maybeString","_maybeArray$some","ast","origPrint","fallbackHttpConfig","http","includeQuery","includeExtensions","preserveHeaderCase","accept","defaultPrinter","printer","selectHttpOptionsAndBodyInternal","configs","removeDuplicateHeaders","normalizedHeaders_1","headerData","originalName","normalizedHeaders","fromError","errorValue","TYPENAME_FIELD","nullIfDocIsEmpty","fragmentDef","getFragmentDefinition","getDirectiveMatcher","tests","testConfig","makeInUseGetterFunction","defaultKey","inUse","fragmentSpreads","removeDirectivesFromDocument","getInUseByOperationName","getInUseByFragmentName","getInUse","ancestor","operationCount","directiveMatcher","shouldRemoveField","nodeDirectives","originalFragmentDefsByPath","firstVisitMadeChanges","fieldOrInlineFragmentVisitor","docWithoutDirectiveSubtrees","_parent","removed","populateTransitiveVars","transitiveVars","childFragmentName","varName","allFragmentNamesUsed","enterVisitor","usedVariableNames_1","varDef","addTypenameToDocument","added","backupFetch","createHttpLink","linkOptions","uri","preferredFetch","useGETForQueries","includeUnusedVariables","requestOptions","fetcher","checkFetcher","linkConfig","fetchOptions","chosenURI","fallbackURI","getContext","selectURI","clientAwarenessHeaders","clientAwareness","contextHeaders","contextConfig","transformedQuery","removeClientSetsFromDocument","controller","unusedNames","filterOperationVariables","isSubscription","hasDefer","acceptHeader","queryParams","addQueryParam","serializedVariables","serializedExtensions","preFragment","fragmentStart","queryParamsPrefix","newURI","rewriteURIForGET","currentFetch","observerNext","setContext","ctype","nextValue","decoder","delimiter","boundaryVal","running","searchFrom","contentType_1","readMultipartBody","handleError","execute","fnToStr","previousComparisons","aTag","previouslyCompared","definedKeys","keyCount","aIterator","isMap","aKey","aValue","byteLength","aCode","suffix","fromIndex","nativeCodeSuffix","isDefinedKey","bSet","defaultMakeData","Trie","weakness","makeData","lookupArray","getChildTrie","peekArray","mapFor","removeArray","head","weak","strong","isObjRef","currentContext","MISSING_VALUE","idCounter","ignored","globalKey","globalHost","Slot","slots","saved","parentEntrySlot","arrayFromSet","maybeUnsubscribe","entryOrDep","emptySetPool","assert","optionalMessage","valueIs","valueGet","valueCopy","Entry","parents","childValues","dirtyChildren","dirty","recomputing","mightBeDirty","rememberParent","forgetChildren","withValue","recomputeNewValue","setDirty","maybeSubscribe","reportClean","setClean","reallyRecompute","reportDirty","eachParent","forgetChild","reportDirtyChild","reportCleanChild","oldValueCopy","normalizeResult","parentCount","parentWasClean","childValue","removeDirtyChild","_value","forgetDeps","defaultKeyTrie","EntryMethods","forget","depsByKey","depend","dependOn","entryMethodName","defaultMakeCacheKey","trie","caches","originalFunction","keyArgs","makeCacheKey","cacheOption","optimistic","recompute","dirtyKey","peekKey","forgetKey","identity","resultCache","getCacheKey","cached","resetCache","DocumentTransform","transformDocument","stableCacheKeys_1","performWork","cacheKeys","transformedDocument","otherTransform","asyncMap","mapFn","promiseQueue","makeCallback","examiner","both","graphQLResultHasError","getGraphQLErrorsFromResult","incrementalResult","iterateObserversSafely","observers","argument","observersWithMethod","obs","fixObservableSubclass","subclass","isPromiseLike","NetworkStatus","addObserver","removeObserver","latest","notify","Concast","nextOrError","deliverLastMessage","nextResultListeners","called","isNetworkRequestInFlight","networkStatus","compact","objects","cloneDeep","cloneDeepHelper","seen","copy_1","copy_2","equalByQuery","aData","aRest","bData","bRest","equalBySelectionSet","aResult","bResult","seenSelections","selectionHasNonreactiveDirective","resultKey","aResultChild","bResultChild","childSelectionSet","aChildIsArray","bChildIsArray","length_1","directiveIsNonreactive","queryInfo","subObserver","defaultSubscriptionObserverErrorCallback","reobserve","tearDownQuery","waitForOwnResult","skipCacheDataFor","fetchPolicy","isTornDown","watchQuery","defaultFetchPolicy","initialFetchPolicy","queryId","generateQueryId","opDef","ObservableQuery","lastQuery","removeQuery","resetDiff","saveAsLastResult","lastResult","getLastResult","ready","hasForcedResolvers","diff","getDiff","returnPartialData","partial","partialRefetch","logMissingFieldErrors","missing","updateLastResult","newResult","hasNonreactiveDirective","variablesMustMatch","getLast","resetErrors","reobserveOptions","pollInterval","vars","combinedOptions","fetchMoreOptions","originalNetworkStatus","observe","updatedQuerySet","qid","fetchMoreResult","onWatchUpdated","finally","reobserveCacheFirst","subscribeToMore","startGraphQLSubscription","subscriptionData","updateQuery","newNetworkStatus","ssrMode","pollingInfo","poll","assumeImmutableResults","oldVariables","oldFetchPolicy","mergedOptions","useDisposableConcast","updatePolling","finishWaitingForOwnResult","concast","fromLink","reportResult","getCurrentResult","lastError","errorResult","hasObservers","stopPolling","obsQuery","nextFetchPolicy","isSelectionNode","cacheSlot","cacheInfoMap","getCacheInfo","forgetCache","rv","makeVar","broadcast","oldListeners","attach","onNextChange","attachCache","broadcastWatches","resolvers","fragmentMatcher","selectionsToResolveCache","addResolvers","setFragmentMatcher","LocalState","resolverGroup","remoteResult","onlyRunForcedResolvers","resolveDocument","localResult","identify","buildRootValueFromCache","prepareContext","exportedVariables","forceResolvers","buildQueryFromSelectionSet","rootValue","mainDefinition","selectionsToResolve","collectSelectionsToResolve","definitionOperation","defaultOperationType","execContext","resolveSelectionSet","isClientFieldDescendant","resultsToMerge","resolveField","fieldResult","isInlineFragment","fragmentResult","fieldName","aliasedFieldName","aliasUsed","defaultResult","resultPromise","shouldForceResolvers","resolverType","__typename","resolverMap","argumentsObjectFromField","isClientField","resolveSubSelectedArray","isSingleASTNode","collectByDefinition","definitionNode","matches_1","___","fragmentSelections","destructiveMethodCounts","wrapDestructiveCacheMethod","original","cancelNotifyTimeout","lastRequestId","stopped","observableQuery","QueryInfo","setVariables","lastDiff","setObservableQuery","getDiffOptions","updateWatch","oq","updateLastDiff","canonizeResults","oldDiff","notifyTimeout","oqListener","fromOptimisticTransaction","shouldNotify","watchOptions","watcher","setDiff","lastWatch","watch","lastWrite","dmCount","cacheWriteBehavior","shouldWriteResult","errorPolicy","performTransaction","shouldWrite","writeQuery","diffOptions","ignoreErrors","writeWithErrors","IGNORE","queryDeduplication","onBroadcast","localState","defaultContext","fetchCancelFns","queryIdCounter","requestIdCounter","mutationIdCounter","inFlightLinkObservables","defaultDocumentTransform","mutationStore","QueryManager","_info","stopQueryNoBroadcast","cancelPendingFetches","optimisticResponse","updateQueries","refetchQueries","awaitRefetchQueries","updateWithProxyFn","onQueryUpdated","_g","mutate","_h","keepRootFields","mutationId","generateMutationId","transformForLink","getVariables","addExportedVariables","_j","mutationStoreValue","isOptimistic","markMutationOptimistic","broadcastQueries","getObservableFromLink","storeResult","markMutationResult","removeOptimistic","cacheWrites","skipCache","dataId","asQuery","updateQueries_1","currentQueryResult","nextQueryResult","mutationResult","queryVariables","results_1","updateCache","isFinalResult","isExecutionPatchInitialResult","modify","DELETE","include","recordOptimisticTransaction","fetchConcastWithInfo","cacheEntry","clientQuery","serverQuery","defaultVars","notifyOnNetworkStatusChange","fetchQuery","generateRequestId","stopQueryInStore","stopQueryInStoreNoBroadcast","clearStore","discardWatches","getObservableQueries","queryNamesAndDocs","legacyQueryOptions","included","nameOrDoc","includeStandby","observableQueryPromises","makeObservable","hasErrors","hasProtocolErrors","observablePromise_1","deduplication","inFlightLinkObservables_1","forceFetch","varJson_1","printedServerQuery_1","requestId","aqr","normalized","fromVariables","sourcesWithInfo","cleanupCancelFn","containsDataFromLink","includedQueriesById","refetchWritePolicy","readCache","resultsFromCache","fromData","runResolvers","oldNetworkStatus","resultsFromLink","getQuery","newContext","mergeOptions","hasSuggestedDevtools","resetStoreCallbacks","clearStoreCallbacks","ssrForceFetchDelay","connectToDevTools","typeDefs","clientAwarenessName","clientAwarenessVersion","disableNetworkFetches","watchFragment","resetStore","reFetchObservableQueries","extract","windowWithDevTools","__APOLLO_CLIENT__","ApolloClient","__actionHookForDevTools","devToolsHookCb","__requestRaw","setResolvers","getResolvers","setLocalStateFragmentMatcher","setLink","newLink","getFragmentDoc","ApolloCache","updateResult","optimisticId","rootId","latestDiff","immediate","readQuery","readFragment","writeFragment","MissingFieldError","deepFreeze","workSet","shallowFreeze","maybeDeepFreeze","isNullish","defaultDataIdFromObject","_id","keyObject","dataIdFromObject","addTypename","resultCaching","shouldCanonizeResults","TypeOrFieldNameRegExp","fieldNameFromStoreName","storeFieldName","selectionSetMatchesResult","storeValueIsStoreObject","extractFragmentContext","lookupFragment","delModifier","INVALIDATE","policies","rootIds","getFieldValue","objectOrReference","canRead","objOrRef","toReference","objOrIdOrRef","mergeIntoStore","EntityStore","storeObject","rootTypenamesById","Layer","dependOnExistence","incoming","storeObjectReconciler","caching","fieldsToDirty_1","__exists","hasKeyArgs","changedFields_1","needToMerge_1","allDeleted_1","sharedDetails_1","readField","fieldNameOrOptions","fieldValue","storage","getStorage","checkReference","seenReference","newValue_1","someNonReference","getStoreFieldName","evicted","evict","extraRootIds","newData","__META","rest_1","retain","getRootIdSet","ids","toObject","idsToRemove","root_1","found_1","workSet_1","keyMaker","resetCaching","makeDepKey","addLayer","layerId","replay","storageTrie","removeLayer","ownStoreObject","parentStoreObject","findChildRefIds","Stump","incomingValue","known","pool","passes","keysByJSON","admit","ObjectCanon","isObjectOrArray","shallowCopy","proto_1","array_1","firstValueIndex_1","sorted","obj_1","execSelectionSetKeyArgs","knownResults","canon","peekArgs","maybeDependOnExistenceOfEntity","enclosingRef","execSelectionSetImpl","resultCacheMaxSize","supportsResultCaching","varString","execSubSelectedArrayImpl","StoreReader","rootRef","execResult","firstMissing","isKnown","objectsToMerge","missingMerger","handleMissing","rootIdsByTypename","pass","fragmentMatches","finalResult","frozen","childResult","getTypenameFromStoreObject","assertSelectionSetForIdValue","tree","specifierInfoCache","lookupSpecifierInfo","spec","cacheKey","keyFieldsFnFromSpecifier","specifier","keyFieldsFn","schemaKeyPath","extracted","extractKey","collected","keyPath","firstChar","firstKey","extractKeyPath","variableName","varKeyPath","directiveArgs","getSpecifierPaths","toMerge","paths_1","currentPath_1","normalize","reducer","collectSpecifierPaths","argsFromFieldSpecifier","nullKeyFieldsFn","simpleKeyArgsFn","_args","mergeTrueFn","mergeObjects","mergeFalseFn","typePolicies","toBeAdded","supertypeMap","fuzzySubtypes","usingPossibleTypes","setRootTypename","possibleTypes","addPossibleTypes","addTypePolicies","Policies","partialContext","ROOT_QUERY","normalizeReadFieldOptions","policy","getTypePolicy","keyFn","specifierOrId","queryType","mutationType","subscriptionType","keyFields","setMerge","getFieldPolicy","keyArgsFnFromSpecifier","old","supertype","getSupertypeSet","subtype","policy_1","supertypes_1","regExp","fuzzy","fuzzySupertypes","inbox","updateTypePolicy","createIfMissing","fieldPolicies","supertypeSet","typenameSupertypeSet","workQueue_1","maybeEnqueue_1","needToCheckFuzzySubtypes","checkingFuzzySubtypes","fuzzyString","fieldSpec","specifierOrString","directivesObj","getStoreKeyName","storeKeyNameFromField","readOptions","makeFieldFunctionOptions","parentTypename","childTypename","makeMergeObjectsFunction","readFieldArgs","argc","eType","iType","getContextFlavor","clientOnly","flavored","flavors","StoreWriter","operationDefinition","written","incomingById","processSelectionSet","mergeTree","fieldNodeSet","entityRef","applyMerges","fieldsWithSelectionSets_1","hasSelectionSet_1","childTree","hasMergeFunction_1","existingRef","incomingObj","getChild","parentType","typeDotName","warnings","childTypenames","warnAboutDataLoss","result_1","flattenFields","resultFieldKey","getChildMergeTree","processFieldValue","getMergeFunction","maybeRecycleChildMergeTree","getReadFunction","dataRef","sets","isFresh","previous_1","mergeMergeTrees","mergeTreeIsEmpty","fieldMap","limitingTrie","flatten","inheritedContext","visitedNode","if","getStorageArgs","e_1","i_1","getValue_1","eVal","iVal","aVal","runMergeFunction","emptyMergeTreePool","needToMergeMaps","remainingRightKeys_1","leftTree","normalizeConfig","InMemoryCache","rootStore","Root","optimisticData","stump","resetResultCache","resetResultIdentities","previousReader","storeReader","storeWriter","broadcastWatch","diffQueryAgainstStore","txCount","writeToStore","watches","addTypenameTransform","resetCaches","resetCanon","release","idToRemove","newOptimisticData","perform","layer","alreadyDirty","addFragmentsToDocument","errorHandler","retriedSub","retriedResult","ErrorLink","graphqlErrors","HttpLink"],"sourceRoot":""}